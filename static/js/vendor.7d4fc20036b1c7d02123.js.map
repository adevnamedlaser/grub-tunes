{"version":3,"sources":["webpack:///static/js/vendor.7d4fc20036b1c7d02123.js","webpack:///./~/jquery/dist/jquery.js","webpack:///./~/bootstrap/js/dist/util.js?5cd8","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_wks.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_iterators.js","webpack:///./~/tether/dist/js/tether.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_defined.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./~/core-js/library/modules/_shared-key.js","webpack:///./~/core-js/library/modules/_to-integer.js","webpack:///./~/core-js/library/modules/_to-iobject.js","webpack:///./~/core-js/library/modules/_cof.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_iter-define.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_set-to-string-tag.js","webpack:///./~/core-js/library/modules/_shared.js","webpack:///./~/core-js/library/modules/_uid.js","webpack:///./~/babel-runtime/core-js/get-iterator.js","webpack:///./~/bootstrap-loader/no-op.js","webpack:///./~/bootstrap-loader/no-op.js?59ab","webpack:///./~/bootstrap-loader/loader.js","webpack:///./~/bootstrap/js/dist/alert.js","webpack:///./~/bootstrap/js/dist/button.js","webpack:///./~/bootstrap/js/dist/carousel.js","webpack:///./~/bootstrap/js/dist/collapse.js","webpack:///./~/bootstrap/js/dist/dropdown.js","webpack:///./~/bootstrap/js/dist/modal.js","webpack:///./~/bootstrap/js/dist/popover.js","webpack:///./~/bootstrap/js/dist/scrollspy.js","webpack:///./~/bootstrap/js/dist/tab.js","webpack:///./~/bootstrap/js/dist/tooltip.js","webpack:///./~/bootstrap/js/dist/util.js","webpack:///./~/core-js/library/fn/get-iterator.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_add-to-unscopables.js","webpack:///./~/core-js/library/modules/_array-includes.js","webpack:///./~/core-js/library/modules/_classof.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_html.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_iobject.js","webpack:///./~/core-js/library/modules/_iter-create.js","webpack:///./~/core-js/library/modules/_iter-step.js","webpack:///./~/core-js/library/modules/_library.js","webpack:///./~/core-js/library/modules/_object-create.js","webpack:///./~/core-js/library/modules/_object-dps.js","webpack:///./~/core-js/library/modules/_object-gpo.js","webpack:///./~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/core-js/library/modules/_object-keys.js","webpack:///./~/core-js/library/modules/_redefine.js","webpack:///./~/core-js/library/modules/_string-at.js","webpack:///./~/core-js/library/modules/_to-index.js","webpack:///./~/core-js/library/modules/_to-length.js","webpack:///./~/core-js/library/modules/_to-object.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/core.get-iterator-method.js","webpack:///./~/core-js/library/modules/core.get-iterator.js","webpack:///./~/core-js/library/modules/es6.array.iterator.js","webpack:///./~/core-js/library/modules/es6.string.iterator.js","webpack:///./~/core-js/library/modules/web.dom.iterable.js","webpack:///./~/bootstrap-loader/no-op.js?78a1","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/bootstrap/js/dist/tooltip.js?bc71","webpack:///./~/style-loader/addStyles.js","webpack:///./~/bootstrap-loader/no-op.js?6a4c","webpack:///./~/tone/build/Tone.js","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/vue-style-loader/addStyles.js"],"names":["webpackJsonp","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","document","w","Error","window","this","noGlobal","DOMEval","code","doc","script","createElement","text","head","appendChild","parentNode","removeChild","isArrayLike","obj","length","type","jQuery","isWindow","winnow","elements","qualifier","not","isFunction","grep","elem","i","call","nodeType","indexOf","risSimple","test","filter","sibling","cur","dir","createOptions","options","object","each","match","rnothtmlwhite","_","flag","Identity","v","Thrower","ex","adoptValue","value","resolve","reject","method","promise","done","fail","then","undefined","completed","removeEventListener","ready","Data","expando","uid","getData","data","rbrace","JSON","parse","dataAttr","key","name","replace","rmultiDash","toLowerCase","getAttribute","e","dataUser","set","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","initial","unit","cssNumber","initialInUnit","rcssNum","exec","style","start","end","getDefaultDisplay","temp","ownerDocument","nodeName","display","defaultDisplayMap","body","showHide","show","values","index","dataPriv","get","isHiddenWithinTree","getAll","context","tag","ret","getElementsByTagName","querySelectorAll","merge","setGlobalEval","elems","refElements","l","buildFragment","scripts","selection","ignored","tmp","wrap","contains","j","fragment","createDocumentFragment","nodes","rhtml","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","firstChild","textContent","push","createTextNode","inArray","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","on","types","selector","fn","one","origFn","event","off","apply","arguments","guid","add","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","extend","fixInput","rcheckableType","checked","defaultValue","domManip","collection","args","callback","concat","first","hasScripts","node","iNoClone","support","checkClone","rchecked","self","eq","html","map","clone","_evalUrl","rcleanScript","remove","keepData","cleanData","curCSS","computed","width","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","toUpperCase","slice","cssPrefixes","setPositiveNumber","subtract","matches","Math","max","augmentWidthOrHeight","extra","isBorderBox","styles","val","cssExpand","getWidthOrHeight","valueIsBorderBox","getClientRects","getBoundingClientRect","boxSizingReliable","parseFloat","Tween","easing","prototype","init","raf","timerId","requestAnimationFrame","fx","tick","createFxNow","setTimeout","fxNow","now","genFx","includeWidth","which","attrs","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","props","opts","toggle","hooks","oldfire","propTween","restoreDisplay","isBox","anim","orig","hidden","dataShow","queue","_queueHooks","unqueued","empty","fire","always","rfxtypes","isEmptyObject","overflow","overflowX","overflowY","propFilter","specialEasing","camelCase","isArray","cssHooks","expand","properties","result","stopped","prefilters","deferred","Deferred","currentTime","remaining","startTime","duration","percent","tweens","run","notifyWith","resolveWith","originalProperties","originalOptions","stop","gotoEnd","rejectWith","proxy","timer","progress","complete","stripAndCollapse","tokens","join","getClass","buildParams","prefix","traditional","rbracket","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","unshift","inspectPrefiltersOrTransports","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","target","deep","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","split","state","error","getWindow","defaultView","arr","getProto","Object","getPrototypeOf","class2type","toString","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","version","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","jquery","constructor","toArray","num","pushStack","prevObject","last","len","sort","splice","copy","copyIsArray","isPlainObject","random","isReady","msg","noop","Array","isNumeric","isNaN","proto","Ctor","globalEval","string","trim","makeArray","results","second","invert","callbackInverse","callbackExpect","arg","Date","Symbol","iterator","Sizzle","seed","m","nid","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","id","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rcssescape","fcssescape","setAttribute","tokenize","toSelector","rsibling","testContext","qsaError","select","createCache","cache","keys","Expr","cacheLength","markFunction","assert","el","addHandle","handler","attrHandle","siblingCheck","a","b","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","disabled","isDisabled","disabledAncestor","createPositionalPseudo","argument","matchIndexes","setFilters","addCombinator","matcher","combinator","base","skip","next","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","find","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","String","fromCharCode","ch","asCodePoint","charCodeAt","unloadHandler","els","documentElement","hasCompare","subWindow","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","attrId","getAttributeNode","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","attr","specified","escape","sel","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","parent","useCache","pseudo","idx","matched","has","innerText","lang","elemLang","hash","location","root","focus","hasFocus","href","tabIndex","enabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","n","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","children","targets","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","Callbacks","firing","memory","fired","locked","firingIndex","once","stopOnFalse","disable","lock","fireWith","tuples","catch","pipe","fns","newDefer","tuple","returned","notify","onFulfilled","onRejected","onProgress","depth","special","that","mightThrow","maxDepth","TypeError","process","exceptionHook","stackTrace","getStackHook","stateString","when","singleValue","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","warn","message","readyException","readyList","readyWait","holdReady","hold","wait","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","defineProperty","configurable","removeData","_data","_removeData","dequeue","startLength","setter","clearQueue","count","defer","pnum","source","swap","old","hide","option","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","div","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","t","handleObj","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","Event","enumerable","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","stopImmediatePropagation","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","mouseenter","mouseleave","pointerenter","pointerleave","related","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","opener","getComputedStyle","computeStyleTests","cssText","container","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","pos","step","scrollTop","scrollLeft","linear","p","swing","cos","PI","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","cancelAnimationFrame","clearInterval","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","removeProp","propFix","tabindex","parseInt","for","class","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","triggerHandler","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rCRLF","rsubmitterTypes","rsubmittable","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","uncached","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","finalText","crossDomain","host","hasContent","beforeSend","send","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","unwrap","visible","offsetWidth","offsetHeight","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","rect","pageYOffset","clientTop","pageXOffset","clientLeft","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","bind","unbind","delegate","undelegate","parseJSON","_jQuery","_$","$","noConflict","Util","toType","isElement","getSpecialTransitionEndEvent","transition","transitionEndTest","QUnit","_name","TransitionEndEvent","transitionEndEmulator","_this","called","TRANSITION_END","triggerTransitionEnd","setTransitionEndSupport","emulateTransitionEnd","supportsTransitionEnd","MAX_UID","WebkitTransition","MozTransition","OTransition","getUID","getSelectorFromElement","element","reflow","Function","Boolean","typeCheckConfig","componentName","config","configTypes","property","expectedTypes","valueType","__g","store","USE_SYMBOL","$exports","dP","createDesc","f","isObject","it","__WEBPACK_AMD_DEFINE_FACTORY__","require","_classCallCheck","instance","Constructor","getActualBoundingClientRect","boundingRect","k","_frameElement","frameElement","frameRect","bottom","right","getScrollParents","computedStyle","_style","removeUtilElements","zeroElement","getBounds","docEl","box","origin","getOrigin","scrollWidth","scrollHeight","clientWidth","clientHeight","getOffsetParent","getScrollBarSize","_scrollBarSize","inner","outer","pointerEvents","widthContained","widthScroll","out","forEach","classList","cls","regex","getClassName","setClassName","SVGAnimatedString","baseVal","updateClasses","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","within","performance","addOffset","_len","offsets","_key","_ref","offsetToPx","size","getBoundingRect","tether","scrollParents","innerWidth","innerHeight","BOUNDS_FORMAT","side","substr","_createClass","defineProperties","descriptor","protoProps","staticProps","TetherBase","modules","uniqueId","zeroPosCache","flush","Evented","ctx","bindings","_bindings$event$i","Utils","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","_get","_x6","_x7","_x8","_again","receiver","desc","getOwnPropertyDescriptor","_TetherBase$Utils","transformKey","transforms","tethers","lastCall","lastDuration","pendingTimeout","min","MIRROR_LR","center","MIRROR_TB","middle","OFFSET_MAP","autoToFixedAttachment","attachment","relativeToAttachment","attachmentToOffset","parseOffset","_value$split","_value$split2","parseAttachment","TetherClass","_Evented","history","setOptions","initialize","classPrefix","_this2","defaults","targetOffset","targetAttachment","_options","targetModifier","querySelector","addTargetClasses","enable","bounds","hasBottomScroll","scrollBottom","borderTopWidth","borderBottomWidth","borderLeftWidth","fitAdj","pow","scrollPercentage","_cache","_this3","_this4","_this5","elementAttach","targetAttach","_this6","sides","_addAttachClasses","_this7","flushChanges","clearCache","updateAttachClasses","elementPos","lastSize","_lastSize","targetPos","getTargetBounds","targetSize","manualOffset","manualTargetOffset","_module2","scrollbarSize","page","viewport","parentElement","optimizations","moveElement","offsetPosition","offsetParentStyle","offsetParentSize","offsetBorder","move","_this8","same","found","point","transcribe","_same","_pos","hasOptimizations","gpu","yPos","xPos","matchMedia","retina","round","moved","offsetParentIsBody","currentNode","tagName","writeCSS","write","elVal","Tether","constraints","targetHeight","targetWidth","allClasses","constraint","outOfBoundsClass","pinnedClass","addClasses","tAttachment","eAttachment","pin","changeAttachX","changeAttachY","_attachment$split","_attachment$split2","pinned","oob","oobClass","abutted","targetPosSide","shiftTop","shiftLeft","_shift","_shift2","core","__e","anObject","IE8_DOM_DEFINE","toPrimitive","O","P","Attributes","shared","ceil","floor","IObject","defined","LIBRARY","$export","redefine","Iterators","$iterCreate","setToStringTag","ITERATOR","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","F","bitmap","def","stat","SHARED","px","default","__esModule","js","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","TRANSITION_DURATION","Selector","DISMISS","CLOSE","CLOSED","CLICK_DATA_API","ClassName","ALERT","FADE","IN","Alert","_element","rootElement","_getRootElement","customEvent","_triggerCloseEvent","_removeElement","closeEvent","_destroyElement","$element","alertInstance","close","_handleDismiss","_jQueryInterface","ACTIVE","BUTTON","FOCUS","DATA_TOGGLE_CARROT","DATA_TOGGLE","INPUT","FOCUS_BLUR_DATA_API","Button","triggerChangeEvent","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","Default","keyboard","slide","pause","DefaultType","Direction","NEXT","PREVIOUS","SLIDE","SLID","KEYDOWN","MOUSEENTER","MOUSELEAVE","LOAD_DATA_API","CAROUSEL","RIGHT","LEFT","ITEM","ACTIVE_ITEM","NEXT_PREV","INDICATORS","DATA_SLIDE","DATA_RIDE","Carousel","_items","_interval","_activeElement","_isPaused","_isSliding","_config","_getConfig","_indicatorsElement","_addEventListeners","_slide","cycle","visibilityState","nextWhenVisible","activeIndex","_getItemIndex","direction","_keydown","isNextDirection","isPrevDirection","lastItemIndex","isGoingToWrap","delta","itemIndex","directionalClassname","slideEvent","nextIndicator","nextElement","_getItemByDirection","isCycling","directionalClassName","_triggerSlideEvent","_setActiveIndicatorElement","slidEvent","action","slideIndex","_dataApiClickHandler","$carousel","SHOW","SHOWN","HIDE","HIDDEN","COLLAPSE","COLLAPSING","COLLAPSED","Dimension","WIDTH","HEIGHT","ACTIVES","Collapse","_isTransitioning","_triggerArray","_parent","_getParent","_addAriaAndCollapsedClass","actives","activesData","startEvent","dimension","_getDimension","setTransitioning","capitalizedDimension","scrollSize","offsetDimension","isTransitioning","hasWidth","_getTargetFromElement","triggerArray","isOpen","$this","ESCAPE_KEYCODE","ARROW_UP_KEYCODE","ARROW_DOWN_KEYCODE","RIGHT_MOUSE_BUTTON_WHICH","CLICK","KEYDOWN_DATA_API","BACKDROP","DISABLED","OPEN","FORM_CHILD","ROLE_MENU","ROLE_LISTBOX","NAVBAR_NAV","VISIBLE_ITEMS","Dropdown","_getParentFromElement","isActive","_clearMenus","dropdown","showEvent","backdrop","toggles","hideEvent","items","item","_dataApiKeydownHandler","BACKDROP_TRANSITION_DURATION","FOCUSIN","RESIZE","CLICK_DISMISS","KEYDOWN_DISMISS","MOUSEUP_DISMISS","MOUSEDOWN_DISMISS","SCROLLBAR_MEASURER","DIALOG","DATA_DISMISS","FIXED_CONTENT","Modal","_dialog","_backdrop","_isShown","_isBodyOverflowing","_ignoreBackdropClick","_originalBodyPadding","_scrollbarWidth","_checkScrollbar","_setScrollbar","_setEscapeEvent","_setResizeEvent","_showBackdrop","_showElement","_hideModal","Node","ELEMENT_NODE","_enforceFocus","shownEvent","transitionComplete","_handleUpdate","_resetAdjustments","_resetScrollbar","doAnimate","callbackRemove","_removeBackdrop","_adjustDialog","isModalOverflowing","paddingLeft","paddingRight","_getScrollbarWidth","bodyPadding","scrollDiv","scrollbarWidth","$target","Tooltip","_x","_x2","_x3","placement","template","TITLE","CONTENT","ARROW","INSERTED","FOCUSOUT","Popover","_Tooltip","getTitle","_getContent","tip","$tip","getTipElement","setElementContent","cleanupTether","ACTIVATE","SCROLL","DROPDOWN_ITEM","DROPDOWN_MENU","NAV_LINK","NAV","DATA_SPY","LIST_ITEM","LI","LI_DROPDOWN","NAV_LINKS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","ScrollSpy","_scrollElement","_selector","_offsets","_targets","_activeTarget","_scrollHeight","_process","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targetSelector","scrollY","maxScroll","_activate","_clear","isActiveTarget","queries","$link","scrollSpys","$spy","A","UL","FADE_CHILD","ACTIVE_CHILD","DROPDOWN_ACTIVE_CHILD","Tab","previous","ulElement","hiddenEvent","_transitionComplete","dropdownChild","dropdownElement","__webpack_provided_window_dot_Tether","CLASS_PREFIX","title","AttachmentMap","TOP","BOTTOM","HoverState","OUT","TOOLTIP","TOOLTIP_INNER","Trigger","HOVER","MANUAL","_isEnabled","_timeout","_hoverState","_activeTrigger","_tether","_setListeners","dataKey","_getDelegateConfig","_isWithActiveTrigger","_enter","_leave","isWithContent","isInTheDom","tipId","setContent","_getAttachment","prevHoverState","_TRANSITION_DURATION","destroy","triggers","eventIn","eventOut","_fixTitle","titleType","toIObject","toLength","toIndex","IS_INCLUDES","fromIndex","cof","ARG","tryGet","T","B","callee","aFunction","c","PROTOTYPE","own","IS_FORCED","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","C","virtual","R","U","propertyIsEnumerable","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","contentWindow","Properties","getKeys","toObject","ObjectProto","arrayIndexOf","names","$keys","toInteger","TO_STRING","charAt","valueOf","classof","getIteratorMethod","getIterator","iterFn","addToUnscopables","iterated","_t","_k","Arguments","$at","TO_STRING_TAG","collections","Collection","mediaQuery","alreadyImportedModules","addStylesToDom","domStyle","stylesInDom","refs","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","createStyleElement","createLinkElement","linkElement","rel","update","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","styleSheet","replaceText","cssNode","unescape","stringify","blob","oldSrc","memoize","memo","isOldIE","navigator","userAgent","newList","mayRemove","textStore","replacement","locals","Main","Tone","Module","isUndef","audioContext","AudioContext","webkitAudioContext","OfflineAudioContext","webkitOfflineAudioContext","createGain","createGainNode","createDelay","createDelayNode","createPeriodicWave","createWaveTable","AudioBufferSourceNode","noteGrainOn","noteOff","OscillatorNode","noteOn","setPeriodicWave","setWaveTable","AudioNode","_nativeConnect","connect","outNum","inNum","inputs","outputs","output","rampTime","isString","tmpObj","attrSplit","Signal","Param","rampTo","AudioParam","_collectDefaults","subRet","subAttr","constr","_super","superDefs","isLetter","sameConstructor","bufferSize","blockTime","sampleRate","sampleTime","dispose","disconnect","_silentNode","noGC","outputNum","inputNum","defaultArg","connectSeries","currentUnit","toUnit","chain","fan","given","fallback","givenProp","fallbackProp","optionsObject","isNumber","isBoolean","noOp","_readOnly","_writable","State","Started","Stopped","Paused","equalPowerScale","piFactor","sin","dbToGain","db","gainToDb","gain","log","LN10","intervalToFrequencyRatio","child","TempConstructor","newContextCallbacks","_initAudioContext","setContext","destination","TONE_SILENCE_VERSION_LOGGING","SignalBase","outputNumber","inputNumber","TimelineSignal","_param","cancelScheduledValues","overridden","WaveShaper","mapping","bufferLen","_shaper","createWaveShaper","_curve","curve","Float32Array","setMap","normalized","oversample","oversampling","RangeError","TimeBase","units","_expr","_noOp","_defaultUnits","_primaryExpressions","_defaultExpr","exprString","_parseExprString","regexp","_beatsToUnits","_timeSignature","_ticksToUnits","hz","_frequencyToUnits","q","total","_secondsToUnits","samples","_binaryExpressions","precedence","lh","rh","-","/","_unaryExpressions","neg","_syntaxGlue","(",")","_tokenize","getNextToken","expressions","group","opName","op","reg","SyntaxError","peek","_matchGroup","prec","_parseBinary","lexer","_parseUnary","_parsePrimary","matching","tree","freq","beats","Transport","bpm","seconds","ticks","PPQ","timeSignature","_pushExpr","sub","mult","eval","Time","_plusNow","quantize","nextSubdivision","subdiv","subdivision","toSeconds","multiple","ideal","addNow","toNotation","testNotations","retNotation","_toNotationHelper","testTripletNotations","retTripletNotation","threshold","_notationToUnits","notationTime","floatingPointError","notation","primaryExprs","notationExprs","toBarsBeatsSixteenths","quarterTime","quarters","measures","sixteenths","toFixed","toTicks","toSamples","toFrequency","toMilliseconds","Frequency","midi","midiToFrequency","note","pitch","octave","noteToScaleIndex","noteNumber","transpose","harmonize","intervals","toMidi","frequencyToMidi","toNote","A4","LN2","noteName","scaleIndexToNote","cbb","cb","c#","cx","dbb","d","d#","dx","ebb","eb","e#","fbb","fb","f#","gbb","gb","g","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","frequency","TransportTime","_secondsToTicks","Type","Ticks","NormalRange","AudioRange","Decibels","Interval","BPM","Positive","Cents","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","convert","_lfo","lfo","_toUnits","LFO","convertedVal","_fromUnits","_minOutput","setValueAtTime","setRampPoint","currentVal","linearRampToValueAtTime","endTime","exponentialRampToValueAtTime","exponentialRampToValue","linearRampToValue","setTargetAtTime","timeConstant","setValueCurveAtTime","Gain","_gainNode","createInsOuts","_gain","_constant","buffer","createBuffer","getChannelData","createBufferSource","channelCount","channelCountMode","loop","Timeline","_timeline","_toRemove","_iterating","Infinity","addEvent","_search","getEvent","getEventAfter","getEventBefore","cancel","cancelBefore","beginning","midPoint","nextEvent","testEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachFrom","forEachAtTime","_events","_initial","Linear","Exponential","Target","Curve","Set","getValueAtTime","beforeEvent","_searchBefore","setValue","constant","scaling","floats","segmentTime","_searchAfter","linearRampToValueBetween","exponentialRampToValueBetween","previouVal","_exponentialApproach","_curveInterpolate","_linearInterpolate","_exponentialInterpolate","t0","v0","v1","exp","t1","lowerIndex","upperIndex","lowerVal","upperVal","Pow","_exp","_expScaler","_expFunc","abs","Envelope","attack","decay","sustain","release","_attackCurve","_releaseCurve","_sig","attackCurve","releaseCurve","In","curveDef","Out","triggerAttack","velocity","originalAttack","attackRate","remainingDistance","percentComplete","sliceIndex","triggerRelease","triggerAttackRelease","invertCurve","reverseCurve","curveLen","cosineCurve","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","steps","sineCurve","bounceCurve","exponential","bounce","cosine","ripple","sine","AmplitudeEnvelope","Analyser","_analyser","createAnalyser","_type","_returnType","returnType","_buffer","minDecibels","maxDecibels","smoothing","Waveform","FFT","ReturnType","Byte","Float","analyse","getByteFrequencyData","getFloatFrequencyData","getByteTimeDomainData","AnalyserNode","getFloatTimeDomainData","uint8","Uint8Array","frequencyBinCount","fftSize","smoothingTimeConstant","Compressor","_compressor","createDynamicsCompressor","knee","ratio","Add","_sum","Multiply","_mult","Negate","_multiply","Subtract","_neg","GreaterThanZero","_thresh","_scale","GreaterThan","_gtz","Abs","_abs","Modulo","modulus","_subtract","_modSignal","_setWaveShaper","mod","AudioToGain","_norm","x","applyBinary","_eval","applyUnary","getNumber","literalNumber","_replacements","inputCount","_parseInputs","_nodes","_parseTree","_disposeNodes","_Expressions","signal","sig","glue",",","a2g","unary","!","NOT","inputArray","inputMax","matchSyntax","syn","matchGroup","groupName","parseExpression","parseUnary","parsePrimary","parseFunctionCall","parseArgumentList","EqualPowerGain","_eqPower","CrossFade","initialFade","fade","_equalPowerA","_equalPowerB","_invert","Filter","_filters","detune","Q","_rolloff","rolloff","possibilities","cascadingCount","createBiquadFilter","connectionChain","MultibandSplit","low","_lowMidFilter","mid","lowFrequency","highFrequency","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Scale","outputMin","outputMax","_outputMin","_outputMax","_add","_setRange","ScaleExp","exponent","Delay","_delayNode","maxDelay","delayTime","FeedbackCombFilter","_delay","_feedback","resonance","Follower","_filter","_frequencyValues","_sub","_attack","_release","_setAttackRelease","minTime","ScaledEnvelope","FrequencyEnvelope","_octaves","octaves","baseFrequency","Gate","_follower","_gt","thresh","attackTime","releaseTime","TimelineState","getStateAtTime","setStateAtTime","Emitter","eventName","ev","eventList","emit","mixin","functions","emitterFunc","Clock","_lookAhead","_computedLookAhead","UPDATE_RATE","_nextTick","_lastUpdate","_state","_boundLoop","_loop","_worker","lookAhead","tickTime","webkitURL","blobUrl","Worker","IntervalTimeline","_root","_length","IntervalNode","updateHeight","updateMax","_rebalance","search","_removeNode","_setRoot","_replaceNodeInParent","isLeftChild","balance","getBalance","_rotateLeft","pivotNode","_rotateRight","allNodes","traverse","searchAfter","_left","_right","_loopStart","_loopEnd","_ppq","TransportConstructor","_clock","_processTick","_bindClockEvents","_scheduledEvents","_eventID","_repeatedEvents","_onceEvents","_syncedSignals","_swingTicks","_swingAmount","swingSubdivision","loopStart","loopEnd","amount","schedule","timeline","scheduleRepeat","scheduleOnce","clear","eventId","timeSig","startPosition","endPosition","setLoopPoints","ppq","transportPos","remainingTime","syncSignal","ratioSignal","unsyncSignal","syncedSignal","prevSettings","Volume","volume","_unmutedVolume","_muted","mute","Master","_volume","toMaster","MasterConstructor","Source","_synced","_scheduled","_start","_stop","sched","sync","stateEvent","startOffset","unsync","Oscillator","_oscillator","_wave","_partials","partials","_phase","phase","Sine","Triangle","Sawtooth","Square","Custom","createOscillator","syncFrequency","unsyncFrequency","coefs","_getRealImaginary","periodicWave","periodicWaveSize","real","imag","partialCount","partial","_inverseFFT","sum","_getInitialValue","maxValue","twoPi","Zero","_zeros","amplitude","_stoppedSignal","_stoppedValue","_a2g","_scaler","_units","currentMin","currentMax","Limiter","LowpassCombFilter","_lowpass","dampening","Merge","_merger","createChannelMerger","Meter","_lastValue","Level","rms","sqrt","unity","Split","_splitter","createChannelSplitter","MidSideSplit","_split","sqrtTwo","MidSideMerge","_merge","MidSideCompressor","_midSideSplit","_midSideMerge","Mono","MultibandCompressor","Panner","initialPan","_hasStereoPanner","_panner","createStereoPanner","pan","_crossFade","_zero","Panner3D","createPanner","panningModel","maxDistance","distanceModel","coneOuterGain","coneOuterAngle","coneInnerAngle","refDistance","rolloffFactor","_orientation","orientationX","orientationY","orientationZ","_position","positionX","positionY","positionZ","_rampTimeConstant","setPosition","y","z","setOrientation","_aliasProperty","PanVol","CtrlInterpolate","lowerPosition","lower","upper","_interpolate","retArray","retObj","_toNumber","CtrlMarkov","distribution","_getProbDistribution","rand","dist","chosen","needsNormalizing","probability","CtrlPattern","_shuffled","_direction","Up","Down","UpDown","DownUp","AlternateUp","AlternateDown","Random","RandomWalk","RandomOnce","_shuffleValues","randVal","CtrlRandom","integer","Buffer","_reversed","_xhr","AudioBuffer","Promise","buff","_currentDownloads","numberOfChannels","fromArray","array","isMultidimensional","channels","copyToChannel","channel","channelArray","copyFromChannel","channelData","startSamples","endSamples","retBuffer","_reverse","loaded","rev","_downloadQueue","baseUrl","onError","totalProgress","request","decodeAudioData","lengthComputable","supportsType","extension","canPlayType","Buffers","urls","_buffers","_flattenUrls","_loadingCount","_bufferLoaded","isLoaded","buffName","ob","toReturn","flatObject","Buses","channelName","sendKnob","receive","Listener","ListenerConstructor","_listener","listener","forwardX","forwardY","forwardZ","upX","upY","upZ","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","AutoFilter","oct","AutoPanner","AutoWah","follower","_sweepRange","_baseFrequency","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","sensitivy","BitCrusher","invStepSize","bits","_modulo","_bits","Chebyshev","_order","_getCoefficient","degree","StereoEffect","effectSendL","effectSendR","effectReturnL","effectReturnR","FeedbackEffect","_feedbackGain","feedback","StereoXFeedbackEffect","_feedbackLR","_feedbackRL","Chorus","_depth","_delayTime","_lfoL","_lfoR","_delayNodeL","_delayNodeR","spread","deviation","Convolver","_convolver","createConvolver","Distortion","_distortion","distortion","deg","FeedbackDelay","combFilterTunings","allpassFilterFrequencies","Freeverb","roomSize","_combFilters","_allpassFiltersL","_allpassFiltersR","allpassL","r","allpassR","lfpf","al","ar","cf","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","_scaleRoomSize","_allpassFilters","_feedbackCombFilters","af","allpass","fbcf","apf","MidSideEffect","midSend","sideSend","midReturn","sideReturn","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","PingPongDelay","_leftDelay","maxDelayTime","_rightDelay","_rightPreDelay","PitchShift","_frequency","_delayA","_lfoA","_delayB","_lfoB","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","factor","StereoFeedbackEffect","_feedbackL","_feedbackR","StereoWidener","_midMult","_sideMult","_two","Tremolo","_amplitudeL","_amplitudeR","Vibrato","_playbackRate","_startOffset","humanize","playbackRate","_rescheduleEvents","startTick","_getLoopDuration","_tick","previousEvent","reschedulTime","variation","rate","lastEvent","loopDuration","Loop","_event","iterations","prob","iters","Part","_probability","_humanize","_forEach","_startNote","at","_restartEvent","removeAll","_setAll","_testLoopBoundries","Pattern","_pattern","vals","Sequence","_subdivision","_indexTime","subSubdivision","PulseOscillator","_widthGate","_sawtooth","PWMOscillator","_pulse","modulationFrequency","_modulator","FMOscillator","_carrier","modulationIndex","modulationType","harmonicity","_modulationNode","AMOscillator","_modulationScale","FatOscillator","_oscillators","_spread","osc","OmniOscillator","_sourceType","OmniOscType","Pulse","PWM","Osc","FM","AM","Fat","_createNewOscillator","oscType","OscillatorConstructor","oldOsc","mType","Instrument","Monophonic","portamento","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","currentNote","portTime","Synth","oscillator","envelope","AMSynth","modulation","modulationEnvelope","moduation","MonoSynth","filterEnvelope","DuoSynth","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","FMSynth","carrier","modulator","MembraneSynth","pitchDecay","maxNote","inharmRatios","MetalSynth","_freqMultipliers","_amplitue","_highpass","_filterFreqScaler","vel","octs","Noise","_source","_whiteNoise","_brownNoise","_pinkNoise","bufferLength","channelNum","b0","b1","b2","b3","b4","b5","b6","white","lastOut","NoiseSynth","noise","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","PolySynth","polyphony","MAX_POLYPHONY","voices","_triggers","voice","notes","oldest","oldestIndex","stringified","releaseAll","Player","autostart","_onload","retrigger","seek","Sampler","player","SimpleSynth","GainToAudio","Normalize","inputMin","_inputMin","_inputMax","_div","BufferSource","onended","_startTime","_onended","fadeInTime","fadeOutTime","playbackState","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","ExternalInput","_mediaStream","_stream","_constraints","audio","_inputNum","_gate","_getUserMedia","supported","sources","optional","sourceId","stream","_onStream","createMediaStreamSource","getSources","track","getTracks","_canGetSources","MediaStreamTrack","media_sources","MultiPlayer","buffers","_activeSources","_getBuffer","startLoop","stopAll","GrainPlayer","_player","_grainSize","grainSize","_overlap","overlap","drift","_offset","bufferDuration","originalFadeIn","endSegmentDuration","scrub","Microphone","Promise$1","executor","PENDING","PromiseObj","Vue","util","debug","silent","nextTick","str","toLower","toUpper","isBlob","isFormData","FormData","fulfilled","rejected","$vm","$options","_assign","query","urlParams","Url","variables","tmpl","vars","operators","expression","literal","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","encodeURI","transform","vm","scope","plain","xdrClient","xdr","XDomainRequest","respondWith","getUrl","ontimeout","onprogress","getBody","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","ORIGIN_URL","emulateJSON","bodyText","jsonpClient","assign","Http","common","custom","xhrClient","row","upload","credentials","withCredentials","Client","reqHandlers","resHandlers","sendRequest","use","getName","reduce","curr","normalizeName","blobText","reader","FileReader","readAsText","isBlobText","interceptors","Request","ok","Resource","actions","resource","$http","plugin","installed","http","$url","$resource","$promise","RESOLVED","REJECTED","iterable","resolver","race","p$1","reason","onResolved","ie","documentMode","port","hostname","pathname","classCallCheck","Headers","thisArg","Response","bodyBlob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","put","post","patch","delete","save","_toString","toNumber","makeMap","expectsLowerCase","remove$1","isPrimitive","hit","bind$1","boundFn","_from","OBJECT_STRING","res","genStaticKeys","staticKeys","looseEqual","looseIndexOf","isReserved","parsePath","path","bailRE","segments","isNative","pushTarget","_target","Dep","targetStack","popTarget","resetSchedulerState","has$1","waiting","flushing","flushSchedulerQueue","watcher","devtools","queueWatcher","seen","seenObjects","isA","isO","isExtensible","__ob__","depId","dep","protoAugment","copyAugment","observe","Observer","observerState","shouldConvert","_isServer","_isVue","defineReactive$$1","customSetter","childOb","depend","dependArray","newVal","vmCount","del","initState","_watchers","initProps","initData","initComputed","initMethods","initWatch","propsData","_propKeys","isRoot","$parent","validateProp","userDef","computedSharedDefinition","makeComputedGetter","Watcher","lazy","dirty","evaluate","watch","createWatcher","$watch","stateMixin","dataDef","$set","$delete","expOrFn","user","immediate","cloneVNode","vnode","cloned","VNode","elm","ns","componentOptions","isStatic","isCloned","cloneVNodes","vnodes","mergeVNodeHook","hookKey","injectedHash","__injected","oldHook","updateListeners","oldOn","remove$$1","capture","invoker","arrInvoker","fnInvoker","arguments$1","single","o","normalizeChildren","nestedIndex","createTextVNode","applyNS","getFirstComponentChild","initLifecycle","$children","$root","$refs","_watcher","_inactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_mount","hydrating","$el","render","emptyVNode","callHook","_update","_render","$vnode","prevEl","prevActiveInstance","activeInstance","prevVnode","_vnode","__patch__","__vue__","_updateFromParent","listeners","parentVnode","renderChildren","hasChildren","_renderChildren","_parentVnode","propKeys","oldListeners","_parentListeners","_updateListeners","$slots","resolveSlots","_renderContext","$forceUpdate","$destroy","$off","$emit","createComponent","Vue$2","cid","resolved","resolveAsyncComponent","extractProps","functional","createFunctionalComponent","nativeOn","mergeHooks","propOptions","_self","slots","functionalContext","slot","createComponentInstanceForVnode","vnodeComponentOptions","_isComponent","_componentTag","inlineTemplate","staticRenderFns","$mount","prepatch","oldVnode","keepAlive","destroy$1","requested","cbs","pendingCallbacks","domProps","hyphenate","checkProp","preserve","hooksToMerge","fromParent","ours","mergeHook$1","__","_createElement","getTagNamespace","isReservedTag","resolveAsset","initRender","_staticTrees","$createElement","renderMixin","$nextTick","ref","_renderProxy","errorHandler","_h","_q","_m","isInFor","identity","_f","_l","slotNodes","_b","asProp","mustUseProp","keyCodes","defaultSlot","isComment","initEvents","$on","eventsMixin","$once","initMixin","initInternalComponent","resolveConstructorOptions","superOptions","cachedSuperOptions","mergeOptions","extendOptions","components","_init","_uid","mergeData","from","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeComponents","isBuiltInTag","normalizeProps","camelize","normalizeDirectives","dirs","directives","mergeField","strat","strats","defaultStrat","extendsFrom","mixins","warnMissing","assets","capitalize","absent","isBooleanType","getPropDefaultValue","prevShouldConvert","getType","initUse","install","initMixin$1","initExtend","Super","isFirstExtend","_Ctor","Sub","_assetTypes","initAssetRegisters","definition","initGlobalAPI","configDef","builtInComponents","genClassForVnode","childNode","mergeClassData","genClassFromData","staticClass","dynamicClass","stringifyClass","isSVG","isUnknownElement","inBrowser","unknownElementCache","HTMLUnknownElement","HTMLElement","createElement$1","createElementNS","namespaceMap","newNode","referenceNode","setTextContent","registerRef","isRemoval","refInFor","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","emptyNodeAt","nodeOps","createRmCb","childElm","removeElement","createElm","insertedVnodeQueue","nested","isRootInsert","initComponent","setScope","createChildren","invokeCreateHooks","isPatchable","i$1","emptyNode","pendingInsert","_scopeId","addVnodes","parentElm","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","postpatch","invokeInsertHook","hydrate","childrenMatch","hooks$1","isInitialPatch","isRealElement","hasAttribute","updateDirectives","oldDir","isCreate","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","transitionClass","_transitionClasses","_prevClass","updateDOMListeners","_v_add","_v_remove","updateDOMProps","oldProps","_value","strCur","composing","updateStyle","oldStyle","needClone","normalize","tar","nextFrame","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","transitioneDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","enter","_leaveCb","cancelled","resolveTransition","_enterCb","enterClass","enterActiveClass","appearClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","expectsCSS","isIE9","userWantsControl","pendingNode","_pending","leave","performLeave","beforeLeave","leaveClass","leaveActiveClass","afterLeave","leaveCancelled","delayLeave","def$$1","autoCssTransition","setSelected","binding","isMultiple","getValue","hasNoMatchingOption","onCompositionStart","onCompositionEnd","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","placeholder","h","rawChild","hasParentTransition","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","dy","WebkitTransform","transitionDuration","_Set","camelizeRE","hyphenateRE","no","optionMergeStrategies","ignoredElements","_lifecycleHooks","_maxUpdateCount","NODE_ENV","VUE_ENV","hasProto","UA","isIE","isEdge","isAndroid","isIOS","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","uid$2","subs","addSub","removeSub","addDep","uid$1","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","_vForRemoving","arrayProto","arrayMethods","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","augment","walk","formatComponentName","instanceData","defaultData","freeze","defineReactive","KeepAlive","abstract","created","destroyed","testEl","svg","math","isHTMLTag","baseModules","klass","prefixes","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","platformModules","patch$1","vmodel","model","needReset","some","originalDisplay","__vOriginalDisplay","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","oldChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","propertyName","_hasMove","info","platformComponents"],"mappings":"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","file":"static/js/vendor.7d4fc20036b1c7d02123.js","sourcesContent":["webpackJsonp([1,0],[\n/* 0 */,\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * jQuery JavaScript Library v3.1.1\n\t * https://jquery.com/\n\t *\n\t * Includes Sizzle.js\n\t * https://sizzlejs.com/\n\t *\n\t * Copyright jQuery Foundation and other contributors\n\t * Released under the MIT license\n\t * https://jquery.org/license\n\t *\n\t * Date: 2016-09-22T22:30Z\n\t */\n\t( function( global, factory ) {\n\t\n\t\t\"use strict\";\n\t\n\t\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\n\t\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t\t// is present, execute the factory and get jQuery.\n\t\t\t// For environments that do not have a `window` with a `document`\n\t\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t\t// This accentuates the need for the creation of a real `window`.\n\t\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t\t// See ticket #14549 for more info.\n\t\t\tmodule.exports = global.document ?\n\t\t\t\tfactory( global, true ) :\n\t\t\t\tfunction( w ) {\n\t\t\t\t\tif ( !w.document ) {\n\t\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t\t}\n\t\t\t\t\treturn factory( w );\n\t\t\t\t};\n\t\t} else {\n\t\t\tfactory( global );\n\t\t}\n\t\n\t// Pass this if window is not defined yet\n\t} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\t\n\t// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n\t// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n\t// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n\t// enough that all such attempts are guarded in a try block.\n\t\"use strict\";\n\t\n\tvar arr = [];\n\t\n\tvar document = window.document;\n\t\n\tvar getProto = Object.getPrototypeOf;\n\t\n\tvar slice = arr.slice;\n\t\n\tvar concat = arr.concat;\n\t\n\tvar push = arr.push;\n\t\n\tvar indexOf = arr.indexOf;\n\t\n\tvar class2type = {};\n\t\n\tvar toString = class2type.toString;\n\t\n\tvar hasOwn = class2type.hasOwnProperty;\n\t\n\tvar fnToString = hasOwn.toString;\n\t\n\tvar ObjectFunctionString = fnToString.call( Object );\n\t\n\tvar support = {};\n\t\n\t\n\t\n\t\tfunction DOMEval( code, doc ) {\n\t\t\tdoc = doc || document;\n\t\n\t\t\tvar script = doc.createElement( \"script\" );\n\t\n\t\t\tscript.text = code;\n\t\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t\t}\n\t/* global Symbol */\n\t// Defining this global in .eslintrc.json would create a danger of using the global\n\t// unguarded in another place, it seems safer to define global only for this module\n\t\n\t\n\t\n\tvar\n\t\tversion = \"3.1.1\",\n\t\n\t\t// Define a local copy of jQuery\n\t\tjQuery = function( selector, context ) {\n\t\n\t\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\t\treturn new jQuery.fn.init( selector, context );\n\t\t},\n\t\n\t\t// Support: Android <=4.0 only\n\t\t// Make sure we trim BOM and NBSP\n\t\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\t\n\t\t// Matches dashed string for camelizing\n\t\trmsPrefix = /^-ms-/,\n\t\trdashAlpha = /-([a-z])/g,\n\t\n\t\t// Used by jQuery.camelCase as callback to replace()\n\t\tfcamelCase = function( all, letter ) {\n\t\t\treturn letter.toUpperCase();\n\t\t};\n\t\n\tjQuery.fn = jQuery.prototype = {\n\t\n\t\t// The current version of jQuery being used\n\t\tjquery: version,\n\t\n\t\tconstructor: jQuery,\n\t\n\t\t// The default length of a jQuery object is 0\n\t\tlength: 0,\n\t\n\t\ttoArray: function() {\n\t\t\treturn slice.call( this );\n\t\t},\n\t\n\t\t// Get the Nth element in the matched element set OR\n\t\t// Get the whole matched element set as a clean array\n\t\tget: function( num ) {\n\t\n\t\t\t// Return all the elements in a clean array\n\t\t\tif ( num == null ) {\n\t\t\t\treturn slice.call( this );\n\t\t\t}\n\t\n\t\t\t// Return just the one element from the set\n\t\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t\t},\n\t\n\t\t// Take an array of elements and push it onto the stack\n\t\t// (returning the new matched element set)\n\t\tpushStack: function( elems ) {\n\t\n\t\t\t// Build a new jQuery matched element set\n\t\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\t\n\t\t\t// Add the old object onto the stack (as a reference)\n\t\t\tret.prevObject = this;\n\t\n\t\t\t// Return the newly-formed element set\n\t\t\treturn ret;\n\t\t},\n\t\n\t\t// Execute a callback for every element in the matched set.\n\t\teach: function( callback ) {\n\t\t\treturn jQuery.each( this, callback );\n\t\t},\n\t\n\t\tmap: function( callback ) {\n\t\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\t\treturn callback.call( elem, i, elem );\n\t\t\t} ) );\n\t\t},\n\t\n\t\tslice: function() {\n\t\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t\t},\n\t\n\t\tfirst: function() {\n\t\t\treturn this.eq( 0 );\n\t\t},\n\t\n\t\tlast: function() {\n\t\t\treturn this.eq( -1 );\n\t\t},\n\t\n\t\teq: function( i ) {\n\t\t\tvar len = this.length,\n\t\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t\t},\n\t\n\t\tend: function() {\n\t\t\treturn this.prevObject || this.constructor();\n\t\t},\n\t\n\t\t// For internal use only.\n\t\t// Behaves like an Array's method, not like a jQuery method.\n\t\tpush: push,\n\t\tsort: arr.sort,\n\t\tsplice: arr.splice\n\t};\n\t\n\tjQuery.extend = jQuery.fn.extend = function() {\n\t\tvar options, name, src, copy, copyIsArray, clone,\n\t\t\ttarget = arguments[ 0 ] || {},\n\t\t\ti = 1,\n\t\t\tlength = arguments.length,\n\t\t\tdeep = false;\n\t\n\t\t// Handle a deep copy situation\n\t\tif ( typeof target === \"boolean\" ) {\n\t\t\tdeep = target;\n\t\n\t\t\t// Skip the boolean and the target\n\t\t\ttarget = arguments[ i ] || {};\n\t\t\ti++;\n\t\t}\n\t\n\t\t// Handle case when target is a string or something (possible in deep copy)\n\t\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\t\ttarget = {};\n\t\t}\n\t\n\t\t// Extend jQuery itself if only one argument is passed\n\t\tif ( i === length ) {\n\t\t\ttarget = this;\n\t\t\ti--;\n\t\t}\n\t\n\t\tfor ( ; i < length; i++ ) {\n\t\n\t\t\t// Only deal with non-null/undefined values\n\t\t\tif ( ( options = arguments[ i ] ) != null ) {\n\t\n\t\t\t\t// Extend the base object\n\t\t\t\tfor ( name in options ) {\n\t\t\t\t\tsrc = target[ name ];\n\t\t\t\t\tcopy = options[ name ];\n\t\n\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\tif ( target === copy ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\t\n\t\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\t\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the modified object\n\t\treturn target;\n\t};\n\t\n\tjQuery.extend( {\n\t\n\t\t// Unique for each copy of jQuery on the page\n\t\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\t\n\t\t// Assume jQuery is ready without the ready module\n\t\tisReady: true,\n\t\n\t\terror: function( msg ) {\n\t\t\tthrow new Error( msg );\n\t\t},\n\t\n\t\tnoop: function() {},\n\t\n\t\tisFunction: function( obj ) {\n\t\t\treturn jQuery.type( obj ) === \"function\";\n\t\t},\n\t\n\t\tisArray: Array.isArray,\n\t\n\t\tisWindow: function( obj ) {\n\t\t\treturn obj != null && obj === obj.window;\n\t\t},\n\t\n\t\tisNumeric: function( obj ) {\n\t\n\t\t\t// As of jQuery 3.0, isNumeric is limited to\n\t\t\t// strings and numbers (primitives or objects)\n\t\t\t// that can be coerced to finite numbers (gh-2662)\n\t\t\tvar type = jQuery.type( obj );\n\t\t\treturn ( type === \"number\" || type === \"string\" ) &&\n\t\n\t\t\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t\t\t// subtraction forces infinities to NaN\n\t\t\t\t!isNaN( obj - parseFloat( obj ) );\n\t\t},\n\t\n\t\tisPlainObject: function( obj ) {\n\t\t\tvar proto, Ctor;\n\t\n\t\t\t// Detect obvious negatives\n\t\t\t// Use toString instead of jQuery.type to catch host objects\n\t\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tproto = getProto( obj );\n\t\n\t\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\t\tif ( !proto ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t\t},\n\t\n\t\tisEmptyObject: function( obj ) {\n\t\n\t\t\t/* eslint-disable no-unused-vars */\n\t\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\t\tvar name;\n\t\n\t\t\tfor ( name in obj ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\ttype: function( obj ) {\n\t\t\tif ( obj == null ) {\n\t\t\t\treturn obj + \"\";\n\t\t\t}\n\t\n\t\t\t// Support: Android <=2.3 only (functionish RegExp)\n\t\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\t\ttypeof obj;\n\t\t},\n\t\n\t\t// Evaluates a script in a global context\n\t\tglobalEval: function( code ) {\n\t\t\tDOMEval( code );\n\t\t},\n\t\n\t\t// Convert dashed to camelCase; used by the css and data modules\n\t\t// Support: IE <=9 - 11, Edge 12 - 13\n\t\t// Microsoft forgot to hump their vendor prefix (#9572)\n\t\tcamelCase: function( string ) {\n\t\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t\t},\n\t\n\t\tnodeName: function( elem, name ) {\n\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t\t},\n\t\n\t\teach: function( obj, callback ) {\n\t\t\tvar length, i = 0;\n\t\n\t\t\tif ( isArrayLike( obj ) ) {\n\t\t\t\tlength = obj.length;\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn obj;\n\t\t},\n\t\n\t\t// Support: Android <=4.0 only\n\t\ttrim: function( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t\t},\n\t\n\t\t// results is for internal usage only\n\t\tmakeArray: function( arr, results ) {\n\t\t\tvar ret = results || [];\n\t\n\t\t\tif ( arr != null ) {\n\t\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tpush.call( ret, arr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn ret;\n\t\t},\n\t\n\t\tinArray: function( elem, arr, i ) {\n\t\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t\t},\n\t\n\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\tmerge: function( first, second ) {\n\t\t\tvar len = +second.length,\n\t\t\t\tj = 0,\n\t\t\t\ti = first.length;\n\t\n\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\t\n\t\t\tfirst.length = i;\n\t\n\t\t\treturn first;\n\t\t},\n\t\n\t\tgrep: function( elems, callback, invert ) {\n\t\t\tvar callbackInverse,\n\t\t\t\tmatches = [],\n\t\t\t\ti = 0,\n\t\t\t\tlength = elems.length,\n\t\t\t\tcallbackExpect = !invert;\n\t\n\t\t\t// Go through the array, only saving the items\n\t\t\t// that pass the validator function\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn matches;\n\t\t},\n\t\n\t\t// arg is for internal usage only\n\t\tmap: function( elems, callback, arg ) {\n\t\t\tvar length, value,\n\t\t\t\ti = 0,\n\t\t\t\tret = [];\n\t\n\t\t\t// Go through the array, translating each of the items to their new values\n\t\t\tif ( isArrayLike( elems ) ) {\n\t\t\t\tlength = elems.length;\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\t\n\t\t\t\t\tif ( value != null ) {\n\t\t\t\t\t\tret.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Go through every key on the object,\n\t\t\t} else {\n\t\t\t\tfor ( i in elems ) {\n\t\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\t\n\t\t\t\t\tif ( value != null ) {\n\t\t\t\t\t\tret.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Flatten any nested arrays\n\t\t\treturn concat.apply( [], ret );\n\t\t},\n\t\n\t\t// A global GUID counter for objects\n\t\tguid: 1,\n\t\n\t\t// Bind a function to a context, optionally partially applying any\n\t\t// arguments.\n\t\tproxy: function( fn, context ) {\n\t\t\tvar tmp, args, proxy;\n\t\n\t\t\tif ( typeof context === \"string\" ) {\n\t\t\t\ttmp = fn[ context ];\n\t\t\t\tcontext = fn;\n\t\t\t\tfn = tmp;\n\t\t\t}\n\t\n\t\t\t// Quick check to determine if target is callable, in the spec\n\t\t\t// this throws a TypeError, but we will just return undefined.\n\t\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\n\t\t\t// Simulated bind\n\t\t\targs = slice.call( arguments, 2 );\n\t\t\tproxy = function() {\n\t\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t\t};\n\t\n\t\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\t\n\t\t\treturn proxy;\n\t\t},\n\t\n\t\tnow: Date.now,\n\t\n\t\t// jQuery.support is not used in Core but other projects attach their\n\t\t// properties to it so it needs to exist.\n\t\tsupport: support\n\t} );\n\t\n\tif ( typeof Symbol === \"function\" ) {\n\t\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n\t}\n\t\n\t// Populate the class2type map\n\tjQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\t\n\tfunction isArrayLike( obj ) {\n\t\n\t\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t\t// `in` check used to prevent JIT error (gh-2145)\n\t\t// hasOwn isn't used here due to false negatives\n\t\t// regarding Nodelist length in IE\n\t\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\t\ttype = jQuery.type( obj );\n\t\n\t\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\treturn type === \"array\" || length === 0 ||\n\t\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n\t}\n\tvar Sizzle =\n\t/*!\n\t * Sizzle CSS Selector Engine v2.3.3\n\t * https://sizzlejs.com/\n\t *\n\t * Copyright jQuery Foundation and other contributors\n\t * Released under the MIT license\n\t * http://jquery.org/license\n\t *\n\t * Date: 2016-08-08\n\t */\n\t(function( window ) {\n\t\n\tvar i,\n\t\tsupport,\n\t\tExpr,\n\t\tgetText,\n\t\tisXML,\n\t\ttokenize,\n\t\tcompile,\n\t\tselect,\n\t\toutermostContext,\n\t\tsortInput,\n\t\thasDuplicate,\n\t\n\t\t// Local document vars\n\t\tsetDocument,\n\t\tdocument,\n\t\tdocElem,\n\t\tdocumentIsHTML,\n\t\trbuggyQSA,\n\t\trbuggyMatches,\n\t\tmatches,\n\t\tcontains,\n\t\n\t\t// Instance-specific data\n\t\texpando = \"sizzle\" + 1 * new Date(),\n\t\tpreferredDoc = window.document,\n\t\tdirruns = 0,\n\t\tdone = 0,\n\t\tclassCache = createCache(),\n\t\ttokenCache = createCache(),\n\t\tcompilerCache = createCache(),\n\t\tsortOrder = function( a, b ) {\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\t\n\t\t// Instance methods\n\t\thasOwn = ({}).hasOwnProperty,\n\t\tarr = [],\n\t\tpop = arr.pop,\n\t\tpush_native = arr.push,\n\t\tpush = arr.push,\n\t\tslice = arr.slice,\n\t\t// Use a stripped-down indexOf as it's faster than native\n\t\t// https://jsperf.com/thor-indexof-vs-for/5\n\t\tindexOf = function( list, elem ) {\n\t\t\tvar i = 0,\n\t\t\t\tlen = list.length;\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tif ( list[i] === elem ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\t\n\t\t// Regular expressions\n\t\n\t\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\t\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t\n\t\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\t\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\t\n\t\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\t\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t\t// Operator (capture 2)\n\t\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\t\"*\\\\]\",\n\t\n\t\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t\t// 2. simple (capture 6)\n\t\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t\t// 3. anything else (capture 2)\n\t\t\t\".*\" +\n\t\t\t\")\\\\)|)\",\n\t\n\t\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\t\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\t\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\t\n\t\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\t\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\t\n\t\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\t\n\t\trpseudo = new RegExp( pseudos ),\n\t\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\t\n\t\tmatchExpr = {\n\t\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t\t// For use in libraries implementing .is()\n\t\t\t// We use this for POS matching in `select`\n\t\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t\t},\n\t\n\t\trinputs = /^(?:input|select|textarea|button)$/i,\n\t\trheader = /^h\\d$/i,\n\t\n\t\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\t\n\t\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\t\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\t\n\t\trsibling = /[+~]/,\n\t\n\t\t// CSS escapes\n\t\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\t\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\t\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t\t// NaN means non-codepoint\n\t\t\t// Support: Firefox<24\n\t\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\t\treturn high !== high || escapedWhitespace ?\n\t\t\t\tescaped :\n\t\t\t\thigh < 0 ?\n\t\t\t\t\t// BMP codepoint\n\t\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t\t},\n\t\n\t\t// CSS string/identifier serialization\n\t\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\t\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\t\tfcssescape = function( ch, asCodePoint ) {\n\t\t\tif ( asCodePoint ) {\n\t\n\t\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\t\treturn \"\\uFFFD\";\n\t\t\t\t}\n\t\n\t\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t\t}\n\t\n\t\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\t\treturn \"\\\\\" + ch;\n\t\t},\n\t\n\t\t// Used for iframes\n\t\t// See setDocument()\n\t\t// Removing the function wrapper causes a \"Permission Denied\"\n\t\t// error in IE\n\t\tunloadHandler = function() {\n\t\t\tsetDocument();\n\t\t},\n\t\n\t\tdisabledAncestor = addCombinator(\n\t\t\tfunction( elem ) {\n\t\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t\t},\n\t\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t\t);\n\t\n\t// Optimize for push.apply( _, NodeList )\n\ttry {\n\t\tpush.apply(\n\t\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\t\tpreferredDoc.childNodes\n\t\t);\n\t\t// Support: Android<4.0\n\t\t// Detect silently failing push.apply\n\t\tarr[ preferredDoc.childNodes.length ].nodeType;\n\t} catch ( e ) {\n\t\tpush = { apply: arr.length ?\n\t\n\t\t\t// Leverage slice if possible\n\t\t\tfunction( target, els ) {\n\t\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t\t} :\n\t\n\t\t\t// Support: IE<9\n\t\t\t// Otherwise append directly\n\t\t\tfunction( target, els ) {\n\t\t\t\tvar j = target.length,\n\t\t\t\t\ti = 0;\n\t\t\t\t// Can't trust NodeList.length\n\t\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\t\ttarget.length = j - 1;\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction Sizzle( selector, context, results, seed ) {\n\t\tvar m, i, elem, nid, match, groups, newSelector,\n\t\t\tnewContext = context && context.ownerDocument,\n\t\n\t\t\t// nodeType defaults to 9, since context defaults to document\n\t\t\tnodeType = context ? context.nodeType : 9;\n\t\n\t\tresults = results || [];\n\t\n\t\t// Return early from calls with invalid selector or context\n\t\tif ( typeof selector !== \"string\" || !selector ||\n\t\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\t\n\t\t\treturn results;\n\t\t}\n\t\n\t\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\t\tif ( !seed ) {\n\t\n\t\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\t\tsetDocument( context );\n\t\t\t}\n\t\t\tcontext = context || document;\n\t\n\t\t\tif ( documentIsHTML ) {\n\t\n\t\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\t\n\t\t\t\t\t// ID selector\n\t\t\t\t\tif ( (m = match[1]) ) {\n\t\n\t\t\t\t\t\t// Document context\n\t\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\t\n\t\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Element context\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\t\telem.id === m ) {\n\t\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type selector\n\t\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\t\treturn results;\n\t\n\t\t\t\t\t// Class selector\n\t\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\t\tcontext.getElementsByClassName ) {\n\t\n\t\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Take advantage of querySelectorAll\n\t\t\t\tif ( support.qsa &&\n\t\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\n\t\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\t\tnewContext = context;\n\t\t\t\t\t\tnewSelector = selector;\n\t\n\t\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t\t// Support: IE <=8\n\t\t\t\t\t// Exclude object elements\n\t\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\t\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\t\ti = groups.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\n\t\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\t\tcontext;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( newSelector ) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// All others\n\t\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n\t}\n\t\n\t/**\n\t * Create key-value caches of limited size\n\t * @returns {function(string, object)} Returns the Object data after storing it on itself with\n\t *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\t *\tdeleting the oldest entry\n\t */\n\tfunction createCache() {\n\t\tvar keys = [];\n\t\n\t\tfunction cache( key, value ) {\n\t\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t\t// Only keep the most recent entries\n\t\t\t\tdelete cache[ keys.shift() ];\n\t\t\t}\n\t\t\treturn (cache[ key + \" \" ] = value);\n\t\t}\n\t\treturn cache;\n\t}\n\t\n\t/**\n\t * Mark a function for special use by Sizzle\n\t * @param {Function} fn The function to mark\n\t */\n\tfunction markFunction( fn ) {\n\t\tfn[ expando ] = true;\n\t\treturn fn;\n\t}\n\t\n\t/**\n\t * Support testing using an element\n\t * @param {Function} fn Passed the created element and returns a boolean result\n\t */\n\tfunction assert( fn ) {\n\t\tvar el = document.createElement(\"fieldset\");\n\t\n\t\ttry {\n\t\t\treturn !!fn( el );\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t} finally {\n\t\t\t// Remove from its parent by default\n\t\t\tif ( el.parentNode ) {\n\t\t\t\tel.parentNode.removeChild( el );\n\t\t\t}\n\t\t\t// release memory in IE\n\t\t\tel = null;\n\t\t}\n\t}\n\t\n\t/**\n\t * Adds the same handler for all of the specified attrs\n\t * @param {String} attrs Pipe-separated list of attributes\n\t * @param {Function} handler The method that will be applied\n\t */\n\tfunction addHandle( attrs, handler ) {\n\t\tvar arr = attrs.split(\"|\"),\n\t\t\ti = arr.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t\t}\n\t}\n\t\n\t/**\n\t * Checks document order of two siblings\n\t * @param {Element} a\n\t * @param {Element} b\n\t * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n\t */\n\tfunction siblingCheck( a, b ) {\n\t\tvar cur = b && a,\n\t\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t\ta.sourceIndex - b.sourceIndex;\n\t\n\t\t// Use IE sourceIndex if available on both nodes\n\t\tif ( diff ) {\n\t\t\treturn diff;\n\t\t}\n\t\n\t\t// Check if b follows a\n\t\tif ( cur ) {\n\t\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\t\tif ( cur === b ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a ? 1 : -1;\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for input types\n\t * @param {String} type\n\t */\n\tfunction createInputPseudo( type ) {\n\t\treturn function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === type;\n\t\t};\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for buttons\n\t * @param {String} type\n\t */\n\tfunction createButtonPseudo( type ) {\n\t\treturn function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t\t};\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for :enabled/:disabled\n\t * @param {Boolean} disabled true for :disabled; false for :enabled\n\t */\n\tfunction createDisabledPseudo( disabled ) {\n\t\n\t\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\t\treturn function( elem ) {\n\t\n\t\t\t// Only certain elements can match :enabled or :disabled\n\t\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\t\tif ( \"form\" in elem ) {\n\t\n\t\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t\t// * option elements in a disabled optgroup\n\t\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t\t// All such elements have a \"form\" property.\n\t\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\t\n\t\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\t\treturn elem.isDisabled === disabled ||\n\t\n\t\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t\t}\n\t\n\t\t\t\treturn elem.disabled === disabled;\n\t\n\t\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t\t// even exist on them, let alone have a boolean value.\n\t\t\t} else if ( \"label\" in elem ) {\n\t\t\t\treturn elem.disabled === disabled;\n\t\t\t}\n\t\n\t\t\t// Remaining elements are neither :enabled nor :disabled\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for positionals\n\t * @param {Function} fn\n\t */\n\tfunction createPositionalPseudo( fn ) {\n\t\treturn markFunction(function( argument ) {\n\t\t\targument = +argument;\n\t\t\treturn markFunction(function( seed, matches ) {\n\t\t\t\tvar j,\n\t\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\t\ti = matchIndexes.length;\n\t\n\t\t\t\t// Match elements found at the specified indexes\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * Checks a node for validity as a Sizzle context\n\t * @param {Element|Object=} context\n\t * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n\t */\n\tfunction testContext( context ) {\n\t\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n\t}\n\t\n\t// Expose support vars for convenience\n\tsupport = Sizzle.support = {};\n\t\n\t/**\n\t * Detects XML nodes\n\t * @param {Element|Object} elem An element or a document\n\t * @returns {Boolean} True iff elem is a non-HTML XML node\n\t */\n\tisXML = Sizzle.isXML = function( elem ) {\n\t\t// documentElement is verified for cases where it doesn't yet exist\n\t\t// (such as loading iframes in IE - #4833)\n\t\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\t\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n\t};\n\t\n\t/**\n\t * Sets document-related variables once based on the current document\n\t * @param {Element|Object} [doc] An element or document object to use to set the document\n\t * @returns {Object} Returns the current document\n\t */\n\tsetDocument = Sizzle.setDocument = function( node ) {\n\t\tvar hasCompare, subWindow,\n\t\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\t\n\t\t// Return early if doc is invalid or already selected\n\t\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\t\treturn document;\n\t\t}\n\t\n\t\t// Update global variables\n\t\tdocument = doc;\n\t\tdocElem = document.documentElement;\n\t\tdocumentIsHTML = !isXML( document );\n\t\n\t\t// Support: IE 9-11, Edge\n\t\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t\tif ( preferredDoc !== document &&\n\t\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\t\n\t\t\t// Support: IE 11, Edge\n\t\t\tif ( subWindow.addEventListener ) {\n\t\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\t\n\t\t\t// Support: IE 9 - 10 only\n\t\t\t} else if ( subWindow.attachEvent ) {\n\t\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Attributes\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Support: IE<8\n\t\t// Verify that getAttribute really returns attributes and not properties\n\t\t// (excepting IE8 booleans)\n\t\tsupport.attributes = assert(function( el ) {\n\t\t\tel.className = \"i\";\n\t\t\treturn !el.getAttribute(\"className\");\n\t\t});\n\t\n\t\t/* getElement(s)By*\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Check if getElementsByTagName(\"*\") returns only elements\n\t\tsupport.getElementsByTagName = assert(function( el ) {\n\t\t\tel.appendChild( document.createComment(\"\") );\n\t\t\treturn !el.getElementsByTagName(\"*\").length;\n\t\t});\n\t\n\t\t// Support: IE<9\n\t\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\t\n\t\t// Support: IE<10\n\t\t// Check if getElementById returns elements by name\n\t\t// The broken getElementById methods don't pick up programmatically-set names,\n\t\t// so use a roundabout getElementsByName test\n\t\tsupport.getById = assert(function( el ) {\n\t\t\tdocElem.appendChild( el ).id = expando;\n\t\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t\t});\n\t\n\t\t// ID filter and find\n\t\tif ( support.getById ) {\n\t\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t\t};\n\t\t\t};\n\t\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\t\treturn node && node.value === attrId;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\t\t// Support: IE 6 - 7 only\n\t\t\t// getElementById is not reliable as a find shortcut\n\t\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\t\tvar node, i, elems,\n\t\t\t\t\t\telem = context.getElementById( id );\n\t\n\t\t\t\t\tif ( elem ) {\n\t\n\t\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\t// Tag\n\t\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\t\tfunction( tag, context ) {\n\t\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\t\treturn context.getElementsByTagName( tag );\n\t\n\t\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t\t} else if ( support.qsa ) {\n\t\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t\t}\n\t\t\t} :\n\t\n\t\t\tfunction( tag, context ) {\n\t\t\t\tvar elem,\n\t\t\t\t\ttmp = [],\n\t\t\t\t\ti = 0,\n\t\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\t\tresults = context.getElementsByTagName( tag );\n\t\n\t\t\t\t// Filter out possible comments\n\t\t\t\tif ( tag === \"*\" ) {\n\t\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn tmp;\n\t\t\t\t}\n\t\t\t\treturn results;\n\t\t\t};\n\t\n\t\t// Class\n\t\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\t\treturn context.getElementsByClassName( className );\n\t\t\t}\n\t\t};\n\t\n\t\t/* QSA/matchesSelector\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// QSA and matchesSelector support\n\t\n\t\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\t\trbuggyMatches = [];\n\t\n\t\t// qSa(:focus) reports false when true (Chrome 21)\n\t\t// We allow this because of a bug in IE8/9 that throws an error\n\t\t// whenever `document.activeElement` is accessed on an iframe\n\t\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t\t// See https://bugs.jquery.com/ticket/13378\n\t\trbuggyQSA = [];\n\t\n\t\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t\t// Build QSA regex\n\t\t\t// Regex strategy adopted from Diego Perini\n\t\t\tassert(function( el ) {\n\t\t\t\t// Select is set to empty string on purpose\n\t\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t\t// setting a boolean content attribute,\n\t\t\t\t// since its presence should be enough\n\t\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\t\"<option selected=''></option></select>\";\n\t\n\t\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: IE8\n\t\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t\t}\n\t\n\t\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t\t// IE8 throws error here and will not see later tests\n\t\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t\t}\n\t\n\t\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tassert(function( el ) {\n\t\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\t\n\t\t\t\t// Support: Windows 8 Native Apps\n\t\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\t\tvar input = document.createElement(\"input\");\n\t\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\t\n\t\t\t\t// Support: IE8\n\t\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t\t}\n\t\n\t\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t\t// IE8 throws error here and will not see later tests\n\t\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: IE9-11+\n\t\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\t\trbuggyQSA.push(\",.*:\");\n\t\t\t});\n\t\t}\n\t\n\t\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\t\tdocElem.webkitMatchesSelector ||\n\t\t\tdocElem.mozMatchesSelector ||\n\t\t\tdocElem.oMatchesSelector ||\n\t\t\tdocElem.msMatchesSelector) )) ) {\n\t\n\t\t\tassert(function( el ) {\n\t\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t\t// on a disconnected node (IE 9)\n\t\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\t\n\t\t\t\t// This should fail with an exception\n\t\t\t\t// Gecko does not error, returns false instead\n\t\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t\t});\n\t\t}\n\t\n\t\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\t\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\t\n\t\t/* Contains\n\t\t---------------------------------------------------------------------- */\n\t\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\t\n\t\t// Element contains another\n\t\t// Purposefully self-exclusive\n\t\t// As in, an element does not contain itself\n\t\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\t\tfunction( a, b ) {\n\t\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\t\tbup = b && b.parentNode;\n\t\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\t\tadown.contains ?\n\t\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t\t));\n\t\t\t} :\n\t\t\tfunction( a, b ) {\n\t\t\t\tif ( b ) {\n\t\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t\n\t\t/* Sorting\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Document order sorting\n\t\tsortOrder = hasCompare ?\n\t\tfunction( a, b ) {\n\t\n\t\t\t// Flag for duplicate removal\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\t\tif ( compare ) {\n\t\t\t\treturn compare;\n\t\t\t}\n\t\n\t\t\t// Calculate position if both inputs belong to the same document\n\t\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\t\ta.compareDocumentPosition( b ) :\n\t\n\t\t\t\t// Otherwise we know they are disconnected\n\t\t\t\t1;\n\t\n\t\t\t// Disconnected nodes\n\t\t\tif ( compare & 1 ||\n\t\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\t\n\t\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\t// Maintain original order\n\t\t\t\treturn sortInput ?\n\t\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\t\t}\n\t\n\t\t\treturn compare & 4 ? -1 : 1;\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\t// Exit early if the nodes are identical\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\tvar cur,\n\t\t\t\ti = 0,\n\t\t\t\taup = a.parentNode,\n\t\t\t\tbup = b.parentNode,\n\t\t\t\tap = [ a ],\n\t\t\t\tbp = [ b ];\n\t\n\t\t\t// Parentless nodes are either documents or disconnected\n\t\t\tif ( !aup || !bup ) {\n\t\t\t\treturn a === document ? -1 :\n\t\t\t\t\tb === document ? 1 :\n\t\t\t\t\taup ? -1 :\n\t\t\t\t\tbup ? 1 :\n\t\t\t\t\tsortInput ?\n\t\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\n\t\t\t// If the nodes are siblings, we can do a quick check\n\t\t\t} else if ( aup === bup ) {\n\t\t\t\treturn siblingCheck( a, b );\n\t\t\t}\n\t\n\t\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\t\tcur = a;\n\t\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\t\tap.unshift( cur );\n\t\t\t}\n\t\t\tcur = b;\n\t\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\t\tbp.unshift( cur );\n\t\t\t}\n\t\n\t\t\t// Walk down the tree looking for a discrepancy\n\t\t\twhile ( ap[i] === bp[i] ) {\n\t\t\t\ti++;\n\t\t\t}\n\t\n\t\t\treturn i ?\n\t\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\t\n\t\t\t\t// Otherwise nodes in our document sort first\n\t\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t\t0;\n\t\t};\n\t\n\t\treturn document;\n\t};\n\t\n\tSizzle.matches = function( expr, elements ) {\n\t\treturn Sizzle( expr, null, null, elements );\n\t};\n\t\n\tSizzle.matchesSelector = function( elem, expr ) {\n\t\t// Set document vars if needed\n\t\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\t\tsetDocument( elem );\n\t\t}\n\t\n\t\t// Make sure that attribute selectors are quoted\n\t\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\t\n\t\tif ( support.matchesSelector && documentIsHTML &&\n\t\t\t!compilerCache[ expr + \" \" ] &&\n\t\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\t\n\t\t\ttry {\n\t\t\t\tvar ret = matches.call( elem, expr );\n\t\n\t\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t\n\t\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n\t};\n\t\n\tSizzle.contains = function( context, elem ) {\n\t\t// Set document vars if needed\n\t\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\treturn contains( context, elem );\n\t};\n\t\n\tSizzle.attr = function( elem, name ) {\n\t\t// Set document vars if needed\n\t\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\t\tsetDocument( elem );\n\t\t}\n\t\n\t\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\t\tundefined;\n\t\n\t\treturn val !== undefined ?\n\t\t\tval :\n\t\t\tsupport.attributes || !documentIsHTML ?\n\t\t\t\telem.getAttribute( name ) :\n\t\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t};\n\t\n\tSizzle.escape = function( sel ) {\n\t\treturn (sel + \"\").replace( rcssescape, fcssescape );\n\t};\n\t\n\tSizzle.error = function( msg ) {\n\t\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n\t};\n\t\n\t/**\n\t * Document sorting and removing duplicates\n\t * @param {ArrayLike} results\n\t */\n\tSizzle.uniqueSort = function( results ) {\n\t\tvar elem,\n\t\t\tduplicates = [],\n\t\t\tj = 0,\n\t\t\ti = 0;\n\t\n\t\t// Unless we *know* we can detect duplicates, assume their presence\n\t\thasDuplicate = !support.detectDuplicates;\n\t\tsortInput = !support.sortStable && results.slice( 0 );\n\t\tresults.sort( sortOrder );\n\t\n\t\tif ( hasDuplicate ) {\n\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\t\tj = duplicates.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile ( j-- ) {\n\t\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t\t}\n\t\t}\n\t\n\t\t// Clear input after sorting to release objects\n\t\t// See https://github.com/jquery/sizzle/pull/225\n\t\tsortInput = null;\n\t\n\t\treturn results;\n\t};\n\t\n\t/**\n\t * Utility function for retrieving the text value of an array of DOM nodes\n\t * @param {Array|Element} elem\n\t */\n\tgetText = Sizzle.getText = function( elem ) {\n\t\tvar node,\n\t\t\tret = \"\",\n\t\t\ti = 0,\n\t\t\tnodeType = elem.nodeType;\n\t\n\t\tif ( !nodeType ) {\n\t\t\t// If no nodeType, this is expected to be an array\n\t\t\twhile ( (node = elem[i++]) ) {\n\t\t\t\t// Do not traverse comment nodes\n\t\t\t\tret += getText( node );\n\t\t\t}\n\t\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t\t// Use textContent for elements\n\t\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\t\treturn elem.textContent;\n\t\t\t} else {\n\t\t\t\t// Traverse its children\n\t\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\t\tret += getText( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\t\treturn elem.nodeValue;\n\t\t}\n\t\t// Do not include comment or processing instruction nodes\n\t\n\t\treturn ret;\n\t};\n\t\n\tExpr = Sizzle.selectors = {\n\t\n\t\t// Can be adjusted by the user\n\t\tcacheLength: 50,\n\t\n\t\tcreatePseudo: markFunction,\n\t\n\t\tmatch: matchExpr,\n\t\n\t\tattrHandle: {},\n\t\n\t\tfind: {},\n\t\n\t\trelative: {\n\t\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\t\" \": { dir: \"parentNode\" },\n\t\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\t\"~\": { dir: \"previousSibling\" }\n\t\t},\n\t\n\t\tpreFilter: {\n\t\t\t\"ATTR\": function( match ) {\n\t\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\t\n\t\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\t\n\t\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t\t}\n\t\n\t\t\t\treturn match.slice( 0, 4 );\n\t\t\t},\n\t\n\t\t\t\"CHILD\": function( match ) {\n\t\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t\t1 type (only|nth|...)\n\t\t\t\t\t2 what (child|of-type)\n\t\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t\t5 sign of xn-component\n\t\t\t\t\t6 x of xn-component\n\t\t\t\t\t7 sign of y-component\n\t\t\t\t\t8 y of y-component\n\t\t\t\t*/\n\t\t\t\tmatch[1] = match[1].toLowerCase();\n\t\n\t\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t\t// nth-* requires argument\n\t\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\t\n\t\t\t\t// other types prohibit arguments\n\t\t\t\t} else if ( match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\t\n\t\t\t\treturn match;\n\t\t\t},\n\t\n\t\t\t\"PSEUDO\": function( match ) {\n\t\t\t\tvar excess,\n\t\t\t\t\tunquoted = !match[6] && match[2];\n\t\n\t\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\t// Accept quoted arguments as-is\n\t\t\t\tif ( match[3] ) {\n\t\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\t\n\t\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\t\n\t\t\t\t\t// excess is a negative index\n\t\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t\t}\n\t\n\t\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\t\treturn match.slice( 0, 3 );\n\t\t\t}\n\t\t},\n\t\n\t\tfilter: {\n\t\n\t\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\t\tfunction() { return true; } :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"CLASS\": function( className ) {\n\t\t\t\tvar pattern = classCache[ className + \" \" ];\n\t\n\t\t\t\treturn pattern ||\n\t\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t\t});\n\t\t\t},\n\t\n\t\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar result = Sizzle.attr( elem, name );\n\t\n\t\t\t\t\tif ( result == null ) {\n\t\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t\t}\n\t\t\t\t\tif ( !operator ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tresult += \"\";\n\t\n\t\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\t\tfalse;\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\t\tofType = what === \"of-type\";\n\t\n\t\t\t\treturn first === 1 && last === 0 ?\n\t\n\t\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t\t} :\n\t\n\t\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\t\tdiff = false;\n\t\n\t\t\t\t\t\tif ( parent ) {\n\t\n\t\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\t\n\t\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\t\tif ( forward && useCache ) {\n\t\n\t\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\t\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\n\t\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\t\n\t\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\t\n\t\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t\t++diff ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t\t// pseudo-class names are case-insensitive\n\t\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\t\tvar args,\n\t\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\t\n\t\t\t\t// The user may use createPseudo to indicate that\n\t\t\t\t// arguments are needed to create the filter function\n\t\t\t\t// just as Sizzle does\n\t\t\t\tif ( fn[ expando ] ) {\n\t\t\t\t\treturn fn( argument );\n\t\t\t\t}\n\t\n\t\t\t\t// But maintain support for old signatures\n\t\t\t\tif ( fn.length > 1 ) {\n\t\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) :\n\t\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\treturn fn;\n\t\t\t}\n\t\t},\n\t\n\t\tpseudos: {\n\t\t\t// Potentially complex pseudos\n\t\t\t\"not\": markFunction(function( selector ) {\n\t\t\t\t// Trim the selector passed to compile\n\t\t\t\t// to avoid treating leading and trailing\n\t\t\t\t// spaces as combinators\n\t\t\t\tvar input = [],\n\t\t\t\t\tresults = [],\n\t\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\t\n\t\t\t\treturn matcher[ expando ] ?\n\t\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\t\tvar elem,\n\t\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\t\ti = seed.length;\n\t\n\t\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\t\tinput[0] = null;\n\t\t\t\t\t\treturn !results.pop();\n\t\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t\"has\": markFunction(function( selector ) {\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t\"contains\": markFunction(function( text ) {\n\t\t\t\ttext = text.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t// \"Whether an element is represented by a :lang() selector\n\t\t\t// is based solely on the element's language value\n\t\t\t// being equal to the identifier C,\n\t\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t\t// The identifier C does not have to be a valid language name.\"\n\t\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t\t// lang value must be a valid identifier\n\t\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t\t}\n\t\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar elemLang;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\t\n\t\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t// Miscellaneous\n\t\t\t\"target\": function( elem ) {\n\t\t\t\tvar hash = window.location && window.location.hash;\n\t\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t\t},\n\t\n\t\t\t\"root\": function( elem ) {\n\t\t\t\treturn elem === docElem;\n\t\t\t},\n\t\n\t\t\t\"focus\": function( elem ) {\n\t\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t\t},\n\t\n\t\t\t// Boolean properties\n\t\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\t\"disabled\": createDisabledPseudo( true ),\n\t\n\t\t\t\"checked\": function( elem ) {\n\t\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t\t},\n\t\n\t\t\t\"selected\": function( elem ) {\n\t\t\t\t// Accessing this property makes selected-by-default\n\t\t\t\t// options in Safari work properly\n\t\t\t\tif ( elem.parentNode ) {\n\t\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t\t}\n\t\n\t\t\t\treturn elem.selected === true;\n\t\t\t},\n\t\n\t\t\t// Contents\n\t\t\t\"empty\": function( elem ) {\n\t\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\n\t\t\t\"parent\": function( elem ) {\n\t\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t\t},\n\t\n\t\t\t// Element/input types\n\t\t\t\"header\": function( elem ) {\n\t\t\t\treturn rheader.test( elem.nodeName );\n\t\t\t},\n\t\n\t\t\t\"input\": function( elem ) {\n\t\t\t\treturn rinputs.test( elem.nodeName );\n\t\t\t},\n\t\n\t\t\t\"button\": function( elem ) {\n\t\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t\t},\n\t\n\t\t\t\"text\": function( elem ) {\n\t\t\t\tvar attr;\n\t\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\t\telem.type === \"text\" &&\n\t\n\t\t\t\t\t// Support: IE<8\n\t\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t\t},\n\t\n\t\t\t// Position-in-collection\n\t\t\t\"first\": createPositionalPseudo(function() {\n\t\t\t\treturn [ 0 ];\n\t\t\t}),\n\t\n\t\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\treturn [ length - 1 ];\n\t\t\t}),\n\t\n\t\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t\t}),\n\t\n\t\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\tvar i = 0;\n\t\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\tvar i = 1;\n\t\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t})\n\t\t}\n\t};\n\t\n\tExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\t\n\t// Add button/input type pseudos\n\tfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\t\tExpr.pseudos[ i ] = createInputPseudo( i );\n\t}\n\tfor ( i in { submit: true, reset: true } ) {\n\t\tExpr.pseudos[ i ] = createButtonPseudo( i );\n\t}\n\t\n\t// Easy API for creating new setFilters\n\tfunction setFilters() {}\n\tsetFilters.prototype = Expr.filters = Expr.pseudos;\n\tExpr.setFilters = new setFilters();\n\t\n\ttokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\t\tvar matched, match, tokens, type,\n\t\t\tsoFar, groups, preFilters,\n\t\t\tcached = tokenCache[ selector + \" \" ];\n\t\n\t\tif ( cached ) {\n\t\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t\t}\n\t\n\t\tsoFar = selector;\n\t\tgroups = [];\n\t\tpreFilters = Expr.preFilter;\n\t\n\t\twhile ( soFar ) {\n\t\n\t\t\t// Comma and first run\n\t\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t\t}\n\t\t\t\tgroups.push( (tokens = []) );\n\t\t\t}\n\t\n\t\t\tmatched = false;\n\t\n\t\t\t// Combinators\n\t\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\t// Cast descendant combinators to space\n\t\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\n\t\t\t// Filters\n\t\t\tfor ( type in Expr.filter ) {\n\t\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\t\tmatched = match.shift();\n\t\t\t\t\ttokens.push({\n\t\t\t\t\t\tvalue: matched,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tmatches: match\n\t\t\t\t\t});\n\t\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( !matched ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the length of the invalid excess\n\t\t// if we're just parsing\n\t\t// Otherwise, throw an error or return tokens\n\t\treturn parseOnly ?\n\t\t\tsoFar.length :\n\t\t\tsoFar ?\n\t\t\t\tSizzle.error( selector ) :\n\t\t\t\t// Cache the tokens\n\t\t\t\ttokenCache( selector, groups ).slice( 0 );\n\t};\n\t\n\tfunction toSelector( tokens ) {\n\t\tvar i = 0,\n\t\t\tlen = tokens.length,\n\t\t\tselector = \"\";\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tselector += tokens[i].value;\n\t\t}\n\t\treturn selector;\n\t}\n\t\n\tfunction addCombinator( matcher, combinator, base ) {\n\t\tvar dir = combinator.dir,\n\t\t\tskip = combinator.next,\n\t\t\tkey = skip || dir,\n\t\t\tcheckNonElements = base && key === \"parentNode\",\n\t\t\tdoneName = done++;\n\t\n\t\treturn combinator.first ?\n\t\t\t// Check against closest ancestor/preceding element\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} :\n\t\n\t\t\t// Check against all ancestor/preceding elements\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\t\tnewCache = [ dirruns, doneName ];\n\t\n\t\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\t\tif ( xml ) {\n\t\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\t\n\t\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\t\n\t\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t}\n\t\n\tfunction elementMatcher( matchers ) {\n\t\treturn matchers.length > 1 ?\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\tvar i = matchers.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} :\n\t\t\tmatchers[0];\n\t}\n\t\n\tfunction multipleContexts( selector, contexts, results ) {\n\t\tvar i = 0,\n\t\t\tlen = contexts.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tSizzle( selector, contexts[i], results );\n\t\t}\n\t\treturn results;\n\t}\n\t\n\tfunction condense( unmatched, map, filter, context, xml ) {\n\t\tvar elem,\n\t\t\tnewUnmatched = [],\n\t\t\ti = 0,\n\t\t\tlen = unmatched.length,\n\t\t\tmapped = map != null;\n\t\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\t\tif ( mapped ) {\n\t\t\t\t\t\tmap.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn newUnmatched;\n\t}\n\t\n\tfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\t\tif ( postFilter && !postFilter[ expando ] ) {\n\t\t\tpostFilter = setMatcher( postFilter );\n\t\t}\n\t\tif ( postFinder && !postFinder[ expando ] ) {\n\t\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t\t}\n\t\treturn markFunction(function( seed, results, context, xml ) {\n\t\t\tvar temp, i, elem,\n\t\t\t\tpreMap = [],\n\t\t\t\tpostMap = [],\n\t\t\t\tpreexisting = results.length,\n\t\n\t\t\t\t// Get initial elements from seed or context\n\t\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\t\n\t\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\t\telems,\n\t\n\t\t\t\tmatcherOut = matcher ?\n\t\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\t\n\t\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t\t[] :\n\t\n\t\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\t\tresults :\n\t\t\t\t\tmatcherIn;\n\t\n\t\t\t// Find primary matches\n\t\t\tif ( matcher ) {\n\t\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t\t}\n\t\n\t\t\t// Apply postFilter\n\t\t\tif ( postFilter ) {\n\t\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\t\tpostFilter( temp, [], context, xml );\n\t\n\t\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\t\ti = temp.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( seed ) {\n\t\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\t\ttemp = [];\n\t\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\t\n\t\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Add elements to results, through postFinder if defined\n\t\t\t} else {\n\t\t\t\tmatcherOut = condense(\n\t\t\t\t\tmatcherOut === results ?\n\t\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\t\tmatcherOut\n\t\t\t\t);\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t\t} else {\n\t\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction matcherFromTokens( tokens ) {\n\t\tvar checkContext, matcher, j,\n\t\t\tlen = tokens.length,\n\t\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\t\ti = leadingRelative ? 1 : 0,\n\t\n\t\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\t\treturn elem === checkContext;\n\t\t\t}, implicitRelative, true ),\n\t\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t\t}, implicitRelative, true ),\n\t\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\t\tcheckContext = null;\n\t\t\t\treturn ret;\n\t\t\t} ];\n\t\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t\t} else {\n\t\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\t\n\t\t\t\t// Return special upon seeing a positional matcher\n\t\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\t\tj = ++i;\n\t\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn setMatcher(\n\t\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\t\tmatcher,\n\t\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tmatchers.push( matcher );\n\t\t\t}\n\t\t}\n\t\n\t\treturn elementMatcher( matchers );\n\t}\n\t\n\tfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\t\tvar bySet = setMatchers.length > 0,\n\t\t\tbyElement = elementMatchers.length > 0,\n\t\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\t\tvar elem, j, matcher,\n\t\t\t\t\tmatchedCount = 0,\n\t\t\t\t\ti = \"0\",\n\t\t\t\t\tunmatched = seed && [],\n\t\t\t\t\tsetMatched = [],\n\t\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\t\tlen = elems.length;\n\t\n\t\t\t\tif ( outermost ) {\n\t\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t\t}\n\t\n\t\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t\t// Support: IE<9, Safari\n\t\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\t\tif ( bySet ) {\n\t\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t\t// makes the latter nonnegative.\n\t\t\t\tmatchedCount += i;\n\t\n\t\t\t\t// Apply set filters to unmatched elements\n\t\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t\t// no element matchers and no seed.\n\t\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t\t// numerically zero.\n\t\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Add matches to results\n\t\t\t\t\tpush.apply( results, setMatched );\n\t\n\t\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\t\n\t\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Override manipulation of globals by nested matchers\n\t\t\t\tif ( outermost ) {\n\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\toutermostContext = contextBackup;\n\t\t\t\t}\n\t\n\t\t\t\treturn unmatched;\n\t\t\t};\n\t\n\t\treturn bySet ?\n\t\t\tmarkFunction( superMatcher ) :\n\t\t\tsuperMatcher;\n\t}\n\t\n\tcompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\t\tvar i,\n\t\t\tsetMatchers = [],\n\t\t\telementMatchers = [],\n\t\t\tcached = compilerCache[ selector + \" \" ];\n\t\n\t\tif ( !cached ) {\n\t\t\t// Generate a function of recursive functions that can be used to check each element\n\t\t\tif ( !match ) {\n\t\t\t\tmatch = tokenize( selector );\n\t\t\t}\n\t\t\ti = match.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\t\tif ( cached[ expando ] ) {\n\t\t\t\t\tsetMatchers.push( cached );\n\t\t\t\t} else {\n\t\t\t\t\telementMatchers.push( cached );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cache the compiled function\n\t\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\t\n\t\t\t// Save selector and tokenization\n\t\t\tcached.selector = selector;\n\t\t}\n\t\treturn cached;\n\t};\n\t\n\t/**\n\t * A low-level selection function that works with Sizzle's compiled\n\t *  selector functions\n\t * @param {String|Function} selector A selector or a pre-compiled\n\t *  selector function built with Sizzle.compile\n\t * @param {Element} context\n\t * @param {Array} [results]\n\t * @param {Array} [seed] A set of elements to match against\n\t */\n\tselect = Sizzle.select = function( selector, context, results, seed ) {\n\t\tvar i, tokens, token, type, find,\n\t\t\tcompiled = typeof selector === \"function\" && selector,\n\t\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\t\n\t\tresults = results || [];\n\t\n\t\t// Try to minimize operations if there is only one selector in the list and no seed\n\t\t// (the latter of which guarantees us context)\n\t\tif ( match.length === 1 ) {\n\t\n\t\t\t// Reduce context if the leading compound selector is an ID\n\t\t\ttokens = match[0] = match[0].slice( 0 );\n\t\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\t\n\t\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\treturn results;\n\t\n\t\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t\t} else if ( compiled ) {\n\t\t\t\t\tcontext = context.parentNode;\n\t\t\t\t}\n\t\n\t\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t\t}\n\t\n\t\t\t// Fetch a seed set for right-to-left matching\n\t\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\ttoken = tokens[i];\n\t\n\t\t\t\t// Abort if we hit a combinator\n\t\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\t\tif ( (seed = find(\n\t\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t\t)) ) {\n\t\n\t\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Compile and execute a filtering function if one is not provided\n\t\t// Provide `match` to avoid retokenization if we modified the selector above\n\t\t( compiled || compile( selector, match ) )(\n\t\t\tseed,\n\t\t\tcontext,\n\t\t\t!documentIsHTML,\n\t\t\tresults,\n\t\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t\t);\n\t\treturn results;\n\t};\n\t\n\t// One-time assignments\n\t\n\t// Sort stability\n\tsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\t\n\t// Support: Chrome 14-35+\n\t// Always assume duplicates if they aren't passed to the comparison function\n\tsupport.detectDuplicates = !!hasDuplicate;\n\t\n\t// Initialize against the default document\n\tsetDocument();\n\t\n\t// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n\t// Detached nodes confoundingly follow *each other*\n\tsupport.sortDetached = assert(function( el ) {\n\t\t// Should return 1, but returns 4 (following)\n\t\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n\t});\n\t\n\t// Support: IE<8\n\t// Prevent attribute/property \"interpolation\"\n\t// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\tif ( !assert(function( el ) {\n\t\tel.innerHTML = \"<a href='#'></a>\";\n\t\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n\t}) ) {\n\t\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// Support: IE<9\n\t// Use defaultValue in place of getAttribute(\"value\")\n\tif ( !support.attributes || !assert(function( el ) {\n\t\tel.innerHTML = \"<input/>\";\n\t\tel.firstChild.setAttribute( \"value\", \"\" );\n\t\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n\t}) ) {\n\t\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\t\treturn elem.defaultValue;\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// Support: IE<9\n\t// Use getAttributeNode to fetch booleans when getAttribute lies\n\tif ( !assert(function( el ) {\n\t\treturn el.getAttribute(\"disabled\") == null;\n\t}) ) {\n\t\taddHandle( booleans, function( elem, name, isXML ) {\n\t\t\tvar val;\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t});\n\t}\n\t\n\treturn Sizzle;\n\t\n\t})( window );\n\t\n\t\n\t\n\tjQuery.find = Sizzle;\n\tjQuery.expr = Sizzle.selectors;\n\t\n\t// Deprecated\n\tjQuery.expr[ \":\" ] = jQuery.expr.pseudos;\n\tjQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n\tjQuery.text = Sizzle.getText;\n\tjQuery.isXMLDoc = Sizzle.isXML;\n\tjQuery.contains = Sizzle.contains;\n\tjQuery.escapeSelector = Sizzle.escape;\n\t\n\t\n\t\n\t\n\tvar dir = function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\t\n\t\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t};\n\t\n\t\n\tvar siblings = function( n, elem ) {\n\t\tvar matched = [];\n\t\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\t\n\t\treturn matched;\n\t};\n\t\n\t\n\tvar rneedsContext = jQuery.expr.match.needsContext;\n\t\n\tvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\t\n\t\n\t\n\tvar risSimple = /^.[^:#\\[\\.,]*$/;\n\t\n\t// Implement the identical functionality for filter and not\n\tfunction winnow( elements, qualifier, not ) {\n\t\tif ( jQuery.isFunction( qualifier ) ) {\n\t\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t\t} );\n\t\t}\n\t\n\t\t// Single element\n\t\tif ( qualifier.nodeType ) {\n\t\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\t\treturn ( elem === qualifier ) !== not;\n\t\t\t} );\n\t\t}\n\t\n\t\t// Arraylike of elements (jQuery, arguments, Array)\n\t\tif ( typeof qualifier !== \"string\" ) {\n\t\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t\t} );\n\t\t}\n\t\n\t\t// Simple selector that can be filtered directly, removing non-Elements\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\t\n\t\t// Complex selector, compare the two sets, removing non-Elements\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;\n\t\t} );\n\t}\n\t\n\tjQuery.filter = function( expr, elems, not ) {\n\t\tvar elem = elems[ 0 ];\n\t\n\t\tif ( not ) {\n\t\t\texpr = \":not(\" + expr + \")\";\n\t\t}\n\t\n\t\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t\t}\n\t\n\t\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tfind: function( selector ) {\n\t\t\tvar i, ret,\n\t\t\t\tlen = this.length,\n\t\t\t\tself = this;\n\t\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) );\n\t\t\t}\n\t\n\t\t\tret = this.pushStack( [] );\n\t\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t\t}\n\t\n\t\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t\t},\n\t\tfilter: function( selector ) {\n\t\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t\t},\n\t\tnot: function( selector ) {\n\t\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t\t},\n\t\tis: function( selector ) {\n\t\t\treturn !!winnow(\n\t\t\t\tthis,\n\t\n\t\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\t\tjQuery( selector ) :\n\t\t\t\t\tselector || [],\n\t\t\t\tfalse\n\t\t\t).length;\n\t\t}\n\t} );\n\t\n\t\n\t// Initialize a jQuery object\n\t\n\t\n\t// A central reference to the root jQuery(document)\n\tvar rootjQuery,\n\t\n\t\t// A simple way to check for HTML strings\n\t\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t\t// Strict HTML recognition (#11290: must start with <)\n\t\t// Shortcut simple #id case for speed\n\t\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\t\n\t\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\t\tvar match, elem;\n\t\n\t\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\t\tif ( !selector ) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t// Method init() accepts an alternate rootjQuery\n\t\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\t\troot = root || rootjQuery;\n\t\n\t\t\t// Handle HTML strings\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\t\tselector.length >= 3 ) {\n\t\n\t\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\t\tmatch = [ null, selector, null ];\n\t\n\t\t\t\t} else {\n\t\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t\t}\n\t\n\t\t\t\t// Match html or make sure no context is specified for #id\n\t\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\t\n\t\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\t\n\t\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t) );\n\t\n\t\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\t\tfor ( match in context ) {\n\t\n\t\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\t\n\t\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn this;\n\t\n\t\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\t\n\t\t\t\t\t\tif ( elem ) {\n\t\n\t\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\n\t\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\t\treturn ( context || root ).find( selector );\n\t\n\t\t\t\t// HANDLE: $(expr, context)\n\t\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t\t} else {\n\t\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t\t}\n\t\n\t\t\t// HANDLE: $(DOMElement)\n\t\t\t} else if ( selector.nodeType ) {\n\t\t\t\tthis[ 0 ] = selector;\n\t\t\t\tthis.length = 1;\n\t\t\t\treturn this;\n\t\n\t\t\t// HANDLE: $(function)\n\t\t\t// Shortcut for document ready\n\t\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\t\treturn root.ready !== undefined ?\n\t\t\t\t\troot.ready( selector ) :\n\t\n\t\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\t\tselector( jQuery );\n\t\t\t}\n\t\n\t\t\treturn jQuery.makeArray( selector, this );\n\t\t};\n\t\n\t// Give the init function the jQuery prototype for later instantiation\n\tinit.prototype = jQuery.fn;\n\t\n\t// Initialize central reference\n\trootjQuery = jQuery( document );\n\t\n\t\n\tvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t\n\t\t// Methods guaranteed to produce a unique set when starting from a unique set\n\t\tguaranteedUnique = {\n\t\t\tchildren: true,\n\t\t\tcontents: true,\n\t\t\tnext: true,\n\t\t\tprev: true\n\t\t};\n\t\n\tjQuery.fn.extend( {\n\t\thas: function( target ) {\n\t\t\tvar targets = jQuery( target, this ),\n\t\t\t\tl = targets.length;\n\t\n\t\t\treturn this.filter( function() {\n\t\t\t\tvar i = 0;\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tclosest: function( selectors, context ) {\n\t\t\tvar cur,\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length,\n\t\t\t\tmatched = [],\n\t\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\t\n\t\t\t// Positional selectors never match, since there's no _selection_ context\n\t\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\t\n\t\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\t\n\t\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\t\n\t\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t\t},\n\t\n\t\t// Determine the position of an element within the set\n\t\tindex: function( elem ) {\n\t\n\t\t\t// No argument, return index in parent\n\t\t\tif ( !elem ) {\n\t\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t\t}\n\t\n\t\t\t// Index in selector\n\t\t\tif ( typeof elem === \"string\" ) {\n\t\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t\t}\n\t\n\t\t\t// Locate the position of the desired element\n\t\t\treturn indexOf.call( this,\n\t\n\t\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t\t);\n\t\t},\n\t\n\t\tadd: function( selector, context ) {\n\t\t\treturn this.pushStack(\n\t\t\t\tjQuery.uniqueSort(\n\t\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\n\t\taddBack: function( selector ) {\n\t\t\treturn this.add( selector == null ?\n\t\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t\t);\n\t\t}\n\t} );\n\t\n\tfunction sibling( cur, dir ) {\n\t\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\t\treturn cur;\n\t}\n\t\n\tjQuery.each( {\n\t\tparent: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t\t},\n\t\tparents: function( elem ) {\n\t\t\treturn dir( elem, \"parentNode\" );\n\t\t},\n\t\tparentsUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"parentNode\", until );\n\t\t},\n\t\tnext: function( elem ) {\n\t\t\treturn sibling( elem, \"nextSibling\" );\n\t\t},\n\t\tprev: function( elem ) {\n\t\t\treturn sibling( elem, \"previousSibling\" );\n\t\t},\n\t\tnextAll: function( elem ) {\n\t\t\treturn dir( elem, \"nextSibling\" );\n\t\t},\n\t\tprevAll: function( elem ) {\n\t\t\treturn dir( elem, \"previousSibling\" );\n\t\t},\n\t\tnextUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"nextSibling\", until );\n\t\t},\n\t\tprevUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"previousSibling\", until );\n\t\t},\n\t\tsiblings: function( elem ) {\n\t\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t\t},\n\t\tchildren: function( elem ) {\n\t\t\treturn siblings( elem.firstChild );\n\t\t},\n\t\tcontents: function( elem ) {\n\t\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t\t}\n\t}, function( name, fn ) {\n\t\tjQuery.fn[ name ] = function( until, selector ) {\n\t\t\tvar matched = jQuery.map( this, fn, until );\n\t\n\t\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\t\tselector = until;\n\t\t\t}\n\t\n\t\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t\t}\n\t\n\t\t\tif ( this.length > 1 ) {\n\t\n\t\t\t\t// Remove duplicates\n\t\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t\t}\n\t\n\t\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\t\tmatched.reverse();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( matched );\n\t\t};\n\t} );\n\tvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\t\n\t\n\t\n\t// Convert String-formatted options into Object-formatted ones\n\tfunction createOptions( options ) {\n\t\tvar object = {};\n\t\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\t\tobject[ flag ] = true;\n\t\t} );\n\t\treturn object;\n\t}\n\t\n\t/*\n\t * Create a callback list using the following parameters:\n\t *\n\t *\toptions: an optional list of space-separated options that will change how\n\t *\t\t\tthe callback list behaves or a more traditional option object\n\t *\n\t * By default a callback list will act like an event callback list and can be\n\t * \"fired\" multiple times.\n\t *\n\t * Possible options:\n\t *\n\t *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n\t *\n\t *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n\t *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n\t *\t\t\t\t\tvalues (like a Deferred)\n\t *\n\t *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n\t *\n\t *\tstopOnFalse:\tinterrupt callings when a callback returns false\n\t *\n\t */\n\tjQuery.Callbacks = function( options ) {\n\t\n\t\t// Convert options from String-formatted to Object-formatted if needed\n\t\t// (we check in cache first)\n\t\toptions = typeof options === \"string\" ?\n\t\t\tcreateOptions( options ) :\n\t\t\tjQuery.extend( {}, options );\n\t\n\t\tvar // Flag to know if list is currently firing\n\t\t\tfiring,\n\t\n\t\t\t// Last fire value for non-forgettable lists\n\t\t\tmemory,\n\t\n\t\t\t// Flag to know if list was already fired\n\t\t\tfired,\n\t\n\t\t\t// Flag to prevent firing\n\t\t\tlocked,\n\t\n\t\t\t// Actual callback list\n\t\t\tlist = [],\n\t\n\t\t\t// Queue of execution data for repeatable lists\n\t\t\tqueue = [],\n\t\n\t\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\t\tfiringIndex = -1,\n\t\n\t\t\t// Fire callbacks\n\t\t\tfire = function() {\n\t\n\t\t\t\t// Enforce single-firing\n\t\t\t\tlocked = options.once;\n\t\n\t\t\t\t// Execute callbacks for all pending executions,\n\t\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\t\tfired = firing = true;\n\t\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\t\tmemory = queue.shift();\n\t\t\t\t\twhile ( ++firingIndex < list.length ) {\n\t\n\t\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\t\toptions.stopOnFalse ) {\n\t\n\t\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Forget the data if we're done with it\n\t\t\t\tif ( !options.memory ) {\n\t\t\t\t\tmemory = false;\n\t\t\t\t}\n\t\n\t\t\t\tfiring = false;\n\t\n\t\t\t\t// Clean up if we're done firing for good\n\t\t\t\tif ( locked ) {\n\t\n\t\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\t\tif ( memory ) {\n\t\t\t\t\t\tlist = [];\n\t\n\t\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// Actual Callbacks object\n\t\t\tself = {\n\t\n\t\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\t\tadd: function() {\n\t\t\t\t\tif ( list ) {\n\t\n\t\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\t\n\t\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} )( arguments );\n\t\n\t\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\t\tfire();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Remove a callback from the list\n\t\t\t\tremove: function() {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Check if a given callback is in the list.\n\t\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\t\thas: function( fn ) {\n\t\t\t\t\treturn fn ?\n\t\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\t\tlist.length > 0;\n\t\t\t\t},\n\t\n\t\t\t\t// Remove all callbacks from the list\n\t\t\t\tempty: function() {\n\t\t\t\t\tif ( list ) {\n\t\t\t\t\t\tlist = [];\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Disable .fire and .add\n\t\t\t\t// Abort any current/pending executions\n\t\t\t\t// Clear all callbacks and values\n\t\t\t\tdisable: function() {\n\t\t\t\t\tlocked = queue = [];\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tdisabled: function() {\n\t\t\t\t\treturn !list;\n\t\t\t\t},\n\t\n\t\t\t\t// Disable .fire\n\t\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t\t// Abort any pending executions\n\t\t\t\tlock: function() {\n\t\t\t\t\tlocked = queue = [];\n\t\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tlocked: function() {\n\t\t\t\t\treturn !!locked;\n\t\t\t\t},\n\t\n\t\t\t\t// Call all callbacks with the given context and arguments\n\t\t\t\tfireWith: function( context, args ) {\n\t\t\t\t\tif ( !locked ) {\n\t\t\t\t\t\targs = args || [];\n\t\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\t\tqueue.push( args );\n\t\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\t\tfire();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Call all the callbacks with the given arguments\n\t\t\t\tfire: function() {\n\t\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// To know if the callbacks have already been called at least once\n\t\t\t\tfired: function() {\n\t\t\t\t\treturn !!fired;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\treturn self;\n\t};\n\t\n\t\n\tfunction Identity( v ) {\n\t\treturn v;\n\t}\n\tfunction Thrower( ex ) {\n\t\tthrow ex;\n\t}\n\t\n\tfunction adoptValue( value, resolve, reject ) {\n\t\tvar method;\n\t\n\t\ttry {\n\t\n\t\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\t\tif ( value && jQuery.isFunction( ( method = value.promise ) ) ) {\n\t\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\t\n\t\t\t// Other thenables\n\t\t\t} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {\n\t\t\t\tmethod.call( value, resolve, reject );\n\t\n\t\t\t// Other non-thenables\n\t\t\t} else {\n\t\n\t\t\t\t// Support: Android 4.0 only\n\t\t\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\t\t\tresolve.call( undefined, value );\n\t\t\t}\n\t\n\t\t// For Promises/A+, convert exceptions into rejections\n\t\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t\t// Deferred#then to conditionally suppress rejection.\n\t\t} catch ( value ) {\n\t\n\t\t\t// Support: Android 4.0 only\n\t\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\t\treject.call( undefined, value );\n\t\t}\n\t}\n\t\n\tjQuery.extend( {\n\t\n\t\tDeferred: function( func ) {\n\t\t\tvar tuples = [\n\t\n\t\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t\t],\n\t\t\t\tstate = \"pending\",\n\t\t\t\tpromise = {\n\t\t\t\t\tstate: function() {\n\t\t\t\t\t\treturn state;\n\t\t\t\t\t},\n\t\t\t\t\talways: function() {\n\t\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Keep pipe for back-compat\n\t\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\t\tvar fns = arguments;\n\t\n\t\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\n\t\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\t\n\t\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tfns = null;\n\t\t\t\t\t\t} ).promise();\n\t\t\t\t\t},\n\t\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\t\tvar returned, then;\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\t\tthen = returned &&\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\t\treturned.then;\n\t\n\t\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\t\tif ( jQuery.isFunction( then ) ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\t\n\t\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\n\t\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\t\tjQuery.isFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\t\tjQuery.isFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\t\tjQuery.isFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ).promise();\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Get a promise for this deferred\n\t\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdeferred = {};\n\t\n\t\t\t// Add list-specific methods\n\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\tvar list = tuple[ 2 ],\n\t\t\t\t\tstateString = tuple[ 5 ];\n\t\n\t\t\t\t// promise.progress = list.add\n\t\t\t\t// promise.done = list.add\n\t\t\t\t// promise.fail = list.add\n\t\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\t\n\t\t\t\t// Handle state\n\t\t\t\tif ( stateString ) {\n\t\t\t\t\tlist.add(\n\t\t\t\t\t\tfunction() {\n\t\n\t\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\t\n\t\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\t\ttuples[ 0 ][ 2 ].lock\n\t\t\t\t\t);\n\t\t\t\t}\n\t\n\t\t\t\t// progress_handlers.fire\n\t\t\t\t// fulfilled_handlers.fire\n\t\t\t\t// rejected_handlers.fire\n\t\t\t\tlist.add( tuple[ 3 ].fire );\n\t\n\t\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\n\t\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t\t} );\n\t\n\t\t\t// Make the deferred a promise\n\t\t\tpromise.promise( deferred );\n\t\n\t\t\t// Call given func if any\n\t\t\tif ( func ) {\n\t\t\t\tfunc.call( deferred, deferred );\n\t\t\t}\n\t\n\t\t\t// All done!\n\t\t\treturn deferred;\n\t\t},\n\t\n\t\t// Deferred helper\n\t\twhen: function( singleValue ) {\n\t\t\tvar\n\t\n\t\t\t\t// count of uncompleted subordinates\n\t\t\t\tremaining = arguments.length,\n\t\n\t\t\t\t// count of unprocessed arguments\n\t\t\t\ti = remaining,\n\t\n\t\t\t\t// subordinate fulfillment data\n\t\t\t\tresolveContexts = Array( i ),\n\t\t\t\tresolveValues = slice.call( arguments ),\n\t\n\t\t\t\t// the master Deferred\n\t\t\t\tmaster = jQuery.Deferred(),\n\t\n\t\t\t\t// subordinate callback factory\n\t\t\t\tupdateFunc = function( i ) {\n\t\t\t\t\treturn function( value ) {\n\t\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\t\n\t\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\t\tif ( remaining <= 1 ) {\n\t\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );\n\t\n\t\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\t\tjQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\t\n\t\t\t\t\treturn master.then();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\t\twhile ( i-- ) {\n\t\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t\t}\n\t\n\t\t\treturn master.promise();\n\t\t}\n\t} );\n\t\n\t\n\t// These usually indicate a programmer mistake during development,\n\t// warn about them ASAP rather than swallowing them by default.\n\tvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\t\n\tjQuery.Deferred.exceptionHook = function( error, stack ) {\n\t\n\t\t// Support: IE 8 - 9 only\n\t\t// Console exists when dev tools are open, which can happen at any time\n\t\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t\t}\n\t};\n\t\n\t\n\t\n\t\n\tjQuery.readyException = function( error ) {\n\t\twindow.setTimeout( function() {\n\t\t\tthrow error;\n\t\t} );\n\t};\n\t\n\t\n\t\n\t\n\t// The deferred used on DOM ready\n\tvar readyList = jQuery.Deferred();\n\t\n\tjQuery.fn.ready = function( fn ) {\n\t\n\t\treadyList\n\t\t\t.then( fn )\n\t\n\t\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t\t// happens at the time of error handling instead of callback\n\t\t\t// registration.\n\t\t\t.catch( function( error ) {\n\t\t\t\tjQuery.readyException( error );\n\t\t\t} );\n\t\n\t\treturn this;\n\t};\n\t\n\tjQuery.extend( {\n\t\n\t\t// Is the DOM ready to be used? Set to true once it occurs.\n\t\tisReady: false,\n\t\n\t\t// A counter to track how many items to wait for before\n\t\t// the ready event fires. See #6781\n\t\treadyWait: 1,\n\t\n\t\t// Hold (or release) the ready event\n\t\tholdReady: function( hold ) {\n\t\t\tif ( hold ) {\n\t\t\t\tjQuery.readyWait++;\n\t\t\t} else {\n\t\t\t\tjQuery.ready( true );\n\t\t\t}\n\t\t},\n\t\n\t\t// Handle when the DOM is ready\n\t\tready: function( wait ) {\n\t\n\t\t\t// Abort if there are pending holds or we're already ready\n\t\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\n\t\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If there are functions bound, to execute\n\t\t\treadyList.resolveWith( document, [ jQuery ] );\n\t\t}\n\t} );\n\t\n\tjQuery.ready.then = readyList.then;\n\t\n\t// The ready event handler and self cleanup method\n\tfunction completed() {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\t\twindow.removeEventListener( \"load\", completed );\n\t\tjQuery.ready();\n\t}\n\t\n\t// Catch cases where $(document).ready() is called\n\t// after the browser event has already occurred.\n\t// Support: IE <=9 - 10 only\n\t// Older IE sometimes signals \"interactive\" too soon\n\tif ( document.readyState === \"complete\" ||\n\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\t\n\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\twindow.setTimeout( jQuery.ready );\n\t\n\t} else {\n\t\n\t\t// Use the handy event callback\n\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\t\n\t\t// A fallback to window.onload, that will always work\n\t\twindow.addEventListener( \"load\", completed );\n\t}\n\t\n\t\n\t\n\t\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\tvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\t\tvar i = 0,\n\t\t\tlen = elems.length,\n\t\t\tbulk = key == null;\n\t\n\t\t// Sets many values\n\t\tif ( jQuery.type( key ) === \"object\" ) {\n\t\t\tchainable = true;\n\t\t\tfor ( i in key ) {\n\t\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t\t}\n\t\n\t\t// Sets one value\n\t\t} else if ( value !== undefined ) {\n\t\t\tchainable = true;\n\t\n\t\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\t\traw = true;\n\t\t\t}\n\t\n\t\t\tif ( bulk ) {\n\t\n\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\tif ( raw ) {\n\t\t\t\t\tfn.call( elems, value );\n\t\t\t\t\tfn = null;\n\t\n\t\t\t\t// ...except when executing function values\n\t\t\t\t} else {\n\t\t\t\t\tbulk = fn;\n\t\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( fn ) {\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tfn(\n\t\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif ( chainable ) {\n\t\t\treturn elems;\n\t\t}\n\t\n\t\t// Gets\n\t\tif ( bulk ) {\n\t\t\treturn fn.call( elems );\n\t\t}\n\t\n\t\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n\t};\n\tvar acceptData = function( owner ) {\n\t\n\t\t// Accepts only:\n\t\t//  - Node\n\t\t//    - Node.ELEMENT_NODE\n\t\t//    - Node.DOCUMENT_NODE\n\t\t//  - Object\n\t\t//    - Any\n\t\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n\t};\n\t\n\t\n\t\n\t\n\tfunction Data() {\n\t\tthis.expando = jQuery.expando + Data.uid++;\n\t}\n\t\n\tData.uid = 1;\n\t\n\tData.prototype = {\n\t\n\t\tcache: function( owner ) {\n\t\n\t\t\t// Check if the owner object already has a cache\n\t\t\tvar value = owner[ this.expando ];\n\t\n\t\t\t// If not, create one\n\t\t\tif ( !value ) {\n\t\t\t\tvalue = {};\n\t\n\t\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t\t// but we should not, see #8335.\n\t\t\t\t// Always return an empty object.\n\t\t\t\tif ( acceptData( owner ) ) {\n\t\n\t\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t\t// use plain assignment\n\t\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\t\towner[ this.expando ] = value;\n\t\n\t\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t\t// deleted when data is removed\n\t\t\t\t\t} else {\n\t\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn value;\n\t\t},\n\t\tset: function( owner, data, value ) {\n\t\t\tvar prop,\n\t\t\t\tcache = this.cache( owner );\n\t\n\t\t\t// Handle: [ owner, key, value ] args\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\tif ( typeof data === \"string\" ) {\n\t\t\t\tcache[ jQuery.camelCase( data ) ] = value;\n\t\n\t\t\t// Handle: [ owner, { properties } ] args\n\t\t\t} else {\n\t\n\t\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cache;\n\t\t},\n\t\tget: function( owner, key ) {\n\t\t\treturn key === undefined ?\n\t\t\t\tthis.cache( owner ) :\n\t\n\t\t\t\t// Always use camelCase key (gh-2257)\n\t\t\t\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\n\t\t},\n\t\taccess: function( owner, key, value ) {\n\t\n\t\t\t// In cases where either:\n\t\t\t//\n\t\t\t//   1. No key was specified\n\t\t\t//   2. A string key was specified, but no value provided\n\t\t\t//\n\t\t\t// Take the \"read\" path and allow the get method to determine\n\t\t\t// which value to return, respectively either:\n\t\t\t//\n\t\t\t//   1. The entire cache object\n\t\t\t//   2. The data stored at the key\n\t\t\t//\n\t\t\tif ( key === undefined ||\n\t\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\t\n\t\t\t\treturn this.get( owner, key );\n\t\t\t}\n\t\n\t\t\t// When the key is not a string, or both a key and value\n\t\t\t// are specified, set or extend (existing objects) with either:\n\t\t\t//\n\t\t\t//   1. An object of properties\n\t\t\t//   2. A key and value\n\t\t\t//\n\t\t\tthis.set( owner, key, value );\n\t\n\t\t\t// Since the \"set\" path can have two possible entry points\n\t\t\t// return the expected data based on which path was taken[*]\n\t\t\treturn value !== undefined ? value : key;\n\t\t},\n\t\tremove: function( owner, key ) {\n\t\t\tvar i,\n\t\t\t\tcache = owner[ this.expando ];\n\t\n\t\t\tif ( cache === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( key !== undefined ) {\n\t\n\t\t\t\t// Support array or space separated string of keys\n\t\t\t\tif ( jQuery.isArray( key ) ) {\n\t\n\t\t\t\t\t// If key is an array of keys...\n\t\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\t\tkey = key.map( jQuery.camelCase );\n\t\t\t\t} else {\n\t\t\t\t\tkey = jQuery.camelCase( key );\n\t\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tkey = key in cache ?\n\t\t\t\t\t\t[ key ] :\n\t\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t\t}\n\t\n\t\t\t\ti = key.length;\n\t\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Remove the expando if there's no more data\n\t\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\t\n\t\t\t\t// Support: Chrome <=35 - 45\n\t\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tdelete owner[ this.expando ];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thasData: function( owner ) {\n\t\t\tvar cache = owner[ this.expando ];\n\t\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t\t}\n\t};\n\tvar dataPriv = new Data();\n\t\n\tvar dataUser = new Data();\n\t\n\t\n\t\n\t//\tImplementation Summary\n\t//\n\t//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t//\t2. Improve the module's maintainability by reducing the storage\n\t//\t\tpaths to a single mechanism.\n\t//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\t\n\tvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\t\trmultiDash = /[A-Z]/g;\n\t\n\tfunction getData( data ) {\n\t\tif ( data === \"true\" ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( data === \"false\" ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif ( data === \"null\" ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// Only convert to a number if it doesn't change the string\n\t\tif ( data === +data + \"\" ) {\n\t\t\treturn +data;\n\t\t}\n\t\n\t\tif ( rbrace.test( data ) ) {\n\t\t\treturn JSON.parse( data );\n\t\t}\n\t\n\t\treturn data;\n\t}\n\t\n\tfunction dataAttr( elem, key, data ) {\n\t\tvar name;\n\t\n\t\t// If nothing was found internally, try to fetch any\n\t\t// data from the HTML5 data-* attribute\n\t\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\t\tdata = elem.getAttribute( name );\n\t\n\t\t\tif ( typeof data === \"string\" ) {\n\t\t\t\ttry {\n\t\t\t\t\tdata = getData( data );\n\t\t\t\t} catch ( e ) {}\n\t\n\t\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\t\tdataUser.set( elem, key, data );\n\t\t\t} else {\n\t\t\t\tdata = undefined;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\t\n\tjQuery.extend( {\n\t\thasData: function( elem ) {\n\t\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t\t},\n\t\n\t\tdata: function( elem, name, data ) {\n\t\t\treturn dataUser.access( elem, name, data );\n\t\t},\n\t\n\t\tremoveData: function( elem, name ) {\n\t\t\tdataUser.remove( elem, name );\n\t\t},\n\t\n\t\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t\t// with direct calls to dataPriv methods, these can be deprecated.\n\t\t_data: function( elem, name, data ) {\n\t\t\treturn dataPriv.access( elem, name, data );\n\t\t},\n\t\n\t\t_removeData: function( elem, name ) {\n\t\t\tdataPriv.remove( elem, name );\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tdata: function( key, value ) {\n\t\t\tvar i, name, data,\n\t\t\t\telem = this[ 0 ],\n\t\t\t\tattrs = elem && elem.attributes;\n\t\n\t\t\t// Gets all values\n\t\t\tif ( key === undefined ) {\n\t\t\t\tif ( this.length ) {\n\t\t\t\t\tdata = dataUser.get( elem );\n\t\n\t\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\t\ti = attrs.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\n\t\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t}\n\t\n\t\t\t// Sets multiple values\n\t\t\tif ( typeof key === \"object\" ) {\n\t\t\t\treturn this.each( function() {\n\t\t\t\t\tdataUser.set( this, key );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn access( this, function( value ) {\n\t\t\t\tvar data;\n\t\n\t\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\t\tif ( elem && value === undefined ) {\n\t\n\t\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Set the data...\n\t\t\t\tthis.each( function() {\n\t\n\t\t\t\t\t// We always store the camelCased key\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t} );\n\t\t\t}, null, value, arguments.length > 1, null, true );\n\t\t},\n\t\n\t\tremoveData: function( key ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.remove( this, key );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.extend( {\n\t\tqueue: function( elem, type, data ) {\n\t\t\tvar queue;\n\t\n\t\t\tif ( elem ) {\n\t\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\t\tqueue = dataPriv.get( elem, type );\n\t\n\t\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\t\tif ( data ) {\n\t\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tqueue.push( data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn queue || [];\n\t\t\t}\n\t\t},\n\t\n\t\tdequeue: function( elem, type ) {\n\t\t\ttype = type || \"fx\";\n\t\n\t\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\t\tstartLength = queue.length,\n\t\t\t\tfn = queue.shift(),\n\t\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\t\tnext = function() {\n\t\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t\t};\n\t\n\t\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\t\tif ( fn === \"inprogress\" ) {\n\t\t\t\tfn = queue.shift();\n\t\t\t\tstartLength--;\n\t\t\t}\n\t\n\t\t\tif ( fn ) {\n\t\n\t\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t\t// automatically dequeued\n\t\t\t\tif ( type === \"fx\" ) {\n\t\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Clear up the last queue stop function\n\t\t\t\tdelete hooks.stop;\n\t\t\t\tfn.call( elem, next, hooks );\n\t\t\t}\n\t\n\t\t\tif ( !startLength && hooks ) {\n\t\t\t\thooks.empty.fire();\n\t\t\t}\n\t\t},\n\t\n\t\t// Not public - generate a queueHooks object, or return the current one\n\t\t_queueHooks: function( elem, type ) {\n\t\t\tvar key = type + \"queueHooks\";\n\t\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t\t} )\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tqueue: function( type, data ) {\n\t\t\tvar setter = 2;\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tdata = type;\n\t\t\t\ttype = \"fx\";\n\t\t\t\tsetter--;\n\t\t\t}\n\t\n\t\t\tif ( arguments.length < setter ) {\n\t\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t\t}\n\t\n\t\t\treturn data === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function() {\n\t\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\t\n\t\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\t\tjQuery._queueHooks( this, type );\n\t\n\t\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t},\n\t\tdequeue: function( type ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t} );\n\t\t},\n\t\tclearQueue: function( type ) {\n\t\t\treturn this.queue( type || \"fx\", [] );\n\t\t},\n\t\n\t\t// Get a promise resolved when queues of a certain type\n\t\t// are emptied (fx is the type by default)\n\t\tpromise: function( type, obj ) {\n\t\t\tvar tmp,\n\t\t\t\tcount = 1,\n\t\t\t\tdefer = jQuery.Deferred(),\n\t\t\t\telements = this,\n\t\t\t\ti = this.length,\n\t\t\t\tresolve = function() {\n\t\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tobj = type;\n\t\t\t\ttype = undefined;\n\t\t\t}\n\t\t\ttype = type || \"fx\";\n\t\n\t\t\twhile ( i-- ) {\n\t\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\t\tcount++;\n\t\t\t\t\ttmp.empty.add( resolve );\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolve();\n\t\t\treturn defer.promise( obj );\n\t\t}\n\t} );\n\tvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\t\n\tvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\t\n\t\n\tvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\t\n\tvar isHiddenWithinTree = function( elem, el ) {\n\t\n\t\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t\t// in that case, element will be second argument\n\t\t\telem = el || elem;\n\t\n\t\t\t// Inline style trumps all\n\t\t\treturn elem.style.display === \"none\" ||\n\t\t\t\telem.style.display === \"\" &&\n\t\n\t\t\t\t// Otherwise, check computed style\n\t\t\t\t// Support: Firefox <=43 - 45\n\t\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t\t// in the document.\n\t\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\t\n\t\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t\t};\n\t\n\tvar swap = function( elem, options, callback, args ) {\n\t\tvar ret, name,\n\t\t\told = {};\n\t\n\t\t// Remember the old values, and insert the new ones\n\t\tfor ( name in options ) {\n\t\t\told[ name ] = elem.style[ name ];\n\t\t\telem.style[ name ] = options[ name ];\n\t\t}\n\t\n\t\tret = callback.apply( elem, args || [] );\n\t\n\t\t// Revert the old values\n\t\tfor ( name in options ) {\n\t\t\telem.style[ name ] = old[ name ];\n\t\t}\n\t\n\t\treturn ret;\n\t};\n\t\n\t\n\t\n\t\n\tfunction adjustCSS( elem, prop, valueParts, tween ) {\n\t\tvar adjusted,\n\t\t\tscale = 1,\n\t\t\tmaxIterations = 20,\n\t\t\tcurrentValue = tween ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn tween.cur();\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t\t},\n\t\t\tinitial = currentValue(),\n\t\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\t\n\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\t\n\t\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\t\n\t\t\t// Trust units reported by jQuery.css\n\t\t\tunit = unit || initialInUnit[ 3 ];\n\t\n\t\t\t// Make sure we update the tween properties later on\n\t\t\tvalueParts = valueParts || [];\n\t\n\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\tinitialInUnit = +initial || 1;\n\t\n\t\t\tdo {\n\t\n\t\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\t\tscale = scale || \".5\";\n\t\n\t\t\t\t// Adjust and apply\n\t\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\n\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t\t} while (\n\t\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t\t);\n\t\t}\n\t\n\t\tif ( valueParts ) {\n\t\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\t\n\t\t\t// Apply relative offset (+=/-=) if specified\n\t\t\tadjusted = valueParts[ 1 ] ?\n\t\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t\t+valueParts[ 2 ];\n\t\t\tif ( tween ) {\n\t\t\t\ttween.unit = unit;\n\t\t\t\ttween.start = initialInUnit;\n\t\t\t\ttween.end = adjusted;\n\t\t\t}\n\t\t}\n\t\treturn adjusted;\n\t}\n\t\n\t\n\tvar defaultDisplayMap = {};\n\t\n\tfunction getDefaultDisplay( elem ) {\n\t\tvar temp,\n\t\t\tdoc = elem.ownerDocument,\n\t\t\tnodeName = elem.nodeName,\n\t\t\tdisplay = defaultDisplayMap[ nodeName ];\n\t\n\t\tif ( display ) {\n\t\t\treturn display;\n\t\t}\n\t\n\t\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\t\tdisplay = jQuery.css( temp, \"display\" );\n\t\n\t\ttemp.parentNode.removeChild( temp );\n\t\n\t\tif ( display === \"none\" ) {\n\t\t\tdisplay = \"block\";\n\t\t}\n\t\tdefaultDisplayMap[ nodeName ] = display;\n\t\n\t\treturn display;\n\t}\n\t\n\tfunction showHide( elements, show ) {\n\t\tvar display, elem,\n\t\t\tvalues = [],\n\t\t\tindex = 0,\n\t\t\tlength = elements.length;\n\t\n\t\t// Determine new display value for elements that need to change\n\t\tfor ( ; index < length; index++ ) {\n\t\t\telem = elements[ index ];\n\t\t\tif ( !elem.style ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tdisplay = elem.style.display;\n\t\t\tif ( show ) {\n\t\n\t\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t\t// inline or about-to-be-restored)\n\t\t\t\tif ( display === \"none\" ) {\n\t\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( display !== \"none\" ) {\n\t\t\t\t\tvalues[ index ] = \"none\";\n\t\n\t\t\t\t\t// Remember what we're overwriting\n\t\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Set the display of the elements in a second loop to avoid constant reflow\n\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\tif ( values[ index ] != null ) {\n\t\t\t\telements[ index ].style.display = values[ index ];\n\t\t\t}\n\t\t}\n\t\n\t\treturn elements;\n\t}\n\t\n\tjQuery.fn.extend( {\n\t\tshow: function() {\n\t\t\treturn showHide( this, true );\n\t\t},\n\t\thide: function() {\n\t\t\treturn showHide( this );\n\t\t},\n\t\ttoggle: function( state ) {\n\t\t\tif ( typeof state === \"boolean\" ) {\n\t\t\t\treturn state ? this.show() : this.hide();\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\t\tjQuery( this ).show();\n\t\t\t\t} else {\n\t\t\t\t\tjQuery( this ).hide();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n\tvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\t\n\tvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\t\n\tvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\t\n\t\n\t\n\t// We have to close these tags to support XHTML (#13200)\n\tvar wrapMap = {\n\t\n\t\t// Support: IE <=9 only\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\t\n\t\t// XHTML parsers do not magically insert elements in the\n\t\t// same way that tag soup parsers do. So we cannot shorten\n\t\t// this by omitting <tbody> or other required elements.\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\t\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\t\n\t// Support: IE <=9 only\n\twrapMap.optgroup = wrapMap.option;\n\t\n\twrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n\twrapMap.th = wrapMap.td;\n\t\n\t\n\tfunction getAll( context, tag ) {\n\t\n\t\t// Support: IE <=9 - 11 only\n\t\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\t\tvar ret;\n\t\n\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\tret = context.getElementsByTagName( tag || \"*\" );\n\t\n\t\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\t\tret = context.querySelectorAll( tag || \"*\" );\n\t\n\t\t} else {\n\t\t\tret = [];\n\t\t}\n\t\n\t\tif ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {\n\t\t\treturn jQuery.merge( [ context ], ret );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\t// Mark scripts as having already been evaluated\n\tfunction setGlobalEval( elems, refElements ) {\n\t\tvar i = 0,\n\t\t\tl = elems.length;\n\t\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tdataPriv.set(\n\t\t\t\telems[ i ],\n\t\t\t\t\"globalEval\",\n\t\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t\t);\n\t\t}\n\t}\n\t\n\t\n\tvar rhtml = /<|&#?\\w+;/;\n\t\n\tfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\t\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\t\n\t\t\tif ( elem || elem === 0 ) {\n\t\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\n\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\t\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\t\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\t\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\t\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\t\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\t\n\t\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\t\n\t\ti = 0;\n\t\twhile ( ( elem = nodes[ i++ ] ) ) {\n\t\n\t\t\t// Skip elements already in the context collection (trac-4087)\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\t\tif ( ignored ) {\n\t\t\t\t\tignored.push( elem );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\t\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\t\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\t\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn fragment;\n\t}\n\t\n\t\n\t( function() {\n\t\tvar fragment = document.createDocumentFragment(),\n\t\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\t\tinput = document.createElement( \"input\" );\n\t\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Check state lost if the name is set (#11217)\n\t\t// Support: Windows Web Apps (WWA)\n\t\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\t\tinput.setAttribute( \"type\", \"radio\" );\n\t\tinput.setAttribute( \"checked\", \"checked\" );\n\t\tinput.setAttribute( \"name\", \"t\" );\n\t\n\t\tdiv.appendChild( input );\n\t\n\t\t// Support: Android <=4.1 only\n\t\t// Older WebKit doesn't clone checked state correctly in fragments\n\t\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\t\n\t\t// Support: IE <=11 only\n\t\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\t\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\t\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\t} )();\n\tvar documentElement = document.documentElement;\n\t\n\t\n\t\n\tvar\n\t\trkeyEvent = /^key/,\n\t\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\t\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\t\n\tfunction returnTrue() {\n\t\treturn true;\n\t}\n\t\n\tfunction returnFalse() {\n\t\treturn false;\n\t}\n\t\n\t// Support: IE <=9 only\n\t// See #13393 for more info\n\tfunction safeActiveElement() {\n\t\ttry {\n\t\t\treturn document.activeElement;\n\t\t} catch ( err ) { }\n\t}\n\t\n\tfunction on( elem, types, selector, data, fn, one ) {\n\t\tvar origFn, type;\n\t\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn elem;\n\t\t}\n\t\n\t\tif ( data == null && fn == null ) {\n\t\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn elem;\n\t\t}\n\t\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn elem.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t} );\n\t}\n\t\n\t/*\n\t * Helper functions for managing events -- not part of the public interface.\n\t * Props to Dean Edwards' addEvent library for many of the ideas.\n\t */\n\tjQuery.event = {\n\t\n\t\tglobal: {},\n\t\n\t\tadd: function( elem, types, handler, data, selector ) {\n\t\n\t\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\t\tevents, t, handleObj,\n\t\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\t\telemData = dataPriv.get( elem );\n\t\n\t\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\t\tif ( !elemData ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\t\tif ( handler.handler ) {\n\t\t\t\thandleObjIn = handler;\n\t\t\t\thandler = handleObjIn.handler;\n\t\t\t\tselector = handleObjIn.selector;\n\t\t\t}\n\t\n\t\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\t\tif ( selector ) {\n\t\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t\t}\n\t\n\t\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\t\tif ( !handler.guid ) {\n\t\t\t\thandler.guid = jQuery.guid++;\n\t\t\t}\n\t\n\t\t\t// Init the element's event structure and main handler, if this is the first\n\t\t\tif ( !( events = elemData.events ) ) {\n\t\t\t\tevents = elemData.events = {};\n\t\t\t}\n\t\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\t\teventHandle = elemData.handle = function( e ) {\n\t\n\t\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\t// Handle multiple events separated by a space\n\t\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\t\tt = types.length;\n\t\t\twhile ( t-- ) {\n\t\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\t\ttype = origType = tmp[ 1 ];\n\t\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\t\n\t\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\t\tif ( !type ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\n\t\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\n\t\t\t\t// Update special based on newly reset type\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\n\t\t\t\t// handleObj is passed to all event handlers\n\t\t\t\thandleObj = jQuery.extend( {\n\t\t\t\t\ttype: type,\n\t\t\t\t\torigType: origType,\n\t\t\t\t\tdata: data,\n\t\t\t\t\thandler: handler,\n\t\t\t\t\tguid: handler.guid,\n\t\t\t\t\tselector: selector,\n\t\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t\t}, handleObjIn );\n\t\n\t\t\t\t// Init the event handler queue if we're the first\n\t\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\t\thandlers.delegateCount = 0;\n\t\n\t\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\t\tif ( !special.setup ||\n\t\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\n\t\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif ( special.add ) {\n\t\t\t\t\tspecial.add.call( elem, handleObj );\n\t\n\t\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Add to the element's handler list, delegates in front\n\t\t\t\tif ( selector ) {\n\t\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t\t} else {\n\t\t\t\t\thandlers.push( handleObj );\n\t\t\t\t}\n\t\n\t\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\t\tjQuery.event.global[ type ] = true;\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t// Detach an event or set of events from an element\n\t\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\t\n\t\t\tvar j, origCount, tmp,\n\t\t\t\tevents, t, handleObj,\n\t\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\t\n\t\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Once for each type.namespace in types; type may be omitted\n\t\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\t\tt = types.length;\n\t\t\twhile ( t-- ) {\n\t\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\t\ttype = origType = tmp[ 1 ];\n\t\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\t\n\t\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\t\tif ( !type ) {\n\t\t\t\t\tfor ( type in events ) {\n\t\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\t\thandlers = events[ type ] || [];\n\t\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\t\n\t\t\t\t// Remove matching events\n\t\t\t\torigCount = j = handlers.length;\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\thandleObj = handlers[ j ];\n\t\n\t\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\t\thandlers.splice( j, 1 );\n\t\n\t\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\n\t\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdelete events[ type ];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Remove data and the expando if it's no longer used\n\t\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t\t}\n\t\t},\n\t\n\t\tdispatch: function( nativeEvent ) {\n\t\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tvar event = jQuery.event.fix( nativeEvent );\n\t\n\t\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\t\targs = new Array( arguments.length ),\n\t\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\t\n\t\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\t\targs[ 0 ] = event;\n\t\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i ] = arguments[ i ];\n\t\t\t}\n\t\n\t\t\tevent.delegateTarget = this;\n\t\n\t\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Determine handlers\n\t\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\t\n\t\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\t\ti = 0;\n\t\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\t\tevent.currentTarget = matched.elem;\n\t\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\t\n\t\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\t\n\t\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\t\tevent.data = handleObj.data;\n\t\n\t\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Call the postDispatch hook for the mapped type\n\t\t\tif ( special.postDispatch ) {\n\t\t\t\tspecial.postDispatch.call( this, event );\n\t\t\t}\n\t\n\t\t\treturn event.result;\n\t\t},\n\t\n\t\thandlers: function( event, handlers ) {\n\t\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\t\thandlerQueue = [],\n\t\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\t\tcur = event.target;\n\t\n\t\t\t// Find delegate handlers\n\t\t\tif ( delegateCount &&\n\t\n\t\t\t\t// Support: IE <=9\n\t\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\t\tcur.nodeType &&\n\t\n\t\t\t\t// Support: Firefox <=42\n\t\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t\t// Support: IE 11 only\n\t\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\t\n\t\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\t\n\t\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\t\thandleObj = handlers[ i ];\n\t\n\t\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\t\n\t\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Add the remaining (directly-bound) handlers\n\t\t\tcur = this;\n\t\t\tif ( delegateCount < handlers.length ) {\n\t\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t\t}\n\t\n\t\t\treturn handlerQueue;\n\t\t},\n\t\n\t\taddProp: function( name, hook ) {\n\t\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\n\t\t\t\tget: jQuery.isFunction( hook ) ?\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t\t}\n\t\t\t\t\t} :\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\n\t\t\t\tset: function( value ) {\n\t\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tfix: function( originalEvent ) {\n\t\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\t\toriginalEvent :\n\t\t\t\tnew jQuery.Event( originalEvent );\n\t\t},\n\t\n\t\tspecial: {\n\t\t\tload: {\n\t\n\t\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\t\tnoBubble: true\n\t\t\t},\n\t\t\tfocus: {\n\t\n\t\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdelegateType: \"focusin\"\n\t\t\t},\n\t\t\tblur: {\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdelegateType: \"focusout\"\n\t\t\t},\n\t\t\tclick: {\n\t\n\t\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\t\tthis.click();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t\t_default: function( event ) {\n\t\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tbeforeunload: {\n\t\t\t\tpostDispatch: function( event ) {\n\t\n\t\t\t\t\t// Support: Firefox 20+\n\t\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.removeEvent = function( elem, type, handle ) {\n\t\n\t\t// This \"if\" is needed for plain objects\n\t\tif ( elem.removeEventListener ) {\n\t\t\telem.removeEventListener( type, handle );\n\t\t}\n\t};\n\t\n\tjQuery.Event = function( src, props ) {\n\t\n\t\t// Allow instantiation without the 'new' keyword\n\t\tif ( !( this instanceof jQuery.Event ) ) {\n\t\t\treturn new jQuery.Event( src, props );\n\t\t}\n\t\n\t\t// Event object\n\t\tif ( src && src.type ) {\n\t\t\tthis.originalEvent = src;\n\t\t\tthis.type = src.type;\n\t\n\t\t\t// Events bubbling up the document may have been marked as prevented\n\t\t\t// by a handler lower down the tree; reflect the correct value.\n\t\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\n\t\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\t\tsrc.returnValue === false ?\n\t\t\t\treturnTrue :\n\t\t\t\treturnFalse;\n\t\n\t\t\t// Create target properties\n\t\t\t// Support: Safari <=6 - 7 only\n\t\t\t// Target should not be a text node (#504, #13143)\n\t\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\t\tsrc.target.parentNode :\n\t\t\t\tsrc.target;\n\t\n\t\t\tthis.currentTarget = src.currentTarget;\n\t\t\tthis.relatedTarget = src.relatedTarget;\n\t\n\t\t// Event type\n\t\t} else {\n\t\t\tthis.type = src;\n\t\t}\n\t\n\t\t// Put explicitly provided properties onto the event object\n\t\tif ( props ) {\n\t\t\tjQuery.extend( this, props );\n\t\t}\n\t\n\t\t// Create a timestamp if incoming event doesn't have one\n\t\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\t\n\t\t// Mark it as fixed\n\t\tthis[ jQuery.expando ] = true;\n\t};\n\t\n\t// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n\t// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\tjQuery.Event.prototype = {\n\t\tconstructor: jQuery.Event,\n\t\tisDefaultPrevented: returnFalse,\n\t\tisPropagationStopped: returnFalse,\n\t\tisImmediatePropagationStopped: returnFalse,\n\t\tisSimulated: false,\n\t\n\t\tpreventDefault: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isDefaultPrevented = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\tstopPropagation: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isPropagationStopped = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t},\n\t\tstopImmediatePropagation: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isImmediatePropagationStopped = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t}\n\t\n\t\t\tthis.stopPropagation();\n\t\t}\n\t};\n\t\n\t// Includes all common event props including KeyEvent and MouseEvent specific props\n\tjQuery.each( {\n\t\taltKey: true,\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t\tchangedTouches: true,\n\t\tctrlKey: true,\n\t\tdetail: true,\n\t\teventPhase: true,\n\t\tmetaKey: true,\n\t\tpageX: true,\n\t\tpageY: true,\n\t\tshiftKey: true,\n\t\tview: true,\n\t\t\"char\": true,\n\t\tcharCode: true,\n\t\tkey: true,\n\t\tkeyCode: true,\n\t\tbutton: true,\n\t\tbuttons: true,\n\t\tclientX: true,\n\t\tclientY: true,\n\t\toffsetX: true,\n\t\toffsetY: true,\n\t\tpointerId: true,\n\t\tpointerType: true,\n\t\tscreenX: true,\n\t\tscreenY: true,\n\t\ttargetTouches: true,\n\t\ttoElement: true,\n\t\ttouches: true,\n\t\n\t\twhich: function( event ) {\n\t\t\tvar button = event.button;\n\t\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t\t}\n\t\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\t\tif ( button & 1 ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\tif ( button & 2 ) {\n\t\t\t\t\treturn 3;\n\t\t\t\t}\n\t\n\t\t\t\tif ( button & 4 ) {\n\t\t\t\t\treturn 2;\n\t\t\t\t}\n\t\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\treturn event.which;\n\t\t}\n\t}, jQuery.event.addProp );\n\t\n\t// Create mouseenter/leave events using mouseover/out and event-time checks\n\t// so that event delegation works in jQuery.\n\t// Do the same for pointerenter/pointerleave and pointerover/pointerout\n\t//\n\t// Support: Safari 7 only\n\t// Safari sends mouseenter too often; see:\n\t// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n\t// for the description of the bug (it existed in older Chrome versions as well).\n\tjQuery.each( {\n\t\tmouseenter: \"mouseover\",\n\t\tmouseleave: \"mouseout\",\n\t\tpointerenter: \"pointerover\",\n\t\tpointerleave: \"pointerout\"\n\t}, function( orig, fix ) {\n\t\tjQuery.event.special[ orig ] = {\n\t\t\tdelegateType: fix,\n\t\t\tbindType: fix,\n\t\n\t\t\thandle: function( event ) {\n\t\t\t\tvar ret,\n\t\t\t\t\ttarget = this,\n\t\t\t\t\trelated = event.relatedTarget,\n\t\t\t\t\thandleObj = event.handleObj;\n\t\n\t\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\t\tevent.type = fix;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t};\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\n\t\ton: function( types, selector, data, fn ) {\n\t\t\treturn on( this, types, selector, data, fn );\n\t\t},\n\t\tone: function( types, selector, data, fn ) {\n\t\t\treturn on( this, types, selector, data, fn, 1 );\n\t\t},\n\t\toff: function( types, selector, fn ) {\n\t\t\tvar handleObj, type;\n\t\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\n\t\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\t\thandleObj = types.handleObj;\n\t\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\t\thandleObj.namespace ?\n\t\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\t\thandleObj.origType,\n\t\t\t\t\thandleObj.selector,\n\t\t\t\t\thandleObj.handler\n\t\t\t\t);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif ( typeof types === \"object\" ) {\n\t\n\t\t\t\t// ( types-object [, selector] )\n\t\t\t\tfor ( type in types ) {\n\t\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\n\t\t\t\t// ( types [, fn] )\n\t\t\t\tfn = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tif ( fn === false ) {\n\t\t\t\tfn = returnFalse;\n\t\t\t}\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t\n\tvar\n\t\n\t\t/* eslint-disable max-len */\n\t\n\t\t// See https://github.com/eslint/eslint/issues/3229\n\t\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\t\n\t\t/* eslint-enable */\n\t\n\t\t// Support: IE <=10 - 11, Edge 12 - 13\n\t\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\t\trnoInnerhtml = /<script|<style|<link/i,\n\t\n\t\t// checked=\"checked\" or checked\n\t\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\t\trscriptTypeMasked = /^true\\/(.*)/,\n\t\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\t\n\tfunction manipulationTarget( elem, content ) {\n\t\tif ( jQuery.nodeName( elem, \"table\" ) &&\n\t\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\t\n\t\t\treturn elem.getElementsByTagName( \"tbody\" )[ 0 ] || elem;\n\t\t}\n\t\n\t\treturn elem;\n\t}\n\t\n\t// Replace/restore the type attribute of script elements for safe DOM manipulation\n\tfunction disableScript( elem ) {\n\t\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\t\treturn elem;\n\t}\n\tfunction restoreScript( elem ) {\n\t\tvar match = rscriptTypeMasked.exec( elem.type );\n\t\n\t\tif ( match ) {\n\t\t\telem.type = match[ 1 ];\n\t\t} else {\n\t\t\telem.removeAttribute( \"type\" );\n\t\t}\n\t\n\t\treturn elem;\n\t}\n\t\n\tfunction cloneCopyEvent( src, dest ) {\n\t\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\t\n\t\tif ( dest.nodeType !== 1 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// 1. Copy private data: events, handlers, etc.\n\t\tif ( dataPriv.hasData( src ) ) {\n\t\t\tpdataOld = dataPriv.access( src );\n\t\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\t\tevents = pdataOld.events;\n\t\n\t\t\tif ( events ) {\n\t\t\t\tdelete pdataCur.handle;\n\t\t\t\tpdataCur.events = {};\n\t\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// 2. Copy user data\n\t\tif ( dataUser.hasData( src ) ) {\n\t\t\tudataOld = dataUser.access( src );\n\t\t\tudataCur = jQuery.extend( {}, udataOld );\n\t\n\t\t\tdataUser.set( dest, udataCur );\n\t\t}\n\t}\n\t\n\t// Fix IE bugs, see support tests\n\tfunction fixInput( src, dest ) {\n\t\tvar nodeName = dest.nodeName.toLowerCase();\n\t\n\t\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\t\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\t\tdest.checked = src.checked;\n\t\n\t\t// Fails to return the selected option to the default selected state when cloning options\n\t\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\t\tdest.defaultValue = src.defaultValue;\n\t\t}\n\t}\n\t\n\tfunction domManip( collection, args, callback, ignored ) {\n\t\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\t\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = collection.length,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\t\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn collection.each( function( index ) {\n\t\t\t\tvar self = collection.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tdomManip( self, args, callback, ignored );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( l ) {\n\t\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\t\tfirst = fragment.firstChild;\n\t\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\t\n\t\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\t\tif ( first || ignored ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\t\n\t\t\t\t// Use the original fragment for the last item\n\t\t\t\t// instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\t\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\t\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\n\t\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t\t}\n\t\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\t\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\t\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\t\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn collection;\n\t}\n\t\n\tfunction remove( elem, selector, keepData ) {\n\t\tvar node,\n\t\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\t\ti = 0;\n\t\n\t\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t\t}\n\t\n\t\t\tif ( node.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t\t}\n\t\t\t\tnode.parentNode.removeChild( node );\n\t\t\t}\n\t\t}\n\t\n\t\treturn elem;\n\t}\n\t\n\tjQuery.extend( {\n\t\thtmlPrefilter: function( html ) {\n\t\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t\t},\n\t\n\t\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\t\tvar i, l, srcElements, destElements,\n\t\t\t\tclone = elem.cloneNode( true ),\n\t\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\t\n\t\t\t// Fix IE cloning issues\n\t\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\t\n\t\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\t\tdestElements = getAll( clone );\n\t\t\t\tsrcElements = getAll( elem );\n\t\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Copy the events from the original to the clone\n\t\t\tif ( dataAndEvents ) {\n\t\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\t\tdestElements = destElements || getAll( clone );\n\t\n\t\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Preserve script evaluation history\n\t\t\tdestElements = getAll( clone, \"script\" );\n\t\t\tif ( destElements.length > 0 ) {\n\t\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t\t}\n\t\n\t\t\t// Return the cloned set\n\t\t\treturn clone;\n\t\t},\n\t\n\t\tcleanData: function( elems ) {\n\t\t\tvar data, elem, type,\n\t\t\t\tspecial = jQuery.event.special,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\t\n\t\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\t\n\t\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tdetach: function( selector ) {\n\t\t\treturn remove( this, selector, true );\n\t\t},\n\t\n\t\tremove: function( selector ) {\n\t\t\treturn remove( this, selector );\n\t\t},\n\t\n\t\ttext: function( value ) {\n\t\t\treturn access( this, function( value ) {\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\tjQuery.text( this ) :\n\t\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t}, null, value, arguments.length );\n\t\t},\n\t\n\t\tappend: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\t\ttarget.appendChild( elem );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tprepend: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tbefore: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.parentNode ) {\n\t\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tafter: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.parentNode ) {\n\t\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tempty: function() {\n\t\t\tvar elem,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\n\t\t\t\t\t// Prevent memory leaks\n\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\n\t\t\t\t\t// Remove any remaining nodes\n\t\t\t\t\telem.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\t\n\t\t\treturn this.map( function() {\n\t\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t\t} );\n\t\t},\n\t\n\t\thtml: function( value ) {\n\t\t\treturn access( this, function( value ) {\n\t\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\t\ti = 0,\n\t\t\t\t\tl = this.length;\n\t\n\t\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\t\treturn elem.innerHTML;\n\t\t\t\t}\n\t\n\t\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\t\n\t\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\t\telem = this[ i ] || {};\n\t\n\t\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\telem = 0;\n\t\n\t\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t\t} catch ( e ) {}\n\t\t\t\t}\n\t\n\t\t\t\tif ( elem ) {\n\t\t\t\t\tthis.empty().append( value );\n\t\t\t\t}\n\t\t\t}, null, value, arguments.length );\n\t\t},\n\t\n\t\treplaceWith: function() {\n\t\t\tvar ignored = [];\n\t\n\t\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tvar parent = this.parentNode;\n\t\n\t\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\t\tif ( parent ) {\n\t\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Force callback invocation\n\t\t\t}, ignored );\n\t\t}\n\t} );\n\t\n\tjQuery.each( {\n\t\tappendTo: \"append\",\n\t\tprependTo: \"prepend\",\n\t\tinsertBefore: \"before\",\n\t\tinsertAfter: \"after\",\n\t\treplaceAll: \"replaceWith\"\n\t}, function( name, original ) {\n\t\tjQuery.fn[ name ] = function( selector ) {\n\t\t\tvar elems,\n\t\t\t\tret = [],\n\t\t\t\tinsert = jQuery( selector ),\n\t\t\t\tlast = insert.length - 1,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; i <= last; i++ ) {\n\t\t\t\telems = i === last ? this : this.clone( true );\n\t\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\t\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tpush.apply( ret, elems.get() );\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( ret );\n\t\t};\n\t} );\n\tvar rmargin = ( /^margin/ );\n\t\n\tvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\t\n\tvar getStyles = function( elem ) {\n\t\n\t\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t\t// IE throws on elements created in popups\n\t\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\t\tvar view = elem.ownerDocument.defaultView;\n\t\n\t\t\tif ( !view || !view.opener ) {\n\t\t\t\tview = window;\n\t\t\t}\n\t\n\t\t\treturn view.getComputedStyle( elem );\n\t\t};\n\t\n\t\n\t\n\t( function() {\n\t\n\t\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t\t// so they're executed at the same time to save the second computation.\n\t\tfunction computeStyleTests() {\n\t\n\t\t\t// This is a singleton, we need to execute it only once\n\t\t\tif ( !div ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tdiv.style.cssText =\n\t\t\t\t\"box-sizing:border-box;\" +\n\t\t\t\t\"position:relative;display:block;\" +\n\t\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\t\"top:1%;width:50%\";\n\t\t\tdiv.innerHTML = \"\";\n\t\t\tdocumentElement.appendChild( container );\n\t\n\t\t\tvar divStyle = window.getComputedStyle( div );\n\t\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\n\t\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\t\n\t\t\t// Support: Android 4.0 - 4.3 only\n\t\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\t\tdiv.style.marginRight = \"50%\";\n\t\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\t\n\t\t\tdocumentElement.removeChild( container );\n\t\n\t\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t\t// it will also be a sign that checks already performed\n\t\t\tdiv = null;\n\t\t}\n\t\n\t\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\t\tcontainer = document.createElement( \"div\" ),\n\t\t\tdiv = document.createElement( \"div\" );\n\t\n\t\t// Finish early in limited (non-browser) environments\n\t\tif ( !div.style ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Support: IE <=9 - 11 only\n\t\t// Style of cloned element affects source element cloned (#8908)\n\t\tdiv.style.backgroundClip = \"content-box\";\n\t\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\t\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\t\n\t\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\t\"padding:0;margin-top:1px;position:absolute\";\n\t\tcontainer.appendChild( div );\n\t\n\t\tjQuery.extend( support, {\n\t\t\tpixelPosition: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\tpixelMarginRight: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn pixelMarginRightVal;\n\t\t\t},\n\t\t\treliableMarginLeft: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn reliableMarginLeftVal;\n\t\t\t}\n\t\t} );\n\t} )();\n\t\n\t\n\tfunction curCSS( elem, name, computed ) {\n\t\tvar width, minWidth, maxWidth, ret,\n\t\t\tstyle = elem.style;\n\t\n\t\tcomputed = computed || getStyles( elem );\n\t\n\t\t// Support: IE <=9 only\n\t\t// getPropertyValue is only needed for .css('filter') (#12537)\n\t\tif ( computed ) {\n\t\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t\n\t\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\tret = jQuery.style( elem, name );\n\t\t\t}\n\t\n\t\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t\t// Android Browser returns percentage for some values,\n\t\t\t// but width seems to be reliably pixels.\n\t\t\t// This is against the CSSOM draft spec:\n\t\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\t\n\t\t\t\t// Remember the original values\n\t\t\t\twidth = style.width;\n\t\t\t\tminWidth = style.minWidth;\n\t\t\t\tmaxWidth = style.maxWidth;\n\t\n\t\t\t\t// Put in the new values to get a computed value out\n\t\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\t\tret = computed.width;\n\t\n\t\t\t\t// Revert the changed values\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.minWidth = minWidth;\n\t\t\t\tstyle.maxWidth = maxWidth;\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret !== undefined ?\n\t\n\t\t\t// Support: IE <=9 - 11 only\n\t\t\t// IE returns zIndex value as an integer.\n\t\t\tret + \"\" :\n\t\t\tret;\n\t}\n\t\n\t\n\tfunction addGetHookIf( conditionFn, hookFn ) {\n\t\n\t\t// Define the hook, we'll check on the first run if it's really needed.\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\tif ( conditionFn() ) {\n\t\n\t\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t\t// to missing dependency), remove it.\n\t\t\t\t\tdelete this.get;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t\t}\n\t\t};\n\t}\n\t\n\t\n\tvar\n\t\n\t\t// Swappable if display is none or starts with table\n\t\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\t\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\t\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\t\tcssNormalTransform = {\n\t\t\tletterSpacing: \"0\",\n\t\t\tfontWeight: \"400\"\n\t\t},\n\t\n\t\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\t\temptyStyle = document.createElement( \"div\" ).style;\n\t\n\t// Return a css property mapped to a potentially vendor prefixed property\n\tfunction vendorPropName( name ) {\n\t\n\t\t// Shortcut for names that are not vendor prefixed\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t\n\t\t// Check for vendor prefixed names\n\t\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\t\ti = cssPrefixes.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tname = cssPrefixes[ i ] + capName;\n\t\t\tif ( name in emptyStyle ) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction setPositiveNumber( elem, value, subtract ) {\n\t\n\t\t// Any relative (+/-) values have already been\n\t\t// normalized at this point\n\t\tvar matches = rcssNum.exec( value );\n\t\treturn matches ?\n\t\n\t\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\t\tvalue;\n\t}\n\t\n\tfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\t\tvar i,\n\t\t\tval = 0;\n\t\n\t\t// If we already have the right measurement, avoid augmentation\n\t\tif ( extra === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\t\ti = 4;\n\t\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\t} else {\n\t\t\ti = name === \"width\" ? 1 : 0;\n\t\t}\n\t\n\t\tfor ( ; i < 4; i += 2 ) {\n\t\n\t\t\t// Both box models exclude margin, so add it if we want it\n\t\t\tif ( extra === \"margin\" ) {\n\t\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t\t}\n\t\n\t\t\tif ( isBorderBox ) {\n\t\n\t\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\t\tif ( extra === \"content\" ) {\n\t\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t\t}\n\t\n\t\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t\t}\n\t\t\t} else {\n\t\n\t\t\t\t// At this point, extra isn't content, so add padding\n\t\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\n\t\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn val;\n\t}\n\t\n\tfunction getWidthOrHeight( elem, name, extra ) {\n\t\n\t\t// Start with offset property, which is equivalent to the border-box value\n\t\tvar val,\n\t\t\tvalueIsBorderBox = true,\n\t\t\tstyles = getStyles( elem ),\n\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\t\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a disconnected node\n\t\t// in IE throws an error.\n\t\tif ( elem.getClientRects().length ) {\n\t\t\tval = elem.getBoundingClientRect()[ name ];\n\t\t}\n\t\n\t\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\t\tif ( val <= 0 || val == null ) {\n\t\n\t\t\t// Fall back to computed then uncomputed css if necessary\n\t\t\tval = curCSS( elem, name, styles );\n\t\t\tif ( val < 0 || val == null ) {\n\t\t\t\tval = elem.style[ name ];\n\t\t\t}\n\t\n\t\t\t// Computed unit is not pixels. Stop here and return.\n\t\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\t\treturn val;\n\t\t\t}\n\t\n\t\t\t// Check for style in case a browser which returns unreliable values\n\t\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\t\n\t\t\t// Normalize \"\", auto, and prepare for extra\n\t\t\tval = parseFloat( val ) || 0;\n\t\t}\n\t\n\t\t// Use the active box-sizing model to add/subtract irrelevant styles\n\t\treturn ( val +\n\t\t\taugmentWidthOrHeight(\n\t\t\t\telem,\n\t\t\t\tname,\n\t\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\t\tvalueIsBorderBox,\n\t\t\t\tstyles\n\t\t\t)\n\t\t) + \"px\";\n\t}\n\t\n\tjQuery.extend( {\n\t\n\t\t// Add in style property hooks for overriding the default\n\t\t// behavior of getting and setting a style property\n\t\tcssHooks: {\n\t\t\topacity: {\n\t\t\t\tget: function( elem, computed ) {\n\t\t\t\t\tif ( computed ) {\n\t\n\t\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t// Don't automatically add \"px\" to these possibly-unitless properties\n\t\tcssNumber: {\n\t\t\t\"animationIterationCount\": true,\n\t\t\t\"columnCount\": true,\n\t\t\t\"fillOpacity\": true,\n\t\t\t\"flexGrow\": true,\n\t\t\t\"flexShrink\": true,\n\t\t\t\"fontWeight\": true,\n\t\t\t\"lineHeight\": true,\n\t\t\t\"opacity\": true,\n\t\t\t\"order\": true,\n\t\t\t\"orphans\": true,\n\t\t\t\"widows\": true,\n\t\t\t\"zIndex\": true,\n\t\t\t\"zoom\": true\n\t\t},\n\t\n\t\t// Add in properties whose names you wish to fix before\n\t\t// setting or getting the value\n\t\tcssProps: {\n\t\t\t\"float\": \"cssFloat\"\n\t\t},\n\t\n\t\t// Get and set the style property on a DOM Node\n\t\tstyle: function( elem, name, value, extra ) {\n\t\n\t\t\t// Don't set styles on text and comment nodes\n\t\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Make sure that we're working with the right name\n\t\t\tvar ret, type, hooks,\n\t\t\t\torigName = jQuery.camelCase( name ),\n\t\t\t\tstyle = elem.style;\n\t\n\t\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\t\n\t\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\t\n\t\t\t// Check if we're setting a value\n\t\t\tif ( value !== undefined ) {\n\t\t\t\ttype = typeof value;\n\t\n\t\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\t\n\t\t\t\t\t// Fixes bug #9237\n\t\t\t\t\ttype = \"number\";\n\t\t\t\t}\n\t\n\t\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\t\tif ( value == null || value !== value ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t\tif ( type === \"number\" ) {\n\t\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t\t}\n\t\n\t\t\t\t// background-* props affect original clone's values\n\t\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t\t}\n\t\n\t\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\t\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\t\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\t// Otherwise just get the value from the style object\n\t\t\t\treturn style[ name ];\n\t\t\t}\n\t\t},\n\t\n\t\tcss: function( elem, name, extra, styles ) {\n\t\t\tvar val, num, hooks,\n\t\t\t\torigName = jQuery.camelCase( name );\n\t\n\t\t\t// Make sure that we're working with the right name\n\t\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\t\n\t\t\t// Try prefixed name followed by the unprefixed name\n\t\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\t\n\t\t\t// If a hook was provided get the computed value from there\n\t\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\t\tval = hooks.get( elem, true, extra );\n\t\t\t}\n\t\n\t\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\t\tif ( val === undefined ) {\n\t\t\t\tval = curCSS( elem, name, styles );\n\t\t\t}\n\t\n\t\t\t// Convert \"normal\" to computed value\n\t\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\t\tval = cssNormalTransform[ name ];\n\t\t\t}\n\t\n\t\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\t\tif ( extra === \"\" || extra ) {\n\t\t\t\tnum = parseFloat( val );\n\t\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t\t}\n\t\t\treturn val;\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\t\tjQuery.cssHooks[ name ] = {\n\t\t\tget: function( elem, computed, extra ) {\n\t\t\t\tif ( computed ) {\n\t\n\t\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\n\t\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t\t} ) :\n\t\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tset: function( elem, value, extra ) {\n\t\t\t\tvar matches,\n\t\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\t\tstyles\n\t\t\t\t\t);\n\t\n\t\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\t\n\t\t\t\t\telem.style[ name ] = value;\n\t\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t\t}\n\t\n\t\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t\t}\n\t\t};\n\t} );\n\t\n\tjQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t\t} )\n\t\t\t\t\t) + \"px\";\n\t\t\t}\n\t\t}\n\t);\n\t\n\t// These hooks are used by animate to expand properties\n\tjQuery.each( {\n\t\tmargin: \"\",\n\t\tpadding: \"\",\n\t\tborder: \"Width\"\n\t}, function( prefix, suffix ) {\n\t\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\t\texpand: function( value ) {\n\t\t\t\tvar i = 0,\n\t\t\t\t\texpanded = {},\n\t\n\t\t\t\t\t// Assumes a single number if not a string\n\t\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\t\n\t\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t\t}\n\t\n\t\t\t\treturn expanded;\n\t\t\t}\n\t\t};\n\t\n\t\tif ( !rmargin.test( prefix ) ) {\n\t\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tcss: function( name, value ) {\n\t\t\treturn access( this, function( elem, name, value ) {\n\t\t\t\tvar styles, len,\n\t\t\t\t\tmap = {},\n\t\t\t\t\ti = 0;\n\t\n\t\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\t\tstyles = getStyles( elem );\n\t\t\t\t\tlen = name.length;\n\t\n\t\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn map;\n\t\t\t\t}\n\t\n\t\t\t\treturn value !== undefined ?\n\t\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\t\tjQuery.css( elem, name );\n\t\t\t}, name, value, arguments.length > 1 );\n\t\t}\n\t} );\n\t\n\t\n\tfunction Tween( elem, options, prop, end, easing ) {\n\t\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n\t}\n\tjQuery.Tween = Tween;\n\t\n\tTween.prototype = {\n\t\tconstructor: Tween,\n\t\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\t\tthis.elem = elem;\n\t\t\tthis.prop = prop;\n\t\t\tthis.easing = easing || jQuery.easing._default;\n\t\t\tthis.options = options;\n\t\t\tthis.start = this.now = this.cur();\n\t\t\tthis.end = end;\n\t\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t\t},\n\t\tcur: function() {\n\t\t\tvar hooks = Tween.propHooks[ this.prop ];\n\t\n\t\t\treturn hooks && hooks.get ?\n\t\t\t\thooks.get( this ) :\n\t\t\t\tTween.propHooks._default.get( this );\n\t\t},\n\t\trun: function( percent ) {\n\t\t\tvar eased,\n\t\t\t\thooks = Tween.propHooks[ this.prop ];\n\t\n\t\t\tif ( this.options.duration ) {\n\t\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.pos = eased = percent;\n\t\t\t}\n\t\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\t\n\t\t\tif ( this.options.step ) {\n\t\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t\t}\n\t\n\t\t\tif ( hooks && hooks.set ) {\n\t\t\t\thooks.set( this );\n\t\t\t} else {\n\t\t\t\tTween.propHooks._default.set( this );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t};\n\t\n\tTween.prototype.init.prototype = Tween.prototype;\n\t\n\tTween.propHooks = {\n\t\t_default: {\n\t\t\tget: function( tween ) {\n\t\t\t\tvar result;\n\t\n\t\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t\t// or when there is no matching style property that exists.\n\t\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t\t}\n\t\n\t\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\n\t\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t\t},\n\t\t\tset: function( tween ) {\n\t\n\t\t\t\t// Use step hook for back compat.\n\t\t\t\t// Use cssHook if its there.\n\t\t\t\t// Use .style if available and use plain properties where available.\n\t\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t\t} else {\n\t\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Support: IE <=9 only\n\t// Panic based approach to setting things on disconnected nodes\n\tTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\t\tset: function( tween ) {\n\t\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.easing = {\n\t\tlinear: function( p ) {\n\t\t\treturn p;\n\t\t},\n\t\tswing: function( p ) {\n\t\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t\t},\n\t\t_default: \"swing\"\n\t};\n\t\n\tjQuery.fx = Tween.prototype.init;\n\t\n\t// Back compat <1.8 extension point\n\tjQuery.fx.step = {};\n\t\n\t\n\t\n\t\n\tvar\n\t\tfxNow, timerId,\n\t\trfxtypes = /^(?:toggle|show|hide)$/,\n\t\trrun = /queueHooks$/;\n\t\n\tfunction raf() {\n\t\tif ( timerId ) {\n\t\t\twindow.requestAnimationFrame( raf );\n\t\t\tjQuery.fx.tick();\n\t\t}\n\t}\n\t\n\t// Animations created synchronously will run synchronously\n\tfunction createFxNow() {\n\t\twindow.setTimeout( function() {\n\t\t\tfxNow = undefined;\n\t\t} );\n\t\treturn ( fxNow = jQuery.now() );\n\t}\n\t\n\t// Generate parameters to create a standard animation\n\tfunction genFx( type, includeWidth ) {\n\t\tvar which,\n\t\t\ti = 0,\n\t\t\tattrs = { height: type };\n\t\n\t\t// If we include width, step value is 1 to do all cssExpand values,\n\t\t// otherwise step value is 2 to skip over Left and Right\n\t\tincludeWidth = includeWidth ? 1 : 0;\n\t\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\t\twhich = cssExpand[ i ];\n\t\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t\t}\n\t\n\t\tif ( includeWidth ) {\n\t\t\tattrs.opacity = attrs.width = type;\n\t\t}\n\t\n\t\treturn attrs;\n\t}\n\t\n\tfunction createTween( value, prop, animation ) {\n\t\tvar tween,\n\t\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\t\tindex = 0,\n\t\t\tlength = collection.length;\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\t\n\t\t\t\t// We're done with this property\n\t\t\t\treturn tween;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction defaultPrefilter( elem, props, opts ) {\n\t\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\t\tisBox = \"width\" in props || \"height\" in props,\n\t\t\tanim = this,\n\t\t\torig = {},\n\t\t\tstyle = elem.style,\n\t\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\t\n\t\t// Queue-skipping animations hijack the fx hooks\n\t\tif ( !opts.queue ) {\n\t\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\t\tif ( hooks.unqueued == null ) {\n\t\t\t\thooks.unqueued = 0;\n\t\t\t\toldfire = hooks.empty.fire;\n\t\t\t\thooks.empty.fire = function() {\n\t\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\t\toldfire();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\thooks.unqueued++;\n\t\n\t\t\tanim.always( function() {\n\t\n\t\t\t\t// Ensure the complete handler is called before this completes\n\t\t\t\tanim.always( function() {\n\t\t\t\t\thooks.unqueued--;\n\t\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\t\thooks.empty.fire();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t\n\t\t// Detect show/hide animations\n\t\tfor ( prop in props ) {\n\t\t\tvalue = props[ prop ];\n\t\t\tif ( rfxtypes.test( value ) ) {\n\t\t\t\tdelete props[ prop ];\n\t\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\t\n\t\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\t\thidden = true;\n\t\n\t\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t\t}\n\t\t}\n\t\n\t\t// Bail out if this is a no-op like .hide().hide()\n\t\tpropTween = !jQuery.isEmptyObject( props );\n\t\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Restrict \"overflow\" and \"display\" styles during box animations\n\t\tif ( isBox && elem.nodeType === 1 ) {\n\t\n\t\t\t// Support: IE <=9 - 11, Edge 12 - 13\n\t\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t\t// from identically-valued overflowX and overflowY\n\t\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\t\n\t\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\t\trestoreDisplay = dataShow && dataShow.display;\n\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t\t}\n\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tif ( restoreDisplay ) {\n\t\t\t\t\tdisplay = restoreDisplay;\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Animate inline elements as inline-block\n\t\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\n\t\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\t\tif ( !propTween ) {\n\t\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif ( opts.overflow ) {\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tanim.always( function() {\n\t\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t\t} );\n\t\t}\n\t\n\t\t// Implement show/hide animations\n\t\tpropTween = false;\n\t\tfor ( prop in orig ) {\n\t\n\t\t\t// General show/hide setup for this element animation\n\t\t\tif ( !propTween ) {\n\t\t\t\tif ( dataShow ) {\n\t\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t\t}\n\t\n\t\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\t\tif ( toggle ) {\n\t\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t\t}\n\t\n\t\t\t\t// Show elements before animating them\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\t}\n\t\n\t\t\t\t/* eslint-disable no-loop-func */\n\t\n\t\t\t\tanim.done( function() {\n\t\n\t\t\t\t/* eslint-enable no-loop-func */\n\t\n\t\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\t\tif ( !hidden ) {\n\t\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Per-property setup\n\t\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\t\tpropTween.start = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction propFilter( props, specialEasing ) {\n\t\tvar index, name, easing, value, hooks;\n\t\n\t\t// camelCase, specialEasing and expand cssHook pass\n\t\tfor ( index in props ) {\n\t\t\tname = jQuery.camelCase( index );\n\t\t\teasing = specialEasing[ name ];\n\t\t\tvalue = props[ index ];\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\teasing = value[ 1 ];\n\t\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t\t}\n\t\n\t\t\tif ( index !== name ) {\n\t\t\t\tprops[ name ] = value;\n\t\t\t\tdelete props[ index ];\n\t\t\t}\n\t\n\t\t\thooks = jQuery.cssHooks[ name ];\n\t\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\t\tvalue = hooks.expand( value );\n\t\t\t\tdelete props[ name ];\n\t\n\t\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\t\tfor ( index in value ) {\n\t\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tspecialEasing[ name ] = easing;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction Animation( elem, properties, options ) {\n\t\tvar result,\n\t\t\tstopped,\n\t\t\tindex = 0,\n\t\t\tlength = Animation.prefilters.length,\n\t\t\tdeferred = jQuery.Deferred().always( function() {\n\t\n\t\t\t\t// Don't match elem in the :animated selector\n\t\t\t\tdelete tick.elem;\n\t\t\t} ),\n\t\t\ttick = function() {\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\n\t\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\t\tpercent = 1 - temp,\n\t\t\t\t\tindex = 0,\n\t\t\t\t\tlength = animation.tweens.length;\n\t\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t\t}\n\t\n\t\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\t\n\t\t\t\tif ( percent < 1 && length ) {\n\t\t\t\t\treturn remaining;\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tanimation = deferred.promise( {\n\t\t\t\telem: elem,\n\t\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\t\topts: jQuery.extend( true, {\n\t\t\t\t\tspecialEasing: {},\n\t\t\t\t\teasing: jQuery.easing._default\n\t\t\t\t}, options ),\n\t\t\t\toriginalProperties: properties,\n\t\t\t\toriginalOptions: options,\n\t\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\t\tduration: options.duration,\n\t\t\t\ttweens: [],\n\t\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\t\treturn tween;\n\t\t\t\t},\n\t\t\t\tstop: function( gotoEnd ) {\n\t\t\t\t\tvar index = 0,\n\t\n\t\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\t\tif ( stopped ) {\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t\tstopped = true;\n\t\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t} ),\n\t\t\tprops = animation.props;\n\t\n\t\tpropFilter( props, animation.opts.specialEasing );\n\t\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\t\tif ( result ) {\n\t\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\n\t\tjQuery.map( props, createTween, animation );\n\t\n\t\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\t\tanimation.opts.start.call( elem, animation );\n\t\t}\n\t\n\t\tjQuery.fx.timer(\n\t\t\tjQuery.extend( tick, {\n\t\t\t\telem: elem,\n\t\t\t\tanim: animation,\n\t\t\t\tqueue: animation.opts.queue\n\t\t\t} )\n\t\t);\n\t\n\t\t// attach callbacks from options\n\t\treturn animation.progress( animation.opts.progress )\n\t\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t\t.fail( animation.opts.fail )\n\t\t\t.always( animation.opts.always );\n\t}\n\t\n\tjQuery.Animation = jQuery.extend( Animation, {\n\t\n\t\ttweeners: {\n\t\t\t\"*\": [ function( prop, value ) {\n\t\t\t\tvar tween = this.createTween( prop, value );\n\t\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\t\treturn tween;\n\t\t\t} ]\n\t\t},\n\t\n\t\ttweener: function( props, callback ) {\n\t\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\t\tcallback = props;\n\t\t\t\tprops = [ \"*\" ];\n\t\t\t} else {\n\t\t\t\tprops = props.match( rnothtmlwhite );\n\t\t\t}\n\t\n\t\t\tvar prop,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = props.length;\n\t\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tprop = props[ index ];\n\t\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t\t}\n\t\t},\n\t\n\t\tprefilters: [ defaultPrefilter ],\n\t\n\t\tprefilter: function( callback, prepend ) {\n\t\t\tif ( prepend ) {\n\t\t\t\tAnimation.prefilters.unshift( callback );\n\t\t\t} else {\n\t\t\t\tAnimation.prefilters.push( callback );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\tjQuery.speed = function( speed, easing, fn ) {\n\t\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\t\tcomplete: fn || !fn && easing ||\n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t\t};\n\t\n\t\t// Go to the end state if fx are off or if document is hidden\n\t\tif ( jQuery.fx.off || document.hidden ) {\n\t\t\topt.duration = 0;\n\t\n\t\t} else {\n\t\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\t\n\t\t\t\t} else {\n\t\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\t\tif ( opt.queue == null || opt.queue === true ) {\n\t\t\topt.queue = \"fx\";\n\t\t}\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\n\t\topt.complete = function() {\n\t\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\t\topt.old.call( this );\n\t\t\t}\n\t\n\t\t\tif ( opt.queue ) {\n\t\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t\t}\n\t\t};\n\t\n\t\treturn opt;\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tfadeTo: function( speed, to, easing, callback ) {\n\t\n\t\t\t// Show any hidden elements after setting opacity to 0\n\t\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\t\n\t\t\t\t// Animate to the value specified\n\t\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t\t},\n\t\tanimate: function( prop, speed, easing, callback ) {\n\t\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\t\tdoAnimation = function() {\n\t\n\t\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\t\n\t\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\t\tanim.stop( true );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tdoAnimation.finish = doAnimation;\n\t\n\t\t\treturn empty || optall.queue === false ?\n\t\t\t\tthis.each( doAnimation ) :\n\t\t\t\tthis.queue( optall.queue, doAnimation );\n\t\t},\n\t\tstop: function( type, clearQueue, gotoEnd ) {\n\t\t\tvar stopQueue = function( hooks ) {\n\t\t\t\tvar stop = hooks.stop;\n\t\t\t\tdelete hooks.stop;\n\t\t\t\tstop( gotoEnd );\n\t\t\t};\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tgotoEnd = clearQueue;\n\t\t\t\tclearQueue = type;\n\t\t\t\ttype = undefined;\n\t\t\t}\n\t\t\tif ( clearQueue && type !== false ) {\n\t\t\t\tthis.queue( type || \"fx\", [] );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar dequeue = true,\n\t\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\t\ttimers = jQuery.timers,\n\t\t\t\t\tdata = dataPriv.get( this );\n\t\n\t\t\t\tif ( index ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( index in data ) {\n\t\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\t\n\t\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\t\tdequeue = false;\n\t\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\tfinish: function( type ) {\n\t\t\tif ( type !== false ) {\n\t\t\t\ttype = type || \"fx\";\n\t\t\t}\n\t\t\treturn this.each( function() {\n\t\t\t\tvar index,\n\t\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\t\ttimers = jQuery.timers,\n\t\t\t\t\tlength = queue ? queue.length : 0;\n\t\n\t\t\t\t// Enable finishing flag on private data\n\t\t\t\tdata.finish = true;\n\t\n\t\t\t\t// Empty the queue first\n\t\t\t\tjQuery.queue( this, type, [] );\n\t\n\t\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\t\thooks.stop.call( this, true );\n\t\t\t\t}\n\t\n\t\t\t\t// Look for any active animations, and finish them\n\t\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Look for any animations in the old queue and finish them\n\t\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Turn off finishing flag\n\t\t\t\tdelete data.finish;\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\t\tvar cssFn = jQuery.fn[ name ];\n\t\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\t\tcssFn.apply( this, arguments ) :\n\t\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t\t};\n\t} );\n\t\n\t// Generate shortcuts for custom animations\n\tjQuery.each( {\n\t\tslideDown: genFx( \"show\" ),\n\t\tslideUp: genFx( \"hide\" ),\n\t\tslideToggle: genFx( \"toggle\" ),\n\t\tfadeIn: { opacity: \"show\" },\n\t\tfadeOut: { opacity: \"hide\" },\n\t\tfadeToggle: { opacity: \"toggle\" }\n\t}, function( name, props ) {\n\t\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\t\treturn this.animate( props, speed, easing, callback );\n\t\t};\n\t} );\n\t\n\tjQuery.timers = [];\n\tjQuery.fx.tick = function() {\n\t\tvar timer,\n\t\t\ti = 0,\n\t\t\ttimers = jQuery.timers;\n\t\n\t\tfxNow = jQuery.now();\n\t\n\t\tfor ( ; i < timers.length; i++ ) {\n\t\t\ttimer = timers[ i ];\n\t\n\t\t\t// Checks the timer has not already been removed\n\t\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\t\ttimers.splice( i--, 1 );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !timers.length ) {\n\t\t\tjQuery.fx.stop();\n\t\t}\n\t\tfxNow = undefined;\n\t};\n\t\n\tjQuery.fx.timer = function( timer ) {\n\t\tjQuery.timers.push( timer );\n\t\tif ( timer() ) {\n\t\t\tjQuery.fx.start();\n\t\t} else {\n\t\t\tjQuery.timers.pop();\n\t\t}\n\t};\n\t\n\tjQuery.fx.interval = 13;\n\tjQuery.fx.start = function() {\n\t\tif ( !timerId ) {\n\t\t\ttimerId = window.requestAnimationFrame ?\n\t\t\t\twindow.requestAnimationFrame( raf ) :\n\t\t\t\twindow.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t\t}\n\t};\n\t\n\tjQuery.fx.stop = function() {\n\t\tif ( window.cancelAnimationFrame ) {\n\t\t\twindow.cancelAnimationFrame( timerId );\n\t\t} else {\n\t\t\twindow.clearInterval( timerId );\n\t\t}\n\t\n\t\ttimerId = null;\n\t};\n\t\n\tjQuery.fx.speeds = {\n\t\tslow: 600,\n\t\tfast: 200,\n\t\n\t\t// Default speed\n\t\t_default: 400\n\t};\n\t\n\t\n\t// Based off of the plugin by Clint Helfers, with permission.\n\t// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\tjQuery.fn.delay = function( time, type ) {\n\t\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\t\ttype = type || \"fx\";\n\t\n\t\treturn this.queue( type, function( next, hooks ) {\n\t\t\tvar timeout = window.setTimeout( next, time );\n\t\t\thooks.stop = function() {\n\t\t\t\twindow.clearTimeout( timeout );\n\t\t\t};\n\t\t} );\n\t};\n\t\n\t\n\t( function() {\n\t\tvar input = document.createElement( \"input\" ),\n\t\t\tselect = document.createElement( \"select\" ),\n\t\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\t\n\t\tinput.type = \"checkbox\";\n\t\n\t\t// Support: Android <=4.3 only\n\t\t// Default value for a checkbox should be \"on\"\n\t\tsupport.checkOn = input.value !== \"\";\n\t\n\t\t// Support: IE <=11 only\n\t\t// Must access selectedIndex to make default options select\n\t\tsupport.optSelected = opt.selected;\n\t\n\t\t// Support: IE <=11 only\n\t\t// An input loses its value after becoming a radio\n\t\tinput = document.createElement( \"input\" );\n\t\tinput.value = \"t\";\n\t\tinput.type = \"radio\";\n\t\tsupport.radioValue = input.value === \"t\";\n\t} )();\n\t\n\t\n\tvar boolHook,\n\t\tattrHandle = jQuery.expr.attrHandle;\n\t\n\tjQuery.fn.extend( {\n\t\tattr: function( name, value ) {\n\t\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t\t},\n\t\n\t\tremoveAttr: function( name ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.removeAttr( this, name );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tattr: function( elem, name, value ) {\n\t\t\tvar ret, hooks,\n\t\t\t\tnType = elem.nodeType;\n\t\n\t\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Fallback to prop when attributes are not supported\n\t\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\t\treturn jQuery.prop( elem, name, value );\n\t\t\t}\n\t\n\t\t\t// Attribute hooks are determined by the lowercase version\n\t\t\t// Grab necessary hook if one is defined\n\t\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t\t}\n\t\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tif ( value === null ) {\n\t\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\t\n\t\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\n\t\t\tret = jQuery.find.attr( elem, name );\n\t\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ? undefined : ret;\n\t\t},\n\t\n\t\tattrHooks: {\n\t\t\ttype: {\n\t\t\t\tset: function( elem, value ) {\n\t\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tremoveAttr: function( elem, value ) {\n\t\t\tvar name,\n\t\t\t\ti = 0,\n\t\n\t\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\t\n\t\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\t\telem.removeAttribute( name );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Hooks for boolean attributes\n\tboolHook = {\n\t\tset: function( elem, value, name ) {\n\t\t\tif ( value === false ) {\n\t\n\t\t\t\t// Remove boolean attributes when set to false\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, name );\n\t\t\t}\n\t\t\treturn name;\n\t\t}\n\t};\n\t\n\tjQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\t\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\t\n\t\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\t\tvar ret, handle,\n\t\t\t\tlowercaseName = name.toLowerCase();\n\t\n\t\t\tif ( !isXML ) {\n\t\n\t\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\t\tlowercaseName :\n\t\t\t\t\tnull;\n\t\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\t} );\n\t\n\t\n\t\n\t\n\tvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\t\trclickable = /^(?:a|area)$/i;\n\t\n\tjQuery.fn.extend( {\n\t\tprop: function( name, value ) {\n\t\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t\t},\n\t\n\t\tremoveProp: function( name ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tprop: function( elem, name, value ) {\n\t\t\tvar ret, hooks,\n\t\t\t\tnType = elem.nodeType;\n\t\n\t\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\n\t\t\t\t// Fix name and attach hooks\n\t\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\t\thooks = jQuery.propHooks[ name ];\n\t\t\t}\n\t\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\treturn ( elem[ name ] = value );\n\t\t\t}\n\t\n\t\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\n\t\t\treturn elem[ name ];\n\t\t},\n\t\n\t\tpropHooks: {\n\t\t\ttabIndex: {\n\t\t\t\tget: function( elem ) {\n\t\n\t\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\t\n\t\t\t\t\tif ( tabindex ) {\n\t\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (\n\t\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\t\telem.href\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tpropFix: {\n\t\t\t\"for\": \"htmlFor\",\n\t\t\t\"class\": \"className\"\n\t\t}\n\t} );\n\t\n\t// Support: IE <=11 only\n\t// Accessing the selectedIndex property\n\t// forces the browser to respect setting selected\n\t// on the option\n\t// The getter ensures a default option is selected\n\t// when in an optgroup\n\t// eslint rule \"no-unused-expressions\" is disabled for this code\n\t// since it considers such accessions noop\n\tif ( !support.optSelected ) {\n\t\tjQuery.propHooks.selected = {\n\t\t\tget: function( elem ) {\n\t\n\t\t\t\t/* eslint no-unused-expressions: \"off\" */\n\t\n\t\t\t\tvar parent = elem.parentNode;\n\t\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tset: function( elem ) {\n\t\n\t\t\t\t/* eslint no-unused-expressions: \"off\" */\n\t\n\t\t\t\tvar parent = elem.parentNode;\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.selectedIndex;\n\t\n\t\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tjQuery.each( [\n\t\t\"tabIndex\",\n\t\t\"readOnly\",\n\t\t\"maxLength\",\n\t\t\"cellSpacing\",\n\t\t\"cellPadding\",\n\t\t\"rowSpan\",\n\t\t\"colSpan\",\n\t\t\"useMap\",\n\t\t\"frameBorder\",\n\t\t\"contentEditable\"\n\t], function() {\n\t\tjQuery.propFix[ this.toLowerCase() ] = this;\n\t} );\n\t\n\t\n\t\n\t\n\t\t// Strip and collapse whitespace according to HTML spec\n\t\t// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n\t\tfunction stripAndCollapse( value ) {\n\t\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\t\treturn tokens.join( \" \" );\n\t\t}\n\t\n\t\n\tfunction getClass( elem ) {\n\t\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n\t}\n\t\n\tjQuery.fn.extend( {\n\t\taddClass: function( value ) {\n\t\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\t\ti = 0;\n\t\n\t\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\t\treturn this.each( function( j ) {\n\t\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tif ( typeof value === \"string\" && value ) {\n\t\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\t\n\t\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\t\tcurValue = getClass( elem );\n\t\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\t\n\t\t\t\t\tif ( cur ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\tremoveClass: function( value ) {\n\t\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\t\ti = 0;\n\t\n\t\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\t\treturn this.each( function( j ) {\n\t\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tif ( !arguments.length ) {\n\t\t\t\treturn this.attr( \"class\", \"\" );\n\t\t\t}\n\t\n\t\t\tif ( typeof value === \"string\" && value ) {\n\t\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\t\n\t\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\t\tcurValue = getClass( elem );\n\t\n\t\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\t\n\t\t\t\t\tif ( cur ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\n\t\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\ttoggleClass: function( value, stateVal ) {\n\t\t\tvar type = typeof value;\n\t\n\t\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t\t}\n\t\n\t\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\t\treturn this.each( function( i ) {\n\t\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\t\tstateVal\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar className, i, self, classNames;\n\t\n\t\t\t\tif ( type === \"string\" ) {\n\t\n\t\t\t\t\t// Toggle individual class names\n\t\t\t\t\ti = 0;\n\t\t\t\t\tself = jQuery( this );\n\t\t\t\t\tclassNames = value.match( rnothtmlwhite ) || [];\n\t\n\t\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\t\n\t\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t// Toggle whole class name\n\t\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\t\tclassName = getClass( this );\n\t\t\t\t\tif ( className ) {\n\t\n\t\t\t\t\t\t// Store className if set\n\t\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\thasClass: function( selector ) {\n\t\t\tvar className, elem,\n\t\t\t\ti = 0;\n\t\n\t\t\tclassName = \" \" + selector + \" \";\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tvar rreturn = /\\r/g;\n\t\n\tjQuery.fn.extend( {\n\t\tval: function( value ) {\n\t\t\tvar hooks, ret, isFunction,\n\t\t\t\telem = this[ 0 ];\n\t\n\t\t\tif ( !arguments.length ) {\n\t\t\t\tif ( elem ) {\n\t\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\t\n\t\t\t\t\tif ( hooks &&\n\t\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tret = elem.value;\n\t\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t\t}\n\t\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tisFunction = jQuery.isFunction( value );\n\t\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tvar val;\n\t\n\t\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t\t} else {\n\t\t\t\t\tval = value;\n\t\t\t\t}\n\t\n\t\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\t\tif ( val == null ) {\n\t\t\t\t\tval = \"\";\n\t\n\t\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\t\tval += \"\";\n\t\n\t\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\n\t\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\t\n\t\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\t\tthis.value = val;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tvalHooks: {\n\t\t\toption: {\n\t\t\t\tget: function( elem ) {\n\t\n\t\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\t\treturn val != null ?\n\t\t\t\t\t\tval :\n\t\n\t\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t\t}\n\t\t\t},\n\t\t\tselect: {\n\t\t\t\tget: function( elem ) {\n\t\t\t\t\tvar value, option, i,\n\t\t\t\t\t\toptions = elem.options,\n\t\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\t\tmax = one ? index + 1 : options.length;\n\t\n\t\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\t\ti = max;\n\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Loop through all the selected options\n\t\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\t\toption = options[ i ];\n\t\n\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\n\t\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\t\n\t\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\t\tvalue = jQuery( option ).val();\n\t\n\t\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn values;\n\t\t\t\t},\n\t\n\t\t\t\tset: function( elem, value ) {\n\t\t\t\t\tvar optionSet, option,\n\t\t\t\t\t\toptions = elem.options,\n\t\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\t\ti = options.length;\n\t\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\toption = options[ i ];\n\t\n\t\t\t\t\t\t/* eslint-disable no-cond-assign */\n\t\n\t\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn values;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Radios and checkboxes getter/setter\n\tjQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\t\tjQuery.valHooks[ this ] = {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif ( !support.checkOn ) {\n\t\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Return jQuery for attributes-only inclusion\n\t\n\t\n\tvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\t\n\tjQuery.extend( jQuery.event, {\n\t\n\t\ttrigger: function( event, data, elem, onlyHandlers ) {\n\t\n\t\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\t\teventPath = [ elem || document ],\n\t\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\t\n\t\t\tcur = tmp = elem = elem || document;\n\t\n\t\t\t// Don't do events on text and comment nodes\n\t\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\t\n\t\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\t\tnamespaces = type.split( \".\" );\n\t\t\t\ttype = namespaces.shift();\n\t\t\t\tnamespaces.sort();\n\t\t\t}\n\t\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\t\n\t\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\t\tevent = event[ jQuery.expando ] ?\n\t\t\t\tevent :\n\t\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\t\n\t\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\t\tevent.namespace = namespaces.join( \".\" );\n\t\t\tevent.rnamespace = event.namespace ?\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\t\tnull;\n\t\n\t\t\t// Clean up the event in case it is being reused\n\t\t\tevent.result = undefined;\n\t\t\tif ( !event.target ) {\n\t\t\t\tevent.target = elem;\n\t\t\t}\n\t\n\t\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\t\tdata = data == null ?\n\t\t\t\t[ event ] :\n\t\t\t\tjQuery.makeArray( data, [ event ] );\n\t\n\t\t\t// Allow special events to draw outside the lines\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\t\n\t\t\t\tbubbleType = special.delegateType || type;\n\t\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\t\tcur = cur.parentNode;\n\t\t\t\t}\n\t\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\t\teventPath.push( cur );\n\t\t\t\t\ttmp = cur;\n\t\t\t\t}\n\t\n\t\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Fire handlers on the event path\n\t\t\ti = 0;\n\t\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\n\t\t\t\tevent.type = i > 1 ?\n\t\t\t\t\tbubbleType :\n\t\t\t\t\tspecial.bindType || type;\n\t\n\t\t\t\t// jQuery handler\n\t\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\t\tif ( handle ) {\n\t\t\t\t\thandle.apply( cur, data );\n\t\t\t\t}\n\t\n\t\t\t\t// Native handler\n\t\t\t\thandle = ontype && cur[ ontype ];\n\t\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tevent.type = type;\n\t\n\t\t\t// If nobody prevented the default action, do it now\n\t\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\t\n\t\t\t\tif ( ( !special._default ||\n\t\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\t\tacceptData( elem ) ) {\n\t\n\t\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\t\n\t\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\t\ttmp = elem[ ontype ];\n\t\n\t\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\t\telem[ type ]();\n\t\t\t\t\t\tjQuery.event.triggered = undefined;\n\t\n\t\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn event.result;\n\t\t},\n\t\n\t\t// Piggyback on a donor event to simulate a different one\n\t\t// Used only for `focus(in | out)` events\n\t\tsimulate: function( type, elem, event ) {\n\t\t\tvar e = jQuery.extend(\n\t\t\t\tnew jQuery.Event(),\n\t\t\t\tevent,\n\t\t\t\t{\n\t\t\t\t\ttype: type,\n\t\t\t\t\tisSimulated: true\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t}\n\t\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\n\t\ttrigger: function( type, data ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.event.trigger( type, data, this );\n\t\t\t} );\n\t\t},\n\t\ttriggerHandler: function( type, data ) {\n\t\t\tvar elem = this[ 0 ];\n\t\t\tif ( elem ) {\n\t\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\t\tfunction( i, name ) {\n\t\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\thover: function( fnOver, fnOut ) {\n\t\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tsupport.focusin = \"onfocusin\" in window;\n\t\n\t\n\t// Support: Firefox <=44\n\t// Firefox doesn't have focus(in | out) events\n\t// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n\t//\n\t// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n\t// focus(in | out) events fire after focus & blur events,\n\t// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n\t// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\tif ( !support.focusin ) {\n\t\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\t\n\t\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t\t};\n\t\n\t\t\tjQuery.event.special[ fix ] = {\n\t\t\t\tsetup: function() {\n\t\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\t\n\t\t\t\t\tif ( !attaches ) {\n\t\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t\t},\n\t\t\t\tteardown: function() {\n\t\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\t\n\t\t\t\t\tif ( !attaches ) {\n\t\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\t\tdataPriv.remove( doc, fix );\n\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t} );\n\t}\n\tvar location = window.location;\n\t\n\tvar nonce = jQuery.now();\n\t\n\tvar rquery = ( /\\?/ );\n\t\n\t\n\t\n\t// Cross-browser xml parsing\n\tjQuery.parseXML = function( data ) {\n\t\tvar xml;\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// Support: IE 9 - 11 only\n\t\t// IE throws on parseFromString with invalid input.\n\t\ttry {\n\t\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t\t} catch ( e ) {\n\t\t\txml = undefined;\n\t\t}\n\t\n\t\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t};\n\t\n\t\n\tvar\n\t\trbracket = /\\[\\]$/,\n\t\trCRLF = /\\r?\\n/g,\n\t\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\t\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\t\n\tfunction buildParams( prefix, obj, traditional, add ) {\n\t\tvar name;\n\t\n\t\tif ( jQuery.isArray( obj ) ) {\n\t\n\t\t\t// Serialize array item.\n\t\t\tjQuery.each( obj, function( i, v ) {\n\t\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\n\t\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\t\tadd( prefix, v );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\t\tbuildParams(\n\t\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\t\tv,\n\t\t\t\t\t\ttraditional,\n\t\t\t\t\t\tadd\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\n\t\t\t// Serialize object item.\n\t\t\tfor ( name in obj ) {\n\t\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t\t}\n\t\n\t\t} else {\n\t\n\t\t\t// Serialize scalar item.\n\t\t\tadd( prefix, obj );\n\t\t}\n\t}\n\t\n\t// Serialize an array of form elements or a set of\n\t// key/values into a query string\n\tjQuery.param = function( a, traditional ) {\n\t\tvar prefix,\n\t\t\ts = [],\n\t\t\tadd = function( key, valueOrFunction ) {\n\t\n\t\t\t\t// If value is a function, invoke it and use its return value\n\t\t\t\tvar value = jQuery.isFunction( valueOrFunction ) ?\n\t\t\t\t\tvalueOrFunction() :\n\t\t\t\t\tvalueOrFunction;\n\t\n\t\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t\t};\n\t\n\t\t// If an array was passed in, assume that it is an array of form elements.\n\t\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\n\t\t\t// Serialize the form elements\n\t\t\tjQuery.each( a, function() {\n\t\t\t\tadd( this.name, this.value );\n\t\t\t} );\n\t\n\t\t} else {\n\t\n\t\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t\t// did it), otherwise encode params recursively.\n\t\t\tfor ( prefix in a ) {\n\t\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the resulting serialization\n\t\treturn s.join( \"&\" );\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tserialize: function() {\n\t\t\treturn jQuery.param( this.serializeArray() );\n\t\t},\n\t\tserializeArray: function() {\n\t\t\treturn this.map( function() {\n\t\n\t\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t\t} )\n\t\t\t.filter( function() {\n\t\t\t\tvar type = this.type;\n\t\n\t\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t\t} )\n\t\t\t.map( function( i, elem ) {\n\t\t\t\tvar val = jQuery( this ).val();\n\t\n\t\t\t\tif ( val == null ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\tif ( jQuery.isArray( val ) ) {\n\t\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\n\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t} ).get();\n\t\t}\n\t} );\n\t\n\t\n\tvar\n\t\tr20 = /%20/g,\n\t\trhash = /#.*$/,\n\t\trantiCache = /([?&])_=[^&]*/,\n\t\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t\n\t\t// #7653, #8125, #8152: local protocol detection\n\t\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\t\trnoContent = /^(?:GET|HEAD)$/,\n\t\trprotocol = /^\\/\\//,\n\t\n\t\t/* Prefilters\n\t\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t\t * 2) These are called:\n\t\t *    - BEFORE asking for a transport\n\t\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t\t * 3) key is the dataType\n\t\t * 4) the catchall symbol \"*\" can be used\n\t\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t\t */\n\t\tprefilters = {},\n\t\n\t\t/* Transports bindings\n\t\t * 1) key is the dataType\n\t\t * 2) the catchall symbol \"*\" can be used\n\t\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t\t */\n\t\ttransports = {},\n\t\n\t\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\t\tallTypes = \"*/\".concat( \"*\" ),\n\t\n\t\t// Anchor tag for parsing the document origin\n\t\toriginAnchor = document.createElement( \"a\" );\n\t\toriginAnchor.href = location.href;\n\t\n\t// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\tfunction addToPrefiltersOrTransports( structure ) {\n\t\n\t\t// dataTypeExpression is optional and defaults to \"*\"\n\t\treturn function( dataTypeExpression, func ) {\n\t\n\t\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\t\tfunc = dataTypeExpression;\n\t\t\t\tdataTypeExpression = \"*\";\n\t\t\t}\n\t\n\t\t\tvar dataType,\n\t\t\t\ti = 0,\n\t\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\t\n\t\t\tif ( jQuery.isFunction( func ) ) {\n\t\n\t\t\t\t// For each dataType in the dataTypeExpression\n\t\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\t\n\t\t\t\t\t// Prepend if requested\n\t\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\t\n\t\t\t\t\t// Otherwise append\n\t\t\t\t\t} else {\n\t\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\t// Base inspection function for prefilters and transports\n\tfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\t\n\t\tvar inspected = {},\n\t\t\tseekingTransport = ( structure === transports );\n\t\n\t\tfunction inspect( dataType ) {\n\t\t\tvar selected;\n\t\t\tinspected[ dataType ] = true;\n\t\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\n\t\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\t\treturn false;\n\t\t\t\t} else if ( seekingTransport ) {\n\t\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn selected;\n\t\t}\n\t\n\t\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n\t}\n\t\n\t// A special extend for ajax options\n\t// that takes \"flat\" options (not to be deep extended)\n\t// Fixes #9887\n\tfunction ajaxExtend( target, src ) {\n\t\tvar key, deep,\n\t\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\t\n\t\tfor ( key in src ) {\n\t\t\tif ( src[ key ] !== undefined ) {\n\t\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t\t}\n\t\t}\n\t\tif ( deep ) {\n\t\t\tjQuery.extend( true, target, deep );\n\t\t}\n\t\n\t\treturn target;\n\t}\n\t\n\t/* Handles responses to an ajax request:\n\t * - finds the right dataType (mediates between content-type and expected dataType)\n\t * - returns the corresponding response\n\t */\n\tfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\t\n\t\tvar ct, type, finalDataType, firstDataType,\n\t\t\tcontents = s.contents,\n\t\t\tdataTypes = s.dataTypes;\n\t\n\t\t// Remove auto dataType and get content-type in the process\n\t\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\t\tdataTypes.shift();\n\t\t\tif ( ct === undefined ) {\n\t\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t\t}\n\t\t}\n\t\n\t\t// Check if we're dealing with a known content-type\n\t\tif ( ct ) {\n\t\t\tfor ( type in contents ) {\n\t\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\t\tdataTypes.unshift( type );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Check to see if we have a response for the expected dataType\n\t\tif ( dataTypes[ 0 ] in responses ) {\n\t\t\tfinalDataType = dataTypes[ 0 ];\n\t\t} else {\n\t\n\t\t\t// Try convertible dataTypes\n\t\t\tfor ( type in responses ) {\n\t\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\t\tfinalDataType = type;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( !firstDataType ) {\n\t\t\t\t\tfirstDataType = type;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Or just use first one\n\t\t\tfinalDataType = finalDataType || firstDataType;\n\t\t}\n\t\n\t\t// If we found a dataType\n\t\t// We add the dataType to the list if needed\n\t\t// and return the corresponding response\n\t\tif ( finalDataType ) {\n\t\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\t\tdataTypes.unshift( finalDataType );\n\t\t\t}\n\t\t\treturn responses[ finalDataType ];\n\t\t}\n\t}\n\t\n\t/* Chain conversions given the request and the original response\n\t * Also sets the responseXXX fields on the jqXHR instance\n\t */\n\tfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\t\tvar conv2, current, conv, tmp, prev,\n\t\t\tconverters = {},\n\t\n\t\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\t\tdataTypes = s.dataTypes.slice();\n\t\n\t\t// Create converters map with lowercased keys\n\t\tif ( dataTypes[ 1 ] ) {\n\t\t\tfor ( conv in s.converters ) {\n\t\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t\t}\n\t\t}\n\t\n\t\tcurrent = dataTypes.shift();\n\t\n\t\t// Convert to each sequential dataType\n\t\twhile ( current ) {\n\t\n\t\t\tif ( s.responseFields[ current ] ) {\n\t\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t\t}\n\t\n\t\t\t// Apply the dataFilter if provided\n\t\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t\t}\n\t\n\t\t\tprev = current;\n\t\t\tcurrent = dataTypes.shift();\n\t\n\t\t\tif ( current ) {\n\t\n\t\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\t\tif ( current === \"*\" ) {\n\t\n\t\t\t\t\tcurrent = prev;\n\t\n\t\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\t\n\t\t\t\t\t// Seek a direct converter\n\t\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\t\n\t\t\t\t\t// If none found, seek a pair\n\t\t\t\t\tif ( !conv ) {\n\t\t\t\t\t\tfor ( conv2 in converters ) {\n\t\n\t\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\t\n\t\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\t\tif ( conv ) {\n\t\n\t\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\t\n\t\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\t\tif ( conv !== true ) {\n\t\n\t\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn { state: \"success\", data: response };\n\t}\n\t\n\tjQuery.extend( {\n\t\n\t\t// Counter for holding the number of active queries\n\t\tactive: 0,\n\t\n\t\t// Last-Modified header cache for next request\n\t\tlastModified: {},\n\t\tetag: {},\n\t\n\t\tajaxSettings: {\n\t\t\turl: location.href,\n\t\t\ttype: \"GET\",\n\t\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\t\tglobal: true,\n\t\t\tprocessData: true,\n\t\t\tasync: true,\n\t\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\n\t\t\t/*\n\t\t\ttimeout: 0,\n\t\t\tdata: null,\n\t\t\tdataType: null,\n\t\t\tusername: null,\n\t\t\tpassword: null,\n\t\t\tcache: null,\n\t\t\tthrows: false,\n\t\t\ttraditional: false,\n\t\t\theaders: {},\n\t\t\t*/\n\t\n\t\t\taccepts: {\n\t\t\t\t\"*\": allTypes,\n\t\t\t\ttext: \"text/plain\",\n\t\t\t\thtml: \"text/html\",\n\t\t\t\txml: \"application/xml, text/xml\",\n\t\t\t\tjson: \"application/json, text/javascript\"\n\t\t\t},\n\t\n\t\t\tcontents: {\n\t\t\t\txml: /\\bxml\\b/,\n\t\t\t\thtml: /\\bhtml/,\n\t\t\t\tjson: /\\bjson\\b/\n\t\t\t},\n\t\n\t\t\tresponseFields: {\n\t\t\t\txml: \"responseXML\",\n\t\t\t\ttext: \"responseText\",\n\t\t\t\tjson: \"responseJSON\"\n\t\t\t},\n\t\n\t\t\t// Data converters\n\t\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\t\tconverters: {\n\t\n\t\t\t\t// Convert anything to text\n\t\t\t\t\"* text\": String,\n\t\n\t\t\t\t// Text to html (true = no transformation)\n\t\t\t\t\"text html\": true,\n\t\n\t\t\t\t// Evaluate text as a json expression\n\t\t\t\t\"text json\": JSON.parse,\n\t\n\t\t\t\t// Parse text as xml\n\t\t\t\t\"text xml\": jQuery.parseXML\n\t\t\t},\n\t\n\t\t\t// For options that shouldn't be deep extended:\n\t\t\t// you can add your own custom options here if\n\t\t\t// and when you create one that shouldn't be\n\t\t\t// deep extended (see ajaxExtend)\n\t\t\tflatOptions: {\n\t\t\t\turl: true,\n\t\t\t\tcontext: true\n\t\t\t}\n\t\t},\n\t\n\t\t// Creates a full fledged settings object into target\n\t\t// with both ajaxSettings and settings fields.\n\t\t// If target is omitted, writes into ajaxSettings.\n\t\tajaxSetup: function( target, settings ) {\n\t\t\treturn settings ?\n\t\n\t\t\t\t// Building a settings object\n\t\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\t\n\t\t\t\t// Extending ajaxSettings\n\t\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t\t},\n\t\n\t\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\t\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\t\n\t\t// Main method\n\t\tajax: function( url, options ) {\n\t\n\t\t\t// If url is an object, simulate pre-1.5 signature\n\t\t\tif ( typeof url === \"object\" ) {\n\t\t\t\toptions = url;\n\t\t\t\turl = undefined;\n\t\t\t}\n\t\n\t\t\t// Force options to be an object\n\t\t\toptions = options || {};\n\t\n\t\t\tvar transport,\n\t\n\t\t\t\t// URL without anti-cache param\n\t\t\t\tcacheURL,\n\t\n\t\t\t\t// Response headers\n\t\t\t\tresponseHeadersString,\n\t\t\t\tresponseHeaders,\n\t\n\t\t\t\t// timeout handle\n\t\t\t\ttimeoutTimer,\n\t\n\t\t\t\t// Url cleanup var\n\t\t\t\turlAnchor,\n\t\n\t\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\t\tcompleted,\n\t\n\t\t\t\t// To know if global events are to be dispatched\n\t\t\t\tfireGlobals,\n\t\n\t\t\t\t// Loop variable\n\t\t\t\ti,\n\t\n\t\t\t\t// uncached part of the url\n\t\t\t\tuncached,\n\t\n\t\t\t\t// Create the final options object\n\t\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\n\t\t\t\t// Callbacks context\n\t\t\t\tcallbackContext = s.context || s,\n\t\n\t\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\t\tglobalEventContext = s.context &&\n\t\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\t\tjQuery.event,\n\t\n\t\t\t\t// Deferreds\n\t\t\t\tdeferred = jQuery.Deferred(),\n\t\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\t\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode = s.statusCode || {},\n\t\n\t\t\t\t// Headers (they are sent all at once)\n\t\t\t\trequestHeaders = {},\n\t\t\t\trequestHeadersNames = {},\n\t\n\t\t\t\t// Default abort message\n\t\t\t\tstrAbort = \"canceled\",\n\t\n\t\t\t\t// Fake xhr\n\t\t\t\tjqXHR = {\n\t\t\t\t\treadyState: 0,\n\t\n\t\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\t\tvar match;\n\t\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Raw string\n\t\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Caches the header\n\t\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Overrides response content-type header\n\t\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Status-dependent callbacks\n\t\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\t\tvar code;\n\t\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\t\tif ( completed ) {\n\t\n\t\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Cancel the request\n\t\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t// Attach deferreds\n\t\t\tdeferred.promise( jqXHR );\n\t\n\t\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t\t// We also use the url parameter if available\n\t\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\t\n\t\t\t// Alias method option to type as per ticket #12004\n\t\t\ts.type = options.method || options.type || s.method || s.type;\n\t\n\t\t\t// Extract dataTypes list\n\t\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\t\n\t\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\t\tif ( s.crossDomain == null ) {\n\t\t\t\turlAnchor = document.createElement( \"a\" );\n\t\n\t\t\t\t// Support: IE <=8 - 11, Edge 12 - 13\n\t\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t\t// e.g. http://example.com:80x/\n\t\t\t\ttry {\n\t\t\t\t\turlAnchor.href = s.url;\n\t\n\t\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\t\ts.crossDomain = true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Convert data if not already a string\n\t\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t\t}\n\t\n\t\t\t// Apply prefilters\n\t\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\t\n\t\t\t// If request was aborted inside a prefilter, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\t\n\t\t\t// We can fire global events as of now if asked to\n\t\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\t\tfireGlobals = jQuery.event && s.global;\n\t\n\t\t\t// Watch for a new set of requests\n\t\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t\t}\n\t\n\t\t\t// Uppercase the type\n\t\t\ts.type = s.type.toUpperCase();\n\t\n\t\t\t// Determine if request has content\n\t\t\ts.hasContent = !rnoContent.test( s.type );\n\t\n\t\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t\t// and/or If-None-Match header later on\n\t\t\t// Remove hash to simplify url manipulation\n\t\t\tcacheURL = s.url.replace( rhash, \"\" );\n\t\n\t\t\t// More options handling for requests with no content\n\t\t\tif ( !s.hasContent ) {\n\t\n\t\t\t\t// Remember the hash so we can put it back\n\t\t\t\tuncached = s.url.slice( cacheURL.length );\n\t\n\t\t\t\t// If data is available, append data to url\n\t\t\t\tif ( s.data ) {\n\t\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\t\n\t\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\t\tdelete s.data;\n\t\t\t\t}\n\t\n\t\t\t\t// Add or update anti-cache param if needed\n\t\t\t\tif ( s.cache === false ) {\n\t\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t\t}\n\t\n\t\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\t\ts.url = cacheURL + uncached;\n\t\n\t\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t\t} else if ( s.data && s.processData &&\n\t\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t\t}\n\t\n\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\tif ( s.ifModified ) {\n\t\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t\t}\n\t\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Set the correct header, if data is being sent\n\t\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t\t}\n\t\n\t\t\t// Set the Accepts header for the server, depending on the dataType\n\t\t\tjqXHR.setRequestHeader(\n\t\t\t\t\"Accept\",\n\t\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\t\ts.accepts[ \"*\" ]\n\t\t\t);\n\t\n\t\t\t// Check for headers option\n\t\t\tfor ( i in s.headers ) {\n\t\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t\t}\n\t\n\t\t\t// Allow custom headers/mimetypes and early abort\n\t\t\tif ( s.beforeSend &&\n\t\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\t\n\t\t\t\t// Abort if not done already and return\n\t\t\t\treturn jqXHR.abort();\n\t\t\t}\n\t\n\t\t\t// Aborting is no longer a cancellation\n\t\t\tstrAbort = \"abort\";\n\t\n\t\t\t// Install callbacks on deferreds\n\t\t\tcompleteDeferred.add( s.complete );\n\t\t\tjqXHR.done( s.success );\n\t\t\tjqXHR.fail( s.error );\n\t\n\t\t\t// Get transport\n\t\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\t\n\t\t\t// If no transport, we auto-abort\n\t\t\tif ( !transport ) {\n\t\t\t\tdone( -1, \"No Transport\" );\n\t\t\t} else {\n\t\t\t\tjqXHR.readyState = 1;\n\t\n\t\t\t\t// Send global event\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t\t}\n\t\n\t\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\t\tif ( completed ) {\n\t\t\t\t\treturn jqXHR;\n\t\t\t\t}\n\t\n\t\t\t\t// Timeout\n\t\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t\t}, s.timeout );\n\t\t\t\t}\n\t\n\t\t\t\ttry {\n\t\t\t\t\tcompleted = false;\n\t\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Propagate others as results\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Callback for when everything is done\n\t\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\t\tstatusText = nativeStatusText;\n\t\n\t\t\t\t// Ignore repeat invocations\n\t\t\t\tif ( completed ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tcompleted = true;\n\t\n\t\t\t\t// Clear timeout if it exists\n\t\t\t\tif ( timeoutTimer ) {\n\t\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t\t}\n\t\n\t\t\t\t// Dereference transport for early garbage collection\n\t\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\t\ttransport = undefined;\n\t\n\t\t\t\t// Cache response headers\n\t\t\t\tresponseHeadersString = headers || \"\";\n\t\n\t\t\t\t// Set readyState\n\t\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\t\n\t\t\t\t// Determine if successful\n\t\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\t\n\t\t\t\t// Get response data\n\t\t\t\tif ( responses ) {\n\t\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t\t}\n\t\n\t\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\t\n\t\t\t\t// If successful, handle type chaining\n\t\t\t\tif ( isSuccess ) {\n\t\n\t\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// if no content\n\t\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\t\tstatusText = \"nocontent\";\n\t\n\t\t\t\t\t// if not modified\n\t\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\t\tstatusText = \"notmodified\";\n\t\n\t\t\t\t\t// If we have data, let's convert it\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\t\terror = response.error;\n\t\t\t\t\t\tisSuccess = !error;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\t\terror = statusText;\n\t\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Set data for the fake xhr object\n\t\t\t\tjqXHR.status = status;\n\t\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\t\n\t\t\t\t// Success/Error\n\t\t\t\tif ( isSuccess ) {\n\t\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t\t}\n\t\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tjqXHR.statusCode( statusCode );\n\t\t\t\tstatusCode = undefined;\n\t\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t\t}\n\t\n\t\t\t\t// Complete\n\t\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\t\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\n\t\t\t\t\t// Handle the global AJAX counter\n\t\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn jqXHR;\n\t\t},\n\t\n\t\tgetJSON: function( url, data, callback ) {\n\t\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t\t},\n\t\n\t\tgetScript: function( url, callback ) {\n\t\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\t\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\n\t\t\t// Shift arguments if data argument was omitted\n\t\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\t\ttype = type || callback;\n\t\t\t\tcallback = data;\n\t\t\t\tdata = undefined;\n\t\t\t}\n\t\n\t\t\t// The url can be an options object (which then must have .url)\n\t\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\t\turl: url,\n\t\t\t\ttype: method,\n\t\t\t\tdataType: type,\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: callback\n\t\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t\t};\n\t} );\n\t\n\t\n\tjQuery._evalUrl = function( url ) {\n\t\treturn jQuery.ajax( {\n\t\t\turl: url,\n\t\n\t\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"script\",\n\t\t\tcache: true,\n\t\t\tasync: false,\n\t\t\tglobal: false,\n\t\t\t\"throws\": true\n\t\t} );\n\t};\n\t\n\t\n\tjQuery.fn.extend( {\n\t\twrapAll: function( html ) {\n\t\t\tvar wrap;\n\t\n\t\t\tif ( this[ 0 ] ) {\n\t\t\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\t// The elements to wrap the target around\n\t\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\t\n\t\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\twrap.map( function() {\n\t\t\t\t\tvar elem = this;\n\t\n\t\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn elem;\n\t\t\t\t} ).append( this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\twrapInner: function( html ) {\n\t\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\t\treturn this.each( function( i ) {\n\t\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar self = jQuery( this ),\n\t\t\t\t\tcontents = self.contents();\n\t\n\t\t\t\tif ( contents.length ) {\n\t\t\t\t\tcontents.wrapAll( html );\n\t\n\t\t\t\t} else {\n\t\t\t\t\tself.append( html );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\twrap: function( html ) {\n\t\t\tvar isFunction = jQuery.isFunction( html );\n\t\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t\t} );\n\t\t},\n\t\n\t\tunwrap: function( selector ) {\n\t\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t} );\n\t\t\treturn this;\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.expr.pseudos.hidden = function( elem ) {\n\t\treturn !jQuery.expr.pseudos.visible( elem );\n\t};\n\tjQuery.expr.pseudos.visible = function( elem ) {\n\t\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n\t};\n\t\n\t\n\t\n\t\n\tjQuery.ajaxSettings.xhr = function() {\n\t\ttry {\n\t\t\treturn new window.XMLHttpRequest();\n\t\t} catch ( e ) {}\n\t};\n\t\n\tvar xhrSuccessStatus = {\n\t\n\t\t\t// File protocol always yields status code 0, assume 200\n\t\t\t0: 200,\n\t\n\t\t\t// Support: IE <=9 only\n\t\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t\t1223: 204\n\t\t},\n\t\txhrSupported = jQuery.ajaxSettings.xhr();\n\t\n\tsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n\tsupport.ajax = xhrSupported = !!xhrSupported;\n\t\n\tjQuery.ajaxTransport( function( options ) {\n\t\tvar callback, errorCallback;\n\t\n\t\t// Cross domain only allowed if supported through XMLHttpRequest\n\t\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\t\treturn {\n\t\t\t\tsend: function( headers, complete ) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\txhr = options.xhr();\n\t\n\t\t\t\t\txhr.open(\n\t\t\t\t\t\toptions.type,\n\t\t\t\t\t\toptions.url,\n\t\t\t\t\t\toptions.async,\n\t\t\t\t\t\toptions.username,\n\t\t\t\t\t\toptions.password\n\t\t\t\t\t);\n\t\n\t\t\t\t\t// Apply custom fields if provided\n\t\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Override mime type if needed\n\t\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// X-Requested-With header\n\t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Set headers\n\t\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Callback\n\t\t\t\t\tcallback = function( type ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\t\n\t\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcomplete(\n\t\n\t\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\n\t\t\t\t\t// Listen to events\n\t\t\t\t\txhr.onload = callback();\n\t\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\t\n\t\t\t\t\t// Support: IE 9 only\n\t\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t\t// to handle uncaught aborts\n\t\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t\t} else {\n\t\t\t\t\t\txhr.onreadystatechange = function() {\n\t\n\t\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\t\n\t\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Create the abort callback\n\t\t\t\t\tcallback = callback( \"abort\" );\n\t\n\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\tjQuery.ajaxPrefilter( function( s ) {\n\t\tif ( s.crossDomain ) {\n\t\t\ts.contents.script = false;\n\t\t}\n\t} );\n\t\n\t// Install script dataType\n\tjQuery.ajaxSetup( {\n\t\taccepts: {\n\t\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t\t},\n\t\tcontents: {\n\t\t\tscript: /\\b(?:java|ecma)script\\b/\n\t\t},\n\t\tconverters: {\n\t\t\t\"text script\": function( text ) {\n\t\t\t\tjQuery.globalEval( text );\n\t\t\t\treturn text;\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Handle cache's special case and crossDomain\n\tjQuery.ajaxPrefilter( \"script\", function( s ) {\n\t\tif ( s.cache === undefined ) {\n\t\t\ts.cache = false;\n\t\t}\n\t\tif ( s.crossDomain ) {\n\t\t\ts.type = \"GET\";\n\t\t}\n\t} );\n\t\n\t// Bind script tag hack transport\n\tjQuery.ajaxTransport( \"script\", function( s ) {\n\t\n\t\t// This transport only deals with cross domain requests\n\t\tif ( s.crossDomain ) {\n\t\t\tvar script, callback;\n\t\t\treturn {\n\t\t\t\tsend: function( _, complete ) {\n\t\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\t\tsrc: s.url\n\t\t\t\t\t} ).on(\n\t\t\t\t\t\t\"load error\",\n\t\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\n\t\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t\t},\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tvar oldCallbacks = [],\n\t\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\t\n\t// Default jsonp settings\n\tjQuery.ajaxSetup( {\n\t\tjsonp: \"callback\",\n\t\tjsonpCallback: function() {\n\t\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\t\tthis[ callback ] = true;\n\t\t\treturn callback;\n\t\t}\n\t} );\n\t\n\t// Detect, normalize options and install callbacks for jsonp requests\n\tjQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\t\n\t\tvar callbackName, overwritten, responseContainer,\n\t\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\t\"url\" :\n\t\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t\t);\n\t\n\t\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\t\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\t\n\t\t\t// Get callback name, remembering preexisting value associated with it\n\t\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\t\ts.jsonpCallback() :\n\t\t\t\ts.jsonpCallback;\n\t\n\t\t\t// Insert callback into url or form data\n\t\t\tif ( jsonProp ) {\n\t\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t\t} else if ( s.jsonp !== false ) {\n\t\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t\t}\n\t\n\t\t\t// Use data converter to retrieve json after script execution\n\t\t\ts.converters[ \"script json\" ] = function() {\n\t\t\t\tif ( !responseContainer ) {\n\t\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t\t}\n\t\t\t\treturn responseContainer[ 0 ];\n\t\t\t};\n\t\n\t\t\t// Force json dataType\n\t\t\ts.dataTypes[ 0 ] = \"json\";\n\t\n\t\t\t// Install callback\n\t\t\toverwritten = window[ callbackName ];\n\t\t\twindow[ callbackName ] = function() {\n\t\t\t\tresponseContainer = arguments;\n\t\t\t};\n\t\n\t\t\t// Clean-up function (fires after converters)\n\t\t\tjqXHR.always( function() {\n\t\n\t\t\t\t// If previous value didn't exist - remove it\n\t\t\t\tif ( overwritten === undefined ) {\n\t\t\t\t\tjQuery( window ).removeProp( callbackName );\n\t\n\t\t\t\t// Otherwise restore preexisting value\n\t\t\t\t} else {\n\t\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t\t}\n\t\n\t\t\t\t// Save back as free\n\t\t\t\tif ( s[ callbackName ] ) {\n\t\n\t\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\t\n\t\t\t\t\t// Save the callback name for future use\n\t\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t\t}\n\t\n\t\t\t\t// Call if it was a function and we have a response\n\t\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\tresponseContainer = overwritten = undefined;\n\t\t\t} );\n\t\n\t\t\t// Delegate to script\n\t\t\treturn \"script\";\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Support: Safari 8 only\n\t// In Safari 8 documents created via document.implementation.createHTMLDocument\n\t// collapse sibling forms: the second one becomes a child of the first one.\n\t// Because of that, this security measure has to be disabled in Safari 8.\n\t// https://bugs.webkit.org/show_bug.cgi?id=137337\n\tsupport.createHTMLDocument = ( function() {\n\t\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\t\tbody.innerHTML = \"<form></form><form></form>\";\n\t\treturn body.childNodes.length === 2;\n\t} )();\n\t\n\t\n\t// Argument \"data\" should be string of html\n\t// context (optional): If specified, the fragment will be created in this context,\n\t// defaults to document\n\t// keepScripts (optional): If true, will include scripts passed in the html string\n\tjQuery.parseHTML = function( data, context, keepScripts ) {\n\t\tif ( typeof data !== \"string\" ) {\n\t\t\treturn [];\n\t\t}\n\t\tif ( typeof context === \"boolean\" ) {\n\t\t\tkeepScripts = context;\n\t\t\tcontext = false;\n\t\t}\n\t\n\t\tvar base, parsed, scripts;\n\t\n\t\tif ( !context ) {\n\t\n\t\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t\t// by using document.implementation\n\t\t\tif ( support.createHTMLDocument ) {\n\t\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\t\n\t\t\t\t// Set the base href for the created document\n\t\t\t\t// so any parsed elements with URLs\n\t\t\t\t// are based on the document's URL (gh-2965)\n\t\t\t\tbase = context.createElement( \"base\" );\n\t\t\t\tbase.href = document.location.href;\n\t\t\t\tcontext.head.appendChild( base );\n\t\t\t} else {\n\t\t\t\tcontext = document;\n\t\t\t}\n\t\t}\n\t\n\t\tparsed = rsingleTag.exec( data );\n\t\tscripts = !keepScripts && [];\n\t\n\t\t// Single tag\n\t\tif ( parsed ) {\n\t\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t\t}\n\t\n\t\tparsed = buildFragment( [ data ], context, scripts );\n\t\n\t\tif ( scripts && scripts.length ) {\n\t\t\tjQuery( scripts ).remove();\n\t\t}\n\t\n\t\treturn jQuery.merge( [], parsed.childNodes );\n\t};\n\t\n\t\n\t/**\n\t * Load a url into a page\n\t */\n\tjQuery.fn.load = function( url, params, callback ) {\n\t\tvar selector, type, response,\n\t\t\tself = this,\n\t\t\toff = url.indexOf( \" \" );\n\t\n\t\tif ( off > -1 ) {\n\t\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\t\turl = url.slice( 0, off );\n\t\t}\n\t\n\t\t// If it's a function\n\t\tif ( jQuery.isFunction( params ) ) {\n\t\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = undefined;\n\t\n\t\t// Otherwise, build a param string\n\t\t} else if ( params && typeof params === \"object\" ) {\n\t\t\ttype = \"POST\";\n\t\t}\n\t\n\t\t// If we have elements to modify, make the request\n\t\tif ( self.length > 0 ) {\n\t\t\tjQuery.ajax( {\n\t\t\t\turl: url,\n\t\n\t\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t\t// Make value of this field explicit since\n\t\t\t\t// user can override it through ajaxSetup method\n\t\t\t\ttype: type || \"GET\",\n\t\t\t\tdataType: \"html\",\n\t\t\t\tdata: params\n\t\t\t} ).done( function( responseText ) {\n\t\n\t\t\t\t// Save response for use in complete callback\n\t\t\t\tresponse = arguments;\n\t\n\t\t\t\tself.html( selector ?\n\t\n\t\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\t\n\t\t\t\t\t// Otherwise use the full result\n\t\t\t\t\tresponseText );\n\t\n\t\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t\t// but they are ignored because response was set above.\n\t\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\t\tself.each( function() {\n\t\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t\n\t\treturn this;\n\t};\n\t\n\t\n\t\n\t\n\t// Attach a bunch of functions for handling common AJAX events\n\tjQuery.each( [\n\t\t\"ajaxStart\",\n\t\t\"ajaxStop\",\n\t\t\"ajaxComplete\",\n\t\t\"ajaxError\",\n\t\t\"ajaxSuccess\",\n\t\t\"ajaxSend\"\n\t], function( i, type ) {\n\t\tjQuery.fn[ type ] = function( fn ) {\n\t\t\treturn this.on( type, fn );\n\t\t};\n\t} );\n\t\n\t\n\t\n\t\n\tjQuery.expr.pseudos.animated = function( elem ) {\n\t\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\t\treturn elem === fn.elem;\n\t\t} ).length;\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Gets a window from an element\n\t */\n\tfunction getWindow( elem ) {\n\t\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n\t}\n\t\n\tjQuery.offset = {\n\t\tsetOffset: function( elem, options, i ) {\n\t\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\t\tcurElem = jQuery( elem ),\n\t\t\t\tprops = {};\n\t\n\t\t\t// Set position first, in-case top/left are set even on static elem\n\t\t\tif ( position === \"static\" ) {\n\t\t\t\telem.style.position = \"relative\";\n\t\t\t}\n\t\n\t\t\tcurOffset = curElem.offset();\n\t\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\t\n\t\t\t// Need to be able to calculate position if either\n\t\t\t// top or left is auto and position is either absolute or fixed\n\t\t\tif ( calculatePosition ) {\n\t\t\t\tcurPosition = curElem.position();\n\t\t\t\tcurTop = curPosition.top;\n\t\t\t\tcurLeft = curPosition.left;\n\t\n\t\t\t} else {\n\t\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t\t}\n\t\n\t\t\tif ( jQuery.isFunction( options ) ) {\n\t\n\t\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t\t}\n\t\n\t\t\tif ( options.top != null ) {\n\t\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t\t}\n\t\t\tif ( options.left != null ) {\n\t\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t\t}\n\t\n\t\t\tif ( \"using\" in options ) {\n\t\t\t\toptions.using.call( elem, props );\n\t\n\t\t\t} else {\n\t\t\t\tcurElem.css( props );\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\toffset: function( options ) {\n\t\n\t\t\t// Preserve chaining for setter\n\t\t\tif ( arguments.length ) {\n\t\t\t\treturn options === undefined ?\n\t\t\t\t\tthis :\n\t\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tvar docElem, win, rect, doc,\n\t\t\t\telem = this[ 0 ];\n\t\n\t\t\tif ( !elem ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Support: IE <=11 only\n\t\t\t// Running getBoundingClientRect on a\n\t\t\t// disconnected node in IE throws an error\n\t\t\tif ( !elem.getClientRects().length ) {\n\t\t\t\treturn { top: 0, left: 0 };\n\t\t\t}\n\t\n\t\t\trect = elem.getBoundingClientRect();\n\t\n\t\t\t// Make sure element is not hidden (display: none)\n\t\t\tif ( rect.width || rect.height ) {\n\t\t\t\tdoc = elem.ownerDocument;\n\t\t\t\twin = getWindow( doc );\n\t\t\t\tdocElem = doc.documentElement;\n\t\n\t\t\t\treturn {\n\t\t\t\t\ttop: rect.top + win.pageYOffset - docElem.clientTop,\n\t\t\t\t\tleft: rect.left + win.pageXOffset - docElem.clientLeft\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\t// Return zeros for disconnected and hidden elements (gh-2310)\n\t\t\treturn rect;\n\t\t},\n\t\n\t\tposition: function() {\n\t\t\tif ( !this[ 0 ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar offsetParent, offset,\n\t\t\t\telem = this[ 0 ],\n\t\t\t\tparentOffset = { top: 0, left: 0 };\n\t\n\t\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t\t// because it is its only offset parent\n\t\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\n\t\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\t\toffset = elem.getBoundingClientRect();\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// Get *real* offsetParent\n\t\t\t\toffsetParent = this.offsetParent();\n\t\n\t\t\t\t// Get correct offsets\n\t\t\t\toffset = this.offset();\n\t\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t\t}\n\t\n\t\t\t\t// Add offsetParent borders\n\t\t\t\tparentOffset = {\n\t\t\t\t\ttop: parentOffset.top + jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true ),\n\t\t\t\t\tleft: parentOffset.left + jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true )\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\t// Subtract parent offsets and element margins\n\t\t\treturn {\n\t\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t\t};\n\t\t},\n\t\n\t\t// This method will return documentElement in the following cases:\n\t\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t\t//    documentElement of the parent window\n\t\t// 2) For the hidden or detached element\n\t\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t\t//\n\t\t// but those exceptions were never presented as a real life use-cases\n\t\t// and might be considered as more preferable results.\n\t\t//\n\t\t// This logic, however, is not guaranteed and can change at any point in the future\n\t\toffsetParent: function() {\n\t\t\treturn this.map( function() {\n\t\t\t\tvar offsetParent = this.offsetParent;\n\t\n\t\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t\t}\n\t\n\t\t\t\treturn offsetParent || documentElement;\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t// Create scrollLeft and scrollTop methods\n\tjQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\t\tvar top = \"pageYOffset\" === prop;\n\t\n\t\tjQuery.fn[ method ] = function( val ) {\n\t\t\treturn access( this, function( elem, method, val ) {\n\t\t\t\tvar win = getWindow( elem );\n\t\n\t\t\t\tif ( val === undefined ) {\n\t\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t\t}\n\t\n\t\t\t\tif ( win ) {\n\t\t\t\t\twin.scrollTo(\n\t\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t\t);\n\t\n\t\t\t\t} else {\n\t\t\t\t\telem[ method ] = val;\n\t\t\t\t}\n\t\t\t}, method, val, arguments.length );\n\t\t};\n\t} );\n\t\n\t// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n\t// Add the top/left cssHooks using jQuery.fn.position\n\t// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n\t// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n\t// getComputedStyle returns percent when specified for top/left/bottom/right;\n\t// rather than make the css module depend on the offset module, just check for it here\n\tjQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\t\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\t\tfunction( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\tcomputed = curCSS( elem, prop );\n\t\n\t\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\t\tcomputed;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t} );\n\t\n\t\n\t// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\tjQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\t\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\t\tfunction( defaultExtra, funcName ) {\n\t\n\t\t\t// Margin is only for outerHeight, outerWidth\n\t\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\t\n\t\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\t\tvar doc;\n\t\n\t\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\n\t\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Get document width or height\n\t\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\t\tdoc = elem.documentElement;\n\t\n\t\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t\t// whichever is greatest\n\t\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn value === undefined ?\n\t\n\t\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\t\n\t\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t\t};\n\t\t} );\n\t} );\n\t\n\t\n\tjQuery.fn.extend( {\n\t\n\t\tbind: function( types, data, fn ) {\n\t\t\treturn this.on( types, null, data, fn );\n\t\t},\n\t\tunbind: function( types, fn ) {\n\t\t\treturn this.off( types, null, fn );\n\t\t},\n\t\n\t\tdelegate: function( selector, types, data, fn ) {\n\t\t\treturn this.on( types, selector, data, fn );\n\t\t},\n\t\tundelegate: function( selector, types, fn ) {\n\t\n\t\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\t\treturn arguments.length === 1 ?\n\t\t\t\tthis.off( selector, \"**\" ) :\n\t\t\t\tthis.off( types, selector || \"**\", fn );\n\t\t}\n\t} );\n\t\n\tjQuery.parseJSON = JSON.parse;\n\t\n\t\n\t\n\t\n\t// Register as a named AMD module, since jQuery can be concatenated with other\n\t// files that may use define, but not via a proper concatenation script that\n\t// understands anonymous AMD modules. A named AMD is safest and most robust\n\t// way to register. Lowercase jquery is used because AMD module names are\n\t// derived from file names, and jQuery is normally delivered in a lowercase\n\t// file name. Do this after creating the global so that if an AMD module wants\n\t// to call noConflict to hide this version of jQuery, it will work.\n\t\n\t// Note that for maximum portability, libraries that are not jQuery should\n\t// declare themselves as anonymous modules, and avoid setting a global if an\n\t// AMD loader is present. jQuery is a special case. For more information, see\n\t// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\t\n\tif ( true ) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn jQuery;\n\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\t\n\t\n\t\n\t\n\tvar\n\t\n\t\t// Map over jQuery in case of overwrite\n\t\t_jQuery = window.jQuery,\n\t\n\t\t// Map over the $ in case of overwrite\n\t\t_$ = window.$;\n\t\n\tjQuery.noConflict = function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\t\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\t\n\t\treturn jQuery;\n\t};\n\t\n\t// Expose jQuery and $ identifiers, even in AMD\n\t// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n\t// and CommonJS for browser emulators (#13566)\n\tif ( !noGlobal ) {\n\t\twindow.jQuery = window.$ = jQuery;\n\t}\n\t\n\t\n\t\n\t\n\t\n\treturn jQuery;\n\t} );\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): util.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\t'use strict';\n\t\n\tvar Util = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Private TransitionEnd Helpers\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var transition = false;\n\t\n\t  var MAX_UID = 1000000;\n\t\n\t  var TransitionEndEvent = {\n\t    WebkitTransition: 'webkitTransitionEnd',\n\t    MozTransition: 'transitionend',\n\t    OTransition: 'oTransitionEnd otransitionend',\n\t    transition: 'transitionend'\n\t  };\n\t\n\t  // shoutout AngusCroll (https://goo.gl/pxwQGp)\n\t  function toType(obj) {\n\t    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\t  }\n\t\n\t  function isElement(obj) {\n\t    return (obj[0] || obj).nodeType;\n\t  }\n\t\n\t  function getSpecialTransitionEndEvent() {\n\t    return {\n\t      bindType: transition.end,\n\t      delegateType: transition.end,\n\t      handle: function handle(event) {\n\t        if ($(event.target).is(this)) {\n\t          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n\t        }\n\t        return undefined;\n\t      }\n\t    };\n\t  }\n\t\n\t  function transitionEndTest() {\n\t    if (window.QUnit) {\n\t      return false;\n\t    }\n\t\n\t    var el = document.createElement('bootstrap');\n\t\n\t    for (var _name in TransitionEndEvent) {\n\t      if (el.style[_name] !== undefined) {\n\t        return { end: TransitionEndEvent[_name] };\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function transitionEndEmulator(duration) {\n\t    var _this = this;\n\t\n\t    var called = false;\n\t\n\t    $(this).one(Util.TRANSITION_END, function () {\n\t      called = true;\n\t    });\n\t\n\t    setTimeout(function () {\n\t      if (!called) {\n\t        Util.triggerTransitionEnd(_this);\n\t      }\n\t    }, duration);\n\t\n\t    return this;\n\t  }\n\t\n\t  function setTransitionEndSupport() {\n\t    transition = transitionEndTest();\n\t\n\t    $.fn.emulateTransitionEnd = transitionEndEmulator;\n\t\n\t    if (Util.supportsTransitionEnd()) {\n\t      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * --------------------------------------------------------------------------\n\t   * Public Util Api\n\t   * --------------------------------------------------------------------------\n\t   */\n\t\n\t  var Util = {\n\t\n\t    TRANSITION_END: 'bsTransitionEnd',\n\t\n\t    getUID: function getUID(prefix) {\n\t      do {\n\t        /* eslint-disable no-bitwise */\n\t        prefix += ~ ~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n\t        /* eslint-enable no-bitwise */\n\t      } while (document.getElementById(prefix));\n\t      return prefix;\n\t    },\n\t\n\t    getSelectorFromElement: function getSelectorFromElement(element) {\n\t      var selector = element.getAttribute('data-target');\n\t\n\t      if (!selector) {\n\t        selector = element.getAttribute('href') || '';\n\t        selector = /^#[a-z]/i.test(selector) ? selector : null;\n\t      }\n\t\n\t      return selector;\n\t    },\n\t\n\t    reflow: function reflow(element) {\n\t      new Function('bs', 'return bs')(element.offsetHeight);\n\t    },\n\t\n\t    triggerTransitionEnd: function triggerTransitionEnd(element) {\n\t      $(element).trigger(transition.end);\n\t    },\n\t\n\t    supportsTransitionEnd: function supportsTransitionEnd() {\n\t      return Boolean(transition);\n\t    },\n\t\n\t    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n\t      for (var property in configTypes) {\n\t        if (configTypes.hasOwnProperty(property)) {\n\t          var expectedTypes = configTypes[property];\n\t          var value = config[property];\n\t          var valueType = undefined;\n\t\n\t          if (value && isElement(value)) {\n\t            valueType = 'element';\n\t          } else {\n\t            valueType = toType(value);\n\t          }\n\t\n\t          if (!new RegExp(expectedTypes).test(valueType)) {\n\t            throw new Error(componentName.toUpperCase() + ': ' + ('Option \"' + property + '\" provided type \"' + valueType + '\" ') + ('but expected type \"' + expectedTypes + '\".'));\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  setTransitionEndSupport();\n\t\n\t  return Util;\n\t})(jQuery);\n\t//# sourceMappingURL=util.js.map\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = Util;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar store      = __webpack_require__(25)('wks')\n\t  , uid        = __webpack_require__(26)\n\t  , Symbol     = __webpack_require__(3).Symbol\n\t  , USE_SYMBOL = typeof Symbol == 'function';\n\t\n\tvar $exports = module.exports = function(name){\n\t  return store[name] || (store[name] =\n\t    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n\t};\n\t\n\t$exports.store = store;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(14)\n\t  , createDesc = __webpack_require__(23);\n\tmodule.exports = __webpack_require__(7) ? function(object, key, value){\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(13);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(21)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! tether 1.3.7 */\n\t\n\t(function(root, factory) {\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    module.exports = factory(require, exports, module);\n\t  } else {\n\t    root.Tether = factory();\n\t  }\n\t}(this, function(require, exports, module) {\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar TetherBase = undefined;\n\tif (typeof TetherBase === 'undefined') {\n\t  TetherBase = { modules: [] };\n\t}\n\t\n\tvar zeroElement = null;\n\t\n\t// Same as native getBoundingClientRect, except it takes into account parent <frame> offsets\n\t// if the element lies within a nested document (<frame> or <iframe>-like).\n\tfunction getActualBoundingClientRect(node) {\n\t  var boundingRect = node.getBoundingClientRect();\n\t\n\t  // The original object returned by getBoundingClientRect is immutable, so we clone it\n\t  // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9\n\t  var rect = {};\n\t  for (var k in boundingRect) {\n\t    rect[k] = boundingRect[k];\n\t  }\n\t\n\t  if (node.ownerDocument !== document) {\n\t    var _frameElement = node.ownerDocument.defaultView.frameElement;\n\t    if (_frameElement) {\n\t      var frameRect = getActualBoundingClientRect(_frameElement);\n\t      rect.top += frameRect.top;\n\t      rect.bottom += frameRect.top;\n\t      rect.left += frameRect.left;\n\t      rect.right += frameRect.left;\n\t    }\n\t  }\n\t\n\t  return rect;\n\t}\n\t\n\tfunction getScrollParents(el) {\n\t  // In firefox if the el is inside an iframe with display: none; window.getComputedStyle() will return null;\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\t  var computedStyle = getComputedStyle(el) || {};\n\t  var position = computedStyle.position;\n\t  var parents = [];\n\t\n\t  if (position === 'fixed') {\n\t    return [el];\n\t  }\n\t\n\t  var parent = el;\n\t  while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {\n\t    var style = undefined;\n\t    try {\n\t      style = getComputedStyle(parent);\n\t    } catch (err) {}\n\t\n\t    if (typeof style === 'undefined' || style === null) {\n\t      parents.push(parent);\n\t      return parents;\n\t    }\n\t\n\t    var _style = style;\n\t    var overflow = _style.overflow;\n\t    var overflowX = _style.overflowX;\n\t    var overflowY = _style.overflowY;\n\t\n\t    if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n\t      if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {\n\t        parents.push(parent);\n\t      }\n\t    }\n\t  }\n\t\n\t  parents.push(el.ownerDocument.body);\n\t\n\t  // If the node is within a frame, account for the parent window scroll\n\t  if (el.ownerDocument !== document) {\n\t    parents.push(el.ownerDocument.defaultView);\n\t  }\n\t\n\t  return parents;\n\t}\n\t\n\tvar uniqueId = (function () {\n\t  var id = 0;\n\t  return function () {\n\t    return ++id;\n\t  };\n\t})();\n\t\n\tvar zeroPosCache = {};\n\tvar getOrigin = function getOrigin() {\n\t  // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of\n\t  // jitter as the user scrolls that messes with our ability to detect if two positions\n\t  // are equivilant or not.  We place an element at the top left of the page that will\n\t  // get the same jitter, so we can cancel the two out.\n\t  var node = zeroElement;\n\t  if (!node) {\n\t    node = document.createElement('div');\n\t    node.setAttribute('data-tether-id', uniqueId());\n\t    extend(node.style, {\n\t      top: 0,\n\t      left: 0,\n\t      position: 'absolute'\n\t    });\n\t\n\t    document.body.appendChild(node);\n\t\n\t    zeroElement = node;\n\t  }\n\t\n\t  var id = node.getAttribute('data-tether-id');\n\t  if (typeof zeroPosCache[id] === 'undefined') {\n\t    zeroPosCache[id] = getActualBoundingClientRect(node);\n\t\n\t    // Clear the cache when this position call is done\n\t    defer(function () {\n\t      delete zeroPosCache[id];\n\t    });\n\t  }\n\t\n\t  return zeroPosCache[id];\n\t};\n\t\n\tfunction removeUtilElements() {\n\t  if (zeroElement) {\n\t    document.body.removeChild(zeroElement);\n\t  }\n\t  zeroElement = null;\n\t};\n\t\n\tfunction getBounds(el) {\n\t  var doc = undefined;\n\t  if (el === document) {\n\t    doc = document;\n\t    el = document.documentElement;\n\t  } else {\n\t    doc = el.ownerDocument;\n\t  }\n\t\n\t  var docEl = doc.documentElement;\n\t\n\t  var box = getActualBoundingClientRect(el);\n\t\n\t  var origin = getOrigin();\n\t\n\t  box.top -= origin.top;\n\t  box.left -= origin.left;\n\t\n\t  if (typeof box.width === 'undefined') {\n\t    box.width = document.body.scrollWidth - box.left - box.right;\n\t  }\n\t  if (typeof box.height === 'undefined') {\n\t    box.height = document.body.scrollHeight - box.top - box.bottom;\n\t  }\n\t\n\t  box.top = box.top - docEl.clientTop;\n\t  box.left = box.left - docEl.clientLeft;\n\t  box.right = doc.body.clientWidth - box.width - box.left;\n\t  box.bottom = doc.body.clientHeight - box.height - box.top;\n\t\n\t  return box;\n\t}\n\t\n\tfunction getOffsetParent(el) {\n\t  return el.offsetParent || document.documentElement;\n\t}\n\t\n\tvar _scrollBarSize = null;\n\tfunction getScrollBarSize() {\n\t  if (_scrollBarSize) {\n\t    return _scrollBarSize;\n\t  }\n\t  var inner = document.createElement('div');\n\t  inner.style.width = '100%';\n\t  inner.style.height = '200px';\n\t\n\t  var outer = document.createElement('div');\n\t  extend(outer.style, {\n\t    position: 'absolute',\n\t    top: 0,\n\t    left: 0,\n\t    pointerEvents: 'none',\n\t    visibility: 'hidden',\n\t    width: '200px',\n\t    height: '150px',\n\t    overflow: 'hidden'\n\t  });\n\t\n\t  outer.appendChild(inner);\n\t\n\t  document.body.appendChild(outer);\n\t\n\t  var widthContained = inner.offsetWidth;\n\t  outer.style.overflow = 'scroll';\n\t  var widthScroll = inner.offsetWidth;\n\t\n\t  if (widthContained === widthScroll) {\n\t    widthScroll = outer.clientWidth;\n\t  }\n\t\n\t  document.body.removeChild(outer);\n\t\n\t  var width = widthContained - widthScroll;\n\t\n\t  _scrollBarSize = { width: width, height: width };\n\t  return _scrollBarSize;\n\t}\n\t\n\tfunction extend() {\n\t  var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t  var args = [];\n\t\n\t  Array.prototype.push.apply(args, arguments);\n\t\n\t  args.slice(1).forEach(function (obj) {\n\t    if (obj) {\n\t      for (var key in obj) {\n\t        if (({}).hasOwnProperty.call(obj, key)) {\n\t          out[key] = obj[key];\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  return out;\n\t}\n\t\n\tfunction removeClass(el, name) {\n\t  if (typeof el.classList !== 'undefined') {\n\t    name.split(' ').forEach(function (cls) {\n\t      if (cls.trim()) {\n\t        el.classList.remove(cls);\n\t      }\n\t    });\n\t  } else {\n\t    var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');\n\t    var className = getClassName(el).replace(regex, ' ');\n\t    setClassName(el, className);\n\t  }\n\t}\n\t\n\tfunction addClass(el, name) {\n\t  if (typeof el.classList !== 'undefined') {\n\t    name.split(' ').forEach(function (cls) {\n\t      if (cls.trim()) {\n\t        el.classList.add(cls);\n\t      }\n\t    });\n\t  } else {\n\t    removeClass(el, name);\n\t    var cls = getClassName(el) + (' ' + name);\n\t    setClassName(el, cls);\n\t  }\n\t}\n\t\n\tfunction hasClass(el, name) {\n\t  if (typeof el.classList !== 'undefined') {\n\t    return el.classList.contains(name);\n\t  }\n\t  var className = getClassName(el);\n\t  return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);\n\t}\n\t\n\tfunction getClassName(el) {\n\t  // Can't use just SVGAnimatedString here since nodes within a Frame in IE have\n\t  // completely separately SVGAnimatedString base classes\n\t  if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {\n\t    return el.className.baseVal;\n\t  }\n\t  return el.className;\n\t}\n\t\n\tfunction setClassName(el, className) {\n\t  el.setAttribute('class', className);\n\t}\n\t\n\tfunction updateClasses(el, add, all) {\n\t  // Of the set of 'all' classes, we need the 'add' classes, and only the\n\t  // 'add' classes to be set.\n\t  all.forEach(function (cls) {\n\t    if (add.indexOf(cls) === -1 && hasClass(el, cls)) {\n\t      removeClass(el, cls);\n\t    }\n\t  });\n\t\n\t  add.forEach(function (cls) {\n\t    if (!hasClass(el, cls)) {\n\t      addClass(el, cls);\n\t    }\n\t  });\n\t}\n\t\n\tvar deferred = [];\n\t\n\tvar defer = function defer(fn) {\n\t  deferred.push(fn);\n\t};\n\t\n\tvar flush = function flush() {\n\t  var fn = undefined;\n\t  while (fn = deferred.pop()) {\n\t    fn();\n\t  }\n\t};\n\t\n\tvar Evented = (function () {\n\t  function Evented() {\n\t    _classCallCheck(this, Evented);\n\t  }\n\t\n\t  _createClass(Evented, [{\n\t    key: 'on',\n\t    value: function on(event, handler, ctx) {\n\t      var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\t\n\t      if (typeof this.bindings === 'undefined') {\n\t        this.bindings = {};\n\t      }\n\t      if (typeof this.bindings[event] === 'undefined') {\n\t        this.bindings[event] = [];\n\t      }\n\t      this.bindings[event].push({ handler: handler, ctx: ctx, once: once });\n\t    }\n\t  }, {\n\t    key: 'once',\n\t    value: function once(event, handler, ctx) {\n\t      this.on(event, handler, ctx, true);\n\t    }\n\t  }, {\n\t    key: 'off',\n\t    value: function off(event, handler) {\n\t      if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {\n\t        return;\n\t      }\n\t\n\t      if (typeof handler === 'undefined') {\n\t        delete this.bindings[event];\n\t      } else {\n\t        var i = 0;\n\t        while (i < this.bindings[event].length) {\n\t          if (this.bindings[event][i].handler === handler) {\n\t            this.bindings[event].splice(i, 1);\n\t          } else {\n\t            ++i;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'trigger',\n\t    value: function trigger(event) {\n\t      if (typeof this.bindings !== 'undefined' && this.bindings[event]) {\n\t        var i = 0;\n\t\n\t        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t          args[_key - 1] = arguments[_key];\n\t        }\n\t\n\t        while (i < this.bindings[event].length) {\n\t          var _bindings$event$i = this.bindings[event][i];\n\t          var handler = _bindings$event$i.handler;\n\t          var ctx = _bindings$event$i.ctx;\n\t          var once = _bindings$event$i.once;\n\t\n\t          var context = ctx;\n\t          if (typeof context === 'undefined') {\n\t            context = this;\n\t          }\n\t\n\t          handler.apply(context, args);\n\t\n\t          if (once) {\n\t            this.bindings[event].splice(i, 1);\n\t          } else {\n\t            ++i;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Evented;\n\t})();\n\t\n\tTetherBase.Utils = {\n\t  getActualBoundingClientRect: getActualBoundingClientRect,\n\t  getScrollParents: getScrollParents,\n\t  getBounds: getBounds,\n\t  getOffsetParent: getOffsetParent,\n\t  extend: extend,\n\t  addClass: addClass,\n\t  removeClass: removeClass,\n\t  hasClass: hasClass,\n\t  updateClasses: updateClasses,\n\t  defer: defer,\n\t  flush: flush,\n\t  uniqueId: uniqueId,\n\t  Evented: Evented,\n\t  getScrollBarSize: getScrollBarSize,\n\t  removeUtilElements: removeUtilElements\n\t};\n\t/* globals TetherBase, performance */\n\t\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x6, _x7, _x8) { var _again = true; _function: while (_again) { var object = _x6, property = _x7, receiver = _x8; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x6 = parent; _x7 = property; _x8 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tif (typeof TetherBase === 'undefined') {\n\t  throw new Error('You must include the utils.js file before tether.js');\n\t}\n\t\n\tvar _TetherBase$Utils = TetherBase.Utils;\n\tvar getScrollParents = _TetherBase$Utils.getScrollParents;\n\tvar getBounds = _TetherBase$Utils.getBounds;\n\tvar getOffsetParent = _TetherBase$Utils.getOffsetParent;\n\tvar extend = _TetherBase$Utils.extend;\n\tvar addClass = _TetherBase$Utils.addClass;\n\tvar removeClass = _TetherBase$Utils.removeClass;\n\tvar updateClasses = _TetherBase$Utils.updateClasses;\n\tvar defer = _TetherBase$Utils.defer;\n\tvar flush = _TetherBase$Utils.flush;\n\tvar getScrollBarSize = _TetherBase$Utils.getScrollBarSize;\n\tvar removeUtilElements = _TetherBase$Utils.removeUtilElements;\n\t\n\tfunction within(a, b) {\n\t  var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n\t\n\t  return a + diff >= b && b >= a - diff;\n\t}\n\t\n\tvar transformKey = (function () {\n\t  if (typeof document === 'undefined') {\n\t    return '';\n\t  }\n\t  var el = document.createElement('div');\n\t\n\t  var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];\n\t  for (var i = 0; i < transforms.length; ++i) {\n\t    var key = transforms[i];\n\t    if (el.style[key] !== undefined) {\n\t      return key;\n\t    }\n\t  }\n\t})();\n\t\n\tvar tethers = [];\n\t\n\tvar position = function position() {\n\t  tethers.forEach(function (tether) {\n\t    tether.position(false);\n\t  });\n\t  flush();\n\t};\n\t\n\tfunction now() {\n\t  if (typeof performance !== 'undefined' && typeof performance.now !== 'undefined') {\n\t    return performance.now();\n\t  }\n\t  return +new Date();\n\t}\n\t\n\t(function () {\n\t  var lastCall = null;\n\t  var lastDuration = null;\n\t  var pendingTimeout = null;\n\t\n\t  var tick = function tick() {\n\t    if (typeof lastDuration !== 'undefined' && lastDuration > 16) {\n\t      // We voluntarily throttle ourselves if we can't manage 60fps\n\t      lastDuration = Math.min(lastDuration - 16, 250);\n\t\n\t      // Just in case this is the last event, remember to position just once more\n\t      pendingTimeout = setTimeout(tick, 250);\n\t      return;\n\t    }\n\t\n\t    if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {\n\t      // Some browsers call events a little too frequently, refuse to run more than is reasonable\n\t      return;\n\t    }\n\t\n\t    if (pendingTimeout != null) {\n\t      clearTimeout(pendingTimeout);\n\t      pendingTimeout = null;\n\t    }\n\t\n\t    lastCall = now();\n\t    position();\n\t    lastDuration = now() - lastCall;\n\t  };\n\t\n\t  if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {\n\t    ['resize', 'scroll', 'touchmove'].forEach(function (event) {\n\t      window.addEventListener(event, tick);\n\t    });\n\t  }\n\t})();\n\t\n\tvar MIRROR_LR = {\n\t  center: 'center',\n\t  left: 'right',\n\t  right: 'left'\n\t};\n\t\n\tvar MIRROR_TB = {\n\t  middle: 'middle',\n\t  top: 'bottom',\n\t  bottom: 'top'\n\t};\n\t\n\tvar OFFSET_MAP = {\n\t  top: 0,\n\t  left: 0,\n\t  middle: '50%',\n\t  center: '50%',\n\t  bottom: '100%',\n\t  right: '100%'\n\t};\n\t\n\tvar autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {\n\t  var left = attachment.left;\n\t  var top = attachment.top;\n\t\n\t  if (left === 'auto') {\n\t    left = MIRROR_LR[relativeToAttachment.left];\n\t  }\n\t\n\t  if (top === 'auto') {\n\t    top = MIRROR_TB[relativeToAttachment.top];\n\t  }\n\t\n\t  return { left: left, top: top };\n\t};\n\t\n\tvar attachmentToOffset = function attachmentToOffset(attachment) {\n\t  var left = attachment.left;\n\t  var top = attachment.top;\n\t\n\t  if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {\n\t    left = OFFSET_MAP[attachment.left];\n\t  }\n\t\n\t  if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {\n\t    top = OFFSET_MAP[attachment.top];\n\t  }\n\t\n\t  return { left: left, top: top };\n\t};\n\t\n\tfunction addOffset() {\n\t  var out = { top: 0, left: 0 };\n\t\n\t  for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {\n\t    offsets[_key] = arguments[_key];\n\t  }\n\t\n\t  offsets.forEach(function (_ref) {\n\t    var top = _ref.top;\n\t    var left = _ref.left;\n\t\n\t    if (typeof top === 'string') {\n\t      top = parseFloat(top, 10);\n\t    }\n\t    if (typeof left === 'string') {\n\t      left = parseFloat(left, 10);\n\t    }\n\t\n\t    out.top += top;\n\t    out.left += left;\n\t  });\n\t\n\t  return out;\n\t}\n\t\n\tfunction offsetToPx(offset, size) {\n\t  if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {\n\t    offset.left = parseFloat(offset.left, 10) / 100 * size.width;\n\t  }\n\t  if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {\n\t    offset.top = parseFloat(offset.top, 10) / 100 * size.height;\n\t  }\n\t\n\t  return offset;\n\t}\n\t\n\tvar parseOffset = function parseOffset(value) {\n\t  var _value$split = value.split(' ');\n\t\n\t  var _value$split2 = _slicedToArray(_value$split, 2);\n\t\n\t  var top = _value$split2[0];\n\t  var left = _value$split2[1];\n\t\n\t  return { top: top, left: left };\n\t};\n\tvar parseAttachment = parseOffset;\n\t\n\tvar TetherClass = (function (_Evented) {\n\t  _inherits(TetherClass, _Evented);\n\t\n\t  function TetherClass(options) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, TetherClass);\n\t\n\t    _get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);\n\t    this.position = this.position.bind(this);\n\t\n\t    tethers.push(this);\n\t\n\t    this.history = [];\n\t\n\t    this.setOptions(options, false);\n\t\n\t    TetherBase.modules.forEach(function (module) {\n\t      if (typeof module.initialize !== 'undefined') {\n\t        module.initialize.call(_this);\n\t      }\n\t    });\n\t\n\t    this.position();\n\t  }\n\t\n\t  _createClass(TetherClass, [{\n\t    key: 'getClass',\n\t    value: function getClass() {\n\t      var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t      var classes = this.options.classes;\n\t\n\t      if (typeof classes !== 'undefined' && classes[key]) {\n\t        return this.options.classes[key];\n\t      } else if (this.options.classPrefix) {\n\t        return this.options.classPrefix + '-' + key;\n\t      } else {\n\t        return key;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setOptions',\n\t    value: function setOptions(options) {\n\t      var _this2 = this;\n\t\n\t      var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t      var defaults = {\n\t        offset: '0 0',\n\t        targetOffset: '0 0',\n\t        targetAttachment: 'auto auto',\n\t        classPrefix: 'tether'\n\t      };\n\t\n\t      this.options = extend(defaults, options);\n\t\n\t      var _options = this.options;\n\t      var element = _options.element;\n\t      var target = _options.target;\n\t      var targetModifier = _options.targetModifier;\n\t\n\t      this.element = element;\n\t      this.target = target;\n\t      this.targetModifier = targetModifier;\n\t\n\t      if (this.target === 'viewport') {\n\t        this.target = document.body;\n\t        this.targetModifier = 'visible';\n\t      } else if (this.target === 'scroll-handle') {\n\t        this.target = document.body;\n\t        this.targetModifier = 'scroll-handle';\n\t      }\n\t\n\t      ['element', 'target'].forEach(function (key) {\n\t        if (typeof _this2[key] === 'undefined') {\n\t          throw new Error('Tether Error: Both element and target must be defined');\n\t        }\n\t\n\t        if (typeof _this2[key].jquery !== 'undefined') {\n\t          _this2[key] = _this2[key][0];\n\t        } else if (typeof _this2[key] === 'string') {\n\t          _this2[key] = document.querySelector(_this2[key]);\n\t        }\n\t      });\n\t\n\t      addClass(this.element, this.getClass('element'));\n\t      if (!(this.options.addTargetClasses === false)) {\n\t        addClass(this.target, this.getClass('target'));\n\t      }\n\t\n\t      if (!this.options.attachment) {\n\t        throw new Error('Tether Error: You must provide an attachment');\n\t      }\n\t\n\t      this.targetAttachment = parseAttachment(this.options.targetAttachment);\n\t      this.attachment = parseAttachment(this.options.attachment);\n\t      this.offset = parseOffset(this.options.offset);\n\t      this.targetOffset = parseOffset(this.options.targetOffset);\n\t\n\t      if (typeof this.scrollParents !== 'undefined') {\n\t        this.disable();\n\t      }\n\t\n\t      if (this.targetModifier === 'scroll-handle') {\n\t        this.scrollParents = [this.target];\n\t      } else {\n\t        this.scrollParents = getScrollParents(this.target);\n\t      }\n\t\n\t      if (!(this.options.enabled === false)) {\n\t        this.enable(pos);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTargetBounds',\n\t    value: function getTargetBounds() {\n\t      if (typeof this.targetModifier !== 'undefined') {\n\t        if (this.targetModifier === 'visible') {\n\t          if (this.target === document.body) {\n\t            return { top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth };\n\t          } else {\n\t            var bounds = getBounds(this.target);\n\t\n\t            var out = {\n\t              height: bounds.height,\n\t              width: bounds.width,\n\t              top: bounds.top,\n\t              left: bounds.left\n\t            };\n\t\n\t            out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));\n\t            out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));\n\t            out.height = Math.min(innerHeight, out.height);\n\t            out.height -= 2;\n\t\n\t            out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));\n\t            out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));\n\t            out.width = Math.min(innerWidth, out.width);\n\t            out.width -= 2;\n\t\n\t            if (out.top < pageYOffset) {\n\t              out.top = pageYOffset;\n\t            }\n\t            if (out.left < pageXOffset) {\n\t              out.left = pageXOffset;\n\t            }\n\t\n\t            return out;\n\t          }\n\t        } else if (this.targetModifier === 'scroll-handle') {\n\t          var bounds = undefined;\n\t          var target = this.target;\n\t          if (target === document.body) {\n\t            target = document.documentElement;\n\t\n\t            bounds = {\n\t              left: pageXOffset,\n\t              top: pageYOffset,\n\t              height: innerHeight,\n\t              width: innerWidth\n\t            };\n\t          } else {\n\t            bounds = getBounds(target);\n\t          }\n\t\n\t          var style = getComputedStyle(target);\n\t\n\t          var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;\n\t\n\t          var scrollBottom = 0;\n\t          if (hasBottomScroll) {\n\t            scrollBottom = 15;\n\t          }\n\t\n\t          var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;\n\t\n\t          var out = {\n\t            width: 15,\n\t            height: height * 0.975 * (height / target.scrollHeight),\n\t            left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15\n\t          };\n\t\n\t          var fitAdj = 0;\n\t          if (height < 408 && this.target === document.body) {\n\t            fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;\n\t          }\n\t\n\t          if (this.target !== document.body) {\n\t            out.height = Math.max(out.height, 24);\n\t          }\n\t\n\t          var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);\n\t          out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);\n\t\n\t          if (this.target === document.body) {\n\t            out.height = Math.max(out.height, 24);\n\t          }\n\t\n\t          return out;\n\t        }\n\t      } else {\n\t        return getBounds(this.target);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'clearCache',\n\t    value: function clearCache() {\n\t      this._cache = {};\n\t    }\n\t  }, {\n\t    key: 'cache',\n\t    value: function cache(k, getter) {\n\t      // More than one module will often need the same DOM info, so\n\t      // we keep a cache which is cleared on each position call\n\t      if (typeof this._cache === 'undefined') {\n\t        this._cache = {};\n\t      }\n\t\n\t      if (typeof this._cache[k] === 'undefined') {\n\t        this._cache[k] = getter.call(this);\n\t      }\n\t\n\t      return this._cache[k];\n\t    }\n\t  }, {\n\t    key: 'enable',\n\t    value: function enable() {\n\t      var _this3 = this;\n\t\n\t      var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      if (!(this.options.addTargetClasses === false)) {\n\t        addClass(this.target, this.getClass('enabled'));\n\t      }\n\t      addClass(this.element, this.getClass('enabled'));\n\t      this.enabled = true;\n\t\n\t      this.scrollParents.forEach(function (parent) {\n\t        if (parent !== _this3.target.ownerDocument) {\n\t          parent.addEventListener('scroll', _this3.position);\n\t        }\n\t      });\n\t\n\t      if (pos) {\n\t        this.position();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'disable',\n\t    value: function disable() {\n\t      var _this4 = this;\n\t\n\t      removeClass(this.target, this.getClass('enabled'));\n\t      removeClass(this.element, this.getClass('enabled'));\n\t      this.enabled = false;\n\t\n\t      if (typeof this.scrollParents !== 'undefined') {\n\t        this.scrollParents.forEach(function (parent) {\n\t          parent.removeEventListener('scroll', _this4.position);\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      var _this5 = this;\n\t\n\t      this.disable();\n\t\n\t      tethers.forEach(function (tether, i) {\n\t        if (tether === _this5) {\n\t          tethers.splice(i, 1);\n\t        }\n\t      });\n\t\n\t      // Remove any elements we were using for convenience from the DOM\n\t      if (tethers.length === 0) {\n\t        removeUtilElements();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'updateAttachClasses',\n\t    value: function updateAttachClasses(elementAttach, targetAttach) {\n\t      var _this6 = this;\n\t\n\t      elementAttach = elementAttach || this.attachment;\n\t      targetAttach = targetAttach || this.targetAttachment;\n\t      var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];\n\t\n\t      if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {\n\t        // updateAttachClasses can be called more than once in a position call, so\n\t        // we need to clean up after ourselves such that when the last defer gets\n\t        // ran it doesn't add any extra classes from previous calls.\n\t        this._addAttachClasses.splice(0, this._addAttachClasses.length);\n\t      }\n\t\n\t      if (typeof this._addAttachClasses === 'undefined') {\n\t        this._addAttachClasses = [];\n\t      }\n\t      var add = this._addAttachClasses;\n\t\n\t      if (elementAttach.top) {\n\t        add.push(this.getClass('element-attached') + '-' + elementAttach.top);\n\t      }\n\t      if (elementAttach.left) {\n\t        add.push(this.getClass('element-attached') + '-' + elementAttach.left);\n\t      }\n\t      if (targetAttach.top) {\n\t        add.push(this.getClass('target-attached') + '-' + targetAttach.top);\n\t      }\n\t      if (targetAttach.left) {\n\t        add.push(this.getClass('target-attached') + '-' + targetAttach.left);\n\t      }\n\t\n\t      var all = [];\n\t      sides.forEach(function (side) {\n\t        all.push(_this6.getClass('element-attached') + '-' + side);\n\t        all.push(_this6.getClass('target-attached') + '-' + side);\n\t      });\n\t\n\t      defer(function () {\n\t        if (!(typeof _this6._addAttachClasses !== 'undefined')) {\n\t          return;\n\t        }\n\t\n\t        updateClasses(_this6.element, _this6._addAttachClasses, all);\n\t        if (!(_this6.options.addTargetClasses === false)) {\n\t          updateClasses(_this6.target, _this6._addAttachClasses, all);\n\t        }\n\t\n\t        delete _this6._addAttachClasses;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'position',\n\t    value: function position() {\n\t      var _this7 = this;\n\t\n\t      var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      // flushChanges commits the changes immediately, leave true unless you are positioning multiple\n\t      // tethers (in which case call Tether.Utils.flush yourself when you're done)\n\t\n\t      if (!this.enabled) {\n\t        return;\n\t      }\n\t\n\t      this.clearCache();\n\t\n\t      // Turn 'auto' attachments into the appropriate corner or edge\n\t      var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);\n\t\n\t      this.updateAttachClasses(this.attachment, targetAttachment);\n\t\n\t      var elementPos = this.cache('element-bounds', function () {\n\t        return getBounds(_this7.element);\n\t      });\n\t\n\t      var width = elementPos.width;\n\t      var height = elementPos.height;\n\t\n\t      if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n\t        var _lastSize = this.lastSize;\n\t\n\t        // We cache the height and width to make it possible to position elements that are\n\t        // getting hidden.\n\t        width = _lastSize.width;\n\t        height = _lastSize.height;\n\t      } else {\n\t        this.lastSize = { width: width, height: height };\n\t      }\n\t\n\t      var targetPos = this.cache('target-bounds', function () {\n\t        return _this7.getTargetBounds();\n\t      });\n\t      var targetSize = targetPos;\n\t\n\t      // Get an actual px offset from the attachment\n\t      var offset = offsetToPx(attachmentToOffset(this.attachment), { width: width, height: height });\n\t      var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);\n\t\n\t      var manualOffset = offsetToPx(this.offset, { width: width, height: height });\n\t      var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);\n\t\n\t      // Add the manually provided offset\n\t      offset = addOffset(offset, manualOffset);\n\t      targetOffset = addOffset(targetOffset, manualTargetOffset);\n\t\n\t      // It's now our goal to make (element position + offset) == (target position + target offset)\n\t      var left = targetPos.left + targetOffset.left - offset.left;\n\t      var top = targetPos.top + targetOffset.top - offset.top;\n\t\n\t      for (var i = 0; i < TetherBase.modules.length; ++i) {\n\t        var _module2 = TetherBase.modules[i];\n\t        var ret = _module2.position.call(this, {\n\t          left: left,\n\t          top: top,\n\t          targetAttachment: targetAttachment,\n\t          targetPos: targetPos,\n\t          elementPos: elementPos,\n\t          offset: offset,\n\t          targetOffset: targetOffset,\n\t          manualOffset: manualOffset,\n\t          manualTargetOffset: manualTargetOffset,\n\t          scrollbarSize: scrollbarSize,\n\t          attachment: this.attachment\n\t        });\n\t\n\t        if (ret === false) {\n\t          return false;\n\t        } else if (typeof ret === 'undefined' || typeof ret !== 'object') {\n\t          continue;\n\t        } else {\n\t          top = ret.top;\n\t          left = ret.left;\n\t        }\n\t      }\n\t\n\t      // We describe the position three different ways to give the optimizer\n\t      // a chance to decide the best possible way to position the element\n\t      // with the fewest repaints.\n\t      var next = {\n\t        // It's position relative to the page (absolute positioning when\n\t        // the element is a child of the body)\n\t        page: {\n\t          top: top,\n\t          left: left\n\t        },\n\t\n\t        // It's position relative to the viewport (fixed positioning)\n\t        viewport: {\n\t          top: top - pageYOffset,\n\t          bottom: pageYOffset - top - height + innerHeight,\n\t          left: left - pageXOffset,\n\t          right: pageXOffset - left - width + innerWidth\n\t        }\n\t      };\n\t\n\t      var doc = this.target.ownerDocument;\n\t      var win = doc.defaultView;\n\t\n\t      var scrollbarSize = undefined;\n\t      if (win.innerHeight > doc.documentElement.clientHeight) {\n\t        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\n\t        next.viewport.bottom -= scrollbarSize.height;\n\t      }\n\t\n\t      if (win.innerWidth > doc.documentElement.clientWidth) {\n\t        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\n\t        next.viewport.right -= scrollbarSize.width;\n\t      }\n\t\n\t      if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {\n\t        // Absolute positioning in the body will be relative to the page, not the 'initial containing block'\n\t        next.page.bottom = doc.body.scrollHeight - top - height;\n\t        next.page.right = doc.body.scrollWidth - left - width;\n\t      }\n\t\n\t      if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {\n\t        (function () {\n\t          var offsetParent = _this7.cache('target-offsetparent', function () {\n\t            return getOffsetParent(_this7.target);\n\t          });\n\t          var offsetPosition = _this7.cache('target-offsetparent-bounds', function () {\n\t            return getBounds(offsetParent);\n\t          });\n\t          var offsetParentStyle = getComputedStyle(offsetParent);\n\t          var offsetParentSize = offsetPosition;\n\t\n\t          var offsetBorder = {};\n\t          ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {\n\t            offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);\n\t          });\n\t\n\t          offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;\n\t          offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;\n\t\n\t          if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {\n\t            if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {\n\t              // We're within the visible part of the target's scroll parent\n\t              var scrollTop = offsetParent.scrollTop;\n\t              var scrollLeft = offsetParent.scrollLeft;\n\t\n\t              // It's position relative to the target's offset parent (absolute positioning when\n\t              // the element is moved to be a child of the target's offset parent).\n\t              next.offset = {\n\t                top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,\n\t                left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left\n\t              };\n\t            }\n\t          }\n\t        })();\n\t      }\n\t\n\t      // We could also travel up the DOM and try each containing context, rather than only\n\t      // looking at the body, but we're gonna get diminishing returns.\n\t\n\t      this.move(next);\n\t\n\t      this.history.unshift(next);\n\t\n\t      if (this.history.length > 3) {\n\t        this.history.pop();\n\t      }\n\t\n\t      if (flushChanges) {\n\t        flush();\n\t      }\n\t\n\t      return true;\n\t    }\n\t\n\t    // THE ISSUE\n\t  }, {\n\t    key: 'move',\n\t    value: function move(pos) {\n\t      var _this8 = this;\n\t\n\t      if (!(typeof this.element.parentNode !== 'undefined')) {\n\t        return;\n\t      }\n\t\n\t      var same = {};\n\t\n\t      for (var type in pos) {\n\t        same[type] = {};\n\t\n\t        for (var key in pos[type]) {\n\t          var found = false;\n\t\n\t          for (var i = 0; i < this.history.length; ++i) {\n\t            var point = this.history[i];\n\t            if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {\n\t              found = true;\n\t              break;\n\t            }\n\t          }\n\t\n\t          if (!found) {\n\t            same[type][key] = true;\n\t          }\n\t        }\n\t      }\n\t\n\t      var css = { top: '', left: '', right: '', bottom: '' };\n\t\n\t      var transcribe = function transcribe(_same, _pos) {\n\t        var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';\n\t        var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;\n\t        if (gpu !== false) {\n\t          var yPos = undefined,\n\t              xPos = undefined;\n\t          if (_same.top) {\n\t            css.top = 0;\n\t            yPos = _pos.top;\n\t          } else {\n\t            css.bottom = 0;\n\t            yPos = -_pos.bottom;\n\t          }\n\t\n\t          if (_same.left) {\n\t            css.left = 0;\n\t            xPos = _pos.left;\n\t          } else {\n\t            css.right = 0;\n\t            xPos = -_pos.right;\n\t          }\n\t\n\t          if (window.matchMedia) {\n\t            // HubSpot/tether#207\n\t            var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;\n\t            if (!retina) {\n\t              xPos = Math.round(xPos);\n\t              yPos = Math.round(yPos);\n\t            }\n\t          }\n\t\n\t          css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';\n\t\n\t          if (transformKey !== 'msTransform') {\n\t            // The Z transform will keep this in the GPU (faster, and prevents artifacts),\n\t            // but IE9 doesn't support 3d transforms and will choke.\n\t            css[transformKey] += \" translateZ(0)\";\n\t          }\n\t        } else {\n\t          if (_same.top) {\n\t            css.top = _pos.top + 'px';\n\t          } else {\n\t            css.bottom = _pos.bottom + 'px';\n\t          }\n\t\n\t          if (_same.left) {\n\t            css.left = _pos.left + 'px';\n\t          } else {\n\t            css.right = _pos.right + 'px';\n\t          }\n\t        }\n\t      };\n\t\n\t      var moved = false;\n\t      if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {\n\t        css.position = 'absolute';\n\t        transcribe(same.page, pos.page);\n\t      } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {\n\t        css.position = 'fixed';\n\t        transcribe(same.viewport, pos.viewport);\n\t      } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {\n\t        (function () {\n\t          css.position = 'absolute';\n\t          var offsetParent = _this8.cache('target-offsetparent', function () {\n\t            return getOffsetParent(_this8.target);\n\t          });\n\t\n\t          if (getOffsetParent(_this8.element) !== offsetParent) {\n\t            defer(function () {\n\t              _this8.element.parentNode.removeChild(_this8.element);\n\t              offsetParent.appendChild(_this8.element);\n\t            });\n\t          }\n\t\n\t          transcribe(same.offset, pos.offset);\n\t          moved = true;\n\t        })();\n\t      } else {\n\t        css.position = 'absolute';\n\t        transcribe({ top: true, left: true }, pos.page);\n\t      }\n\t\n\t      if (!moved) {\n\t        var offsetParentIsBody = true;\n\t        var currentNode = this.element.parentNode;\n\t        while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {\n\t          if (getComputedStyle(currentNode).position !== 'static') {\n\t            offsetParentIsBody = false;\n\t            break;\n\t          }\n\t\n\t          currentNode = currentNode.parentNode;\n\t        }\n\t\n\t        if (!offsetParentIsBody) {\n\t          this.element.parentNode.removeChild(this.element);\n\t          this.element.ownerDocument.body.appendChild(this.element);\n\t        }\n\t      }\n\t\n\t      // Any css change will trigger a repaint, so let's avoid one if nothing changed\n\t      var writeCSS = {};\n\t      var write = false;\n\t      for (var key in css) {\n\t        var val = css[key];\n\t        var elVal = this.element.style[key];\n\t\n\t        if (elVal !== val) {\n\t          write = true;\n\t          writeCSS[key] = val;\n\t        }\n\t      }\n\t\n\t      if (write) {\n\t        defer(function () {\n\t          extend(_this8.element.style, writeCSS);\n\t          _this8.trigger('repositioned');\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return TetherClass;\n\t})(Evented);\n\t\n\tTetherClass.modules = [];\n\t\n\tTetherBase.position = position;\n\t\n\tvar Tether = extend(TetherClass, TetherBase);\n\t/* globals TetherBase */\n\t\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar _TetherBase$Utils = TetherBase.Utils;\n\tvar getBounds = _TetherBase$Utils.getBounds;\n\tvar extend = _TetherBase$Utils.extend;\n\tvar updateClasses = _TetherBase$Utils.updateClasses;\n\tvar defer = _TetherBase$Utils.defer;\n\t\n\tvar BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];\n\t\n\tfunction getBoundingRect(tether, to) {\n\t  if (to === 'scrollParent') {\n\t    to = tether.scrollParents[0];\n\t  } else if (to === 'window') {\n\t    to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];\n\t  }\n\t\n\t  if (to === document) {\n\t    to = to.documentElement;\n\t  }\n\t\n\t  if (typeof to.nodeType !== 'undefined') {\n\t    (function () {\n\t      var node = to;\n\t      var size = getBounds(to);\n\t      var pos = size;\n\t      var style = getComputedStyle(to);\n\t\n\t      to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];\n\t\n\t      // Account any parent Frames scroll offset\n\t      if (node.ownerDocument !== document) {\n\t        var win = node.ownerDocument.defaultView;\n\t        to[0] += win.pageXOffset;\n\t        to[1] += win.pageYOffset;\n\t        to[2] += win.pageXOffset;\n\t        to[3] += win.pageYOffset;\n\t      }\n\t\n\t      BOUNDS_FORMAT.forEach(function (side, i) {\n\t        side = side[0].toUpperCase() + side.substr(1);\n\t        if (side === 'Top' || side === 'Left') {\n\t          to[i] += parseFloat(style['border' + side + 'Width']);\n\t        } else {\n\t          to[i] -= parseFloat(style['border' + side + 'Width']);\n\t        }\n\t      });\n\t    })();\n\t  }\n\t\n\t  return to;\n\t}\n\t\n\tTetherBase.modules.push({\n\t  position: function position(_ref) {\n\t    var _this = this;\n\t\n\t    var top = _ref.top;\n\t    var left = _ref.left;\n\t    var targetAttachment = _ref.targetAttachment;\n\t\n\t    if (!this.options.constraints) {\n\t      return true;\n\t    }\n\t\n\t    var _cache = this.cache('element-bounds', function () {\n\t      return getBounds(_this.element);\n\t    });\n\t\n\t    var height = _cache.height;\n\t    var width = _cache.width;\n\t\n\t    if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n\t      var _lastSize = this.lastSize;\n\t\n\t      // Handle the item getting hidden as a result of our positioning without glitching\n\t      // the classes in and out\n\t      width = _lastSize.width;\n\t      height = _lastSize.height;\n\t    }\n\t\n\t    var targetSize = this.cache('target-bounds', function () {\n\t      return _this.getTargetBounds();\n\t    });\n\t\n\t    var targetHeight = targetSize.height;\n\t    var targetWidth = targetSize.width;\n\t\n\t    var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];\n\t\n\t    this.options.constraints.forEach(function (constraint) {\n\t      var outOfBoundsClass = constraint.outOfBoundsClass;\n\t      var pinnedClass = constraint.pinnedClass;\n\t\n\t      if (outOfBoundsClass) {\n\t        allClasses.push(outOfBoundsClass);\n\t      }\n\t      if (pinnedClass) {\n\t        allClasses.push(pinnedClass);\n\t      }\n\t    });\n\t\n\t    allClasses.forEach(function (cls) {\n\t      ['left', 'top', 'right', 'bottom'].forEach(function (side) {\n\t        allClasses.push(cls + '-' + side);\n\t      });\n\t    });\n\t\n\t    var addClasses = [];\n\t\n\t    var tAttachment = extend({}, targetAttachment);\n\t    var eAttachment = extend({}, this.attachment);\n\t\n\t    this.options.constraints.forEach(function (constraint) {\n\t      var to = constraint.to;\n\t      var attachment = constraint.attachment;\n\t      var pin = constraint.pin;\n\t\n\t      if (typeof attachment === 'undefined') {\n\t        attachment = '';\n\t      }\n\t\n\t      var changeAttachX = undefined,\n\t          changeAttachY = undefined;\n\t      if (attachment.indexOf(' ') >= 0) {\n\t        var _attachment$split = attachment.split(' ');\n\t\n\t        var _attachment$split2 = _slicedToArray(_attachment$split, 2);\n\t\n\t        changeAttachY = _attachment$split2[0];\n\t        changeAttachX = _attachment$split2[1];\n\t      } else {\n\t        changeAttachX = changeAttachY = attachment;\n\t      }\n\t\n\t      var bounds = getBoundingRect(_this, to);\n\t\n\t      if (changeAttachY === 'target' || changeAttachY === 'both') {\n\t        if (top < bounds[1] && tAttachment.top === 'top') {\n\t          top += targetHeight;\n\t          tAttachment.top = 'bottom';\n\t        }\n\t\n\t        if (top + height > bounds[3] && tAttachment.top === 'bottom') {\n\t          top -= targetHeight;\n\t          tAttachment.top = 'top';\n\t        }\n\t      }\n\t\n\t      if (changeAttachY === 'together') {\n\t        if (tAttachment.top === 'top') {\n\t          if (eAttachment.top === 'bottom' && top < bounds[1]) {\n\t            top += targetHeight;\n\t            tAttachment.top = 'bottom';\n\t\n\t            top += height;\n\t            eAttachment.top = 'top';\n\t          } else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {\n\t            top -= height - targetHeight;\n\t            tAttachment.top = 'bottom';\n\t\n\t            eAttachment.top = 'bottom';\n\t          }\n\t        }\n\t\n\t        if (tAttachment.top === 'bottom') {\n\t          if (eAttachment.top === 'top' && top + height > bounds[3]) {\n\t            top -= targetHeight;\n\t            tAttachment.top = 'top';\n\t\n\t            top -= height;\n\t            eAttachment.top = 'bottom';\n\t          } else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {\n\t            top += height - targetHeight;\n\t            tAttachment.top = 'top';\n\t\n\t            eAttachment.top = 'top';\n\t          }\n\t        }\n\t\n\t        if (tAttachment.top === 'middle') {\n\t          if (top + height > bounds[3] && eAttachment.top === 'top') {\n\t            top -= height;\n\t            eAttachment.top = 'bottom';\n\t          } else if (top < bounds[1] && eAttachment.top === 'bottom') {\n\t            top += height;\n\t            eAttachment.top = 'top';\n\t          }\n\t        }\n\t      }\n\t\n\t      if (changeAttachX === 'target' || changeAttachX === 'both') {\n\t        if (left < bounds[0] && tAttachment.left === 'left') {\n\t          left += targetWidth;\n\t          tAttachment.left = 'right';\n\t        }\n\t\n\t        if (left + width > bounds[2] && tAttachment.left === 'right') {\n\t          left -= targetWidth;\n\t          tAttachment.left = 'left';\n\t        }\n\t      }\n\t\n\t      if (changeAttachX === 'together') {\n\t        if (left < bounds[0] && tAttachment.left === 'left') {\n\t          if (eAttachment.left === 'right') {\n\t            left += targetWidth;\n\t            tAttachment.left = 'right';\n\t\n\t            left += width;\n\t            eAttachment.left = 'left';\n\t          } else if (eAttachment.left === 'left') {\n\t            left += targetWidth;\n\t            tAttachment.left = 'right';\n\t\n\t            left -= width;\n\t            eAttachment.left = 'right';\n\t          }\n\t        } else if (left + width > bounds[2] && tAttachment.left === 'right') {\n\t          if (eAttachment.left === 'left') {\n\t            left -= targetWidth;\n\t            tAttachment.left = 'left';\n\t\n\t            left -= width;\n\t            eAttachment.left = 'right';\n\t          } else if (eAttachment.left === 'right') {\n\t            left -= targetWidth;\n\t            tAttachment.left = 'left';\n\t\n\t            left += width;\n\t            eAttachment.left = 'left';\n\t          }\n\t        } else if (tAttachment.left === 'center') {\n\t          if (left + width > bounds[2] && eAttachment.left === 'left') {\n\t            left -= width;\n\t            eAttachment.left = 'right';\n\t          } else if (left < bounds[0] && eAttachment.left === 'right') {\n\t            left += width;\n\t            eAttachment.left = 'left';\n\t          }\n\t        }\n\t      }\n\t\n\t      if (changeAttachY === 'element' || changeAttachY === 'both') {\n\t        if (top < bounds[1] && eAttachment.top === 'bottom') {\n\t          top += height;\n\t          eAttachment.top = 'top';\n\t        }\n\t\n\t        if (top + height > bounds[3] && eAttachment.top === 'top') {\n\t          top -= height;\n\t          eAttachment.top = 'bottom';\n\t        }\n\t      }\n\t\n\t      if (changeAttachX === 'element' || changeAttachX === 'both') {\n\t        if (left < bounds[0]) {\n\t          if (eAttachment.left === 'right') {\n\t            left += width;\n\t            eAttachment.left = 'left';\n\t          } else if (eAttachment.left === 'center') {\n\t            left += width / 2;\n\t            eAttachment.left = 'left';\n\t          }\n\t        }\n\t\n\t        if (left + width > bounds[2]) {\n\t          if (eAttachment.left === 'left') {\n\t            left -= width;\n\t            eAttachment.left = 'right';\n\t          } else if (eAttachment.left === 'center') {\n\t            left -= width / 2;\n\t            eAttachment.left = 'right';\n\t          }\n\t        }\n\t      }\n\t\n\t      if (typeof pin === 'string') {\n\t        pin = pin.split(',').map(function (p) {\n\t          return p.trim();\n\t        });\n\t      } else if (pin === true) {\n\t        pin = ['top', 'left', 'right', 'bottom'];\n\t      }\n\t\n\t      pin = pin || [];\n\t\n\t      var pinned = [];\n\t      var oob = [];\n\t\n\t      if (top < bounds[1]) {\n\t        if (pin.indexOf('top') >= 0) {\n\t          top = bounds[1];\n\t          pinned.push('top');\n\t        } else {\n\t          oob.push('top');\n\t        }\n\t      }\n\t\n\t      if (top + height > bounds[3]) {\n\t        if (pin.indexOf('bottom') >= 0) {\n\t          top = bounds[3] - height;\n\t          pinned.push('bottom');\n\t        } else {\n\t          oob.push('bottom');\n\t        }\n\t      }\n\t\n\t      if (left < bounds[0]) {\n\t        if (pin.indexOf('left') >= 0) {\n\t          left = bounds[0];\n\t          pinned.push('left');\n\t        } else {\n\t          oob.push('left');\n\t        }\n\t      }\n\t\n\t      if (left + width > bounds[2]) {\n\t        if (pin.indexOf('right') >= 0) {\n\t          left = bounds[2] - width;\n\t          pinned.push('right');\n\t        } else {\n\t          oob.push('right');\n\t        }\n\t      }\n\t\n\t      if (pinned.length) {\n\t        (function () {\n\t          var pinnedClass = undefined;\n\t          if (typeof _this.options.pinnedClass !== 'undefined') {\n\t            pinnedClass = _this.options.pinnedClass;\n\t          } else {\n\t            pinnedClass = _this.getClass('pinned');\n\t          }\n\t\n\t          addClasses.push(pinnedClass);\n\t          pinned.forEach(function (side) {\n\t            addClasses.push(pinnedClass + '-' + side);\n\t          });\n\t        })();\n\t      }\n\t\n\t      if (oob.length) {\n\t        (function () {\n\t          var oobClass = undefined;\n\t          if (typeof _this.options.outOfBoundsClass !== 'undefined') {\n\t            oobClass = _this.options.outOfBoundsClass;\n\t          } else {\n\t            oobClass = _this.getClass('out-of-bounds');\n\t          }\n\t\n\t          addClasses.push(oobClass);\n\t          oob.forEach(function (side) {\n\t            addClasses.push(oobClass + '-' + side);\n\t          });\n\t        })();\n\t      }\n\t\n\t      if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {\n\t        eAttachment.left = tAttachment.left = false;\n\t      }\n\t      if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {\n\t        eAttachment.top = tAttachment.top = false;\n\t      }\n\t\n\t      if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {\n\t        _this.updateAttachClasses(eAttachment, tAttachment);\n\t        _this.trigger('update', {\n\t          attachment: eAttachment,\n\t          targetAttachment: tAttachment\n\t        });\n\t      }\n\t    });\n\t\n\t    defer(function () {\n\t      if (!(_this.options.addTargetClasses === false)) {\n\t        updateClasses(_this.target, addClasses, allClasses);\n\t      }\n\t      updateClasses(_this.element, addClasses, allClasses);\n\t    });\n\t\n\t    return { top: top, left: left };\n\t  }\n\t});\n\t/* globals TetherBase */\n\t\n\t'use strict';\n\t\n\tvar _TetherBase$Utils = TetherBase.Utils;\n\tvar getBounds = _TetherBase$Utils.getBounds;\n\tvar updateClasses = _TetherBase$Utils.updateClasses;\n\tvar defer = _TetherBase$Utils.defer;\n\t\n\tTetherBase.modules.push({\n\t  position: function position(_ref) {\n\t    var _this = this;\n\t\n\t    var top = _ref.top;\n\t    var left = _ref.left;\n\t\n\t    var _cache = this.cache('element-bounds', function () {\n\t      return getBounds(_this.element);\n\t    });\n\t\n\t    var height = _cache.height;\n\t    var width = _cache.width;\n\t\n\t    var targetPos = this.getTargetBounds();\n\t\n\t    var bottom = top + height;\n\t    var right = left + width;\n\t\n\t    var abutted = [];\n\t    if (top <= targetPos.bottom && bottom >= targetPos.top) {\n\t      ['left', 'right'].forEach(function (side) {\n\t        var targetPosSide = targetPos[side];\n\t        if (targetPosSide === left || targetPosSide === right) {\n\t          abutted.push(side);\n\t        }\n\t      });\n\t    }\n\t\n\t    if (left <= targetPos.right && right >= targetPos.left) {\n\t      ['top', 'bottom'].forEach(function (side) {\n\t        var targetPosSide = targetPos[side];\n\t        if (targetPosSide === top || targetPosSide === bottom) {\n\t          abutted.push(side);\n\t        }\n\t      });\n\t    }\n\t\n\t    var allClasses = [];\n\t    var addClasses = [];\n\t\n\t    var sides = ['left', 'top', 'right', 'bottom'];\n\t    allClasses.push(this.getClass('abutted'));\n\t    sides.forEach(function (side) {\n\t      allClasses.push(_this.getClass('abutted') + '-' + side);\n\t    });\n\t\n\t    if (abutted.length) {\n\t      addClasses.push(this.getClass('abutted'));\n\t    }\n\t\n\t    abutted.forEach(function (side) {\n\t      addClasses.push(_this.getClass('abutted') + '-' + side);\n\t    });\n\t\n\t    defer(function () {\n\t      if (!(_this.options.addTargetClasses === false)) {\n\t        updateClasses(_this.target, addClasses, allClasses);\n\t      }\n\t      updateClasses(_this.element, addClasses, allClasses);\n\t    });\n\t\n\t    return true;\n\t  }\n\t});\n\t/* globals TetherBase */\n\t\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tTetherBase.modules.push({\n\t  position: function position(_ref) {\n\t    var top = _ref.top;\n\t    var left = _ref.left;\n\t\n\t    if (!this.options.shift) {\n\t      return;\n\t    }\n\t\n\t    var shift = this.options.shift;\n\t    if (typeof this.options.shift === 'function') {\n\t      shift = this.options.shift.call(this, { top: top, left: left });\n\t    }\n\t\n\t    var shiftTop = undefined,\n\t        shiftLeft = undefined;\n\t    if (typeof shift === 'string') {\n\t      shift = shift.split(' ');\n\t      shift[1] = shift[1] || shift[0];\n\t\n\t      var _shift = shift;\n\t\n\t      var _shift2 = _slicedToArray(_shift, 2);\n\t\n\t      shiftTop = _shift2[0];\n\t      shiftLeft = _shift2[1];\n\t\n\t      shiftTop = parseFloat(shiftTop, 10);\n\t      shiftLeft = parseFloat(shiftLeft, 10);\n\t    } else {\n\t      shiftTop = shift.top;\n\t      shiftLeft = shift.left;\n\t    }\n\t\n\t    top += shiftTop;\n\t    left += shiftLeft;\n\t\n\t    return { top: top, left: left };\n\t  }\n\t});\n\treturn Tether;\n\t\n\t}));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject       = __webpack_require__(6)\n\t  , IE8_DOM_DEFINE = __webpack_require__(53)\n\t  , toPrimitive    = __webpack_require__(68)\n\t  , dP             = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(7) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return dP(O, P, Attributes);\n\t  } catch(e){ /* empty */ }\n\t  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n\t  if('value' in Attributes)O[P] = Attributes.value;\n\t  return O;\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(25)('keys')\n\t  , uid    = __webpack_require__(26);\n\tmodule.exports = function(key){\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(54)\n\t  , defined = __webpack_require__(12);\n\tmodule.exports = function(it){\n\t  return IObject(defined(it));\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(13)\n\t  , document = __webpack_require__(3).document\n\t  // in old IE typeof document.createElement is 'object'\n\t  , is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function(it){\n\t  return is ? document.createElement(it) : {};\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// IE 8- don't enum bug keys\n\tmodule.exports = (\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n\t).split(',');\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar LIBRARY        = __webpack_require__(57)\n\t  , $export        = __webpack_require__(51)\n\t  , redefine       = __webpack_require__(63)\n\t  , hide           = __webpack_require__(5)\n\t  , has            = __webpack_require__(8)\n\t  , Iterators      = __webpack_require__(9)\n\t  , $iterCreate    = __webpack_require__(55)\n\t  , setToStringTag = __webpack_require__(24)\n\t  , getPrototypeOf = __webpack_require__(60)\n\t  , ITERATOR       = __webpack_require__(4)('iterator')\n\t  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n\t  , FF_ITERATOR    = '@@iterator'\n\t  , KEYS           = 'keys'\n\t  , VALUES         = 'values';\n\t\n\tvar returnThis = function(){ return this; };\n\t\n\tmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n\t  $iterCreate(Constructor, NAME, next);\n\t  var getMethod = function(kind){\n\t    if(!BUGGY && kind in proto)return proto[kind];\n\t    switch(kind){\n\t      case KEYS: return function keys(){ return new Constructor(this, kind); };\n\t      case VALUES: return function values(){ return new Constructor(this, kind); };\n\t    } return function entries(){ return new Constructor(this, kind); };\n\t  };\n\t  var TAG        = NAME + ' Iterator'\n\t    , DEF_VALUES = DEFAULT == VALUES\n\t    , VALUES_BUG = false\n\t    , proto      = Base.prototype\n\t    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n\t    , $default   = $native || getMethod(DEFAULT)\n\t    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n\t    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n\t    , methods, key, IteratorPrototype;\n\t  // Fix native\n\t  if($anyNative){\n\t    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n\t    if(IteratorPrototype !== Object.prototype){\n\t      // Set @@toStringTag to native iterators\n\t      setToStringTag(IteratorPrototype, TAG, true);\n\t      // fix for some old engines\n\t      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n\t    }\n\t  }\n\t  // fix Array#{values, @@iterator}.name in V8 / FF\n\t  if(DEF_VALUES && $native && $native.name !== VALUES){\n\t    VALUES_BUG = true;\n\t    $default = function values(){ return $native.call(this); };\n\t  }\n\t  // Define iterator\n\t  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n\t    hide(proto, ITERATOR, $default);\n\t  }\n\t  // Plug for library\n\t  Iterators[NAME] = $default;\n\t  Iterators[TAG]  = returnThis;\n\t  if(DEFAULT){\n\t    methods = {\n\t      values:  DEF_VALUES ? $default : getMethod(VALUES),\n\t      keys:    IS_SET     ? $default : getMethod(KEYS),\n\t      entries: $entries\n\t    };\n\t    if(FORCED)for(key in methods){\n\t      if(!(key in proto))redefine(proto, key, methods[key]);\n\t    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n\t  }\n\t  return methods;\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar def = __webpack_require__(14).f\n\t  , has = __webpack_require__(8)\n\t  , TAG = __webpack_require__(4)('toStringTag');\n\t\n\tmodule.exports = function(it, tag, stat){\n\t  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(3)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(45), __esModule: true };\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports.css = __webpack_require__ (81);\n\tmodule.exports.js = __webpack_require__ (32);\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__ (34);\n\t__webpack_require__ (35);\n\t__webpack_require__ (36);\n\t__webpack_require__ (37);\n\t__webpack_require__ (38);\n\t__webpack_require__ (39);\n\t__webpack_require__ (40);\n\t__webpack_require__ (41);\n\t__webpack_require__ (42);\n\t__webpack_require__ (43);\n\t__webpack_require__ (44);\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(31);\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, Util) {'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): alert.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Alert = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'alert';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.alert';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var DATA_API_KEY = '.data-api';\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t  var TRANSITION_DURATION = 150;\n\t\n\t  var Selector = {\n\t    DISMISS: '[data-dismiss=\"alert\"]'\n\t  };\n\t\n\t  var Event = {\n\t    CLOSE: 'close' + EVENT_KEY,\n\t    CLOSED: 'closed' + EVENT_KEY,\n\t    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    ALERT: 'alert',\n\t    FADE: 'fade',\n\t    IN: 'in'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Alert = (function () {\n\t    function Alert(element) {\n\t      _classCallCheck(this, Alert);\n\t\n\t      this._element = element;\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * Data Api implementation\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Alert, [{\n\t      key: 'close',\n\t\n\t      // public\n\t\n\t      value: function close(element) {\n\t        element = element || this._element;\n\t\n\t        var rootElement = this._getRootElement(element);\n\t        var customEvent = this._triggerCloseEvent(rootElement);\n\t\n\t        if (customEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        this._removeElement(rootElement);\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        $.removeData(this._element, DATA_KEY);\n\t        this._element = null;\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_getRootElement',\n\t      value: function _getRootElement(element) {\n\t        var selector = Util.getSelectorFromElement(element);\n\t        var parent = false;\n\t\n\t        if (selector) {\n\t          parent = $(selector)[0];\n\t        }\n\t\n\t        if (!parent) {\n\t          parent = $(element).closest('.' + ClassName.ALERT)[0];\n\t        }\n\t\n\t        return parent;\n\t      }\n\t    }, {\n\t      key: '_triggerCloseEvent',\n\t      value: function _triggerCloseEvent(element) {\n\t        var closeEvent = $.Event(Event.CLOSE);\n\t\n\t        $(element).trigger(closeEvent);\n\t        return closeEvent;\n\t      }\n\t    }, {\n\t      key: '_removeElement',\n\t      value: function _removeElement(element) {\n\t        $(element).removeClass(ClassName.IN);\n\t\n\t        if (!Util.supportsTransitionEnd() || !$(element).hasClass(ClassName.FADE)) {\n\t          this._destroyElement(element);\n\t          return;\n\t        }\n\t\n\t        $(element).one(Util.TRANSITION_END, $.proxy(this._destroyElement, this, element)).emulateTransitionEnd(TRANSITION_DURATION);\n\t      }\n\t    }, {\n\t      key: '_destroyElement',\n\t      value: function _destroyElement(element) {\n\t        $(element).detach().trigger(Event.CLOSED).remove();\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var $element = $(this);\n\t          var data = $element.data(DATA_KEY);\n\t\n\t          if (!data) {\n\t            data = new Alert(this);\n\t            $element.data(DATA_KEY, data);\n\t          }\n\t\n\t          if (config === 'close') {\n\t            data[config](this);\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: '_handleDismiss',\n\t      value: function _handleDismiss(alertInstance) {\n\t        return function (event) {\n\t          if (event) {\n\t            event.preventDefault();\n\t          }\n\t\n\t          alertInstance.close(this);\n\t        };\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }]);\n\t\n\t    return Alert;\n\t  })();\n\t\n\t  $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * jQuery\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  $.fn[NAME] = Alert._jQueryInterface;\n\t  $.fn[NAME].Constructor = Alert;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Alert._jQueryInterface;\n\t  };\n\t\n\t  return Alert;\n\t})(jQuery);\n\t//# sourceMappingURL=alert.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): button.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar Button = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'button';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.button';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var DATA_API_KEY = '.data-api';\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t\n\t  var ClassName = {\n\t    ACTIVE: 'active',\n\t    BUTTON: 'btn',\n\t    FOCUS: 'focus'\n\t  };\n\t\n\t  var Selector = {\n\t    DATA_TOGGLE_CARROT: '[data-toggle^=\"button\"]',\n\t    DATA_TOGGLE: '[data-toggle=\"buttons\"]',\n\t    INPUT: 'input',\n\t    ACTIVE: '.active',\n\t    BUTTON: '.btn'\n\t  };\n\t\n\t  var Event = {\n\t    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\n\t    FOCUS_BLUR_DATA_API: 'focus' + EVENT_KEY + DATA_API_KEY + ' ' + ('blur' + EVENT_KEY + DATA_API_KEY)\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Button = (function () {\n\t    function Button(element) {\n\t      _classCallCheck(this, Button);\n\t\n\t      this._element = element;\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * Data Api implementation\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Button, [{\n\t      key: 'toggle',\n\t\n\t      // public\n\t\n\t      value: function toggle() {\n\t        var triggerChangeEvent = true;\n\t        var rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];\n\t\n\t        if (rootElement) {\n\t          var input = $(this._element).find(Selector.INPUT)[0];\n\t\n\t          if (input) {\n\t            if (input.type === 'radio') {\n\t              if (input.checked && $(this._element).hasClass(ClassName.ACTIVE)) {\n\t                triggerChangeEvent = false;\n\t              } else {\n\t                var activeElement = $(rootElement).find(Selector.ACTIVE)[0];\n\t\n\t                if (activeElement) {\n\t                  $(activeElement).removeClass(ClassName.ACTIVE);\n\t                }\n\t              }\n\t            }\n\t\n\t            if (triggerChangeEvent) {\n\t              input.checked = !$(this._element).hasClass(ClassName.ACTIVE);\n\t              $(this._element).trigger('change');\n\t            }\n\t\n\t            input.focus();\n\t          }\n\t        } else {\n\t          this._element.setAttribute('aria-pressed', !$(this._element).hasClass(ClassName.ACTIVE));\n\t        }\n\t\n\t        if (triggerChangeEvent) {\n\t          $(this._element).toggleClass(ClassName.ACTIVE);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        $.removeData(this._element, DATA_KEY);\n\t        this._element = null;\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var data = $(this).data(DATA_KEY);\n\t\n\t          if (!data) {\n\t            data = new Button(this);\n\t            $(this).data(DATA_KEY, data);\n\t          }\n\t\n\t          if (config === 'toggle') {\n\t            data[config]();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }]);\n\t\n\t    return Button;\n\t  })();\n\t\n\t  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n\t    event.preventDefault();\n\t\n\t    var button = event.target;\n\t\n\t    if (!$(button).hasClass(ClassName.BUTTON)) {\n\t      button = $(button).closest(Selector.BUTTON);\n\t    }\n\t\n\t    Button._jQueryInterface.call($(button), 'toggle');\n\t  }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n\t    var button = $(event.target).closest(Selector.BUTTON)[0];\n\t    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\n\t  });\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * jQuery\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  $.fn[NAME] = Button._jQueryInterface;\n\t  $.fn[NAME].Constructor = Button;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Button._jQueryInterface;\n\t  };\n\t\n\t  return Button;\n\t})(jQuery);\n\t//# sourceMappingURL=button.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, Util) {'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): carousel.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Carousel = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'carousel';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.carousel';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var DATA_API_KEY = '.data-api';\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t  var TRANSITION_DURATION = 600;\n\t  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\n\t  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\n\t\n\t  var Default = {\n\t    interval: 5000,\n\t    keyboard: true,\n\t    slide: false,\n\t    pause: 'hover',\n\t    wrap: true\n\t  };\n\t\n\t  var DefaultType = {\n\t    interval: '(number|boolean)',\n\t    keyboard: 'boolean',\n\t    slide: '(boolean|string)',\n\t    pause: '(string|boolean)',\n\t    wrap: 'boolean'\n\t  };\n\t\n\t  var Direction = {\n\t    NEXT: 'next',\n\t    PREVIOUS: 'prev'\n\t  };\n\t\n\t  var Event = {\n\t    SLIDE: 'slide' + EVENT_KEY,\n\t    SLID: 'slid' + EVENT_KEY,\n\t    KEYDOWN: 'keydown' + EVENT_KEY,\n\t    MOUSEENTER: 'mouseenter' + EVENT_KEY,\n\t    MOUSELEAVE: 'mouseleave' + EVENT_KEY,\n\t    LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY,\n\t    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    CAROUSEL: 'carousel',\n\t    ACTIVE: 'active',\n\t    SLIDE: 'slide',\n\t    RIGHT: 'right',\n\t    LEFT: 'left',\n\t    ITEM: 'carousel-item'\n\t  };\n\t\n\t  var Selector = {\n\t    ACTIVE: '.active',\n\t    ACTIVE_ITEM: '.active.carousel-item',\n\t    ITEM: '.carousel-item',\n\t    NEXT_PREV: '.next, .prev',\n\t    INDICATORS: '.carousel-indicators',\n\t    DATA_SLIDE: '[data-slide], [data-slide-to]',\n\t    DATA_RIDE: '[data-ride=\"carousel\"]'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Carousel = (function () {\n\t    function Carousel(element, config) {\n\t      _classCallCheck(this, Carousel);\n\t\n\t      this._items = null;\n\t      this._interval = null;\n\t      this._activeElement = null;\n\t\n\t      this._isPaused = false;\n\t      this._isSliding = false;\n\t\n\t      this._config = this._getConfig(config);\n\t      this._element = $(element)[0];\n\t      this._indicatorsElement = $(this._element).find(Selector.INDICATORS)[0];\n\t\n\t      this._addEventListeners();\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * Data Api implementation\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Carousel, [{\n\t      key: 'next',\n\t\n\t      // public\n\t\n\t      value: function next() {\n\t        if (!this._isSliding) {\n\t          this._slide(Direction.NEXT);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'nextWhenVisible',\n\t      value: function nextWhenVisible() {\n\t        // Don't call next when the page isn't visible\n\t        if (!document.hidden) {\n\t          this.next();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'prev',\n\t      value: function prev() {\n\t        if (!this._isSliding) {\n\t          this._slide(Direction.PREVIOUS);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'pause',\n\t      value: function pause(event) {\n\t        if (!event) {\n\t          this._isPaused = true;\n\t        }\n\t\n\t        if ($(this._element).find(Selector.NEXT_PREV)[0] && Util.supportsTransitionEnd()) {\n\t          Util.triggerTransitionEnd(this._element);\n\t          this.cycle(true);\n\t        }\n\t\n\t        clearInterval(this._interval);\n\t        this._interval = null;\n\t      }\n\t    }, {\n\t      key: 'cycle',\n\t      value: function cycle(event) {\n\t        if (!event) {\n\t          this._isPaused = false;\n\t        }\n\t\n\t        if (this._interval) {\n\t          clearInterval(this._interval);\n\t          this._interval = null;\n\t        }\n\t\n\t        if (this._config.interval && !this._isPaused) {\n\t          this._interval = setInterval($.proxy(document.visibilityState ? this.nextWhenVisible : this.next, this), this._config.interval);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'to',\n\t      value: function to(index) {\n\t        var _this = this;\n\t\n\t        this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\n\t\n\t        var activeIndex = this._getItemIndex(this._activeElement);\n\t\n\t        if (index > this._items.length - 1 || index < 0) {\n\t          return;\n\t        }\n\t\n\t        if (this._isSliding) {\n\t          $(this._element).one(Event.SLID, function () {\n\t            return _this.to(index);\n\t          });\n\t          return;\n\t        }\n\t\n\t        if (activeIndex === index) {\n\t          this.pause();\n\t          this.cycle();\n\t          return;\n\t        }\n\t\n\t        var direction = index > activeIndex ? Direction.NEXT : Direction.PREVIOUS;\n\t\n\t        this._slide(direction, this._items[index]);\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        $(this._element).off(EVENT_KEY);\n\t        $.removeData(this._element, DATA_KEY);\n\t\n\t        this._items = null;\n\t        this._config = null;\n\t        this._element = null;\n\t        this._interval = null;\n\t        this._isPaused = null;\n\t        this._isSliding = null;\n\t        this._activeElement = null;\n\t        this._indicatorsElement = null;\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_getConfig',\n\t      value: function _getConfig(config) {\n\t        config = $.extend({}, Default, config);\n\t        Util.typeCheckConfig(NAME, config, DefaultType);\n\t        return config;\n\t      }\n\t    }, {\n\t      key: '_addEventListeners',\n\t      value: function _addEventListeners() {\n\t        if (this._config.keyboard) {\n\t          $(this._element).on(Event.KEYDOWN, $.proxy(this._keydown, this));\n\t        }\n\t\n\t        if (this._config.pause === 'hover' && !('ontouchstart' in document.documentElement)) {\n\t          $(this._element).on(Event.MOUSEENTER, $.proxy(this.pause, this)).on(Event.MOUSELEAVE, $.proxy(this.cycle, this));\n\t        }\n\t      }\n\t    }, {\n\t      key: '_keydown',\n\t      value: function _keydown(event) {\n\t        event.preventDefault();\n\t\n\t        if (/input|textarea/i.test(event.target.tagName)) {\n\t          return;\n\t        }\n\t\n\t        switch (event.which) {\n\t          case ARROW_LEFT_KEYCODE:\n\t            this.prev();\n\t            break;\n\t          case ARROW_RIGHT_KEYCODE:\n\t            this.next();\n\t            break;\n\t          default:\n\t            return;\n\t        }\n\t      }\n\t    }, {\n\t      key: '_getItemIndex',\n\t      value: function _getItemIndex(element) {\n\t        this._items = $.makeArray($(element).parent().find(Selector.ITEM));\n\t        return this._items.indexOf(element);\n\t      }\n\t    }, {\n\t      key: '_getItemByDirection',\n\t      value: function _getItemByDirection(direction, activeElement) {\n\t        var isNextDirection = direction === Direction.NEXT;\n\t        var isPrevDirection = direction === Direction.PREVIOUS;\n\t        var activeIndex = this._getItemIndex(activeElement);\n\t        var lastItemIndex = this._items.length - 1;\n\t        var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n\t\n\t        if (isGoingToWrap && !this._config.wrap) {\n\t          return activeElement;\n\t        }\n\t\n\t        var delta = direction === Direction.PREVIOUS ? -1 : 1;\n\t        var itemIndex = (activeIndex + delta) % this._items.length;\n\t\n\t        return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n\t      }\n\t    }, {\n\t      key: '_triggerSlideEvent',\n\t      value: function _triggerSlideEvent(relatedTarget, directionalClassname) {\n\t        var slideEvent = $.Event(Event.SLIDE, {\n\t          relatedTarget: relatedTarget,\n\t          direction: directionalClassname\n\t        });\n\t\n\t        $(this._element).trigger(slideEvent);\n\t\n\t        return slideEvent;\n\t      }\n\t    }, {\n\t      key: '_setActiveIndicatorElement',\n\t      value: function _setActiveIndicatorElement(element) {\n\t        if (this._indicatorsElement) {\n\t          $(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\n\t\n\t          var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n\t\n\t          if (nextIndicator) {\n\t            $(nextIndicator).addClass(ClassName.ACTIVE);\n\t          }\n\t        }\n\t      }\n\t    }, {\n\t      key: '_slide',\n\t      value: function _slide(direction, element) {\n\t        var _this2 = this;\n\t\n\t        var activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\n\t        var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n\t\n\t        var isCycling = Boolean(this._interval);\n\t\n\t        var directionalClassName = direction === Direction.NEXT ? ClassName.LEFT : ClassName.RIGHT;\n\t\n\t        if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n\t          this._isSliding = false;\n\t          return;\n\t        }\n\t\n\t        var slideEvent = this._triggerSlideEvent(nextElement, directionalClassName);\n\t        if (slideEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        if (!activeElement || !nextElement) {\n\t          // some weirdness is happening, so we bail\n\t          return;\n\t        }\n\t\n\t        this._isSliding = true;\n\t\n\t        if (isCycling) {\n\t          this.pause();\n\t        }\n\t\n\t        this._setActiveIndicatorElement(nextElement);\n\t\n\t        var slidEvent = $.Event(Event.SLID, {\n\t          relatedTarget: nextElement,\n\t          direction: directionalClassName\n\t        });\n\t\n\t        if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.SLIDE)) {\n\t\n\t          $(nextElement).addClass(direction);\n\t\n\t          Util.reflow(nextElement);\n\t\n\t          $(activeElement).addClass(directionalClassName);\n\t          $(nextElement).addClass(directionalClassName);\n\t\n\t          $(activeElement).one(Util.TRANSITION_END, function () {\n\t            $(nextElement).removeClass(directionalClassName).removeClass(direction);\n\t\n\t            $(nextElement).addClass(ClassName.ACTIVE);\n\t\n\t            $(activeElement).removeClass(ClassName.ACTIVE).removeClass(direction).removeClass(directionalClassName);\n\t\n\t            _this2._isSliding = false;\n\t\n\t            setTimeout(function () {\n\t              return $(_this2._element).trigger(slidEvent);\n\t            }, 0);\n\t          }).emulateTransitionEnd(TRANSITION_DURATION);\n\t        } else {\n\t          $(activeElement).removeClass(ClassName.ACTIVE);\n\t          $(nextElement).addClass(ClassName.ACTIVE);\n\t\n\t          this._isSliding = false;\n\t          $(this._element).trigger(slidEvent);\n\t        }\n\t\n\t        if (isCycling) {\n\t          this.cycle();\n\t        }\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var data = $(this).data(DATA_KEY);\n\t          var _config = $.extend({}, Default, $(this).data());\n\t\n\t          if (typeof config === 'object') {\n\t            $.extend(_config, config);\n\t          }\n\t\n\t          var action = typeof config === 'string' ? config : _config.slide;\n\t\n\t          if (!data) {\n\t            data = new Carousel(this, _config);\n\t            $(this).data(DATA_KEY, data);\n\t          }\n\t\n\t          if (typeof config === 'number') {\n\t            data.to(config);\n\t          } else if (typeof action === 'string') {\n\t            if (data[action] === undefined) {\n\t              throw new Error('No method named \"' + action + '\"');\n\t            }\n\t            data[action]();\n\t          } else if (_config.interval) {\n\t            data.pause();\n\t            data.cycle();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: '_dataApiClickHandler',\n\t      value: function _dataApiClickHandler(event) {\n\t        var selector = Util.getSelectorFromElement(this);\n\t\n\t        if (!selector) {\n\t          return;\n\t        }\n\t\n\t        var target = $(selector)[0];\n\t\n\t        if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\n\t          return;\n\t        }\n\t\n\t        var config = $.extend({}, $(target).data(), $(this).data());\n\t        var slideIndex = this.getAttribute('data-slide-to');\n\t\n\t        if (slideIndex) {\n\t          config.interval = false;\n\t        }\n\t\n\t        Carousel._jQueryInterface.call($(target), config);\n\t\n\t        if (slideIndex) {\n\t          $(target).data(DATA_KEY).to(slideIndex);\n\t        }\n\t\n\t        event.preventDefault();\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }, {\n\t      key: 'Default',\n\t      get: function get() {\n\t        return Default;\n\t      }\n\t    }]);\n\t\n\t    return Carousel;\n\t  })();\n\t\n\t  $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\n\t\n\t  $(window).on(Event.LOAD_DATA_API, function () {\n\t    $(Selector.DATA_RIDE).each(function () {\n\t      var $carousel = $(this);\n\t      Carousel._jQueryInterface.call($carousel, $carousel.data());\n\t    });\n\t  });\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * jQuery\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  $.fn[NAME] = Carousel._jQueryInterface;\n\t  $.fn[NAME].Constructor = Carousel;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Carousel._jQueryInterface;\n\t  };\n\t\n\t  return Carousel;\n\t})(jQuery);\n\t//# sourceMappingURL=carousel.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, Util) {'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): collapse.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Collapse = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'collapse';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.collapse';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var DATA_API_KEY = '.data-api';\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t  var TRANSITION_DURATION = 600;\n\t\n\t  var Default = {\n\t    toggle: true,\n\t    parent: ''\n\t  };\n\t\n\t  var DefaultType = {\n\t    toggle: 'boolean',\n\t    parent: 'string'\n\t  };\n\t\n\t  var Event = {\n\t    SHOW: 'show' + EVENT_KEY,\n\t    SHOWN: 'shown' + EVENT_KEY,\n\t    HIDE: 'hide' + EVENT_KEY,\n\t    HIDDEN: 'hidden' + EVENT_KEY,\n\t    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    IN: 'in',\n\t    COLLAPSE: 'collapse',\n\t    COLLAPSING: 'collapsing',\n\t    COLLAPSED: 'collapsed'\n\t  };\n\t\n\t  var Dimension = {\n\t    WIDTH: 'width',\n\t    HEIGHT: 'height'\n\t  };\n\t\n\t  var Selector = {\n\t    ACTIVES: '.panel > .in, .panel > .collapsing',\n\t    DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Collapse = (function () {\n\t    function Collapse(element, config) {\n\t      _classCallCheck(this, Collapse);\n\t\n\t      this._isTransitioning = false;\n\t      this._element = element;\n\t      this._config = this._getConfig(config);\n\t      this._triggerArray = $.makeArray($('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' + ('[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')));\n\t\n\t      this._parent = this._config.parent ? this._getParent() : null;\n\t\n\t      if (!this._config.parent) {\n\t        this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n\t      }\n\t\n\t      if (this._config.toggle) {\n\t        this.toggle();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * Data Api implementation\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Collapse, [{\n\t      key: 'toggle',\n\t\n\t      // public\n\t\n\t      value: function toggle() {\n\t        if ($(this._element).hasClass(ClassName.IN)) {\n\t          this.hide();\n\t        } else {\n\t          this.show();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'show',\n\t      value: function show() {\n\t        var _this = this;\n\t\n\t        if (this._isTransitioning || $(this._element).hasClass(ClassName.IN)) {\n\t          return;\n\t        }\n\t\n\t        var actives = undefined;\n\t        var activesData = undefined;\n\t\n\t        if (this._parent) {\n\t          actives = $.makeArray($(Selector.ACTIVES));\n\t          if (!actives.length) {\n\t            actives = null;\n\t          }\n\t        }\n\t\n\t        if (actives) {\n\t          activesData = $(actives).data(DATA_KEY);\n\t          if (activesData && activesData._isTransitioning) {\n\t            return;\n\t          }\n\t        }\n\t\n\t        var startEvent = $.Event(Event.SHOW);\n\t        $(this._element).trigger(startEvent);\n\t        if (startEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        if (actives) {\n\t          Collapse._jQueryInterface.call($(actives), 'hide');\n\t          if (!activesData) {\n\t            $(actives).data(DATA_KEY, null);\n\t          }\n\t        }\n\t\n\t        var dimension = this._getDimension();\n\t\n\t        $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n\t\n\t        this._element.style[dimension] = 0;\n\t        this._element.setAttribute('aria-expanded', true);\n\t\n\t        if (this._triggerArray.length) {\n\t          $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n\t        }\n\t\n\t        this.setTransitioning(true);\n\t\n\t        var complete = function complete() {\n\t          $(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.IN);\n\t\n\t          _this._element.style[dimension] = '';\n\t\n\t          _this.setTransitioning(false);\n\t\n\t          $(_this._element).trigger(Event.SHOWN);\n\t        };\n\t\n\t        if (!Util.supportsTransitionEnd()) {\n\t          complete();\n\t          return;\n\t        }\n\t\n\t        var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n\t        var scrollSize = 'scroll' + capitalizedDimension;\n\t\n\t        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n\t\n\t        this._element.style[dimension] = this._element[scrollSize] + 'px';\n\t      }\n\t    }, {\n\t      key: 'hide',\n\t      value: function hide() {\n\t        var _this2 = this;\n\t\n\t        if (this._isTransitioning || !$(this._element).hasClass(ClassName.IN)) {\n\t          return;\n\t        }\n\t\n\t        var startEvent = $.Event(Event.HIDE);\n\t        $(this._element).trigger(startEvent);\n\t        if (startEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        var dimension = this._getDimension();\n\t        var offsetDimension = dimension === Dimension.WIDTH ? 'offsetWidth' : 'offsetHeight';\n\t\n\t        this._element.style[dimension] = this._element[offsetDimension] + 'px';\n\t\n\t        Util.reflow(this._element);\n\t\n\t        $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.IN);\n\t\n\t        this._element.setAttribute('aria-expanded', false);\n\t\n\t        if (this._triggerArray.length) {\n\t          $(this._triggerArray).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n\t        }\n\t\n\t        this.setTransitioning(true);\n\t\n\t        var complete = function complete() {\n\t          _this2.setTransitioning(false);\n\t          $(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n\t        };\n\t\n\t        this._element.style[dimension] = 0;\n\t\n\t        if (!Util.supportsTransitionEnd()) {\n\t          complete();\n\t          return;\n\t        }\n\t\n\t        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n\t      }\n\t    }, {\n\t      key: 'setTransitioning',\n\t      value: function setTransitioning(isTransitioning) {\n\t        this._isTransitioning = isTransitioning;\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        $.removeData(this._element, DATA_KEY);\n\t\n\t        this._config = null;\n\t        this._parent = null;\n\t        this._element = null;\n\t        this._triggerArray = null;\n\t        this._isTransitioning = null;\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_getConfig',\n\t      value: function _getConfig(config) {\n\t        config = $.extend({}, Default, config);\n\t        config.toggle = Boolean(config.toggle); // coerce string values\n\t        Util.typeCheckConfig(NAME, config, DefaultType);\n\t        return config;\n\t      }\n\t    }, {\n\t      key: '_getDimension',\n\t      value: function _getDimension() {\n\t        var hasWidth = $(this._element).hasClass(Dimension.WIDTH);\n\t        return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n\t      }\n\t    }, {\n\t      key: '_getParent',\n\t      value: function _getParent() {\n\t        var _this3 = this;\n\t\n\t        var parent = $(this._config.parent)[0];\n\t        var selector = '[data-toggle=\"collapse\"][data-parent=\"' + this._config.parent + '\"]';\n\t\n\t        $(parent).find(selector).each(function (i, element) {\n\t          _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n\t        });\n\t\n\t        return parent;\n\t      }\n\t    }, {\n\t      key: '_addAriaAndCollapsedClass',\n\t      value: function _addAriaAndCollapsedClass(element, triggerArray) {\n\t        if (element) {\n\t          var isOpen = $(element).hasClass(ClassName.IN);\n\t          element.setAttribute('aria-expanded', isOpen);\n\t\n\t          if (triggerArray.length) {\n\t            $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n\t          }\n\t        }\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_getTargetFromElement',\n\t      value: function _getTargetFromElement(element) {\n\t        var selector = Util.getSelectorFromElement(element);\n\t        return selector ? $(selector)[0] : null;\n\t      }\n\t    }, {\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var $this = $(this);\n\t          var data = $this.data(DATA_KEY);\n\t          var _config = $.extend({}, Default, $this.data(), typeof config === 'object' && config);\n\t\n\t          if (!data && _config.toggle && /show|hide/.test(config)) {\n\t            _config.toggle = false;\n\t          }\n\t\n\t          if (!data) {\n\t            data = new Collapse(this, _config);\n\t            $this.data(DATA_KEY, data);\n\t          }\n\t\n\t          if (typeof config === 'string') {\n\t            if (data[config] === undefined) {\n\t              throw new Error('No method named \"' + config + '\"');\n\t            }\n\t            data[config]();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }, {\n\t      key: 'Default',\n\t      get: function get() {\n\t        return Default;\n\t      }\n\t    }]);\n\t\n\t    return Collapse;\n\t  })();\n\t\n\t  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n\t    event.preventDefault();\n\t\n\t    var target = Collapse._getTargetFromElement(this);\n\t    var data = $(target).data(DATA_KEY);\n\t    var config = data ? 'toggle' : $(this).data();\n\t\n\t    Collapse._jQueryInterface.call($(target), config);\n\t  });\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * jQuery\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  $.fn[NAME] = Collapse._jQueryInterface;\n\t  $.fn[NAME].Constructor = Collapse;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Collapse._jQueryInterface;\n\t  };\n\t\n\t  return Collapse;\n\t})(jQuery);\n\t//# sourceMappingURL=collapse.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, Util) {'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): dropdown.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Dropdown = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'dropdown';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.dropdown';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var DATA_API_KEY = '.data-api';\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n\t  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key\n\t  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key\n\t  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)\n\t\n\t  var Event = {\n\t    HIDE: 'hide' + EVENT_KEY,\n\t    HIDDEN: 'hidden' + EVENT_KEY,\n\t    SHOW: 'show' + EVENT_KEY,\n\t    SHOWN: 'shown' + EVENT_KEY,\n\t    CLICK: 'click' + EVENT_KEY,\n\t    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\n\t    KEYDOWN_DATA_API: 'keydown' + EVENT_KEY + DATA_API_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    BACKDROP: 'dropdown-backdrop',\n\t    DISABLED: 'disabled',\n\t    OPEN: 'open'\n\t  };\n\t\n\t  var Selector = {\n\t    BACKDROP: '.dropdown-backdrop',\n\t    DATA_TOGGLE: '[data-toggle=\"dropdown\"]',\n\t    FORM_CHILD: '.dropdown form',\n\t    ROLE_MENU: '[role=\"menu\"]',\n\t    ROLE_LISTBOX: '[role=\"listbox\"]',\n\t    NAVBAR_NAV: '.navbar-nav',\n\t    VISIBLE_ITEMS: '[role=\"menu\"] li:not(.disabled) a, ' + '[role=\"listbox\"] li:not(.disabled) a'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Dropdown = (function () {\n\t    function Dropdown(element) {\n\t      _classCallCheck(this, Dropdown);\n\t\n\t      this._element = element;\n\t\n\t      this._addEventListeners();\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * Data Api implementation\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Dropdown, [{\n\t      key: 'toggle',\n\t\n\t      // public\n\t\n\t      value: function toggle() {\n\t        if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n\t          return false;\n\t        }\n\t\n\t        var parent = Dropdown._getParentFromElement(this);\n\t        var isActive = $(parent).hasClass(ClassName.OPEN);\n\t\n\t        Dropdown._clearMenus();\n\t\n\t        if (isActive) {\n\t          return false;\n\t        }\n\t\n\t        if ('ontouchstart' in document.documentElement && !$(parent).closest(Selector.NAVBAR_NAV).length) {\n\t\n\t          // if mobile we use a backdrop because click events don't delegate\n\t          var dropdown = document.createElement('div');\n\t          dropdown.className = ClassName.BACKDROP;\n\t          $(dropdown).insertBefore(this);\n\t          $(dropdown).on('click', Dropdown._clearMenus);\n\t        }\n\t\n\t        var relatedTarget = { relatedTarget: this };\n\t        var showEvent = $.Event(Event.SHOW, relatedTarget);\n\t\n\t        $(parent).trigger(showEvent);\n\t\n\t        if (showEvent.isDefaultPrevented()) {\n\t          return false;\n\t        }\n\t\n\t        this.focus();\n\t        this.setAttribute('aria-expanded', 'true');\n\t\n\t        $(parent).toggleClass(ClassName.OPEN);\n\t        $(parent).trigger($.Event(Event.SHOWN, relatedTarget));\n\t\n\t        return false;\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        $.removeData(this._element, DATA_KEY);\n\t        $(this._element).off(EVENT_KEY);\n\t        this._element = null;\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_addEventListeners',\n\t      value: function _addEventListeners() {\n\t        $(this._element).on(Event.CLICK, this.toggle);\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var data = $(this).data(DATA_KEY);\n\t\n\t          if (!data) {\n\t            $(this).data(DATA_KEY, data = new Dropdown(this));\n\t          }\n\t\n\t          if (typeof config === 'string') {\n\t            if (data[config] === undefined) {\n\t              throw new Error('No method named \"' + config + '\"');\n\t            }\n\t            data[config].call(this);\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: '_clearMenus',\n\t      value: function _clearMenus(event) {\n\t        if (event && event.which === RIGHT_MOUSE_BUTTON_WHICH) {\n\t          return;\n\t        }\n\t\n\t        var backdrop = $(Selector.BACKDROP)[0];\n\t        if (backdrop) {\n\t          backdrop.parentNode.removeChild(backdrop);\n\t        }\n\t\n\t        var toggles = $.makeArray($(Selector.DATA_TOGGLE));\n\t\n\t        for (var i = 0; i < toggles.length; i++) {\n\t          var _parent = Dropdown._getParentFromElement(toggles[i]);\n\t          var relatedTarget = { relatedTarget: toggles[i] };\n\t\n\t          if (!$(_parent).hasClass(ClassName.OPEN)) {\n\t            continue;\n\t          }\n\t\n\t          if (event && event.type === 'click' && /input|textarea/i.test(event.target.tagName) && $.contains(_parent, event.target)) {\n\t            continue;\n\t          }\n\t\n\t          var hideEvent = $.Event(Event.HIDE, relatedTarget);\n\t          $(_parent).trigger(hideEvent);\n\t          if (hideEvent.isDefaultPrevented()) {\n\t            continue;\n\t          }\n\t\n\t          toggles[i].setAttribute('aria-expanded', 'false');\n\t\n\t          $(_parent).removeClass(ClassName.OPEN).trigger($.Event(Event.HIDDEN, relatedTarget));\n\t        }\n\t      }\n\t    }, {\n\t      key: '_getParentFromElement',\n\t      value: function _getParentFromElement(element) {\n\t        var parent = undefined;\n\t        var selector = Util.getSelectorFromElement(element);\n\t\n\t        if (selector) {\n\t          parent = $(selector)[0];\n\t        }\n\t\n\t        return parent || element.parentNode;\n\t      }\n\t    }, {\n\t      key: '_dataApiKeydownHandler',\n\t      value: function _dataApiKeydownHandler(event) {\n\t        if (!/(38|40|27|32)/.test(event.which) || /input|textarea/i.test(event.target.tagName)) {\n\t          return;\n\t        }\n\t\n\t        event.preventDefault();\n\t        event.stopPropagation();\n\t\n\t        if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n\t          return;\n\t        }\n\t\n\t        var parent = Dropdown._getParentFromElement(this);\n\t        var isActive = $(parent).hasClass(ClassName.OPEN);\n\t\n\t        if (!isActive && event.which !== ESCAPE_KEYCODE || isActive && event.which === ESCAPE_KEYCODE) {\n\t\n\t          if (event.which === ESCAPE_KEYCODE) {\n\t            var toggle = $(parent).find(Selector.DATA_TOGGLE)[0];\n\t            $(toggle).trigger('focus');\n\t          }\n\t\n\t          $(this).trigger('click');\n\t          return;\n\t        }\n\t\n\t        var items = $.makeArray($(Selector.VISIBLE_ITEMS));\n\t\n\t        items = items.filter(function (item) {\n\t          return item.offsetWidth || item.offsetHeight;\n\t        });\n\t\n\t        if (!items.length) {\n\t          return;\n\t        }\n\t\n\t        var index = items.indexOf(event.target);\n\t\n\t        if (event.which === ARROW_UP_KEYCODE && index > 0) {\n\t          // up\n\t          index--;\n\t        }\n\t\n\t        if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\n\t          // down\n\t          index++;\n\t        }\n\t\n\t        if (index < 0) {\n\t          index = 0;\n\t        }\n\t\n\t        items[index].focus();\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }]);\n\t\n\t    return Dropdown;\n\t  })();\n\t\n\t  $(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_MENU, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_LISTBOX, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, Dropdown.prototype.toggle).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {\n\t    e.stopPropagation();\n\t  });\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * jQuery\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  $.fn[NAME] = Dropdown._jQueryInterface;\n\t  $.fn[NAME].Constructor = Dropdown;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Dropdown._jQueryInterface;\n\t  };\n\t\n\t  return Dropdown;\n\t})(jQuery);\n\t//# sourceMappingURL=dropdown.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, Util) {'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): modal.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Modal = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'modal';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.modal';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var DATA_API_KEY = '.data-api';\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t  var TRANSITION_DURATION = 300;\n\t  var BACKDROP_TRANSITION_DURATION = 150;\n\t  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n\t\n\t  var Default = {\n\t    backdrop: true,\n\t    keyboard: true,\n\t    focus: true,\n\t    show: true\n\t  };\n\t\n\t  var DefaultType = {\n\t    backdrop: '(boolean|string)',\n\t    keyboard: 'boolean',\n\t    focus: 'boolean',\n\t    show: 'boolean'\n\t  };\n\t\n\t  var Event = {\n\t    HIDE: 'hide' + EVENT_KEY,\n\t    HIDDEN: 'hidden' + EVENT_KEY,\n\t    SHOW: 'show' + EVENT_KEY,\n\t    SHOWN: 'shown' + EVENT_KEY,\n\t    FOCUSIN: 'focusin' + EVENT_KEY,\n\t    RESIZE: 'resize' + EVENT_KEY,\n\t    CLICK_DISMISS: 'click.dismiss' + EVENT_KEY,\n\t    KEYDOWN_DISMISS: 'keydown.dismiss' + EVENT_KEY,\n\t    MOUSEUP_DISMISS: 'mouseup.dismiss' + EVENT_KEY,\n\t    MOUSEDOWN_DISMISS: 'mousedown.dismiss' + EVENT_KEY,\n\t    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n\t    BACKDROP: 'modal-backdrop',\n\t    OPEN: 'modal-open',\n\t    FADE: 'fade',\n\t    IN: 'in'\n\t  };\n\t\n\t  var Selector = {\n\t    DIALOG: '.modal-dialog',\n\t    DATA_TOGGLE: '[data-toggle=\"modal\"]',\n\t    DATA_DISMISS: '[data-dismiss=\"modal\"]',\n\t    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Modal = (function () {\n\t    function Modal(element, config) {\n\t      _classCallCheck(this, Modal);\n\t\n\t      this._config = this._getConfig(config);\n\t      this._element = element;\n\t      this._dialog = $(element).find(Selector.DIALOG)[0];\n\t      this._backdrop = null;\n\t      this._isShown = false;\n\t      this._isBodyOverflowing = false;\n\t      this._ignoreBackdropClick = false;\n\t      this._originalBodyPadding = 0;\n\t      this._scrollbarWidth = 0;\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * Data Api implementation\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Modal, [{\n\t      key: 'toggle',\n\t\n\t      // public\n\t\n\t      value: function toggle(relatedTarget) {\n\t        return this._isShown ? this.hide() : this.show(relatedTarget);\n\t      }\n\t    }, {\n\t      key: 'show',\n\t      value: function show(relatedTarget) {\n\t        var _this = this;\n\t\n\t        var showEvent = $.Event(Event.SHOW, {\n\t          relatedTarget: relatedTarget\n\t        });\n\t\n\t        $(this._element).trigger(showEvent);\n\t\n\t        if (this._isShown || showEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        this._isShown = true;\n\t\n\t        this._checkScrollbar();\n\t        this._setScrollbar();\n\t\n\t        $(document.body).addClass(ClassName.OPEN);\n\t\n\t        this._setEscapeEvent();\n\t        this._setResizeEvent();\n\t\n\t        $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, $.proxy(this.hide, this));\n\t\n\t        $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {\n\t          $(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {\n\t            if ($(event.target).is(_this._element)) {\n\t              _this._ignoreBackdropClick = true;\n\t            }\n\t          });\n\t        });\n\t\n\t        this._showBackdrop($.proxy(this._showElement, this, relatedTarget));\n\t      }\n\t    }, {\n\t      key: 'hide',\n\t      value: function hide(event) {\n\t        if (event) {\n\t          event.preventDefault();\n\t        }\n\t\n\t        var hideEvent = $.Event(Event.HIDE);\n\t\n\t        $(this._element).trigger(hideEvent);\n\t\n\t        if (!this._isShown || hideEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        this._isShown = false;\n\t\n\t        this._setEscapeEvent();\n\t        this._setResizeEvent();\n\t\n\t        $(document).off(Event.FOCUSIN);\n\t\n\t        $(this._element).removeClass(ClassName.IN);\n\t\n\t        $(this._element).off(Event.CLICK_DISMISS);\n\t        $(this._dialog).off(Event.MOUSEDOWN_DISMISS);\n\t\n\t        if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\n\t\n\t          $(this._element).one(Util.TRANSITION_END, $.proxy(this._hideModal, this)).emulateTransitionEnd(TRANSITION_DURATION);\n\t        } else {\n\t          this._hideModal();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        $.removeData(this._element, DATA_KEY);\n\t\n\t        $(window).off(EVENT_KEY);\n\t        $(document).off(EVENT_KEY);\n\t        $(this._element).off(EVENT_KEY);\n\t        $(this._backdrop).off(EVENT_KEY);\n\t\n\t        this._config = null;\n\t        this._element = null;\n\t        this._dialog = null;\n\t        this._backdrop = null;\n\t        this._isShown = null;\n\t        this._isBodyOverflowing = null;\n\t        this._ignoreBackdropClick = null;\n\t        this._originalBodyPadding = null;\n\t        this._scrollbarWidth = null;\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_getConfig',\n\t      value: function _getConfig(config) {\n\t        config = $.extend({}, Default, config);\n\t        Util.typeCheckConfig(NAME, config, DefaultType);\n\t        return config;\n\t      }\n\t    }, {\n\t      key: '_showElement',\n\t      value: function _showElement(relatedTarget) {\n\t        var _this2 = this;\n\t\n\t        var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);\n\t\n\t        if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n\t          // don't move modals dom position\n\t          document.body.appendChild(this._element);\n\t        }\n\t\n\t        this._element.style.display = 'block';\n\t        this._element.removeAttribute('aria-hidden');\n\t        this._element.scrollTop = 0;\n\t\n\t        if (transition) {\n\t          Util.reflow(this._element);\n\t        }\n\t\n\t        $(this._element).addClass(ClassName.IN);\n\t\n\t        if (this._config.focus) {\n\t          this._enforceFocus();\n\t        }\n\t\n\t        var shownEvent = $.Event(Event.SHOWN, {\n\t          relatedTarget: relatedTarget\n\t        });\n\t\n\t        var transitionComplete = function transitionComplete() {\n\t          if (_this2._config.focus) {\n\t            _this2._element.focus();\n\t          }\n\t          $(_this2._element).trigger(shownEvent);\n\t        };\n\t\n\t        if (transition) {\n\t          $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);\n\t        } else {\n\t          transitionComplete();\n\t        }\n\t      }\n\t    }, {\n\t      key: '_enforceFocus',\n\t      value: function _enforceFocus() {\n\t        var _this3 = this;\n\t\n\t        $(document).off(Event.FOCUSIN) // guard against infinite focus loop\n\t        .on(Event.FOCUSIN, function (event) {\n\t          if (document !== event.target && _this3._element !== event.target && !$(_this3._element).has(event.target).length) {\n\t            _this3._element.focus();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: '_setEscapeEvent',\n\t      value: function _setEscapeEvent() {\n\t        var _this4 = this;\n\t\n\t        if (this._isShown && this._config.keyboard) {\n\t          $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {\n\t            if (event.which === ESCAPE_KEYCODE) {\n\t              _this4.hide();\n\t            }\n\t          });\n\t        } else if (!this._isShown) {\n\t          $(this._element).off(Event.KEYDOWN_DISMISS);\n\t        }\n\t      }\n\t    }, {\n\t      key: '_setResizeEvent',\n\t      value: function _setResizeEvent() {\n\t        if (this._isShown) {\n\t          $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this));\n\t        } else {\n\t          $(window).off(Event.RESIZE);\n\t        }\n\t      }\n\t    }, {\n\t      key: '_hideModal',\n\t      value: function _hideModal() {\n\t        var _this5 = this;\n\t\n\t        this._element.style.display = 'none';\n\t        this._element.setAttribute('aria-hidden', 'true');\n\t        this._showBackdrop(function () {\n\t          $(document.body).removeClass(ClassName.OPEN);\n\t          _this5._resetAdjustments();\n\t          _this5._resetScrollbar();\n\t          $(_this5._element).trigger(Event.HIDDEN);\n\t        });\n\t      }\n\t    }, {\n\t      key: '_removeBackdrop',\n\t      value: function _removeBackdrop() {\n\t        if (this._backdrop) {\n\t          $(this._backdrop).remove();\n\t          this._backdrop = null;\n\t        }\n\t      }\n\t    }, {\n\t      key: '_showBackdrop',\n\t      value: function _showBackdrop(callback) {\n\t        var _this6 = this;\n\t\n\t        var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';\n\t\n\t        if (this._isShown && this._config.backdrop) {\n\t          var doAnimate = Util.supportsTransitionEnd() && animate;\n\t\n\t          this._backdrop = document.createElement('div');\n\t          this._backdrop.className = ClassName.BACKDROP;\n\t\n\t          if (animate) {\n\t            $(this._backdrop).addClass(animate);\n\t          }\n\t\n\t          $(this._backdrop).appendTo(document.body);\n\t\n\t          $(this._element).on(Event.CLICK_DISMISS, function (event) {\n\t            if (_this6._ignoreBackdropClick) {\n\t              _this6._ignoreBackdropClick = false;\n\t              return;\n\t            }\n\t            if (event.target !== event.currentTarget) {\n\t              return;\n\t            }\n\t            if (_this6._config.backdrop === 'static') {\n\t              _this6._element.focus();\n\t            } else {\n\t              _this6.hide();\n\t            }\n\t          });\n\t\n\t          if (doAnimate) {\n\t            Util.reflow(this._backdrop);\n\t          }\n\t\n\t          $(this._backdrop).addClass(ClassName.IN);\n\t\n\t          if (!callback) {\n\t            return;\n\t          }\n\t\n\t          if (!doAnimate) {\n\t            callback();\n\t            return;\n\t          }\n\t\n\t          $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\n\t        } else if (!this._isShown && this._backdrop) {\n\t          $(this._backdrop).removeClass(ClassName.IN);\n\t\n\t          var callbackRemove = function callbackRemove() {\n\t            _this6._removeBackdrop();\n\t            if (callback) {\n\t              callback();\n\t            }\n\t          };\n\t\n\t          if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\n\t            $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\n\t          } else {\n\t            callbackRemove();\n\t          }\n\t        } else if (callback) {\n\t          callback();\n\t        }\n\t      }\n\t\n\t      // ----------------------------------------------------------------------\n\t      // the following methods are used to handle overflowing modals\n\t      // todo (fat): these should probably be refactored out of modal.js\n\t      // ----------------------------------------------------------------------\n\t\n\t    }, {\n\t      key: '_handleUpdate',\n\t      value: function _handleUpdate() {\n\t        this._adjustDialog();\n\t      }\n\t    }, {\n\t      key: '_adjustDialog',\n\t      value: function _adjustDialog() {\n\t        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\t\n\t        if (!this._isBodyOverflowing && isModalOverflowing) {\n\t          this._element.style.paddingLeft = this._scrollbarWidth + 'px';\n\t        }\n\t\n\t        if (this._isBodyOverflowing && !isModalOverflowing) {\n\t          this._element.style.paddingRight = this._scrollbarWidth + 'px';\n\t        }\n\t      }\n\t    }, {\n\t      key: '_resetAdjustments',\n\t      value: function _resetAdjustments() {\n\t        this._element.style.paddingLeft = '';\n\t        this._element.style.paddingRight = '';\n\t      }\n\t    }, {\n\t      key: '_checkScrollbar',\n\t      value: function _checkScrollbar() {\n\t        this._isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n\t        this._scrollbarWidth = this._getScrollbarWidth();\n\t      }\n\t    }, {\n\t      key: '_setScrollbar',\n\t      value: function _setScrollbar() {\n\t        var bodyPadding = parseInt($(Selector.FIXED_CONTENT).css('padding-right') || 0, 10);\n\t\n\t        this._originalBodyPadding = document.body.style.paddingRight || '';\n\t\n\t        if (this._isBodyOverflowing) {\n\t          document.body.style.paddingRight = bodyPadding + this._scrollbarWidth + 'px';\n\t        }\n\t      }\n\t    }, {\n\t      key: '_resetScrollbar',\n\t      value: function _resetScrollbar() {\n\t        document.body.style.paddingRight = this._originalBodyPadding;\n\t      }\n\t    }, {\n\t      key: '_getScrollbarWidth',\n\t      value: function _getScrollbarWidth() {\n\t        // thx d.walsh\n\t        var scrollDiv = document.createElement('div');\n\t        scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n\t        document.body.appendChild(scrollDiv);\n\t        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\t        document.body.removeChild(scrollDiv);\n\t        return scrollbarWidth;\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config, relatedTarget) {\n\t        return this.each(function () {\n\t          var data = $(this).data(DATA_KEY);\n\t          var _config = $.extend({}, Modal.Default, $(this).data(), typeof config === 'object' && config);\n\t\n\t          if (!data) {\n\t            data = new Modal(this, _config);\n\t            $(this).data(DATA_KEY, data);\n\t          }\n\t\n\t          if (typeof config === 'string') {\n\t            if (data[config] === undefined) {\n\t              throw new Error('No method named \"' + config + '\"');\n\t            }\n\t            data[config](relatedTarget);\n\t          } else if (_config.show) {\n\t            data.show(relatedTarget);\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }, {\n\t      key: 'Default',\n\t      get: function get() {\n\t        return Default;\n\t      }\n\t    }]);\n\t\n\t    return Modal;\n\t  })();\n\t\n\t  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n\t    var _this7 = this;\n\t\n\t    var target = undefined;\n\t    var selector = Util.getSelectorFromElement(this);\n\t\n\t    if (selector) {\n\t      target = $(selector)[0];\n\t    }\n\t\n\t    var config = $(target).data(DATA_KEY) ? 'toggle' : $.extend({}, $(target).data(), $(this).data());\n\t\n\t    if (this.tagName === 'A') {\n\t      event.preventDefault();\n\t    }\n\t\n\t    var $target = $(target).one(Event.SHOW, function (showEvent) {\n\t      if (showEvent.isDefaultPrevented()) {\n\t        // only register focus restorer if modal will actually get shown\n\t        return;\n\t      }\n\t\n\t      $target.one(Event.HIDDEN, function () {\n\t        if ($(_this7).is(':visible')) {\n\t          _this7.focus();\n\t        }\n\t      });\n\t    });\n\t\n\t    Modal._jQueryInterface.call($(target), config, this);\n\t  });\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * jQuery\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  $.fn[NAME] = Modal._jQueryInterface;\n\t  $.fn[NAME].Constructor = Modal;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Modal._jQueryInterface;\n\t  };\n\t\n\t  return Modal;\n\t})(jQuery);\n\t//# sourceMappingURL=modal.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, Tooltip) {'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): popover.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Popover = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'popover';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.popover';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t\n\t  var Default = $.extend({}, Tooltip.Default, {\n\t    placement: 'right',\n\t    trigger: 'click',\n\t    content: '',\n\t    template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"popover-arrow\"></div>' + '<h3 class=\"popover-title\"></h3>' + '<div class=\"popover-content\"></div></div>'\n\t  });\n\t\n\t  var DefaultType = $.extend({}, Tooltip.DefaultType, {\n\t    content: '(string|element|function)'\n\t  });\n\t\n\t  var ClassName = {\n\t    FADE: 'fade',\n\t    IN: 'in'\n\t  };\n\t\n\t  var Selector = {\n\t    TITLE: '.popover-title',\n\t    CONTENT: '.popover-content',\n\t    ARROW: '.popover-arrow'\n\t  };\n\t\n\t  var Event = {\n\t    HIDE: 'hide' + EVENT_KEY,\n\t    HIDDEN: 'hidden' + EVENT_KEY,\n\t    SHOW: 'show' + EVENT_KEY,\n\t    SHOWN: 'shown' + EVENT_KEY,\n\t    INSERTED: 'inserted' + EVENT_KEY,\n\t    CLICK: 'click' + EVENT_KEY,\n\t    FOCUSIN: 'focusin' + EVENT_KEY,\n\t    FOCUSOUT: 'focusout' + EVENT_KEY,\n\t    MOUSEENTER: 'mouseenter' + EVENT_KEY,\n\t    MOUSELEAVE: 'mouseleave' + EVENT_KEY\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Popover = (function (_Tooltip) {\n\t    _inherits(Popover, _Tooltip);\n\t\n\t    function Popover() {\n\t      _classCallCheck(this, Popover);\n\t\n\t      _get(Object.getPrototypeOf(Popover.prototype), 'constructor', this).apply(this, arguments);\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * jQuery\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    _createClass(Popover, [{\n\t      key: 'isWithContent',\n\t\n\t      // overrides\n\t\n\t      value: function isWithContent() {\n\t        return this.getTitle() || this._getContent();\n\t      }\n\t    }, {\n\t      key: 'getTipElement',\n\t      value: function getTipElement() {\n\t        return this.tip = this.tip || $(this.config.template)[0];\n\t      }\n\t    }, {\n\t      key: 'setContent',\n\t      value: function setContent() {\n\t        var $tip = $(this.getTipElement());\n\t\n\t        // we use append for html objects to maintain js events\n\t        this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\n\t        this.setElementContent($tip.find(Selector.CONTENT), this._getContent());\n\t\n\t        $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\n\t\n\t        this.cleanupTether();\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_getContent',\n\t      value: function _getContent() {\n\t        return this.element.getAttribute('data-content') || (typeof this.config.content === 'function' ? this.config.content.call(this.element) : this.config.content);\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var data = $(this).data(DATA_KEY);\n\t          var _config = typeof config === 'object' ? config : null;\n\t\n\t          if (!data && /destroy|hide/.test(config)) {\n\t            return;\n\t          }\n\t\n\t          if (!data) {\n\t            data = new Popover(this, _config);\n\t            $(this).data(DATA_KEY, data);\n\t          }\n\t\n\t          if (typeof config === 'string') {\n\t            if (data[config] === undefined) {\n\t              throw new Error('No method named \"' + config + '\"');\n\t            }\n\t            data[config]();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t\n\t      // getters\n\t\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }, {\n\t      key: 'Default',\n\t      get: function get() {\n\t        return Default;\n\t      }\n\t    }, {\n\t      key: 'NAME',\n\t      get: function get() {\n\t        return NAME;\n\t      }\n\t    }, {\n\t      key: 'DATA_KEY',\n\t      get: function get() {\n\t        return DATA_KEY;\n\t      }\n\t    }, {\n\t      key: 'Event',\n\t      get: function get() {\n\t        return Event;\n\t      }\n\t    }, {\n\t      key: 'EVENT_KEY',\n\t      get: function get() {\n\t        return EVENT_KEY;\n\t      }\n\t    }, {\n\t      key: 'DefaultType',\n\t      get: function get() {\n\t        return DefaultType;\n\t      }\n\t    }]);\n\t\n\t    return Popover;\n\t  })(Tooltip);\n\t\n\t  $.fn[NAME] = Popover._jQueryInterface;\n\t  $.fn[NAME].Constructor = Popover;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Popover._jQueryInterface;\n\t  };\n\t\n\t  return Popover;\n\t})(jQuery);\n\t//# sourceMappingURL=popover.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(76)))\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, Util) {'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): scrollspy.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar ScrollSpy = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'scrollspy';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.scrollspy';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var DATA_API_KEY = '.data-api';\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t\n\t  var Default = {\n\t    offset: 10,\n\t    method: 'auto',\n\t    target: ''\n\t  };\n\t\n\t  var DefaultType = {\n\t    offset: 'number',\n\t    method: 'string',\n\t    target: '(string|element)'\n\t  };\n\t\n\t  var Event = {\n\t    ACTIVATE: 'activate' + EVENT_KEY,\n\t    SCROLL: 'scroll' + EVENT_KEY,\n\t    LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    DROPDOWN_ITEM: 'dropdown-item',\n\t    DROPDOWN_MENU: 'dropdown-menu',\n\t    NAV_LINK: 'nav-link',\n\t    NAV: 'nav',\n\t    ACTIVE: 'active'\n\t  };\n\t\n\t  var Selector = {\n\t    DATA_SPY: '[data-spy=\"scroll\"]',\n\t    ACTIVE: '.active',\n\t    LIST_ITEM: '.list-item',\n\t    LI: 'li',\n\t    LI_DROPDOWN: 'li.dropdown',\n\t    NAV_LINKS: '.nav-link',\n\t    DROPDOWN: '.dropdown',\n\t    DROPDOWN_ITEMS: '.dropdown-item',\n\t    DROPDOWN_TOGGLE: '.dropdown-toggle'\n\t  };\n\t\n\t  var OffsetMethod = {\n\t    OFFSET: 'offset',\n\t    POSITION: 'position'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var ScrollSpy = (function () {\n\t    function ScrollSpy(element, config) {\n\t      _classCallCheck(this, ScrollSpy);\n\t\n\t      this._element = element;\n\t      this._scrollElement = element.tagName === 'BODY' ? window : element;\n\t      this._config = this._getConfig(config);\n\t      this._selector = this._config.target + ' ' + Selector.NAV_LINKS + ',' + (this._config.target + ' ' + Selector.DROPDOWN_ITEMS);\n\t      this._offsets = [];\n\t      this._targets = [];\n\t      this._activeTarget = null;\n\t      this._scrollHeight = 0;\n\t\n\t      $(this._scrollElement).on(Event.SCROLL, $.proxy(this._process, this));\n\t\n\t      this.refresh();\n\t      this._process();\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * Data Api implementation\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(ScrollSpy, [{\n\t      key: 'refresh',\n\t\n\t      // public\n\t\n\t      value: function refresh() {\n\t        var _this = this;\n\t\n\t        var autoMethod = this._scrollElement !== this._scrollElement.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\n\t\n\t        var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n\t\n\t        var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;\n\t\n\t        this._offsets = [];\n\t        this._targets = [];\n\t\n\t        this._scrollHeight = this._getScrollHeight();\n\t\n\t        var targets = $.makeArray($(this._selector));\n\t\n\t        targets.map(function (element) {\n\t          var target = undefined;\n\t          var targetSelector = Util.getSelectorFromElement(element);\n\t\n\t          if (targetSelector) {\n\t            target = $(targetSelector)[0];\n\t          }\n\t\n\t          if (target && (target.offsetWidth || target.offsetHeight)) {\n\t            // todo (fat): remove sketch reliance on jQuery position/offset\n\t            return [$(target)[offsetMethod]().top + offsetBase, targetSelector];\n\t          }\n\t          return null;\n\t        }).filter(function (item) {\n\t          return item;\n\t        }).sort(function (a, b) {\n\t          return a[0] - b[0];\n\t        }).forEach(function (item) {\n\t          _this._offsets.push(item[0]);\n\t          _this._targets.push(item[1]);\n\t        });\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        $.removeData(this._element, DATA_KEY);\n\t        $(this._scrollElement).off(EVENT_KEY);\n\t\n\t        this._element = null;\n\t        this._scrollElement = null;\n\t        this._config = null;\n\t        this._selector = null;\n\t        this._offsets = null;\n\t        this._targets = null;\n\t        this._activeTarget = null;\n\t        this._scrollHeight = null;\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_getConfig',\n\t      value: function _getConfig(config) {\n\t        config = $.extend({}, Default, config);\n\t\n\t        if (typeof config.target !== 'string') {\n\t          var id = $(config.target).attr('id');\n\t          if (!id) {\n\t            id = Util.getUID(NAME);\n\t            $(config.target).attr('id', id);\n\t          }\n\t          config.target = '#' + id;\n\t        }\n\t\n\t        Util.typeCheckConfig(NAME, config, DefaultType);\n\t\n\t        return config;\n\t      }\n\t    }, {\n\t      key: '_getScrollTop',\n\t      value: function _getScrollTop() {\n\t        return this._scrollElement === window ? this._scrollElement.scrollY : this._scrollElement.scrollTop;\n\t      }\n\t    }, {\n\t      key: '_getScrollHeight',\n\t      value: function _getScrollHeight() {\n\t        return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n\t      }\n\t    }, {\n\t      key: '_process',\n\t      value: function _process() {\n\t        var scrollTop = this._getScrollTop() + this._config.offset;\n\t        var scrollHeight = this._getScrollHeight();\n\t        var maxScroll = this._config.offset + scrollHeight - this._scrollElement.offsetHeight;\n\t\n\t        if (this._scrollHeight !== scrollHeight) {\n\t          this.refresh();\n\t        }\n\t\n\t        if (scrollTop >= maxScroll) {\n\t          var target = this._targets[this._targets.length - 1];\n\t\n\t          if (this._activeTarget !== target) {\n\t            this._activate(target);\n\t          }\n\t        }\n\t\n\t        if (this._activeTarget && scrollTop < this._offsets[0]) {\n\t          this._activeTarget = null;\n\t          this._clear();\n\t          return;\n\t        }\n\t\n\t        for (var i = this._offsets.length; i--;) {\n\t          var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (this._offsets[i + 1] === undefined || scrollTop < this._offsets[i + 1]);\n\t\n\t          if (isActiveTarget) {\n\t            this._activate(this._targets[i]);\n\t          }\n\t        }\n\t      }\n\t    }, {\n\t      key: '_activate',\n\t      value: function _activate(target) {\n\t        this._activeTarget = target;\n\t\n\t        this._clear();\n\t\n\t        var queries = this._selector.split(',');\n\t        queries = queries.map(function (selector) {\n\t          return selector + '[data-target=\"' + target + '\"],' + (selector + '[href=\"' + target + '\"]');\n\t        });\n\t\n\t        var $link = $(queries.join(','));\n\t\n\t        if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n\t          $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\n\t          $link.addClass(ClassName.ACTIVE);\n\t        } else {\n\t          // todo (fat) this is kinda sus...\n\t          // recursively add actives to tested nav-links\n\t          $link.parents(Selector.LI).find(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\n\t        }\n\t\n\t        $(this._scrollElement).trigger(Event.ACTIVATE, {\n\t          relatedTarget: target\n\t        });\n\t      }\n\t    }, {\n\t      key: '_clear',\n\t      value: function _clear() {\n\t        $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var data = $(this).data(DATA_KEY);\n\t          var _config = typeof config === 'object' && config || null;\n\t\n\t          if (!data) {\n\t            data = new ScrollSpy(this, _config);\n\t            $(this).data(DATA_KEY, data);\n\t          }\n\t\n\t          if (typeof config === 'string') {\n\t            if (data[config] === undefined) {\n\t              throw new Error('No method named \"' + config + '\"');\n\t            }\n\t            data[config]();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }, {\n\t      key: 'Default',\n\t      get: function get() {\n\t        return Default;\n\t      }\n\t    }]);\n\t\n\t    return ScrollSpy;\n\t  })();\n\t\n\t  $(window).on(Event.LOAD_DATA_API, function () {\n\t    var scrollSpys = $.makeArray($(Selector.DATA_SPY));\n\t\n\t    for (var i = scrollSpys.length; i--;) {\n\t      var $spy = $(scrollSpys[i]);\n\t      ScrollSpy._jQueryInterface.call($spy, $spy.data());\n\t    }\n\t  });\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * jQuery\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  $.fn[NAME] = ScrollSpy._jQueryInterface;\n\t  $.fn[NAME].Constructor = ScrollSpy;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return ScrollSpy._jQueryInterface;\n\t  };\n\t\n\t  return ScrollSpy;\n\t})(jQuery);\n\t//# sourceMappingURL=scrollspy.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, Util) {'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): tab.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Tab = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'tab';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.tab';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var DATA_API_KEY = '.data-api';\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t  var TRANSITION_DURATION = 150;\n\t\n\t  var Event = {\n\t    HIDE: 'hide' + EVENT_KEY,\n\t    HIDDEN: 'hidden' + EVENT_KEY,\n\t    SHOW: 'show' + EVENT_KEY,\n\t    SHOWN: 'shown' + EVENT_KEY,\n\t    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    DROPDOWN_MENU: 'dropdown-menu',\n\t    ACTIVE: 'active',\n\t    FADE: 'fade',\n\t    IN: 'in'\n\t  };\n\t\n\t  var Selector = {\n\t    A: 'a',\n\t    LI: 'li',\n\t    DROPDOWN: '.dropdown',\n\t    UL: 'ul:not(.dropdown-menu)',\n\t    FADE_CHILD: '> .nav-item .fade, > .fade',\n\t    ACTIVE: '.active',\n\t    ACTIVE_CHILD: '> .nav-item > .active, > .active',\n\t    DATA_TOGGLE: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]',\n\t    DROPDOWN_TOGGLE: '.dropdown-toggle',\n\t    DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Tab = (function () {\n\t    function Tab(element) {\n\t      _classCallCheck(this, Tab);\n\t\n\t      this._element = element;\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * Data Api implementation\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Tab, [{\n\t      key: 'show',\n\t\n\t      // public\n\t\n\t      value: function show() {\n\t        var _this = this;\n\t\n\t        if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName.ACTIVE)) {\n\t          return;\n\t        }\n\t\n\t        var target = undefined;\n\t        var previous = undefined;\n\t        var ulElement = $(this._element).closest(Selector.UL)[0];\n\t        var selector = Util.getSelectorFromElement(this._element);\n\t\n\t        if (ulElement) {\n\t          previous = $.makeArray($(ulElement).find(Selector.ACTIVE));\n\t          previous = previous[previous.length - 1];\n\t        }\n\t\n\t        var hideEvent = $.Event(Event.HIDE, {\n\t          relatedTarget: this._element\n\t        });\n\t\n\t        var showEvent = $.Event(Event.SHOW, {\n\t          relatedTarget: previous\n\t        });\n\t\n\t        if (previous) {\n\t          $(previous).trigger(hideEvent);\n\t        }\n\t\n\t        $(this._element).trigger(showEvent);\n\t\n\t        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        if (selector) {\n\t          target = $(selector)[0];\n\t        }\n\t\n\t        this._activate(this._element, ulElement);\n\t\n\t        var complete = function complete() {\n\t          var hiddenEvent = $.Event(Event.HIDDEN, {\n\t            relatedTarget: _this._element\n\t          });\n\t\n\t          var shownEvent = $.Event(Event.SHOWN, {\n\t            relatedTarget: previous\n\t          });\n\t\n\t          $(previous).trigger(hiddenEvent);\n\t          $(_this._element).trigger(shownEvent);\n\t        };\n\t\n\t        if (target) {\n\t          this._activate(target, target.parentNode, complete);\n\t        } else {\n\t          complete();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        $.removeClass(this._element, DATA_KEY);\n\t        this._element = null;\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_activate',\n\t      value: function _activate(element, container, callback) {\n\t        var active = $(container).find(Selector.ACTIVE_CHILD)[0];\n\t        var isTransitioning = callback && Util.supportsTransitionEnd() && (active && $(active).hasClass(ClassName.FADE) || Boolean($(container).find(Selector.FADE_CHILD)[0]));\n\t\n\t        var complete = $.proxy(this._transitionComplete, this, element, active, isTransitioning, callback);\n\t\n\t        if (active && isTransitioning) {\n\t          $(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n\t        } else {\n\t          complete();\n\t        }\n\t\n\t        if (active) {\n\t          $(active).removeClass(ClassName.IN);\n\t        }\n\t      }\n\t    }, {\n\t      key: '_transitionComplete',\n\t      value: function _transitionComplete(element, active, isTransitioning, callback) {\n\t        if (active) {\n\t          $(active).removeClass(ClassName.ACTIVE);\n\t\n\t          var dropdownChild = $(active).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];\n\t\n\t          if (dropdownChild) {\n\t            $(dropdownChild).removeClass(ClassName.ACTIVE);\n\t          }\n\t\n\t          active.setAttribute('aria-expanded', false);\n\t        }\n\t\n\t        $(element).addClass(ClassName.ACTIVE);\n\t        element.setAttribute('aria-expanded', true);\n\t\n\t        if (isTransitioning) {\n\t          Util.reflow(element);\n\t          $(element).addClass(ClassName.IN);\n\t        } else {\n\t          $(element).removeClass(ClassName.FADE);\n\t        }\n\t\n\t        if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {\n\t\n\t          var dropdownElement = $(element).closest(Selector.DROPDOWN)[0];\n\t          if (dropdownElement) {\n\t            $(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\n\t          }\n\t\n\t          element.setAttribute('aria-expanded', true);\n\t        }\n\t\n\t        if (callback) {\n\t          callback();\n\t        }\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var $this = $(this);\n\t          var data = $this.data(DATA_KEY);\n\t\n\t          if (!data) {\n\t            data = data = new Tab(this);\n\t            $this.data(DATA_KEY, data);\n\t          }\n\t\n\t          if (typeof config === 'string') {\n\t            if (data[config] === undefined) {\n\t              throw new Error('No method named \"' + config + '\"');\n\t            }\n\t            data[config]();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }]);\n\t\n\t    return Tab;\n\t  })();\n\t\n\t  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n\t    event.preventDefault();\n\t    Tab._jQueryInterface.call($(this), 'show');\n\t  });\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * jQuery\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  $.fn[NAME] = Tab._jQueryInterface;\n\t  $.fn[NAME].Constructor = Tab;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Tab._jQueryInterface;\n\t  };\n\t\n\t  return Tab;\n\t})(jQuery);\n\t//# sourceMappingURL=tab.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, __webpack_provided_window_dot_Tether, Util, Tether) {/* global Tether */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): tooltip.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Tooltip = (function ($) {\n\t\n\t  /**\n\t   * Check for Tether dependency\n\t   * Tether - http://github.hubspot.com/tether/\n\t   */\n\t  if (__webpack_provided_window_dot_Tether === undefined) {\n\t    throw new Error('Bootstrap tooltips require Tether (http://github.hubspot.com/tether/)');\n\t  }\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'tooltip';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.tooltip';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t  var TRANSITION_DURATION = 150;\n\t  var CLASS_PREFIX = 'bs-tether';\n\t\n\t  var Default = {\n\t    animation: true,\n\t    template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"tooltip-arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n\t    trigger: 'hover focus',\n\t    title: '',\n\t    delay: 0,\n\t    html: false,\n\t    selector: false,\n\t    placement: 'top',\n\t    offset: '0 0',\n\t    constraints: []\n\t  };\n\t\n\t  var DefaultType = {\n\t    animation: 'boolean',\n\t    template: 'string',\n\t    title: '(string|element|function)',\n\t    trigger: 'string',\n\t    delay: '(number|object)',\n\t    html: 'boolean',\n\t    selector: '(string|boolean)',\n\t    placement: '(string|function)',\n\t    offset: 'string',\n\t    constraints: 'array'\n\t  };\n\t\n\t  var AttachmentMap = {\n\t    TOP: 'bottom center',\n\t    RIGHT: 'middle left',\n\t    BOTTOM: 'top center',\n\t    LEFT: 'middle right'\n\t  };\n\t\n\t  var HoverState = {\n\t    IN: 'in',\n\t    OUT: 'out'\n\t  };\n\t\n\t  var Event = {\n\t    HIDE: 'hide' + EVENT_KEY,\n\t    HIDDEN: 'hidden' + EVENT_KEY,\n\t    SHOW: 'show' + EVENT_KEY,\n\t    SHOWN: 'shown' + EVENT_KEY,\n\t    INSERTED: 'inserted' + EVENT_KEY,\n\t    CLICK: 'click' + EVENT_KEY,\n\t    FOCUSIN: 'focusin' + EVENT_KEY,\n\t    FOCUSOUT: 'focusout' + EVENT_KEY,\n\t    MOUSEENTER: 'mouseenter' + EVENT_KEY,\n\t    MOUSELEAVE: 'mouseleave' + EVENT_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    FADE: 'fade',\n\t    IN: 'in'\n\t  };\n\t\n\t  var Selector = {\n\t    TOOLTIP: '.tooltip',\n\t    TOOLTIP_INNER: '.tooltip-inner'\n\t  };\n\t\n\t  var TetherClass = {\n\t    element: false,\n\t    enabled: false\n\t  };\n\t\n\t  var Trigger = {\n\t    HOVER: 'hover',\n\t    FOCUS: 'focus',\n\t    CLICK: 'click',\n\t    MANUAL: 'manual'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Tooltip = (function () {\n\t    function Tooltip(element, config) {\n\t      _classCallCheck(this, Tooltip);\n\t\n\t      // private\n\t      this._isEnabled = true;\n\t      this._timeout = 0;\n\t      this._hoverState = '';\n\t      this._activeTrigger = {};\n\t      this._tether = null;\n\t\n\t      // protected\n\t      this.element = element;\n\t      this.config = this._getConfig(config);\n\t      this.tip = null;\n\t\n\t      this._setListeners();\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * jQuery\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Tooltip, [{\n\t      key: 'enable',\n\t\n\t      // public\n\t\n\t      value: function enable() {\n\t        this._isEnabled = true;\n\t      }\n\t    }, {\n\t      key: 'disable',\n\t      value: function disable() {\n\t        this._isEnabled = false;\n\t      }\n\t    }, {\n\t      key: 'toggleEnabled',\n\t      value: function toggleEnabled() {\n\t        this._isEnabled = !this._isEnabled;\n\t      }\n\t    }, {\n\t      key: 'toggle',\n\t      value: function toggle(event) {\n\t        if (event) {\n\t          var dataKey = this.constructor.DATA_KEY;\n\t          var context = $(event.currentTarget).data(dataKey);\n\t\n\t          if (!context) {\n\t            context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n\t            $(event.currentTarget).data(dataKey, context);\n\t          }\n\t\n\t          context._activeTrigger.click = !context._activeTrigger.click;\n\t\n\t          if (context._isWithActiveTrigger()) {\n\t            context._enter(null, context);\n\t          } else {\n\t            context._leave(null, context);\n\t          }\n\t        } else {\n\t\n\t          if ($(this.getTipElement()).hasClass(ClassName.IN)) {\n\t            this._leave(null, this);\n\t            return;\n\t          }\n\t\n\t          this._enter(null, this);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        clearTimeout(this._timeout);\n\t\n\t        this.cleanupTether();\n\t\n\t        $.removeData(this.element, this.constructor.DATA_KEY);\n\t\n\t        $(this.element).off(this.constructor.EVENT_KEY);\n\t\n\t        if (this.tip) {\n\t          $(this.tip).remove();\n\t        }\n\t\n\t        this._isEnabled = null;\n\t        this._timeout = null;\n\t        this._hoverState = null;\n\t        this._activeTrigger = null;\n\t        this._tether = null;\n\t\n\t        this.element = null;\n\t        this.config = null;\n\t        this.tip = null;\n\t      }\n\t    }, {\n\t      key: 'show',\n\t      value: function show() {\n\t        var _this = this;\n\t\n\t        var showEvent = $.Event(this.constructor.Event.SHOW);\n\t\n\t        if (this.isWithContent() && this._isEnabled) {\n\t          $(this.element).trigger(showEvent);\n\t\n\t          var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);\n\t\n\t          if (showEvent.isDefaultPrevented() || !isInTheDom) {\n\t            return;\n\t          }\n\t\n\t          var tip = this.getTipElement();\n\t          var tipId = Util.getUID(this.constructor.NAME);\n\t\n\t          tip.setAttribute('id', tipId);\n\t          this.element.setAttribute('aria-describedby', tipId);\n\t\n\t          this.setContent();\n\t\n\t          if (this.config.animation) {\n\t            $(tip).addClass(ClassName.FADE);\n\t          }\n\t\n\t          var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n\t\n\t          var attachment = this._getAttachment(placement);\n\t\n\t          $(tip).data(this.constructor.DATA_KEY, this).appendTo(document.body);\n\t\n\t          $(this.element).trigger(this.constructor.Event.INSERTED);\n\t\n\t          this._tether = new Tether({\n\t            attachment: attachment,\n\t            element: tip,\n\t            target: this.element,\n\t            classes: TetherClass,\n\t            classPrefix: CLASS_PREFIX,\n\t            offset: this.config.offset,\n\t            constraints: this.config.constraints,\n\t            addTargetClasses: false\n\t          });\n\t\n\t          Util.reflow(tip);\n\t          this._tether.position();\n\t\n\t          $(tip).addClass(ClassName.IN);\n\t\n\t          var complete = function complete() {\n\t            var prevHoverState = _this._hoverState;\n\t            _this._hoverState = null;\n\t\n\t            $(_this.element).trigger(_this.constructor.Event.SHOWN);\n\t\n\t            if (prevHoverState === HoverState.OUT) {\n\t              _this._leave(null, _this);\n\t            }\n\t          };\n\t\n\t          if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n\t            $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);\n\t            return;\n\t          }\n\t\n\t          complete();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'hide',\n\t      value: function hide(callback) {\n\t        var _this2 = this;\n\t\n\t        var tip = this.getTipElement();\n\t        var hideEvent = $.Event(this.constructor.Event.HIDE);\n\t        var complete = function complete() {\n\t          if (_this2._hoverState !== HoverState.IN && tip.parentNode) {\n\t            tip.parentNode.removeChild(tip);\n\t          }\n\t\n\t          _this2.element.removeAttribute('aria-describedby');\n\t          $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\n\t          _this2.cleanupTether();\n\t\n\t          if (callback) {\n\t            callback();\n\t          }\n\t        };\n\t\n\t        $(this.element).trigger(hideEvent);\n\t\n\t        if (hideEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        $(tip).removeClass(ClassName.IN);\n\t\n\t        if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n\t\n\t          $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n\t        } else {\n\t          complete();\n\t        }\n\t\n\t        this._hoverState = '';\n\t      }\n\t\n\t      // protected\n\t\n\t    }, {\n\t      key: 'isWithContent',\n\t      value: function isWithContent() {\n\t        return Boolean(this.getTitle());\n\t      }\n\t    }, {\n\t      key: 'getTipElement',\n\t      value: function getTipElement() {\n\t        return this.tip = this.tip || $(this.config.template)[0];\n\t      }\n\t    }, {\n\t      key: 'setContent',\n\t      value: function setContent() {\n\t        var $tip = $(this.getTipElement());\n\t\n\t        this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());\n\t\n\t        $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\n\t\n\t        this.cleanupTether();\n\t      }\n\t    }, {\n\t      key: 'setElementContent',\n\t      value: function setElementContent($element, content) {\n\t        var html = this.config.html;\n\t        if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n\t          // content is a DOM node or a jQuery\n\t          if (html) {\n\t            if (!$(content).parent().is($element)) {\n\t              $element.empty().append(content);\n\t            }\n\t          } else {\n\t            $element.text($(content).text());\n\t          }\n\t        } else {\n\t          $element[html ? 'html' : 'text'](content);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'getTitle',\n\t      value: function getTitle() {\n\t        var title = this.element.getAttribute('data-original-title');\n\t\n\t        if (!title) {\n\t          title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n\t        }\n\t\n\t        return title;\n\t      }\n\t    }, {\n\t      key: 'cleanupTether',\n\t      value: function cleanupTether() {\n\t        if (this._tether) {\n\t          this._tether.destroy();\n\t        }\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_getAttachment',\n\t      value: function _getAttachment(placement) {\n\t        return AttachmentMap[placement.toUpperCase()];\n\t      }\n\t    }, {\n\t      key: '_setListeners',\n\t      value: function _setListeners() {\n\t        var _this3 = this;\n\t\n\t        var triggers = this.config.trigger.split(' ');\n\t\n\t        triggers.forEach(function (trigger) {\n\t          if (trigger === 'click') {\n\t            $(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, $.proxy(_this3.toggle, _this3));\n\t          } else if (trigger !== Trigger.MANUAL) {\n\t            var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;\n\t            var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;\n\t\n\t            $(_this3.element).on(eventIn, _this3.config.selector, $.proxy(_this3._enter, _this3)).on(eventOut, _this3.config.selector, $.proxy(_this3._leave, _this3));\n\t          }\n\t        });\n\t\n\t        if (this.config.selector) {\n\t          this.config = $.extend({}, this.config, {\n\t            trigger: 'manual',\n\t            selector: ''\n\t          });\n\t        } else {\n\t          this._fixTitle();\n\t        }\n\t      }\n\t    }, {\n\t      key: '_fixTitle',\n\t      value: function _fixTitle() {\n\t        var titleType = typeof this.element.getAttribute('data-original-title');\n\t        if (this.element.getAttribute('title') || titleType !== 'string') {\n\t          this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n\t          this.element.setAttribute('title', '');\n\t        }\n\t      }\n\t    }, {\n\t      key: '_enter',\n\t      value: function _enter(event, context) {\n\t        var dataKey = this.constructor.DATA_KEY;\n\t\n\t        context = context || $(event.currentTarget).data(dataKey);\n\t\n\t        if (!context) {\n\t          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n\t          $(event.currentTarget).data(dataKey, context);\n\t        }\n\t\n\t        if (event) {\n\t          context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n\t        }\n\t\n\t        if ($(context.getTipElement()).hasClass(ClassName.IN) || context._hoverState === HoverState.IN) {\n\t          context._hoverState = HoverState.IN;\n\t          return;\n\t        }\n\t\n\t        clearTimeout(context._timeout);\n\t\n\t        context._hoverState = HoverState.IN;\n\t\n\t        if (!context.config.delay || !context.config.delay.show) {\n\t          context.show();\n\t          return;\n\t        }\n\t\n\t        context._timeout = setTimeout(function () {\n\t          if (context._hoverState === HoverState.IN) {\n\t            context.show();\n\t          }\n\t        }, context.config.delay.show);\n\t      }\n\t    }, {\n\t      key: '_leave',\n\t      value: function _leave(event, context) {\n\t        var dataKey = this.constructor.DATA_KEY;\n\t\n\t        context = context || $(event.currentTarget).data(dataKey);\n\t\n\t        if (!context) {\n\t          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n\t          $(event.currentTarget).data(dataKey, context);\n\t        }\n\t\n\t        if (event) {\n\t          context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n\t        }\n\t\n\t        if (context._isWithActiveTrigger()) {\n\t          return;\n\t        }\n\t\n\t        clearTimeout(context._timeout);\n\t\n\t        context._hoverState = HoverState.OUT;\n\t\n\t        if (!context.config.delay || !context.config.delay.hide) {\n\t          context.hide();\n\t          return;\n\t        }\n\t\n\t        context._timeout = setTimeout(function () {\n\t          if (context._hoverState === HoverState.OUT) {\n\t            context.hide();\n\t          }\n\t        }, context.config.delay.hide);\n\t      }\n\t    }, {\n\t      key: '_isWithActiveTrigger',\n\t      value: function _isWithActiveTrigger() {\n\t        for (var trigger in this._activeTrigger) {\n\t          if (this._activeTrigger[trigger]) {\n\t            return true;\n\t          }\n\t        }\n\t\n\t        return false;\n\t      }\n\t    }, {\n\t      key: '_getConfig',\n\t      value: function _getConfig(config) {\n\t        config = $.extend({}, this.constructor.Default, $(this.element).data(), config);\n\t\n\t        if (config.delay && typeof config.delay === 'number') {\n\t          config.delay = {\n\t            show: config.delay,\n\t            hide: config.delay\n\t          };\n\t        }\n\t\n\t        Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n\t\n\t        return config;\n\t      }\n\t    }, {\n\t      key: '_getDelegateConfig',\n\t      value: function _getDelegateConfig() {\n\t        var config = {};\n\t\n\t        if (this.config) {\n\t          for (var key in this.config) {\n\t            if (this.constructor.Default[key] !== this.config[key]) {\n\t              config[key] = this.config[key];\n\t            }\n\t          }\n\t        }\n\t\n\t        return config;\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var data = $(this).data(DATA_KEY);\n\t          var _config = typeof config === 'object' ? config : null;\n\t\n\t          if (!data && /destroy|hide/.test(config)) {\n\t            return;\n\t          }\n\t\n\t          if (!data) {\n\t            data = new Tooltip(this, _config);\n\t            $(this).data(DATA_KEY, data);\n\t          }\n\t\n\t          if (typeof config === 'string') {\n\t            if (data[config] === undefined) {\n\t              throw new Error('No method named \"' + config + '\"');\n\t            }\n\t            data[config]();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }, {\n\t      key: 'Default',\n\t      get: function get() {\n\t        return Default;\n\t      }\n\t    }, {\n\t      key: 'NAME',\n\t      get: function get() {\n\t        return NAME;\n\t      }\n\t    }, {\n\t      key: 'DATA_KEY',\n\t      get: function get() {\n\t        return DATA_KEY;\n\t      }\n\t    }, {\n\t      key: 'Event',\n\t      get: function get() {\n\t        return Event;\n\t      }\n\t    }, {\n\t      key: 'EVENT_KEY',\n\t      get: function get() {\n\t        return EVENT_KEY;\n\t      }\n\t    }, {\n\t      key: 'DefaultType',\n\t      get: function get() {\n\t        return DefaultType;\n\t      }\n\t    }]);\n\t\n\t    return Tooltip;\n\t  })();\n\t\n\t  $.fn[NAME] = Tooltip._jQueryInterface;\n\t  $.fn[NAME].Constructor = Tooltip;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Tooltip._jQueryInterface;\n\t  };\n\t\n\t  return Tooltip;\n\t})(jQuery);\n\t//# sourceMappingURL=tooltip.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(10), __webpack_require__(2), __webpack_require__(10)))\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): util.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\t'use strict';\n\t\n\tvar Util = (function ($) {\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Private TransitionEnd Helpers\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var transition = false;\n\t\n\t  var MAX_UID = 1000000;\n\t\n\t  var TransitionEndEvent = {\n\t    WebkitTransition: 'webkitTransitionEnd',\n\t    MozTransition: 'transitionend',\n\t    OTransition: 'oTransitionEnd otransitionend',\n\t    transition: 'transitionend'\n\t  };\n\t\n\t  // shoutout AngusCroll (https://goo.gl/pxwQGp)\n\t  function toType(obj) {\n\t    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\t  }\n\t\n\t  function isElement(obj) {\n\t    return (obj[0] || obj).nodeType;\n\t  }\n\t\n\t  function getSpecialTransitionEndEvent() {\n\t    return {\n\t      bindType: transition.end,\n\t      delegateType: transition.end,\n\t      handle: function handle(event) {\n\t        if ($(event.target).is(this)) {\n\t          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n\t        }\n\t        return undefined;\n\t      }\n\t    };\n\t  }\n\t\n\t  function transitionEndTest() {\n\t    if (window.QUnit) {\n\t      return false;\n\t    }\n\t\n\t    var el = document.createElement('bootstrap');\n\t\n\t    for (var _name in TransitionEndEvent) {\n\t      if (el.style[_name] !== undefined) {\n\t        return { end: TransitionEndEvent[_name] };\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function transitionEndEmulator(duration) {\n\t    var _this = this;\n\t\n\t    var called = false;\n\t\n\t    $(this).one(Util.TRANSITION_END, function () {\n\t      called = true;\n\t    });\n\t\n\t    setTimeout(function () {\n\t      if (!called) {\n\t        Util.triggerTransitionEnd(_this);\n\t      }\n\t    }, duration);\n\t\n\t    return this;\n\t  }\n\t\n\t  function setTransitionEndSupport() {\n\t    transition = transitionEndTest();\n\t\n\t    $.fn.emulateTransitionEnd = transitionEndEmulator;\n\t\n\t    if (Util.supportsTransitionEnd()) {\n\t      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * --------------------------------------------------------------------------\n\t   * Public Util Api\n\t   * --------------------------------------------------------------------------\n\t   */\n\t\n\t  var Util = {\n\t\n\t    TRANSITION_END: 'bsTransitionEnd',\n\t\n\t    getUID: function getUID(prefix) {\n\t      do {\n\t        /* eslint-disable no-bitwise */\n\t        prefix += ~ ~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n\t        /* eslint-enable no-bitwise */\n\t      } while (document.getElementById(prefix));\n\t      return prefix;\n\t    },\n\t\n\t    getSelectorFromElement: function getSelectorFromElement(element) {\n\t      var selector = element.getAttribute('data-target');\n\t\n\t      if (!selector) {\n\t        selector = element.getAttribute('href') || '';\n\t        selector = /^#[a-z]/i.test(selector) ? selector : null;\n\t      }\n\t\n\t      return selector;\n\t    },\n\t\n\t    reflow: function reflow(element) {\n\t      new Function('bs', 'return bs')(element.offsetHeight);\n\t    },\n\t\n\t    triggerTransitionEnd: function triggerTransitionEnd(element) {\n\t      $(element).trigger(transition.end);\n\t    },\n\t\n\t    supportsTransitionEnd: function supportsTransitionEnd() {\n\t      return Boolean(transition);\n\t    },\n\t\n\t    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n\t      for (var property in configTypes) {\n\t        if (configTypes.hasOwnProperty(property)) {\n\t          var expectedTypes = configTypes[property];\n\t          var value = config[property];\n\t          var valueType = undefined;\n\t\n\t          if (value && isElement(value)) {\n\t            valueType = 'element';\n\t          } else {\n\t            valueType = toType(value);\n\t          }\n\t\n\t          if (!new RegExp(expectedTypes).test(valueType)) {\n\t            throw new Error(componentName.toUpperCase() + ': ' + ('Option \"' + property + '\" provided type \"' + valueType + '\" ') + ('but expected type \"' + expectedTypes + '\".'));\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  setTransitionEndSupport();\n\t\n\t  return Util;\n\t})(jQuery);\n\t//# sourceMappingURL=util.js.map\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(73);\n\t__webpack_require__(72);\n\tmodule.exports = __webpack_require__(70);\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(){ /* empty */ };\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(17)\n\t  , toLength  = __webpack_require__(66)\n\t  , toIndex   = __webpack_require__(65);\n\tmodule.exports = function(IS_INCLUDES){\n\t  return function($this, el, fromIndex){\n\t    var O      = toIObject($this)\n\t      , length = toLength(O.length)\n\t      , index  = toIndex(fromIndex, length)\n\t      , value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    if(IS_INCLUDES && el != el)while(length > index){\n\t      value = O[index++];\n\t      if(value != value)return true;\n\t    // Array#toIndex ignores holes, Array#includes - not\n\t    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n\t      if(O[index] === el)return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// getting tag from 19.1.3.6 Object.prototype.toString()\n\tvar cof = __webpack_require__(18)\n\t  , TAG = __webpack_require__(4)('toStringTag')\n\t  // ES3 wrong here\n\t  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\t\n\t// fallback for IE11 Script Access Denied error\n\tvar tryGet = function(it, key){\n\t  try {\n\t    return it[key];\n\t  } catch(e){ /* empty */ }\n\t};\n\t\n\tmodule.exports = function(it){\n\t  var O, T, B;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null'\n\t    // @@toStringTag case\n\t    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n\t    // builtinTag case\n\t    : ARG ? cof(O)\n\t    // ES3 arguments fallback\n\t    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n\t};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(46);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(3)\n\t  , core      = __webpack_require__(11)\n\t  , ctx       = __webpack_require__(50)\n\t  , hide      = __webpack_require__(5)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , expProto  = exports[PROTOTYPE]\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(a, b, c){\n\t        if(this instanceof C){\n\t          switch(arguments.length){\n\t            case 0: return new C;\n\t            case 1: return new C(a);\n\t            case 2: return new C(a, b);\n\t          } return new C(a, b, c);\n\t        } return C.apply(this, arguments);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\t    if(IS_PROTO){\n\t      (exports.virtual || (exports.virtual = {}))[key] = out;\n\t      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\t      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n\t    }\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library` \n\tmodule.exports = $export;\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(3).document && document.documentElement;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(7) && !__webpack_require__(21)(function(){\n\t  return Object.defineProperty(__webpack_require__(19)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(18);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar create         = __webpack_require__(58)\n\t  , descriptor     = __webpack_require__(23)\n\t  , setToStringTag = __webpack_require__(24)\n\t  , IteratorPrototype = {};\n\t\n\t// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\t__webpack_require__(5)(IteratorPrototype, __webpack_require__(4)('iterator'), function(){ return this; });\n\t\n\tmodule.exports = function(Constructor, NAME, next){\n\t  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n\t  setToStringTag(Constructor, NAME + ' Iterator');\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(done, value){\n\t  return {value: value, done: !!done};\n\t};\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\tmodule.exports = true;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\tvar anObject    = __webpack_require__(6)\n\t  , dPs         = __webpack_require__(59)\n\t  , enumBugKeys = __webpack_require__(20)\n\t  , IE_PROTO    = __webpack_require__(15)('IE_PROTO')\n\t  , Empty       = function(){ /* empty */ }\n\t  , PROTOTYPE   = 'prototype';\n\t\n\t// Create object with fake `null` prototype: use iframe Object with cleared prototype\n\tvar createDict = function(){\n\t  // Thrash, waste and sodomy: IE GC bug\n\t  var iframe = __webpack_require__(19)('iframe')\n\t    , i      = enumBugKeys.length\n\t    , lt     = '<'\n\t    , gt     = '>'\n\t    , iframeDocument;\n\t  iframe.style.display = 'none';\n\t  __webpack_require__(52).appendChild(iframe);\n\t  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n\t  // createDict = iframe.contentWindow.Object;\n\t  // html.removeChild(iframe);\n\t  iframeDocument = iframe.contentWindow.document;\n\t  iframeDocument.open();\n\t  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n\t  iframeDocument.close();\n\t  createDict = iframeDocument.F;\n\t  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n\t  return createDict();\n\t};\n\t\n\tmodule.exports = Object.create || function create(O, Properties){\n\t  var result;\n\t  if(O !== null){\n\t    Empty[PROTOTYPE] = anObject(O);\n\t    result = new Empty;\n\t    Empty[PROTOTYPE] = null;\n\t    // add \"__proto__\" for Object.getPrototypeOf polyfill\n\t    result[IE_PROTO] = O;\n\t  } else result = createDict();\n\t  return Properties === undefined ? result : dPs(result, Properties);\n\t};\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP       = __webpack_require__(14)\n\t  , anObject = __webpack_require__(6)\n\t  , getKeys  = __webpack_require__(62);\n\t\n\tmodule.exports = __webpack_require__(7) ? Object.defineProperties : function defineProperties(O, Properties){\n\t  anObject(O);\n\t  var keys   = getKeys(Properties)\n\t    , length = keys.length\n\t    , i = 0\n\t    , P;\n\t  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n\t  return O;\n\t};\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\tvar has         = __webpack_require__(8)\n\t  , toObject    = __webpack_require__(67)\n\t  , IE_PROTO    = __webpack_require__(15)('IE_PROTO')\n\t  , ObjectProto = Object.prototype;\n\t\n\tmodule.exports = Object.getPrototypeOf || function(O){\n\t  O = toObject(O);\n\t  if(has(O, IE_PROTO))return O[IE_PROTO];\n\t  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n\t    return O.constructor.prototype;\n\t  } return O instanceof Object ? ObjectProto : null;\n\t};\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar has          = __webpack_require__(8)\n\t  , toIObject    = __webpack_require__(17)\n\t  , arrayIndexOf = __webpack_require__(48)(false)\n\t  , IE_PROTO     = __webpack_require__(15)('IE_PROTO');\n\t\n\tmodule.exports = function(object, names){\n\t  var O      = toIObject(object)\n\t    , i      = 0\n\t    , result = []\n\t    , key;\n\t  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n\t  // Don't enum bug & hidden keys\n\t  while(names.length > i)if(has(O, key = names[i++])){\n\t    ~arrayIndexOf(result, key) || result.push(key);\n\t  }\n\t  return result;\n\t};\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\tvar $keys       = __webpack_require__(61)\n\t  , enumBugKeys = __webpack_require__(20);\n\t\n\tmodule.exports = Object.keys || function keys(O){\n\t  return $keys(O, enumBugKeys);\n\t};\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(5);\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(16)\n\t  , defined   = __webpack_require__(12);\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tmodule.exports = function(TO_STRING){\n\t  return function(that, pos){\n\t    var s = String(defined(that))\n\t      , i = toInteger(pos)\n\t      , l = s.length\n\t      , a, b;\n\t    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(16)\n\t  , max       = Math.max\n\t  , min       = Math.min;\n\tmodule.exports = function(index, length){\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(16)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(12);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(13);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function(it, S){\n\t  if(!isObject(it))return it;\n\t  var fn, val;\n\t  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar classof   = __webpack_require__(49)\n\t  , ITERATOR  = __webpack_require__(4)('iterator')\n\t  , Iterators = __webpack_require__(9);\n\tmodule.exports = __webpack_require__(11).getIteratorMethod = function(it){\n\t  if(it != undefined)return it[ITERATOR]\n\t    || it['@@iterator']\n\t    || Iterators[classof(it)];\n\t};\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject = __webpack_require__(6)\n\t  , get      = __webpack_require__(69);\n\tmodule.exports = __webpack_require__(11).getIterator = function(it){\n\t  var iterFn = get(it);\n\t  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n\t  return anObject(iterFn.call(it));\n\t};\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar addToUnscopables = __webpack_require__(47)\n\t  , step             = __webpack_require__(56)\n\t  , Iterators        = __webpack_require__(9)\n\t  , toIObject        = __webpack_require__(17);\n\t\n\t// 22.1.3.4 Array.prototype.entries()\n\t// 22.1.3.13 Array.prototype.keys()\n\t// 22.1.3.29 Array.prototype.values()\n\t// 22.1.3.30 Array.prototype[@@iterator]()\n\tmodule.exports = __webpack_require__(22)(Array, 'Array', function(iterated, kind){\n\t  this._t = toIObject(iterated); // target\n\t  this._i = 0;                   // next index\n\t  this._k = kind;                // kind\n\t// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , kind  = this._k\n\t    , index = this._i++;\n\t  if(!O || index >= O.length){\n\t    this._t = undefined;\n\t    return step(1);\n\t  }\n\t  if(kind == 'keys'  )return step(0, index);\n\t  if(kind == 'values')return step(0, O[index]);\n\t  return step(0, [index, O[index]]);\n\t}, 'values');\n\t\n\t// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n\tIterators.Arguments = Iterators.Array;\n\t\n\taddToUnscopables('keys');\n\taddToUnscopables('values');\n\taddToUnscopables('entries');\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $at  = __webpack_require__(64)(true);\n\t\n\t// 21.1.3.27 String.prototype[@@iterator]()\n\t__webpack_require__(22)(String, 'String', function(iterated){\n\t  this._t = String(iterated); // target\n\t  this._i = 0;                // next index\n\t// 21.1.5.2.1 %StringIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , index = this._i\n\t    , point;\n\t  if(index >= O.length)return {value: undefined, done: true};\n\t  point = $at(O, index);\n\t  this._i += point.length;\n\t  return {value: point, done: false};\n\t});\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(71);\n\tvar global        = __webpack_require__(3)\n\t  , hide          = __webpack_require__(5)\n\t  , Iterators     = __webpack_require__(9)\n\t  , TO_STRING_TAG = __webpack_require__(4)('toStringTag');\n\t\n\tfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n\t  var NAME       = collections[i]\n\t    , Collection = global[NAME]\n\t    , proto      = Collection && Collection.prototype;\n\t  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n\t  Iterators[NAME] = Iterators.Array;\n\t}\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(75)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"/*! normalize.css v4.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit}optgroup{font-weight:700}button,input,select{overflow:visible}button,input,select,textarea{margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{cursor:pointer}[disabled]{cursor:default}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}button:-moz-focusring,input:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}@media print{*,:after,:before,:first-letter,:first-line{text-shadow:none!important;box-shadow:none!important}a,a:visited{text-decoration:underline}abbr[title]:after{content:\\\" (\\\" attr(title) \\\")\\\"}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}.navbar{display:none}.btn>.caret,.dropup>.btn>.caret{border-top-color:#000!important}.tag{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #ddd!important}}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}@-ms-viewport{width:device-width}html{font-size:16px;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}body{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-size:1rem;line-height:1.5;color:#373a3c;background-color:#fff}[tabindex=\\\"-1\\\"]:focus{outline:none!important}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{cursor:help;border-bottom:1px dotted #818a91}address{font-style:normal;line-height:inherit}address,dl,ol,ul{margin-bottom:1rem}dl,ol,ul{margin-top:0}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}a{color:#0275d8;text-decoration:none}a:focus,a:hover{color:#014c8c;text-decoration:underline}a:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}a:not([href]):not([tabindex]),a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:none}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle}[role=button]{cursor:pointer}[role=button],a,area,button,input,label,select,summary,textarea{touch-action:manipulation}table{border-collapse:collapse;background-color:transparent}caption{padding-top:.75rem;padding-bottom:.75rem;color:#818a91;caption-side:bottom}caption,th{text-align:left}label{display:inline-block;margin-bottom:.5rem}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,select,textarea{margin:0;line-height:inherit;border-radius:0}input[type=checkbox]:disabled,input[type=radio]:disabled{cursor:not-allowed}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit}input[type=search]{-webkit-appearance:none}output{display:inline-block}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-family:inherit;font-weight:500;line-height:1.1;color:inherit}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300}.display-2{font-size:5.5rem;font-weight:300}.display-3{font-size:4.5rem;font-weight:300}.display-4{font-size:3.5rem;font-weight:300}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.list-inline,.list-unstyled{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:5px}.initialism{font-size:90%;text-transform:uppercase}.blockquote{padding:.5rem 1rem;margin-bottom:1rem;font-size:1.25rem;border-left:.25rem solid #eceeef}.blockquote-footer{display:block;font-size:80%;color:#818a91}.blockquote-footer:before{content:\\\"\\\\2014   \\\\A0\\\"}.blockquote-reverse{padding-right:1rem;padding-left:0;text-align:right;border-right:.25rem solid #eceeef;border-left:0}.blockquote-reverse .blockquote-footer:before{content:\\\"\\\"}.blockquote-reverse .blockquote-footer:after{content:\\\"\\\\A0   \\\\2014\\\"}.carousel-inner>.carousel-item>a>img,.carousel-inner>.carousel-item>img,.img-fluid{display:block;max-width:100%;height:auto}.img-rounded{border-radius:.3rem}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #ddd;border-radius:.25rem;transition:all .2s ease-in-out;display:inline-block;max-width:100%;height:auto}.img-circle{border-radius:50%}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#818a91}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}code{color:#bd4147;background-color:#f7f7f9;border-radius:.25rem}code,kbd{padding:.2rem .4rem;font-size:90%}kbd{color:#fff;background-color:#333;border-radius:.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;margin-top:0;margin-bottom:1rem;font-size:90%;color:#373a3c}pre code{padding:0;font-size:inherit;color:inherit;background-color:transparent;border-radius:0}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{margin-left:auto;margin-right:auto;padding-left:15px;padding-right:15px}@media (min-width:544px){.container{max-width:576px}}@media (min-width:768px){.container{max-width:720px}}@media (min-width:992px){.container{max-width:940px}}@media (min-width:1200px){.container{max-width:1140px}}.container-fluid{margin-left:auto;margin-right:auto;padding-left:15px;padding-right:15px}.row{display:flex;flex-wrap:wrap;margin-left:-15px;margin-right:-15px}.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{position:relative;min-height:1px;padding-right:15px;padding-left:15px;width:100%}.col-xs{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-xs-1{flex:0 0 8.33333%;max-width:8.33333%}.col-xs-2{flex:0 0 16.66667%;max-width:16.66667%}.col-xs-3{flex:0 0 25%;max-width:25%}.col-xs-4{flex:0 0 33.33333%;max-width:33.33333%}.col-xs-5{flex:0 0 41.66667%;max-width:41.66667%}.col-xs-6{flex:0 0 50%;max-width:50%}.col-xs-7{flex:0 0 58.33333%;max-width:58.33333%}.col-xs-8{flex:0 0 66.66667%;max-width:66.66667%}.col-xs-9{flex:0 0 75%;max-width:75%}.col-xs-10{flex:0 0 83.33333%;max-width:83.33333%}.col-xs-11{flex:0 0 91.66667%;max-width:91.66667%}.col-xs-12{flex:0 0 100%;max-width:100%}.pull-xs-0{right:auto}.pull-xs-1{right:8.33333%}.pull-xs-2{right:16.66667%}.pull-xs-3{right:25%}.pull-xs-4{right:33.33333%}.pull-xs-5{right:41.66667%}.pull-xs-6{right:50%}.pull-xs-7{right:58.33333%}.pull-xs-8{right:66.66667%}.pull-xs-9{right:75%}.pull-xs-10{right:83.33333%}.pull-xs-11{right:91.66667%}.pull-xs-12{right:100%}.push-xs-0{left:auto}.push-xs-1{left:8.33333%}.push-xs-2{left:16.66667%}.push-xs-3{left:25%}.push-xs-4{left:33.33333%}.push-xs-5{left:41.66667%}.push-xs-6{left:50%}.push-xs-7{left:58.33333%}.push-xs-8{left:66.66667%}.push-xs-9{left:75%}.push-xs-10{left:83.33333%}.push-xs-11{left:91.66667%}.push-xs-12{left:100%}.offset-xs-1{margin-left:8.33333%}.offset-xs-2{margin-left:16.66667%}.offset-xs-3{margin-left:25%}.offset-xs-4{margin-left:33.33333%}.offset-xs-5{margin-left:41.66667%}.offset-xs-6{margin-left:50%}.offset-xs-7{margin-left:58.33333%}.offset-xs-8{margin-left:66.66667%}.offset-xs-9{margin-left:75%}.offset-xs-10{margin-left:83.33333%}.offset-xs-11{margin-left:91.66667%}@media (min-width:544px){.col-sm{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-sm-1{flex:0 0 8.33333%;max-width:8.33333%}.col-sm-2{flex:0 0 16.66667%;max-width:16.66667%}.col-sm-3{flex:0 0 25%;max-width:25%}.col-sm-4{flex:0 0 33.33333%;max-width:33.33333%}.col-sm-5{flex:0 0 41.66667%;max-width:41.66667%}.col-sm-6{flex:0 0 50%;max-width:50%}.col-sm-7{flex:0 0 58.33333%;max-width:58.33333%}.col-sm-8{flex:0 0 66.66667%;max-width:66.66667%}.col-sm-9{flex:0 0 75%;max-width:75%}.col-sm-10{flex:0 0 83.33333%;max-width:83.33333%}.col-sm-11{flex:0 0 91.66667%;max-width:91.66667%}.col-sm-12{flex:0 0 100%;max-width:100%}.pull-sm-0{right:auto}.pull-sm-1{right:8.33333%}.pull-sm-2{right:16.66667%}.pull-sm-3{right:25%}.pull-sm-4{right:33.33333%}.pull-sm-5{right:41.66667%}.pull-sm-6{right:50%}.pull-sm-7{right:58.33333%}.pull-sm-8{right:66.66667%}.pull-sm-9{right:75%}.pull-sm-10{right:83.33333%}.pull-sm-11{right:91.66667%}.pull-sm-12{right:100%}.push-sm-0{left:auto}.push-sm-1{left:8.33333%}.push-sm-2{left:16.66667%}.push-sm-3{left:25%}.push-sm-4{left:33.33333%}.push-sm-5{left:41.66667%}.push-sm-6{left:50%}.push-sm-7{left:58.33333%}.push-sm-8{left:66.66667%}.push-sm-9{left:75%}.push-sm-10{left:83.33333%}.push-sm-11{left:91.66667%}.push-sm-12{left:100%}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.33333%}.offset-sm-2{margin-left:16.66667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.33333%}.offset-sm-5{margin-left:41.66667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.33333%}.offset-sm-8{margin-left:66.66667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.33333%}.offset-sm-11{margin-left:91.66667%}}@media (min-width:768px){.col-md{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-md-1{flex:0 0 8.33333%;max-width:8.33333%}.col-md-2{flex:0 0 16.66667%;max-width:16.66667%}.col-md-3{flex:0 0 25%;max-width:25%}.col-md-4{flex:0 0 33.33333%;max-width:33.33333%}.col-md-5{flex:0 0 41.66667%;max-width:41.66667%}.col-md-6{flex:0 0 50%;max-width:50%}.col-md-7{flex:0 0 58.33333%;max-width:58.33333%}.col-md-8{flex:0 0 66.66667%;max-width:66.66667%}.col-md-9{flex:0 0 75%;max-width:75%}.col-md-10{flex:0 0 83.33333%;max-width:83.33333%}.col-md-11{flex:0 0 91.66667%;max-width:91.66667%}.col-md-12{flex:0 0 100%;max-width:100%}.pull-md-0{right:auto}.pull-md-1{right:8.33333%}.pull-md-2{right:16.66667%}.pull-md-3{right:25%}.pull-md-4{right:33.33333%}.pull-md-5{right:41.66667%}.pull-md-6{right:50%}.pull-md-7{right:58.33333%}.pull-md-8{right:66.66667%}.pull-md-9{right:75%}.pull-md-10{right:83.33333%}.pull-md-11{right:91.66667%}.pull-md-12{right:100%}.push-md-0{left:auto}.push-md-1{left:8.33333%}.push-md-2{left:16.66667%}.push-md-3{left:25%}.push-md-4{left:33.33333%}.push-md-5{left:41.66667%}.push-md-6{left:50%}.push-md-7{left:58.33333%}.push-md-8{left:66.66667%}.push-md-9{left:75%}.push-md-10{left:83.33333%}.push-md-11{left:91.66667%}.push-md-12{left:100%}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.33333%}.offset-md-2{margin-left:16.66667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.33333%}.offset-md-5{margin-left:41.66667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.33333%}.offset-md-8{margin-left:66.66667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.33333%}.offset-md-11{margin-left:91.66667%}}@media (min-width:992px){.col-lg{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-lg-1{flex:0 0 8.33333%;max-width:8.33333%}.col-lg-2{flex:0 0 16.66667%;max-width:16.66667%}.col-lg-3{flex:0 0 25%;max-width:25%}.col-lg-4{flex:0 0 33.33333%;max-width:33.33333%}.col-lg-5{flex:0 0 41.66667%;max-width:41.66667%}.col-lg-6{flex:0 0 50%;max-width:50%}.col-lg-7{flex:0 0 58.33333%;max-width:58.33333%}.col-lg-8{flex:0 0 66.66667%;max-width:66.66667%}.col-lg-9{flex:0 0 75%;max-width:75%}.col-lg-10{flex:0 0 83.33333%;max-width:83.33333%}.col-lg-11{flex:0 0 91.66667%;max-width:91.66667%}.col-lg-12{flex:0 0 100%;max-width:100%}.pull-lg-0{right:auto}.pull-lg-1{right:8.33333%}.pull-lg-2{right:16.66667%}.pull-lg-3{right:25%}.pull-lg-4{right:33.33333%}.pull-lg-5{right:41.66667%}.pull-lg-6{right:50%}.pull-lg-7{right:58.33333%}.pull-lg-8{right:66.66667%}.pull-lg-9{right:75%}.pull-lg-10{right:83.33333%}.pull-lg-11{right:91.66667%}.pull-lg-12{right:100%}.push-lg-0{left:auto}.push-lg-1{left:8.33333%}.push-lg-2{left:16.66667%}.push-lg-3{left:25%}.push-lg-4{left:33.33333%}.push-lg-5{left:41.66667%}.push-lg-6{left:50%}.push-lg-7{left:58.33333%}.push-lg-8{left:66.66667%}.push-lg-9{left:75%}.push-lg-10{left:83.33333%}.push-lg-11{left:91.66667%}.push-lg-12{left:100%}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.33333%}.offset-lg-2{margin-left:16.66667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.33333%}.offset-lg-5{margin-left:41.66667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.33333%}.offset-lg-8{margin-left:66.66667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.33333%}.offset-lg-11{margin-left:91.66667%}}@media (min-width:1200px){.col-xl{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-xl-1{flex:0 0 8.33333%;max-width:8.33333%}.col-xl-2{flex:0 0 16.66667%;max-width:16.66667%}.col-xl-3{flex:0 0 25%;max-width:25%}.col-xl-4{flex:0 0 33.33333%;max-width:33.33333%}.col-xl-5{flex:0 0 41.66667%;max-width:41.66667%}.col-xl-6{flex:0 0 50%;max-width:50%}.col-xl-7{flex:0 0 58.33333%;max-width:58.33333%}.col-xl-8{flex:0 0 66.66667%;max-width:66.66667%}.col-xl-9{flex:0 0 75%;max-width:75%}.col-xl-10{flex:0 0 83.33333%;max-width:83.33333%}.col-xl-11{flex:0 0 91.66667%;max-width:91.66667%}.col-xl-12{flex:0 0 100%;max-width:100%}.pull-xl-0{right:auto}.pull-xl-1{right:8.33333%}.pull-xl-2{right:16.66667%}.pull-xl-3{right:25%}.pull-xl-4{right:33.33333%}.pull-xl-5{right:41.66667%}.pull-xl-6{right:50%}.pull-xl-7{right:58.33333%}.pull-xl-8{right:66.66667%}.pull-xl-9{right:75%}.pull-xl-10{right:83.33333%}.pull-xl-11{right:91.66667%}.pull-xl-12{right:100%}.push-xl-0{left:auto}.push-xl-1{left:8.33333%}.push-xl-2{left:16.66667%}.push-xl-3{left:25%}.push-xl-4{left:33.33333%}.push-xl-5{left:41.66667%}.push-xl-6{left:50%}.push-xl-7{left:58.33333%}.push-xl-8{left:66.66667%}.push-xl-9{left:75%}.push-xl-10{left:83.33333%}.push-xl-11{left:91.66667%}.push-xl-12{left:100%}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.33333%}.offset-xl-2{margin-left:16.66667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.33333%}.offset-xl-5{margin-left:41.66667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.33333%}.offset-xl-8{margin-left:66.66667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.33333%}.offset-xl-11{margin-left:91.66667%}}.table{width:100%;max-width:100%;margin-bottom:1rem}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #eceeef}.table thead th{vertical-align:bottom;border-bottom:2px solid #eceeef}.table tbody+tbody{border-top:2px solid #eceeef}.table .table{background-color:#fff}.table-sm td,.table-sm th{padding:.3rem}.table-bordered,.table-bordered td,.table-bordered th{border:1px solid #eceeef}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-active,.table-active>td,.table-active>th,.table-hover .table-active:hover,.table-hover .table-active:hover>td,.table-hover .table-active:hover>th,.table-hover tbody tr:hover{background-color:rgba(0,0,0,.075)}.table-success,.table-success>td,.table-success>th{background-color:#dff0d8}.table-hover .table-success:hover,.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#d0e9c6}.table-info,.table-info>td,.table-info>th{background-color:#d9edf7}.table-hover .table-info:hover,.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#c4e3f3}.table-warning,.table-warning>td,.table-warning>th{background-color:#fcf8e3}.table-hover .table-warning:hover,.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#faf2cc}.table-danger,.table-danger>td,.table-danger>th{background-color:#f2dede}.table-hover .table-danger:hover,.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#ebcccc}.thead-inverse th{color:#fff;background-color:#373a3c}.thead-default th{color:#55595c;background-color:#eceeef}.table-inverse{color:#eceeef;background-color:#373a3c}.table-inverse td,.table-inverse th,.table-inverse thead th{border-color:#55595c}.table-inverse.table-bordered{border:0}.table-responsive{display:block;width:100%;min-height:.01%;overflow-x:auto}.table-reflow thead{float:left}.table-reflow tbody{display:block;white-space:nowrap}.table-reflow td,.table-reflow th{border-top:1px solid #eceeef;border-left:1px solid #eceeef}.table-reflow td:last-child,.table-reflow th:last-child{border-right:1px solid #eceeef}.table-reflow tbody:last-child tr:last-child td,.table-reflow tbody:last-child tr:last-child th,.table-reflow tfoot:last-child tr:last-child td,.table-reflow tfoot:last-child tr:last-child th,.table-reflow thead:last-child tr:last-child td,.table-reflow thead:last-child tr:last-child th{border-bottom:1px solid #eceeef}.table-reflow tr{float:left}.table-reflow tr td,.table-reflow tr th{display:block!important;border:1px solid #eceeef}.form-control{display:block;width:100%;padding:.5rem .75rem;font-size:1rem;line-height:1.25;color:#55595c;background-color:#fff;background-image:none;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#55595c;background-color:#fff;border-color:#66afe9;outline:none}.form-control::placeholder{color:#999;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#eceeef;opacity:1}.form-control:disabled{cursor:not-allowed}select.form-control:not([size]):not([multiple]){height:2.5rem}select.form-control:focus::-ms-value{color:#55595c;background-color:#fff}.form-control-file,.form-control-range{display:block}.col-form-label{padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0}.col-form-label-lg{padding-top:.75rem;padding-bottom:.75rem;font-size:1.25rem}.col-form-label-sm{padding-top:.25rem;padding-bottom:.25rem;font-size:.875rem}.col-form-legend{font-size:1rem}.col-form-legend,.form-control-static{padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0}.form-control-static{min-height:2.5rem}.form-control-static.form-control-lg,.form-control-static.form-control-sm,.input-group-lg>.form-control-static.form-control,.input-group-lg>.form-control-static.input-group-addon,.input-group-lg>.input-group-btn>.form-control-static.btn,.input-group-sm>.form-control-static.form-control,.input-group-sm>.form-control-static.input-group-addon,.input-group-sm>.input-group-btn>.form-control-static.btn{padding-right:0;padding-left:0}.form-control-sm,.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.input-group-sm>.input-group-btn>select.btn:not([size]):not([multiple]),.input-group-sm>select.form-control:not([size]):not([multiple]),.input-group-sm>select.input-group-addon:not([size]):not([multiple]),select.form-control-sm:not([size]):not([multiple]){height:1.8125rem}.form-control-lg,.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.input-group-lg>.input-group-btn>select.btn:not([size]):not([multiple]),.input-group-lg>select.form-control:not([size]):not([multiple]),.input-group-lg>select.input-group-addon:not([size]):not([multiple]),select.form-control-lg:not([size]):not([multiple]){height:3.16667rem}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-check{position:relative;display:block;margin-bottom:.75rem}.form-check+.form-check{margin-top:-.25rem}.form-check.disabled .form-check-label{color:#818a91;cursor:not-allowed}.form-check-label{padding-left:1.25rem;margin-bottom:0;cursor:pointer}.form-check-input{position:absolute;margin-top:.25rem;margin-left:-1.25rem}.form-check-input:only-child{position:static}.form-check-inline{position:relative;display:inline-block;padding-left:1.25rem;margin-bottom:0;vertical-align:middle;cursor:pointer}.form-check-inline+.form-check-inline{margin-left:.75rem}.form-check-inline.disabled{cursor:not-allowed}.form-control-feedback{margin-top:.25rem}.form-control-danger,.form-control-success,.form-control-warning{padding-right:2.25rem;background-repeat:no-repeat;background-position:center right .625rem;background-size:1.25rem 1.25rem}.has-success .custom-control,.has-success .form-check-inline,.has-success .form-check-label,.has-success .form-control-feedback,.has-success .form-control-label{color:#5cb85c}.has-success .form-control{border-color:#5cb85c}.has-success .input-group-addon{color:#5cb85c;border-color:#5cb85c;background-color:#eaf6ea}.has-success .form-control-feedback{color:#5cb85c}.has-success .form-control-success{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%235cb85c' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E\\\")}.has-warning .custom-control,.has-warning .form-check-inline,.has-warning .form-check-label,.has-warning .form-control-feedback,.has-warning .form-control-label{color:#f0ad4e}.has-warning .form-control{border-color:#f0ad4e}.has-warning .input-group-addon{color:#f0ad4e;border-color:#f0ad4e;background-color:#fff}.has-warning .form-control-feedback{color:#f0ad4e}.has-warning .form-control-warning{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f0ad4e' d='M4.4 5.324h-.8v-2.46h.8zm0 1.42h-.8V5.89h.8zM3.76.63L.04 7.075c-.115.2.016.425.26.426h7.397c.242 0 .372-.226.258-.426C6.726 4.924 5.47 2.79 4.253.63c-.113-.174-.39-.174-.494 0z'/%3E%3C/svg%3E\\\")}.has-danger .custom-control,.has-danger .form-check-inline,.has-danger .form-check-label,.has-danger .form-control-feedback,.has-danger .form-control-label{color:#d9534f}.has-danger .form-control{border-color:#d9534f}.has-danger .input-group-addon{color:#d9534f;border-color:#d9534f;background-color:#fdf7f7}.has-danger .form-control-feedback{color:#d9534f}.has-danger .form-control-danger{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23d9534f' viewBox='-2 -2 7 7'%3E%3Cpath stroke='%23d9534f' d='M0 0l3 3m0-3L0 3'/%3E%3Ccircle r='.5'/%3E%3Ccircle cx='3' r='.5'/%3E%3Ccircle cy='3' r='.5'/%3E%3Ccircle cx='3' cy='3' r='.5'/%3E%3C/svg%3E\\\")}@media (min-width:544px){.form-inline .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-static{display:inline-block}.form-inline .input-group{display:inline-table;vertical-align:middle}.form-inline .input-group .form-control,.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn{width:auto}.form-inline .input-group>.form-control{width:100%}.form-inline .form-check,.form-inline .form-control-label{margin-bottom:0;vertical-align:middle}.form-inline .form-check{display:inline-block;margin-top:0}.form-inline .form-check-label{padding-left:0}.form-inline .form-check-input{position:relative;margin-left:0}.form-inline .has-feedback .form-control-feedback{top:0}}.btn{display:inline-block;font-weight:400;line-height:1.25;text-align:center;white-space:nowrap;vertical-align:middle;cursor:pointer;user-select:none;border:1px solid transparent;padding:.5rem 1rem;font-size:1rem;border-radius:.25rem}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{text-decoration:none}.btn.active,.btn:active{background-image:none;outline:0}.btn.disabled,.btn:disabled{cursor:not-allowed;opacity:.65}a.btn.disabled,fieldset[disabled] a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#0275d8;border-color:#0275d8}.btn-primary.focus,.btn-primary:focus,.btn-primary:hover{color:#fff;background-color:#025aa5;border-color:#01549b}.btn-primary.active,.btn-primary:active,.open>.btn-primary.dropdown-toggle{color:#fff;background-color:#025aa5;border-color:#01549b;background-image:none}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open>.btn-primary.dropdown-toggle.focus,.open>.btn-primary.dropdown-toggle:focus,.open>.btn-primary.dropdown-toggle:hover{color:#fff;background-color:#014682;border-color:#01315a}.btn-primary.disabled.focus,.btn-primary.disabled:focus,.btn-primary.disabled:hover,.btn-primary:disabled.focus,.btn-primary:disabled:focus,.btn-primary:disabled:hover{background-color:#0275d8;border-color:#0275d8}.btn-secondary{color:#373a3c;background-color:#fff;border-color:#ccc}.btn-secondary.focus,.btn-secondary:focus,.btn-secondary:hover{color:#373a3c;background-color:#e6e6e6;border-color:#adadad}.btn-secondary.active,.btn-secondary:active,.open>.btn-secondary.dropdown-toggle{color:#373a3c;background-color:#e6e6e6;border-color:#adadad;background-image:none}.btn-secondary.active.focus,.btn-secondary.active:focus,.btn-secondary.active:hover,.btn-secondary:active.focus,.btn-secondary:active:focus,.btn-secondary:active:hover,.open>.btn-secondary.dropdown-toggle.focus,.open>.btn-secondary.dropdown-toggle:focus,.open>.btn-secondary.dropdown-toggle:hover{color:#373a3c;background-color:#d4d4d4;border-color:#8c8c8c}.btn-secondary.disabled.focus,.btn-secondary.disabled:focus,.btn-secondary.disabled:hover,.btn-secondary:disabled.focus,.btn-secondary:disabled:focus,.btn-secondary:disabled:hover{background-color:#fff;border-color:#ccc}.btn-info{color:#fff;background-color:#5bc0de;border-color:#5bc0de}.btn-info.focus,.btn-info:focus,.btn-info:hover{color:#fff;background-color:#31b0d5;border-color:#2aabd2}.btn-info.active,.btn-info:active,.open>.btn-info.dropdown-toggle{color:#fff;background-color:#31b0d5;border-color:#2aabd2;background-image:none}.btn-info.active.focus,.btn-info.active:focus,.btn-info.active:hover,.btn-info:active.focus,.btn-info:active:focus,.btn-info:active:hover,.open>.btn-info.dropdown-toggle.focus,.open>.btn-info.dropdown-toggle:focus,.open>.btn-info.dropdown-toggle:hover{color:#fff;background-color:#269abc;border-color:#1f7e9a}.btn-info.disabled.focus,.btn-info.disabled:focus,.btn-info.disabled:hover,.btn-info:disabled.focus,.btn-info:disabled:focus,.btn-info:disabled:hover{background-color:#5bc0de;border-color:#5bc0de}.btn-success{color:#fff;background-color:#5cb85c;border-color:#5cb85c}.btn-success.focus,.btn-success:focus,.btn-success:hover{color:#fff;background-color:#449d44;border-color:#419641}.btn-success.active,.btn-success:active,.open>.btn-success.dropdown-toggle{color:#fff;background-color:#449d44;border-color:#419641;background-image:none}.btn-success.active.focus,.btn-success.active:focus,.btn-success.active:hover,.btn-success:active.focus,.btn-success:active:focus,.btn-success:active:hover,.open>.btn-success.dropdown-toggle.focus,.open>.btn-success.dropdown-toggle:focus,.open>.btn-success.dropdown-toggle:hover{color:#fff;background-color:#398439;border-color:#2d672d}.btn-success.disabled.focus,.btn-success.disabled:focus,.btn-success.disabled:hover,.btn-success:disabled.focus,.btn-success:disabled:focus,.btn-success:disabled:hover{background-color:#5cb85c;border-color:#5cb85c}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.btn-warning.focus,.btn-warning:focus,.btn-warning:hover{color:#fff;background-color:#ec971f;border-color:#eb9316}.btn-warning.active,.btn-warning:active,.open>.btn-warning.dropdown-toggle{color:#fff;background-color:#ec971f;border-color:#eb9316;background-image:none}.btn-warning.active.focus,.btn-warning.active:focus,.btn-warning.active:hover,.btn-warning:active.focus,.btn-warning:active:focus,.btn-warning:active:hover,.open>.btn-warning.dropdown-toggle.focus,.open>.btn-warning.dropdown-toggle:focus,.open>.btn-warning.dropdown-toggle:hover{color:#fff;background-color:#d58512;border-color:#b06d0f}.btn-warning.disabled.focus,.btn-warning.disabled:focus,.btn-warning.disabled:hover,.btn-warning:disabled.focus,.btn-warning:disabled:focus,.btn-warning:disabled:hover{background-color:#f0ad4e;border-color:#f0ad4e}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d9534f}.btn-danger.focus,.btn-danger:focus,.btn-danger:hover{color:#fff;background-color:#c9302c;border-color:#c12e2a}.btn-danger.active,.btn-danger:active,.open>.btn-danger.dropdown-toggle{color:#fff;background-color:#c9302c;border-color:#c12e2a;background-image:none}.btn-danger.active.focus,.btn-danger.active:focus,.btn-danger.active:hover,.btn-danger:active.focus,.btn-danger:active:focus,.btn-danger:active:hover,.open>.btn-danger.dropdown-toggle.focus,.open>.btn-danger.dropdown-toggle:focus,.open>.btn-danger.dropdown-toggle:hover{color:#fff;background-color:#ac2925;border-color:#8b211e}.btn-danger.disabled.focus,.btn-danger.disabled:focus,.btn-danger.disabled:hover,.btn-danger:disabled.focus,.btn-danger:disabled:focus,.btn-danger:disabled:hover{background-color:#d9534f;border-color:#d9534f}.btn-outline-primary{color:#0275d8;background-image:none;background-color:transparent;border-color:#0275d8}.btn-outline-primary.active,.btn-outline-primary.focus,.btn-outline-primary:active,.btn-outline-primary:focus,.btn-outline-primary:hover,.open>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#0275d8;border-color:#0275d8}.btn-outline-primary.active.focus,.btn-outline-primary.active:focus,.btn-outline-primary.active:hover,.btn-outline-primary:active.focus,.btn-outline-primary:active:focus,.btn-outline-primary:active:hover,.open>.btn-outline-primary.dropdown-toggle.focus,.open>.btn-outline-primary.dropdown-toggle:focus,.open>.btn-outline-primary.dropdown-toggle:hover{color:#fff;background-color:#014682;border-color:#01315a}.btn-outline-primary.disabled.focus,.btn-outline-primary.disabled:focus,.btn-outline-primary.disabled:hover,.btn-outline-primary:disabled.focus,.btn-outline-primary:disabled:focus,.btn-outline-primary:disabled:hover{border-color:#43a7fd}.btn-outline-secondary{color:#ccc;background-image:none;background-color:transparent;border-color:#ccc}.btn-outline-secondary.active,.btn-outline-secondary.focus,.btn-outline-secondary:active,.btn-outline-secondary:focus,.btn-outline-secondary:hover,.open>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#ccc;border-color:#ccc}.btn-outline-secondary.active.focus,.btn-outline-secondary.active:focus,.btn-outline-secondary.active:hover,.btn-outline-secondary:active.focus,.btn-outline-secondary:active:focus,.btn-outline-secondary:active:hover,.open>.btn-outline-secondary.dropdown-toggle.focus,.open>.btn-outline-secondary.dropdown-toggle:focus,.open>.btn-outline-secondary.dropdown-toggle:hover{color:#fff;background-color:#a1a1a1;border-color:#8c8c8c}.btn-outline-secondary.disabled.focus,.btn-outline-secondary.disabled:focus,.btn-outline-secondary.disabled:hover,.btn-outline-secondary:disabled.focus,.btn-outline-secondary:disabled:focus,.btn-outline-secondary:disabled:hover{border-color:#fff}.btn-outline-info{color:#5bc0de;background-image:none;background-color:transparent;border-color:#5bc0de}.btn-outline-info.active,.btn-outline-info.focus,.btn-outline-info:active,.btn-outline-info:focus,.btn-outline-info:hover,.open>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#5bc0de;border-color:#5bc0de}.btn-outline-info.active.focus,.btn-outline-info.active:focus,.btn-outline-info.active:hover,.btn-outline-info:active.focus,.btn-outline-info:active:focus,.btn-outline-info:active:hover,.open>.btn-outline-info.dropdown-toggle.focus,.open>.btn-outline-info.dropdown-toggle:focus,.open>.btn-outline-info.dropdown-toggle:hover{color:#fff;background-color:#269abc;border-color:#1f7e9a}.btn-outline-info.disabled.focus,.btn-outline-info.disabled:focus,.btn-outline-info.disabled:hover,.btn-outline-info:disabled.focus,.btn-outline-info:disabled:focus,.btn-outline-info:disabled:hover{border-color:#b0e1ef}.btn-outline-success{color:#5cb85c;background-image:none;background-color:transparent;border-color:#5cb85c}.btn-outline-success.active,.btn-outline-success.focus,.btn-outline-success:active,.btn-outline-success:focus,.btn-outline-success:hover,.open>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#5cb85c;border-color:#5cb85c}.btn-outline-success.active.focus,.btn-outline-success.active:focus,.btn-outline-success.active:hover,.btn-outline-success:active.focus,.btn-outline-success:active:focus,.btn-outline-success:active:hover,.open>.btn-outline-success.dropdown-toggle.focus,.open>.btn-outline-success.dropdown-toggle:focus,.open>.btn-outline-success.dropdown-toggle:hover{color:#fff;background-color:#398439;border-color:#2d672d}.btn-outline-success.disabled.focus,.btn-outline-success.disabled:focus,.btn-outline-success.disabled:hover,.btn-outline-success:disabled.focus,.btn-outline-success:disabled:focus,.btn-outline-success:disabled:hover{border-color:#a3d7a3}.btn-outline-warning{color:#f0ad4e;background-image:none;background-color:transparent;border-color:#f0ad4e}.btn-outline-warning.active,.btn-outline-warning.focus,.btn-outline-warning:active,.btn-outline-warning:focus,.btn-outline-warning:hover,.open>.btn-outline-warning.dropdown-toggle{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.btn-outline-warning.active.focus,.btn-outline-warning.active:focus,.btn-outline-warning.active:hover,.btn-outline-warning:active.focus,.btn-outline-warning:active:focus,.btn-outline-warning:active:hover,.open>.btn-outline-warning.dropdown-toggle.focus,.open>.btn-outline-warning.dropdown-toggle:focus,.open>.btn-outline-warning.dropdown-toggle:hover{color:#fff;background-color:#d58512;border-color:#b06d0f}.btn-outline-warning.disabled.focus,.btn-outline-warning.disabled:focus,.btn-outline-warning.disabled:hover,.btn-outline-warning:disabled.focus,.btn-outline-warning:disabled:focus,.btn-outline-warning:disabled:hover{border-color:#f8d9ac}.btn-outline-danger{color:#d9534f;background-image:none;background-color:transparent;border-color:#d9534f}.btn-outline-danger.active,.btn-outline-danger.focus,.btn-outline-danger:active,.btn-outline-danger:focus,.btn-outline-danger:hover,.open>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#d9534f;border-color:#d9534f}.btn-outline-danger.active.focus,.btn-outline-danger.active:focus,.btn-outline-danger.active:hover,.btn-outline-danger:active.focus,.btn-outline-danger:active:focus,.btn-outline-danger:active:hover,.open>.btn-outline-danger.dropdown-toggle.focus,.open>.btn-outline-danger.dropdown-toggle:focus,.open>.btn-outline-danger.dropdown-toggle:hover{color:#fff;background-color:#ac2925;border-color:#8b211e}.btn-outline-danger.disabled.focus,.btn-outline-danger.disabled:focus,.btn-outline-danger.disabled:hover,.btn-outline-danger:disabled.focus,.btn-outline-danger:disabled:focus,.btn-outline-danger:disabled:hover{border-color:#eba5a3}.btn-link{font-weight:400;color:#0275d8;border-radius:0}.btn-link,.btn-link.active,.btn-link:active,.btn-link:disabled{background-color:transparent}.btn-link,.btn-link:active,.btn-link:focus,.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#014c8c;text-decoration:underline;background-color:transparent}.btn-link:disabled:focus,.btn-link:disabled:hover{color:#818a91;text-decoration:none}.btn-group-lg>.btn,.btn-lg{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{opacity:0;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{display:none}.collapse.in{display:block}.collapsing{height:0;overflow:hidden;transition-timing-function:ease;transition-duration:.35s;transition-property:height}.collapsing,.dropdown,.dropup{position:relative}.dropdown-toggle:after{display:inline-block;width:0;height:0;margin-left:.3em;vertical-align:middle;content:\\\"\\\";border-top:.3em solid;border-right:.3em solid transparent;border-left:.3em solid transparent}.dropdown-toggle:focus{outline:0}.dropup .dropdown-toggle:after{border-top:0;border-bottom:.3em solid}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;font-size:1rem;color:#373a3c;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-divider{height:1px;margin:.5rem 0;overflow:hidden;background-color:#e5e5e5}.dropdown-item{display:block;width:100%;padding:3px 20px;clear:both;font-weight:400;color:#373a3c;text-align:inherit;white-space:nowrap;background:none;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#2b2d2f;text-decoration:none;background-color:#f5f5f5}.dropdown-item.active,.dropdown-item.active:focus,.dropdown-item.active:hover{color:#fff;text-decoration:none;background-color:#0275d8;outline:0}.dropdown-item.disabled,.dropdown-item.disabled:focus,.dropdown-item.disabled:hover{color:#818a91}.dropdown-item.disabled:focus,.dropdown-item.disabled:hover{text-decoration:none;cursor:not-allowed;background-color:transparent;background-image:none;filter:\\\"progid:DXImageTransform.Microsoft.gradient(enabled = false)\\\"}.open>.dropdown-menu{display:block}.open>a{outline:0}.dropdown-menu-right{right:0;left:auto}.dropdown-menu-left{right:auto;left:0}.dropdown-header{display:block;padding:5px 20px;font-size:.875rem;color:#818a91;white-space:nowrap}.dropdown-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:990}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{content:\\\"\\\";border-top:0;border-bottom:.3em solid}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:2px}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;float:left}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:2}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{margin-left:-.5rem}.btn-toolbar:after{content:\\\"\\\";display:table;clear:both}.btn-toolbar .btn-group,.btn-toolbar .input-group{float:left}.btn-toolbar>.btn,.btn-toolbar>.btn-group,.btn-toolbar>.input-group{margin-left:.5rem}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.btn-group>.btn-group{float:left}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn-group:last-child:not(:first-child)>.btn:first-child{border-bottom-left-radius:0;border-top-left-radius:0}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn+.dropdown-toggle-split:after{margin-left:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:1.125rem;padding-left:1.125rem}.btn .caret{margin-left:0}.btn-group-lg>.btn .caret,.btn-lg .caret{border-width:.3em .3em 0;border-bottom-width:0}.dropup .btn-group-lg>.btn .caret,.dropup .btn-lg .caret{border-width:0 .3em .3em}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn{display:block;float:none;width:100%;max-width:100%}.btn-group-vertical>.btn-group:after{content:\\\"\\\";display:table;clear:both}.btn-group-vertical>.btn-group>.btn{float:none}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical>.btn:first-child:not(:last-child){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:last-child:not(:first-child){border-top-right-radius:0;border-top-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-right-radius:0;border-top-left-radius:0}[data-toggle=buttons]>.btn-group>.btn input[type=checkbox],[data-toggle=buttons]>.btn-group>.btn input[type=radio],[data-toggle=buttons]>.btn input[type=checkbox],[data-toggle=buttons]>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;width:100%;display:flex}.input-group .form-control{position:relative;z-index:2;flex:1;margin-bottom:0}.input-group .form-control:active,.input-group .form-control:focus,.input-group .form-control:hover{z-index:3}.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child),.input-group .form-control:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{white-space:nowrap;vertical-align:middle}.input-group-addon{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.25;color:#55595c;text-align:center;background-color:#eceeef;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.input-group-addon.form-control-sm,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.input-group-addon.btn{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.input-group-addon.form-control-lg,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.input-group-addon.btn{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group-addon:not(:last-child),.input-group-btn:not(:first-child)>.btn-group:not(:last-child)>.btn,.input-group-btn:not(:first-child)>.btn:not(:last-child):not(.dropdown-toggle),.input-group-btn:not(:last-child)>.btn,.input-group-btn:not(:last-child)>.btn-group>.btn,.input-group-btn:not(:last-child)>.dropdown-toggle,.input-group .form-control:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0}.input-group-addon:not(:last-child){border-right:0}.input-group-addon:not(:first-child),.input-group-btn:not(:first-child)>.btn,.input-group-btn:not(:first-child)>.btn-group>.btn,.input-group-btn:not(:first-child)>.dropdown-toggle,.input-group-btn:not(:last-child)>.btn-group:not(:first-child)>.btn,.input-group-btn:not(:last-child)>.btn:not(:first-child),.input-group .form-control:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.form-control+.input-group-addon:not(:first-child){border-left:0}.input-group-btn{font-size:0;white-space:nowrap}.input-group-btn,.input-group-btn>.btn{position:relative}.input-group-btn>.btn+.btn{margin-left:-1px}.input-group-btn>.btn:active,.input-group-btn>.btn:focus,.input-group-btn>.btn:hover{z-index:3}.input-group-btn:not(:last-child)>.btn,.input-group-btn:not(:last-child)>.btn-group{margin-right:-1px}.input-group-btn:not(:first-child)>.btn,.input-group-btn:not(:first-child)>.btn-group{z-index:2;margin-left:-1px}.input-group-btn:not(:first-child)>.btn-group:active,.input-group-btn:not(:first-child)>.btn-group:focus,.input-group-btn:not(:first-child)>.btn-group:hover,.input-group-btn:not(:first-child)>.btn:active,.input-group-btn:not(:first-child)>.btn:focus,.input-group-btn:not(:first-child)>.btn:hover{z-index:3}.custom-control{position:relative;display:inline;padding-left:1.5rem;cursor:pointer}.custom-control+.custom-control{margin-left:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-indicator{color:#fff;background-color:#0074d9}.custom-control-input:focus~.custom-control-indicator{box-shadow:0 0 0 .075rem #fff,0 0 0 .2rem #0074d9}.custom-control-input:active~.custom-control-indicator{color:#fff;background-color:#84c6ff}.custom-control-input:disabled~.custom-control-indicator{cursor:not-allowed;background-color:#eee}.custom-control-input:disabled~.custom-control-description{color:#767676;cursor:not-allowed}.custom-control-indicator{position:absolute;top:.0625rem;left:0;display:block;width:1rem;height:1rem;pointer-events:none;user-select:none;background-color:#ddd;background-repeat:no-repeat;background-position:50%;background-size:50% 50%}.custom-checkbox .custom-control-indicator{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-indicator{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E\\\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-indicator{background-color:#0074d9;background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23fff' d='M0 2h4'/%3E%3C/svg%3E\\\")}.custom-radio .custom-control-indicator{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-indicator{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fff'/%3E%3C/svg%3E\\\")}.custom-controls-stacked .custom-control{display:inline}.custom-controls-stacked .custom-control:after{display:block;margin-bottom:.25rem;content:\\\"\\\"}.custom-controls-stacked .custom-control+.custom-control{margin-left:0}.custom-select{display:inline-block;max-width:100%;padding:.375rem 1.75rem .375rem .75rem;padding-right:.75rem\\\\9;color:#55595c;vertical-align:middle;background:#fff url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23333' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\\\") no-repeat right .75rem center;background-image:none\\\\9;background-size:8px 10px;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;-moz-appearance:none;-webkit-appearance:none}.custom-select:focus{border-color:#51a7e8;outline:none}.custom-select:focus::-ms-value{color:#55595c;background-color:#fff}.custom-select:disabled{color:#818a91;cursor:not-allowed;background-color:#eceeef}.custom-select::-ms-expand{opacity:0}.custom-select-sm{padding-top:.375rem;padding-bottom:.375rem;font-size:75%}.custom-file{position:relative;display:inline-block;max-width:100%;height:2.5rem;cursor:pointer}.custom-file-input{min-width:14rem;max-width:100%;margin:0;filter:alpha(opacity=0);opacity:0}.custom-file-control{position:absolute;top:0;right:0;left:0;z-index:5;height:2.5rem;padding:.5rem 1rem;line-height:1.5;color:#555;user-select:none;background-color:#fff;border:1px solid #ddd;border-radius:.25rem}.custom-file-control:lang(en):after{content:\\\"Choose file...\\\"}.custom-file-control:before{position:absolute;top:-1px;right:-1px;bottom:-1px;z-index:6;display:block;height:2.5rem;padding:.5rem 1rem;line-height:1.5;color:#555;background-color:#eee;border:1px solid #ddd;border-radius:0 .25rem .25rem 0}.custom-file-control:lang(en):before{content:\\\"Browse\\\"}.nav{padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:inline-block}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#818a91}.nav-link.disabled,.nav-link.disabled:focus,.nav-link.disabled:hover{color:#818a91;cursor:not-allowed;background-color:transparent}.nav-inline .nav-item{display:inline-block}.nav-inline .nav-item+.nav-item,.nav-inline .nav-link+.nav-link{margin-left:1rem}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs:after{content:\\\"\\\";display:table;clear:both}.nav-tabs .nav-item{float:left;margin-bottom:-1px}.nav-tabs .nav-item+.nav-item{margin-left:.2rem}.nav-tabs .nav-link{display:block;padding:.5em 1em;border:1px solid transparent;border-top-right-radius:.25rem;border-top-left-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#eceeef #eceeef #ddd}.nav-tabs .nav-link.disabled,.nav-tabs .nav-link.disabled:focus,.nav-tabs .nav-link.disabled:hover{color:#818a91;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.open .nav-link,.nav-tabs .nav-item.open .nav-link:focus,.nav-tabs .nav-item.open .nav-link:hover,.nav-tabs .nav-link.active,.nav-tabs .nav-link.active:focus,.nav-tabs .nav-link.active:hover{color:#55595c;background-color:#fff;border-color:#ddd #ddd transparent}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-right-radius:0;border-top-left-radius:0}.nav-pills:after{content:\\\"\\\";display:table;clear:both}.nav-pills .nav-item{float:left}.nav-pills .nav-item+.nav-item{margin-left:.2rem}.nav-pills .nav-link{display:block;padding:.5em 1em;border-radius:.25rem}.nav-pills .nav-item.open .nav-link,.nav-pills .nav-item.open .nav-link:focus,.nav-pills .nav-item.open .nav-link:hover,.nav-pills .nav-link.active,.nav-pills .nav-link.active:focus,.nav-pills .nav-link.active:hover{color:#fff;cursor:default;background-color:#0275d8}.nav-stacked .nav-item{display:block;float:none}.nav-stacked .nav-item+.nav-item{margin-top:.2rem;margin-left:0}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;padding:.5rem 1rem}.navbar:after{content:\\\"\\\";display:table;clear:both}@media (min-width:544px){.navbar{border-radius:.25rem}}.navbar-full{z-index:1000}@media (min-width:544px){.navbar-full{border-radius:0}}.navbar-fixed-bottom,.navbar-fixed-top{position:fixed;right:0;left:0;z-index:1030}@media (min-width:544px){.navbar-fixed-bottom,.navbar-fixed-top{border-radius:0}}.navbar-fixed-top{top:0}.navbar-fixed-bottom{bottom:0}.navbar-sticky-top{position:sticky;top:0;z-index:1030;width:100%}@media (min-width:544px){.navbar-sticky-top{border-radius:0}}.navbar-brand{float:left;padding-top:.25rem;padding-bottom:.25rem;margin-right:1rem;font-size:1.25rem}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-brand>img{display:block}.navbar-divider{float:left;width:1px;padding-top:.425rem;padding-bottom:.425rem;margin-right:1rem;margin-left:1rem;overflow:hidden}.navbar-divider:before{content:\\\"\\\\A0\\\"}.navbar-toggler{padding:.5rem .75rem;font-size:1.25rem;line-height:1;background:none;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-nav .nav-item{float:left}.navbar-nav .nav-link{display:block;padding-top:.425rem;padding-bottom:.425rem}.navbar-nav .nav-item+.nav-item,.navbar-nav .nav-link+.nav-link{margin-left:1rem}.navbar-light .navbar-brand,.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.8)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.6)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .active>.nav-link:focus,.navbar-light .navbar-nav .active>.nav-link:hover,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.active:focus,.navbar-light .navbar-nav .nav-link.active:hover,.navbar-light .navbar-nav .nav-link.open,.navbar-light .navbar-nav .nav-link.open:focus,.navbar-light .navbar-nav .nav-link.open:hover,.navbar-light .navbar-nav .open>.nav-link,.navbar-light .navbar-nav .open>.nav-link:focus,.navbar-light .navbar-nav .open>.nav-link:hover{color:rgba(0,0,0,.8)}.navbar-light .navbar-divider{background-color:rgba(0,0,0,.075)}.navbar-dark .navbar-brand,.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:hsla(0,0%,100%,.5)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:hsla(0,0%,100%,.75)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .active>.nav-link:focus,.navbar-dark .navbar-nav .active>.nav-link:hover,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.active:focus,.navbar-dark .navbar-nav .nav-link.active:hover,.navbar-dark .navbar-nav .nav-link.open,.navbar-dark .navbar-nav .nav-link.open:focus,.navbar-dark .navbar-nav .nav-link.open:hover,.navbar-dark .navbar-nav .open>.nav-link,.navbar-dark .navbar-nav .open>.nav-link:focus,.navbar-dark .navbar-nav .open>.nav-link:hover{color:#fff}.navbar-dark .navbar-divider{background-color:hsla(0,0%,100%,.075)}.navbar-toggleable-xs:after{content:\\\"\\\";display:table;clear:both}@media (max-width:543px){.navbar-toggleable-xs .navbar-nav .nav-item{float:none;margin-left:0}}@media (min-width:544px){.navbar-toggleable-xs{display:block!important}}.navbar-toggleable-sm:after{content:\\\"\\\";display:table;clear:both}@media (max-width:767px){.navbar-toggleable-sm .navbar-nav .nav-item{float:none;margin-left:0}}@media (min-width:768px){.navbar-toggleable-sm{display:block!important}}.navbar-toggleable-md:after{content:\\\"\\\";display:table;clear:both}@media (max-width:991px){.navbar-toggleable-md .navbar-nav .nav-item{float:none;margin-left:0}}@media (min-width:992px){.navbar-toggleable-md{display:block!important}}.card{position:relative;display:block;margin-bottom:.75rem;background-color:#fff;border-radius:.25rem;border:1px solid rgba(0,0,0,.125)}.card-block{padding:1.25rem}.card-block:after{content:\\\"\\\";display:table;clear:both}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem}.card-subtitle,.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card>.list-group:first-child .list-group-item:first-child{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-header{padding:.75rem 1.25rem;background-color:#f5f5f5;border-bottom:1px solid rgba(0,0,0,.125)}.card-header:after{content:\\\"\\\";display:table;clear:both}.card-header:first-child{border-radius:.25rem .25rem 0 0}.card-footer{padding:.75rem 1.25rem;background-color:#f5f5f5;border-top:1px solid rgba(0,0,0,.125)}.card-footer:after{content:\\\"\\\";display:table;clear:both}.card-footer:last-child{border-radius:0 0 .25rem .25rem}.card-header-tabs{margin-bottom:-.75rem;border-bottom:0}.card-header-pills,.card-header-tabs{margin-right:-.625rem;margin-left:-.625rem}.card-primary{background-color:#0275d8;border-color:#0275d8}.card-primary .card-footer,.card-primary .card-header{background-color:transparent}.card-success{background-color:#5cb85c;border-color:#5cb85c}.card-success .card-footer,.card-success .card-header{background-color:transparent}.card-info{background-color:#5bc0de;border-color:#5bc0de}.card-info .card-footer,.card-info .card-header{background-color:transparent}.card-warning{background-color:#f0ad4e;border-color:#f0ad4e}.card-warning .card-footer,.card-warning .card-header{background-color:transparent}.card-danger{background-color:#d9534f;border-color:#d9534f}.card-danger .card-footer,.card-danger .card-header,.card-outline-primary{background-color:transparent}.card-outline-primary{border-color:#0275d8}.card-outline-secondary{background-color:transparent;border-color:#ccc}.card-outline-info{background-color:transparent;border-color:#5bc0de}.card-outline-success{background-color:transparent;border-color:#5cb85c}.card-outline-warning{background-color:transparent;border-color:#f0ad4e}.card-outline-danger{background-color:transparent;border-color:#d9534f}.card-inverse .card-footer,.card-inverse .card-header{border-color:hsla(0,0%,100%,.2)}.card-inverse .card-blockquote,.card-inverse .card-footer,.card-inverse .card-header,.card-inverse .card-title{color:#fff}.card-inverse .card-blockquote .blockquote-footer,.card-inverse .card-link,.card-inverse .card-subtitle,.card-inverse .card-text{color:hsla(0,0%,100%,.65)}.card-inverse .card-link:focus,.card-inverse .card-link:hover{color:#fff}.card-blockquote{padding:0;margin-bottom:0;border-left:0}.card-img{border-radius:.25rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img-top{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.card-img-bottom{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}@media (min-width:544px){.card-deck{display:flex;flex-flow:row wrap;margin-right:-.625rem;margin-bottom:.75rem;margin-left:-.625rem}.card-deck .card{flex:1 0 0;margin-right:.625rem;margin-bottom:0;margin-left:.625rem}}@media (min-width:544px){.card-group{display:flex;flex-flow:row wrap}.card-group .card{flex:1 0 0}.card-group .card+.card{margin-left:0;border-left:0}.card-group .card:first-child{border-bottom-right-radius:0;border-top-right-radius:0}.card-group .card:first-child .card-img-top{border-top-right-radius:0}.card-group .card:first-child .card-img-bottom{border-bottom-right-radius:0}.card-group .card:last-child{border-bottom-left-radius:0;border-top-left-radius:0}.card-group .card:last-child .card-img-top{border-top-left-radius:0}.card-group .card:last-child .card-img-bottom{border-bottom-left-radius:0}.card-group .card:not(:first-child):not(:last-child),.card-group .card:not(:first-child):not(:last-child) .card-img-bottom,.card-group .card:not(:first-child):not(:last-child) .card-img-top{border-radius:0}}@media (min-width:544px){.card-columns{column-count:3;column-gap:1.25rem}.card-columns .card{width:100%}}.breadcrumb{padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#eceeef;border-radius:.25rem}.breadcrumb:after{content:\\\"\\\";display:table;clear:both}.breadcrumb-item{float:left}.breadcrumb-item+.breadcrumb-item:before{display:inline-block;padding-right:.5rem;padding-left:.5rem;color:#818a91;content:\\\"/\\\"}.breadcrumb-item+.breadcrumb-item:hover:before{text-decoration:underline;text-decoration:none}.breadcrumb-item.active{color:#818a91}.pagination{display:inline-block;padding-left:0;margin-top:1rem;margin-bottom:1rem;border-radius:.25rem}.page-item{display:inline}.page-item:first-child .page-link{margin-left:0;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.page-item:last-child .page-link{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}.page-item.active .page-link,.page-item.active .page-link:focus,.page-item.active .page-link:hover{z-index:2;color:#fff;cursor:default;background-color:#0275d8;border-color:#0275d8}.page-item.disabled .page-link,.page-item.disabled .page-link:focus,.page-item.disabled .page-link:hover{color:#818a91;pointer-events:none;cursor:not-allowed;background-color:#fff;border-color:#ddd}.page-link{position:relative;float:left;padding:.5rem .75rem;margin-left:-1px;color:#0275d8;text-decoration:none;background-color:#fff;border:1px solid #ddd}.page-link:focus,.page-link:hover{color:#014c8c;background-color:#eceeef;border-color:#ddd}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem}.pagination-lg .page-item:first-child .page-link{border-bottom-left-radius:.3rem;border-top-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-bottom-right-radius:.3rem;border-top-right-radius:.3rem}.pagination-sm .page-link{padding:.275rem .75rem;font-size:.875rem}.pagination-sm .page-item:first-child .page-link{border-bottom-left-radius:.2rem;border-top-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-bottom-right-radius:.2rem;border-top-right-radius:.2rem}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#eceeef;border-radius:.3rem}@media (min-width:544px){.jumbotron{padding:4rem 2rem}}.jumbotron-hr{border-top-color:#d0d5d8}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{padding:1rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:2rem}.alert-dismissible .close{position:relative;top:-.125rem;right:-1rem;color:inherit}.alert-success{background-color:#dff0d8;border-color:#d0e9c6;color:#3c763d}.alert-success hr{border-top-color:#c1e2b3}.alert-success .alert-link{color:#2b542c}.alert-info{background-color:#d9edf7;border-color:#bcdff1;color:#31708f}.alert-info hr{border-top-color:#a6d5ec}.alert-info .alert-link{color:#245269}.alert-warning{background-color:#fcf8e3;border-color:#faf2cc;color:#8a6d3b}.alert-warning hr{border-top-color:#f7ecb5}.alert-warning .alert-link{color:#66512c}.alert-danger{background-color:#f2dede;border-color:#ebcccc;color:#a94442}.alert-danger hr{border-top-color:#e4b9b9}.alert-danger .alert-link{color:#843534}@keyframes progress-bar-stripes{0%{background-position:1rem 0}to{background-position:0 0}}.progress{display:block;width:100%;height:1rem;margin-bottom:1rem}.progress[value]{background-color:#eee;border:0;appearance:none;border-radius:.25rem}.progress[value]::-ms-fill{background-color:#0074d9;border:0}.progress[value]::-moz-progress-bar{background-color:#0074d9;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.progress[value]::-webkit-progress-value{background-color:#0074d9;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.progress[value=\\\"100\\\"]::-moz-progress-bar{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}.progress[value=\\\"100\\\"]::-webkit-progress-value{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}.progress[value]::-webkit-progress-bar{background-color:#eee;border-radius:.25rem}.progress[value],base::-moz-progress-bar{background-color:#eee;border-radius:.25rem}@media screen and (min-width:0\\\\0){.progress{background-color:#eee;border-radius:.25rem}.progress-bar{display:inline-block;height:1rem;text-indent:-999rem;background-color:#0074d9;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.progress[width=\\\"100%\\\"]{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}}.progress-striped[value]::-webkit-progress-value{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1rem 1rem}.progress-striped[value]::-moz-progress-bar{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1rem 1rem}.progress-striped[value]::-ms-fill{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1rem 1rem}@media screen and (min-width:0\\\\0){.progress-bar-striped{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1rem 1rem}}.progress-animated[value]::-webkit-progress-value{animation:progress-bar-stripes 2s linear infinite}.progress-animated[value]::-moz-progress-bar{animation:progress-bar-stripes 2s linear infinite}@media screen and (min-width:0\\\\0){.progress-animated .progress-bar-striped{animation:progress-bar-stripes 2s linear infinite}}.progress-success[value]::-webkit-progress-value{background-color:#5cb85c}.progress-success[value]::-moz-progress-bar{background-color:#5cb85c}.progress-success[value]::-ms-fill{background-color:#5cb85c}@media screen and (min-width:0\\\\0){.progress-success .progress-bar{background-color:#5cb85c}}.progress-info[value]::-webkit-progress-value{background-color:#5bc0de}.progress-info[value]::-moz-progress-bar{background-color:#5bc0de}.progress-info[value]::-ms-fill{background-color:#5bc0de}@media screen and (min-width:0\\\\0){.progress-info .progress-bar{background-color:#5bc0de}}.progress-warning[value]::-webkit-progress-value{background-color:#f0ad4e}.progress-warning[value]::-moz-progress-bar{background-color:#f0ad4e}.progress-warning[value]::-ms-fill{background-color:#f0ad4e}@media screen and (min-width:0\\\\0){.progress-warning .progress-bar{background-color:#f0ad4e}}.progress-danger[value]::-webkit-progress-value{background-color:#d9534f}.progress-danger[value]::-moz-progress-bar{background-color:#d9534f}.progress-danger[value]::-ms-fill{background-color:#d9534f}@media screen and (min-width:0\\\\0){.progress-danger .progress-bar{background-color:#d9534f}}.media{display:flex}.media-body{flex:1}.media-middle{align-self:center}.media-bottom{align-self:flex-end}.media-object{display:block}.media-object.img-thumbnail{max-width:none}.media-right{padding-left:10px}.media-left{padding-right:10px}.media-heading{margin-top:0;margin-bottom:5px}.media-list{padding-left:0;list-style:none}.list-group{padding-left:0;margin-bottom:0}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid #ddd}.list-group-item:first-child{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.list-group-item.disabled,.list-group-item.disabled:focus,.list-group-item.disabled:hover{color:#818a91;cursor:not-allowed;background-color:#eceeef}.list-group-item.disabled .list-group-item-heading,.list-group-item.disabled:focus .list-group-item-heading,.list-group-item.disabled:hover .list-group-item-heading{color:inherit}.list-group-item.disabled .list-group-item-text,.list-group-item.disabled:focus .list-group-item-text,.list-group-item.disabled:hover .list-group-item-text{color:#818a91}.list-group-item.active,.list-group-item.active:focus,.list-group-item.active:hover{z-index:2;color:#fff;text-decoration:none;background-color:#0275d8;border-color:#0275d8}.list-group-item.active .list-group-item-heading,.list-group-item.active .list-group-item-heading>.small,.list-group-item.active .list-group-item-heading>small,.list-group-item.active:focus .list-group-item-heading,.list-group-item.active:focus .list-group-item-heading>.small,.list-group-item.active:focus .list-group-item-heading>small,.list-group-item.active:hover .list-group-item-heading,.list-group-item.active:hover .list-group-item-heading>.small,.list-group-item.active:hover .list-group-item-heading>small{color:inherit}.list-group-item.active .list-group-item-text,.list-group-item.active:focus .list-group-item-text,.list-group-item.active:hover .list-group-item-text{color:#a8d6fe}.list-group-flush .list-group-item{border-radius:0}.list-group-item-action{width:100%;color:#555;text-align:inherit}.list-group-item-action .list-group-item-heading{color:#333}.list-group-item-action:focus,.list-group-item-action:hover{color:#555;text-decoration:none;background-color:#f5f5f5}.list-group-item-success{color:#3c763d;background-color:#dff0d8}a.list-group-item-success,button.list-group-item-success{color:#3c763d}a.list-group-item-success .list-group-item-heading,button.list-group-item-success .list-group-item-heading{color:inherit}a.list-group-item-success:focus,a.list-group-item-success:hover,button.list-group-item-success:focus,button.list-group-item-success:hover{color:#3c763d;background-color:#d0e9c6}a.list-group-item-success.active,a.list-group-item-success.active:focus,a.list-group-item-success.active:hover,button.list-group-item-success.active,button.list-group-item-success.active:focus,button.list-group-item-success.active:hover{color:#fff;background-color:#3c763d;border-color:#3c763d}.list-group-item-info{color:#31708f;background-color:#d9edf7}a.list-group-item-info,button.list-group-item-info{color:#31708f}a.list-group-item-info .list-group-item-heading,button.list-group-item-info .list-group-item-heading{color:inherit}a.list-group-item-info:focus,a.list-group-item-info:hover,button.list-group-item-info:focus,button.list-group-item-info:hover{color:#31708f;background-color:#c4e3f3}a.list-group-item-info.active,a.list-group-item-info.active:focus,a.list-group-item-info.active:hover,button.list-group-item-info.active,button.list-group-item-info.active:focus,button.list-group-item-info.active:hover{color:#fff;background-color:#31708f;border-color:#31708f}.list-group-item-warning{color:#8a6d3b;background-color:#fcf8e3}a.list-group-item-warning,button.list-group-item-warning{color:#8a6d3b}a.list-group-item-warning .list-group-item-heading,button.list-group-item-warning .list-group-item-heading{color:inherit}a.list-group-item-warning:focus,a.list-group-item-warning:hover,button.list-group-item-warning:focus,button.list-group-item-warning:hover{color:#8a6d3b;background-color:#faf2cc}a.list-group-item-warning.active,a.list-group-item-warning.active:focus,a.list-group-item-warning.active:hover,button.list-group-item-warning.active,button.list-group-item-warning.active:focus,button.list-group-item-warning.active:hover{color:#fff;background-color:#8a6d3b;border-color:#8a6d3b}.list-group-item-danger{color:#a94442;background-color:#f2dede}a.list-group-item-danger,button.list-group-item-danger{color:#a94442}a.list-group-item-danger .list-group-item-heading,button.list-group-item-danger .list-group-item-heading{color:inherit}a.list-group-item-danger:focus,a.list-group-item-danger:hover,button.list-group-item-danger:focus,button.list-group-item-danger:hover{color:#a94442;background-color:#ebcccc}a.list-group-item-danger.active,a.list-group-item-danger.active:focus,a.list-group-item-danger.active:hover,button.list-group-item-danger.active,button.list-group-item-danger.active:focus,button.list-group-item-danger.active:hover{color:#fff;background-color:#a94442;border-color:#a94442}.list-group-item-heading{margin-top:0;margin-bottom:5px}.list-group-item-text{margin-bottom:0;line-height:1.3}.embed-responsive{position:relative;display:block;height:0;padding:0;overflow:hidden}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9{padding-bottom:42.85714%}.embed-responsive-16by9{padding-bottom:56.25%}.embed-responsive-4by3{padding-bottom:75%}.embed-responsive-1by1{padding-bottom:100%}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.2}.close:focus,.close:hover{color:#000;text-decoration:none;cursor:pointer;opacity:.5}button.close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none}.tag{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.tag:empty{display:none}.btn .tag{position:relative;top:-1px}a.tag:focus,a.tag:hover{color:#fff;text-decoration:none;cursor:pointer}.tag-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.tag-default{background-color:#818a91}.tag-default[href]:focus,.tag-default[href]:hover{background-color:#687077}.tag-primary{background-color:#0275d8}.tag-primary[href]:focus,.tag-primary[href]:hover{background-color:#025aa5}.tag-success{background-color:#5cb85c}.tag-success[href]:focus,.tag-success[href]:hover{background-color:#449d44}.tag-info{background-color:#5bc0de}.tag-info[href]:focus,.tag-info[href]:hover{background-color:#31b0d5}.tag-warning{background-color:#f0ad4e}.tag-warning[href]:focus,.tag-warning[href]:hover{background-color:#ec971f}.tag-danger{background-color:#d9534f}.tag-danger[href]:focus,.tag-danger[href]:hover{background-color:#c9302c}.modal,.modal-open{overflow:hidden}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;outline:0;-webkit-overflow-scrolling:touch}.modal.fade .modal-dialog{transition:transform .3s ease-out;transform:translateY(-25%)}.modal.in .modal-dialog{transform:translate(0)}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.in{opacity:.5}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5}.modal-header:after{content:\\\"\\\";display:table;clear:both}.modal-header .close{margin-top:-2px}.modal-title{margin:0;line-height:1.5}.modal-body{position:relative;padding:15px}.modal-footer{padding:15px;text-align:right;border-top:1px solid #e5e5e5}.modal-footer:after{content:\\\"\\\";display:table;clear:both}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:544px){.modal-dialog{max-width:600px;margin:30px auto}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg{max-width:900px}}.tooltip{position:absolute;z-index:1070;display:block;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.in{opacity:.9}.tooltip.bs-tether-element-attached-bottom,.tooltip.tooltip-top{padding:5px 0;margin-top:-3px}.tooltip.bs-tether-element-attached-bottom .tooltip-arrow,.tooltip.tooltip-top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.bs-tether-element-attached-left,.tooltip.tooltip-right{padding:0 5px;margin-left:3px}.tooltip.bs-tether-element-attached-left .tooltip-arrow,.tooltip.tooltip-right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000}.tooltip.bs-tether-element-attached-top,.tooltip.tooltip-bottom{padding:5px 0;margin-top:3px}.tooltip.bs-tether-element-attached-top .tooltip-arrow,.tooltip.tooltip-bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bs-tether-element-attached-right,.tooltip.tooltip-left{padding:0 5px;margin-left:-3px}.tooltip.bs-tether-element-attached-right .tooltip-arrow,.tooltip.tooltip-left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;padding:1px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.popover.bs-tether-element-attached-bottom,.popover.popover-top{margin-top:-10px}.popover.bs-tether-element-attached-bottom .popover-arrow,.popover.popover-top .popover-arrow{bottom:-11px;left:50%;margin-left:-11px;border-top-color:rgba(0,0,0,.25);border-bottom-width:0}.popover.bs-tether-element-attached-bottom .popover-arrow:after,.popover.popover-top .popover-arrow:after{bottom:1px;margin-left:-10px;content:\\\"\\\";border-top-color:#fff;border-bottom-width:0}.popover.bs-tether-element-attached-left,.popover.popover-right{margin-left:10px}.popover.bs-tether-element-attached-left .popover-arrow,.popover.popover-right .popover-arrow{top:50%;left:-11px;margin-top:-11px;border-right-color:rgba(0,0,0,.25);border-left-width:0}.popover.bs-tether-element-attached-left .popover-arrow:after,.popover.popover-right .popover-arrow:after{bottom:-10px;left:1px;content:\\\"\\\";border-right-color:#fff;border-left-width:0}.popover.bs-tether-element-attached-top,.popover.popover-bottom{margin-top:10px}.popover.bs-tether-element-attached-top .popover-arrow,.popover.popover-bottom .popover-arrow{top:-11px;left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:rgba(0,0,0,.25)}.popover.bs-tether-element-attached-top .popover-arrow:after,.popover.popover-bottom .popover-arrow:after{top:1px;margin-left:-10px;content:\\\"\\\";border-top-width:0;border-bottom-color:#fff}.popover.bs-tether-element-attached-right,.popover.popover-left{margin-left:-10px}.popover.bs-tether-element-attached-right .popover-arrow,.popover.popover-left .popover-arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:rgba(0,0,0,.25)}.popover.bs-tether-element-attached-right .popover-arrow:after,.popover.popover-left .popover-arrow:after{right:1px;bottom:-10px;content:\\\"\\\";border-right-width:0;border-left-color:#fff}.popover-title{padding:8px 14px;margin:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:.2375rem .2375rem 0 0}.popover-title:empty{display:none}.popover-content{padding:9px 14px}.popover-arrow,.popover-arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover-arrow{border-width:11px}.popover-arrow:after{content:\\\"\\\";border-width:10px}.carousel,.carousel-inner{position:relative}.carousel-inner{width:100%;overflow:hidden}.carousel-inner>.carousel-item{position:relative;display:none;transition:left .6s ease-in-out}.carousel-inner>.carousel-item>a>img,.carousel-inner>.carousel-item>img{line-height:1}@media (-webkit-transform-3d),all and (transform-3d){.carousel-inner>.carousel-item{transition:transform .6s ease-in-out;backface-visibility:hidden;perspective:1000px}.carousel-inner>.carousel-item.active.right,.carousel-inner>.carousel-item.next{left:0;transform:translate3d(100%,0,0)}.carousel-inner>.carousel-item.active.left,.carousel-inner>.carousel-item.prev{left:0;transform:translate3d(-100%,0,0)}.carousel-inner>.carousel-item.active,.carousel-inner>.carousel-item.next.left,.carousel-inner>.carousel-item.prev.right{left:0;transform:translateZ(0)}}.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block}.carousel-inner>.active{left:0}.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%}.carousel-inner>.next{left:100%}.carousel-inner>.prev{left:-100%}.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0}.carousel-inner>.active.left{left:-100%}.carousel-inner>.active.right{left:100%}.carousel-control{position:absolute;top:0;bottom:0;left:0;width:15%;font-size:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6);opacity:.5}.carousel-control.left{background-image:linear-gradient(90deg,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000',endColorstr='#00000000',GradientType=1)}.carousel-control.right{right:0;left:auto;background-image:linear-gradient(90deg,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000',endColorstr='#80000000',GradientType=1)}.carousel-control:focus,.carousel-control:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control .icon-next,.carousel-control .icon-prev{position:absolute;top:50%;z-index:5;display:inline-block;width:20px;height:20px;margin-top:-10px;font-family:serif;line-height:1}.carousel-control .icon-prev{left:50%;margin-left:-10px}.carousel-control .icon-next{right:50%;margin-right:-10px}.carousel-control .icon-prev:before{content:\\\"\\\\2039\\\"}.carousel-control .icon-next:before{content:\\\"\\\\203A\\\"}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;padding-left:0;margin-left:-30%;text-align:center;list-style:none}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;cursor:pointer;background-color:transparent;border:1px solid #fff;border-radius:10px}.carousel-indicators .active{width:12px;height:12px;margin:0;background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-caption .btn{text-shadow:none}@media (min-width:544px){.carousel-control .icon-next,.carousel-control .icon-prev{width:30px;height:30px;margin-top:-15px;font-size:30px}.carousel-control .icon-prev{margin-left:-15px}.carousel-control .icon-next{margin-right:-15px}.carousel-caption{right:20%;left:20%;padding-bottom:30px}.carousel-indicators{bottom:20px}}.bg-faded{background-color:#f7f7f9}.bg-primary{color:#fff!important;background-color:#0275d8!important}a.bg-primary:focus,a.bg-primary:hover{background-color:#025aa5!important}.bg-success{color:#fff!important;background-color:#5cb85c!important}a.bg-success:focus,a.bg-success:hover{background-color:#449d44!important}.bg-info{color:#fff!important;background-color:#5bc0de!important}a.bg-info:focus,a.bg-info:hover{background-color:#31b0d5!important}.bg-warning{color:#fff!important;background-color:#f0ad4e!important}a.bg-warning:focus,a.bg-warning:hover{background-color:#ec971f!important}.bg-danger{color:#fff!important;background-color:#d9534f!important}a.bg-danger:focus,a.bg-danger:hover{background-color:#c9302c!important}.bg-inverse{color:#fff!important;background-color:#373a3c!important}a.bg-inverse:focus,a.bg-inverse:hover{background-color:#1f2021!important}.clearfix:after{content:\\\"\\\";display:table;clear:both}.d-block{display:block!important}.d-inline-block{display:inline-block!important}.d-inline{display:inline!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-items-xs-top{align-items:flex-start}.flex-items-xs-middle{align-items:center}.flex-items-xs-bottom{align-items:flex-end}.flex-xs-top{align-self:flex-start}.flex-xs-middle{align-self:center}.flex-xs-bottom{align-self:flex-end}.flex-items-xs-left{justify-content:flex-start}.flex-items-xs-center{justify-content:center}.flex-items-xs-right{justify-content:flex-end}.flex-items-xs-around{justify-content:space-around}.flex-items-xs-between{justify-content:space-between}@media (min-width:544px){.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}}@media (min-width:544px){.flex-items-sm-top{align-items:flex-start}.flex-items-sm-middle{align-items:center}.flex-items-sm-bottom{align-items:flex-end}}@media (min-width:544px){.flex-sm-top{align-self:flex-start}.flex-sm-middle{align-self:center}.flex-sm-bottom{align-self:flex-end}}@media (min-width:544px){.flex-items-sm-left{justify-content:flex-start}.flex-items-sm-center{justify-content:center}.flex-items-sm-right{justify-content:flex-end}.flex-items-sm-around{justify-content:space-around}.flex-items-sm-between{justify-content:space-between}}@media (min-width:768px){.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}}@media (min-width:768px){.flex-items-md-top{align-items:flex-start}.flex-items-md-middle{align-items:center}.flex-items-md-bottom{align-items:flex-end}}@media (min-width:768px){.flex-md-top{align-self:flex-start}.flex-md-middle{align-self:center}.flex-md-bottom{align-self:flex-end}}@media (min-width:768px){.flex-items-md-left{justify-content:flex-start}.flex-items-md-center{justify-content:center}.flex-items-md-right{justify-content:flex-end}.flex-items-md-around{justify-content:space-around}.flex-items-md-between{justify-content:space-between}}@media (min-width:992px){.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}}@media (min-width:992px){.flex-items-lg-top{align-items:flex-start}.flex-items-lg-middle{align-items:center}.flex-items-lg-bottom{align-items:flex-end}}@media (min-width:992px){.flex-lg-top{align-self:flex-start}.flex-lg-middle{align-self:center}.flex-lg-bottom{align-self:flex-end}}@media (min-width:992px){.flex-items-lg-left{justify-content:flex-start}.flex-items-lg-center{justify-content:center}.flex-items-lg-right{justify-content:flex-end}.flex-items-lg-around{justify-content:space-around}.flex-items-lg-between{justify-content:space-between}}@media (min-width:1200px){.flex-xl-first{order:-1}.flex-xl-last{order:1}.flex-xl-unordered{order:0}}@media (min-width:1200px){.flex-items-xl-top{align-items:flex-start}.flex-items-xl-middle{align-items:center}.flex-items-xl-bottom{align-items:flex-end}}@media (min-width:1200px){.flex-xl-top{align-self:flex-start}.flex-xl-middle{align-self:center}.flex-xl-bottom{align-self:flex-end}}@media (min-width:1200px){.flex-items-xl-left{justify-content:flex-start}.flex-items-xl-center{justify-content:center}.flex-items-xl-right{justify-content:flex-end}.flex-items-xl-around{justify-content:space-around}.flex-items-xl-between{justify-content:space-between}}.pull-xs-left{float:left!important}.pull-xs-right{float:right!important}.pull-xs-none{float:none!important}@media (min-width:544px){.pull-sm-left{float:left!important}.pull-sm-right{float:right!important}.pull-sm-none{float:none!important}}@media (min-width:768px){.pull-md-left{float:left!important}.pull-md-right{float:right!important}.pull-md-none{float:none!important}}@media (min-width:992px){.pull-lg-left{float:left!important}.pull-lg-right{float:right!important}.pull-lg-none{float:none!important}}@media (min-width:1200px){.pull-xl-left{float:left!important}.pull-xl-right{float:right!important}.pull-xl-none{float:none!important}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}.w-100{width:100%!important}.m-x-auto{margin-right:auto!important;margin-left:auto!important}.m-a-0{margin:0!important}.m-t-0{margin-top:0!important}.m-r-0{margin-right:0!important}.m-b-0{margin-bottom:0!important}.m-l-0,.m-x-0{margin-left:0!important}.m-x-0{margin-right:0!important}.m-y-0{margin-top:0!important;margin-bottom:0!important}.m-a-1{margin:1rem!important}.m-t-1{margin-top:1rem!important}.m-r-1{margin-right:1rem!important}.m-b-1{margin-bottom:1rem!important}.m-l-1,.m-x-1{margin-left:1rem!important}.m-x-1{margin-right:1rem!important}.m-y-1{margin-top:1rem!important;margin-bottom:1rem!important}.m-a-2{margin:1.5rem!important}.m-t-2{margin-top:1.5rem!important}.m-r-2{margin-right:1.5rem!important}.m-b-2{margin-bottom:1.5rem!important}.m-l-2,.m-x-2{margin-left:1.5rem!important}.m-x-2{margin-right:1.5rem!important}.m-y-2{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.m-a-3{margin:3rem!important}.m-t-3{margin-top:3rem!important}.m-r-3{margin-right:3rem!important}.m-b-3{margin-bottom:3rem!important}.m-l-3,.m-x-3{margin-left:3rem!important}.m-x-3{margin-right:3rem!important}.m-y-3{margin-top:3rem!important;margin-bottom:3rem!important}.p-a-0{padding:0!important}.p-t-0{padding-top:0!important}.p-r-0{padding-right:0!important}.p-b-0{padding-bottom:0!important}.p-l-0,.p-x-0{padding-left:0!important}.p-x-0{padding-right:0!important}.p-y-0{padding-top:0!important;padding-bottom:0!important}.p-a-1{padding:1rem!important}.p-t-1{padding-top:1rem!important}.p-r-1{padding-right:1rem!important}.p-b-1{padding-bottom:1rem!important}.p-l-1,.p-x-1{padding-left:1rem!important}.p-x-1{padding-right:1rem!important}.p-y-1{padding-top:1rem!important;padding-bottom:1rem!important}.p-a-2{padding:1.5rem!important}.p-t-2{padding-top:1.5rem!important}.p-r-2{padding-right:1.5rem!important}.p-b-2{padding-bottom:1.5rem!important}.p-l-2,.p-x-2{padding-left:1.5rem!important}.p-x-2{padding-right:1.5rem!important}.p-y-2{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.p-a-3{padding:3rem!important}.p-t-3{padding-top:3rem!important}.p-r-3{padding-right:3rem!important}.p-b-3{padding-bottom:3rem!important}.p-l-3,.p-x-3{padding-left:3rem!important}.p-x-3{padding-right:3rem!important}.p-y-3{padding-top:3rem!important;padding-bottom:3rem!important}.pos-f-t{position:fixed;top:0;right:0;left:0;z-index:1030}.text-justify{text-align:justify!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}@media (min-width:544px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-normal{font-weight:400}.font-weight-bold{font-weight:700}.font-italic{font-style:italic}.text-muted{color:#818a91!important}a.text-muted:focus,a.text-muted:hover{color:#687077!important}.text-primary{color:#0275d8!important}a.text-primary:focus,a.text-primary:hover{color:#025aa5!important}.text-success{color:#5cb85c!important}a.text-success:focus,a.text-success:hover{color:#449d44!important}.text-info{color:#5bc0de!important}a.text-info:focus,a.text-info:hover{color:#31b0d5!important}.text-warning{color:#f0ad4e!important}a.text-warning:focus,a.text-warning:hover{color:#ec971f!important}.text-danger{color:#d9534f!important}a.text-danger:focus,a.text-danger:hover{color:#c9302c!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.invisible{visibility:hidden!important}.hidden-xs-up{display:none!important}@media (max-width:543px){.hidden-xs-down{display:none!important}}@media (min-width:544px){.hidden-sm-up{display:none!important}}@media (max-width:767px){.hidden-sm-down{display:none!important}}@media (min-width:768px){.hidden-md-up{display:none!important}}@media (max-width:991px){.hidden-md-down{display:none!important}}@media (min-width:992px){.hidden-lg-up{display:none!important}}@media (max-width:1199px){.hidden-lg-down{display:none!important}}@media (min-width:1200px){.hidden-xl-up{display:none!important}}.hidden-xl-down,.visible-print-block{display:none!important}@media print{.visible-print-block{display:block!important}}.visible-print-inline{display:none!important}@media print{.visible-print-inline{display:inline!important}}.visible-print-inline-block{display:none!important}@media print{.visible-print-inline-block{display:inline-block!important}}@media print{.hidden-print{display:none!important}}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery, __webpack_provided_window_dot_Tether, Util, Tether) {/* global Tether */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t/**\n\t * --------------------------------------------------------------------------\n\t * Bootstrap (v4.0.0-alpha.4): tooltip.js\n\t * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n\t * --------------------------------------------------------------------------\n\t */\n\t\n\tvar Tooltip = (function ($) {\n\t\n\t  /**\n\t   * Check for Tether dependency\n\t   * Tether - http://github.hubspot.com/tether/\n\t   */\n\t  if (__webpack_provided_window_dot_Tether === undefined) {\n\t    throw new Error('Bootstrap tooltips require Tether (http://github.hubspot.com/tether/)');\n\t  }\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Constants\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var NAME = 'tooltip';\n\t  var VERSION = '4.0.0-alpha.4';\n\t  var DATA_KEY = 'bs.tooltip';\n\t  var EVENT_KEY = '.' + DATA_KEY;\n\t  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\t  var TRANSITION_DURATION = 150;\n\t  var CLASS_PREFIX = 'bs-tether';\n\t\n\t  var Default = {\n\t    animation: true,\n\t    template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"tooltip-arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n\t    trigger: 'hover focus',\n\t    title: '',\n\t    delay: 0,\n\t    html: false,\n\t    selector: false,\n\t    placement: 'top',\n\t    offset: '0 0',\n\t    constraints: []\n\t  };\n\t\n\t  var DefaultType = {\n\t    animation: 'boolean',\n\t    template: 'string',\n\t    title: '(string|element|function)',\n\t    trigger: 'string',\n\t    delay: '(number|object)',\n\t    html: 'boolean',\n\t    selector: '(string|boolean)',\n\t    placement: '(string|function)',\n\t    offset: 'string',\n\t    constraints: 'array'\n\t  };\n\t\n\t  var AttachmentMap = {\n\t    TOP: 'bottom center',\n\t    RIGHT: 'middle left',\n\t    BOTTOM: 'top center',\n\t    LEFT: 'middle right'\n\t  };\n\t\n\t  var HoverState = {\n\t    IN: 'in',\n\t    OUT: 'out'\n\t  };\n\t\n\t  var Event = {\n\t    HIDE: 'hide' + EVENT_KEY,\n\t    HIDDEN: 'hidden' + EVENT_KEY,\n\t    SHOW: 'show' + EVENT_KEY,\n\t    SHOWN: 'shown' + EVENT_KEY,\n\t    INSERTED: 'inserted' + EVENT_KEY,\n\t    CLICK: 'click' + EVENT_KEY,\n\t    FOCUSIN: 'focusin' + EVENT_KEY,\n\t    FOCUSOUT: 'focusout' + EVENT_KEY,\n\t    MOUSEENTER: 'mouseenter' + EVENT_KEY,\n\t    MOUSELEAVE: 'mouseleave' + EVENT_KEY\n\t  };\n\t\n\t  var ClassName = {\n\t    FADE: 'fade',\n\t    IN: 'in'\n\t  };\n\t\n\t  var Selector = {\n\t    TOOLTIP: '.tooltip',\n\t    TOOLTIP_INNER: '.tooltip-inner'\n\t  };\n\t\n\t  var TetherClass = {\n\t    element: false,\n\t    enabled: false\n\t  };\n\t\n\t  var Trigger = {\n\t    HOVER: 'hover',\n\t    FOCUS: 'focus',\n\t    CLICK: 'click',\n\t    MANUAL: 'manual'\n\t  };\n\t\n\t  /**\n\t   * ------------------------------------------------------------------------\n\t   * Class Definition\n\t   * ------------------------------------------------------------------------\n\t   */\n\t\n\t  var Tooltip = (function () {\n\t    function Tooltip(element, config) {\n\t      _classCallCheck(this, Tooltip);\n\t\n\t      // private\n\t      this._isEnabled = true;\n\t      this._timeout = 0;\n\t      this._hoverState = '';\n\t      this._activeTrigger = {};\n\t      this._tether = null;\n\t\n\t      // protected\n\t      this.element = element;\n\t      this.config = this._getConfig(config);\n\t      this.tip = null;\n\t\n\t      this._setListeners();\n\t    }\n\t\n\t    /**\n\t     * ------------------------------------------------------------------------\n\t     * jQuery\n\t     * ------------------------------------------------------------------------\n\t     */\n\t\n\t    // getters\n\t\n\t    _createClass(Tooltip, [{\n\t      key: 'enable',\n\t\n\t      // public\n\t\n\t      value: function enable() {\n\t        this._isEnabled = true;\n\t      }\n\t    }, {\n\t      key: 'disable',\n\t      value: function disable() {\n\t        this._isEnabled = false;\n\t      }\n\t    }, {\n\t      key: 'toggleEnabled',\n\t      value: function toggleEnabled() {\n\t        this._isEnabled = !this._isEnabled;\n\t      }\n\t    }, {\n\t      key: 'toggle',\n\t      value: function toggle(event) {\n\t        if (event) {\n\t          var dataKey = this.constructor.DATA_KEY;\n\t          var context = $(event.currentTarget).data(dataKey);\n\t\n\t          if (!context) {\n\t            context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n\t            $(event.currentTarget).data(dataKey, context);\n\t          }\n\t\n\t          context._activeTrigger.click = !context._activeTrigger.click;\n\t\n\t          if (context._isWithActiveTrigger()) {\n\t            context._enter(null, context);\n\t          } else {\n\t            context._leave(null, context);\n\t          }\n\t        } else {\n\t\n\t          if ($(this.getTipElement()).hasClass(ClassName.IN)) {\n\t            this._leave(null, this);\n\t            return;\n\t          }\n\t\n\t          this._enter(null, this);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'dispose',\n\t      value: function dispose() {\n\t        clearTimeout(this._timeout);\n\t\n\t        this.cleanupTether();\n\t\n\t        $.removeData(this.element, this.constructor.DATA_KEY);\n\t\n\t        $(this.element).off(this.constructor.EVENT_KEY);\n\t\n\t        if (this.tip) {\n\t          $(this.tip).remove();\n\t        }\n\t\n\t        this._isEnabled = null;\n\t        this._timeout = null;\n\t        this._hoverState = null;\n\t        this._activeTrigger = null;\n\t        this._tether = null;\n\t\n\t        this.element = null;\n\t        this.config = null;\n\t        this.tip = null;\n\t      }\n\t    }, {\n\t      key: 'show',\n\t      value: function show() {\n\t        var _this = this;\n\t\n\t        var showEvent = $.Event(this.constructor.Event.SHOW);\n\t\n\t        if (this.isWithContent() && this._isEnabled) {\n\t          $(this.element).trigger(showEvent);\n\t\n\t          var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);\n\t\n\t          if (showEvent.isDefaultPrevented() || !isInTheDom) {\n\t            return;\n\t          }\n\t\n\t          var tip = this.getTipElement();\n\t          var tipId = Util.getUID(this.constructor.NAME);\n\t\n\t          tip.setAttribute('id', tipId);\n\t          this.element.setAttribute('aria-describedby', tipId);\n\t\n\t          this.setContent();\n\t\n\t          if (this.config.animation) {\n\t            $(tip).addClass(ClassName.FADE);\n\t          }\n\t\n\t          var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n\t\n\t          var attachment = this._getAttachment(placement);\n\t\n\t          $(tip).data(this.constructor.DATA_KEY, this).appendTo(document.body);\n\t\n\t          $(this.element).trigger(this.constructor.Event.INSERTED);\n\t\n\t          this._tether = new Tether({\n\t            attachment: attachment,\n\t            element: tip,\n\t            target: this.element,\n\t            classes: TetherClass,\n\t            classPrefix: CLASS_PREFIX,\n\t            offset: this.config.offset,\n\t            constraints: this.config.constraints,\n\t            addTargetClasses: false\n\t          });\n\t\n\t          Util.reflow(tip);\n\t          this._tether.position();\n\t\n\t          $(tip).addClass(ClassName.IN);\n\t\n\t          var complete = function complete() {\n\t            var prevHoverState = _this._hoverState;\n\t            _this._hoverState = null;\n\t\n\t            $(_this.element).trigger(_this.constructor.Event.SHOWN);\n\t\n\t            if (prevHoverState === HoverState.OUT) {\n\t              _this._leave(null, _this);\n\t            }\n\t          };\n\t\n\t          if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n\t            $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);\n\t            return;\n\t          }\n\t\n\t          complete();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'hide',\n\t      value: function hide(callback) {\n\t        var _this2 = this;\n\t\n\t        var tip = this.getTipElement();\n\t        var hideEvent = $.Event(this.constructor.Event.HIDE);\n\t        var complete = function complete() {\n\t          if (_this2._hoverState !== HoverState.IN && tip.parentNode) {\n\t            tip.parentNode.removeChild(tip);\n\t          }\n\t\n\t          _this2.element.removeAttribute('aria-describedby');\n\t          $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\n\t          _this2.cleanupTether();\n\t\n\t          if (callback) {\n\t            callback();\n\t          }\n\t        };\n\t\n\t        $(this.element).trigger(hideEvent);\n\t\n\t        if (hideEvent.isDefaultPrevented()) {\n\t          return;\n\t        }\n\t\n\t        $(tip).removeClass(ClassName.IN);\n\t\n\t        if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n\t\n\t          $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n\t        } else {\n\t          complete();\n\t        }\n\t\n\t        this._hoverState = '';\n\t      }\n\t\n\t      // protected\n\t\n\t    }, {\n\t      key: 'isWithContent',\n\t      value: function isWithContent() {\n\t        return Boolean(this.getTitle());\n\t      }\n\t    }, {\n\t      key: 'getTipElement',\n\t      value: function getTipElement() {\n\t        return this.tip = this.tip || $(this.config.template)[0];\n\t      }\n\t    }, {\n\t      key: 'setContent',\n\t      value: function setContent() {\n\t        var $tip = $(this.getTipElement());\n\t\n\t        this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());\n\t\n\t        $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\n\t\n\t        this.cleanupTether();\n\t      }\n\t    }, {\n\t      key: 'setElementContent',\n\t      value: function setElementContent($element, content) {\n\t        var html = this.config.html;\n\t        if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n\t          // content is a DOM node or a jQuery\n\t          if (html) {\n\t            if (!$(content).parent().is($element)) {\n\t              $element.empty().append(content);\n\t            }\n\t          } else {\n\t            $element.text($(content).text());\n\t          }\n\t        } else {\n\t          $element[html ? 'html' : 'text'](content);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'getTitle',\n\t      value: function getTitle() {\n\t        var title = this.element.getAttribute('data-original-title');\n\t\n\t        if (!title) {\n\t          title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n\t        }\n\t\n\t        return title;\n\t      }\n\t    }, {\n\t      key: 'cleanupTether',\n\t      value: function cleanupTether() {\n\t        if (this._tether) {\n\t          this._tether.destroy();\n\t        }\n\t      }\n\t\n\t      // private\n\t\n\t    }, {\n\t      key: '_getAttachment',\n\t      value: function _getAttachment(placement) {\n\t        return AttachmentMap[placement.toUpperCase()];\n\t      }\n\t    }, {\n\t      key: '_setListeners',\n\t      value: function _setListeners() {\n\t        var _this3 = this;\n\t\n\t        var triggers = this.config.trigger.split(' ');\n\t\n\t        triggers.forEach(function (trigger) {\n\t          if (trigger === 'click') {\n\t            $(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, $.proxy(_this3.toggle, _this3));\n\t          } else if (trigger !== Trigger.MANUAL) {\n\t            var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;\n\t            var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;\n\t\n\t            $(_this3.element).on(eventIn, _this3.config.selector, $.proxy(_this3._enter, _this3)).on(eventOut, _this3.config.selector, $.proxy(_this3._leave, _this3));\n\t          }\n\t        });\n\t\n\t        if (this.config.selector) {\n\t          this.config = $.extend({}, this.config, {\n\t            trigger: 'manual',\n\t            selector: ''\n\t          });\n\t        } else {\n\t          this._fixTitle();\n\t        }\n\t      }\n\t    }, {\n\t      key: '_fixTitle',\n\t      value: function _fixTitle() {\n\t        var titleType = typeof this.element.getAttribute('data-original-title');\n\t        if (this.element.getAttribute('title') || titleType !== 'string') {\n\t          this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n\t          this.element.setAttribute('title', '');\n\t        }\n\t      }\n\t    }, {\n\t      key: '_enter',\n\t      value: function _enter(event, context) {\n\t        var dataKey = this.constructor.DATA_KEY;\n\t\n\t        context = context || $(event.currentTarget).data(dataKey);\n\t\n\t        if (!context) {\n\t          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n\t          $(event.currentTarget).data(dataKey, context);\n\t        }\n\t\n\t        if (event) {\n\t          context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n\t        }\n\t\n\t        if ($(context.getTipElement()).hasClass(ClassName.IN) || context._hoverState === HoverState.IN) {\n\t          context._hoverState = HoverState.IN;\n\t          return;\n\t        }\n\t\n\t        clearTimeout(context._timeout);\n\t\n\t        context._hoverState = HoverState.IN;\n\t\n\t        if (!context.config.delay || !context.config.delay.show) {\n\t          context.show();\n\t          return;\n\t        }\n\t\n\t        context._timeout = setTimeout(function () {\n\t          if (context._hoverState === HoverState.IN) {\n\t            context.show();\n\t          }\n\t        }, context.config.delay.show);\n\t      }\n\t    }, {\n\t      key: '_leave',\n\t      value: function _leave(event, context) {\n\t        var dataKey = this.constructor.DATA_KEY;\n\t\n\t        context = context || $(event.currentTarget).data(dataKey);\n\t\n\t        if (!context) {\n\t          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n\t          $(event.currentTarget).data(dataKey, context);\n\t        }\n\t\n\t        if (event) {\n\t          context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n\t        }\n\t\n\t        if (context._isWithActiveTrigger()) {\n\t          return;\n\t        }\n\t\n\t        clearTimeout(context._timeout);\n\t\n\t        context._hoverState = HoverState.OUT;\n\t\n\t        if (!context.config.delay || !context.config.delay.hide) {\n\t          context.hide();\n\t          return;\n\t        }\n\t\n\t        context._timeout = setTimeout(function () {\n\t          if (context._hoverState === HoverState.OUT) {\n\t            context.hide();\n\t          }\n\t        }, context.config.delay.hide);\n\t      }\n\t    }, {\n\t      key: '_isWithActiveTrigger',\n\t      value: function _isWithActiveTrigger() {\n\t        for (var trigger in this._activeTrigger) {\n\t          if (this._activeTrigger[trigger]) {\n\t            return true;\n\t          }\n\t        }\n\t\n\t        return false;\n\t      }\n\t    }, {\n\t      key: '_getConfig',\n\t      value: function _getConfig(config) {\n\t        config = $.extend({}, this.constructor.Default, $(this.element).data(), config);\n\t\n\t        if (config.delay && typeof config.delay === 'number') {\n\t          config.delay = {\n\t            show: config.delay,\n\t            hide: config.delay\n\t          };\n\t        }\n\t\n\t        Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n\t\n\t        return config;\n\t      }\n\t    }, {\n\t      key: '_getDelegateConfig',\n\t      value: function _getDelegateConfig() {\n\t        var config = {};\n\t\n\t        if (this.config) {\n\t          for (var key in this.config) {\n\t            if (this.constructor.Default[key] !== this.config[key]) {\n\t              config[key] = this.config[key];\n\t            }\n\t          }\n\t        }\n\t\n\t        return config;\n\t      }\n\t\n\t      // static\n\t\n\t    }], [{\n\t      key: '_jQueryInterface',\n\t      value: function _jQueryInterface(config) {\n\t        return this.each(function () {\n\t          var data = $(this).data(DATA_KEY);\n\t          var _config = typeof config === 'object' ? config : null;\n\t\n\t          if (!data && /destroy|hide/.test(config)) {\n\t            return;\n\t          }\n\t\n\t          if (!data) {\n\t            data = new Tooltip(this, _config);\n\t            $(this).data(DATA_KEY, data);\n\t          }\n\t\n\t          if (typeof config === 'string') {\n\t            if (data[config] === undefined) {\n\t              throw new Error('No method named \"' + config + '\"');\n\t            }\n\t            data[config]();\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'VERSION',\n\t      get: function get() {\n\t        return VERSION;\n\t      }\n\t    }, {\n\t      key: 'Default',\n\t      get: function get() {\n\t        return Default;\n\t      }\n\t    }, {\n\t      key: 'NAME',\n\t      get: function get() {\n\t        return NAME;\n\t      }\n\t    }, {\n\t      key: 'DATA_KEY',\n\t      get: function get() {\n\t        return DATA_KEY;\n\t      }\n\t    }, {\n\t      key: 'Event',\n\t      get: function get() {\n\t        return Event;\n\t      }\n\t    }, {\n\t      key: 'EVENT_KEY',\n\t      get: function get() {\n\t        return EVENT_KEY;\n\t      }\n\t    }, {\n\t      key: 'DefaultType',\n\t      get: function get() {\n\t        return DefaultType;\n\t      }\n\t    }]);\n\t\n\t    return Tooltip;\n\t  })();\n\t\n\t  $.fn[NAME] = Tooltip._jQueryInterface;\n\t  $.fn[NAME].Constructor = Tooltip;\n\t  $.fn[NAME].noConflict = function () {\n\t    $.fn[NAME] = JQUERY_NO_CONFLICT;\n\t    return Tooltip._jQueryInterface;\n\t  };\n\t\n\t  return Tooltip;\n\t})(jQuery);\n\t//# sourceMappingURL=tooltip.js.map\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = Tooltip;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(10), __webpack_require__(2), __webpack_require__(10)))\n\n/***/ },\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(74);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(80)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../css-loader/index.js!./../postcss-loader/index.js!./../resolve-url-loader/index.js!./../sass-loader/index.js?sourceMap!./lib/bootstrap.styles.loader.js!./no-op.js\", function() {\n\t\t\t\tvar newContent = require(\"!!./../css-loader/index.js!./../postcss-loader/index.js!./../resolve-url-loader/index.js!./../sass-loader/index.js?sourceMap!./lib/bootstrap.styles.loader.js!./no-op.js\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory){\n\t\n\t\t//UMD\n\t\tif ( true ) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn factory();\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof module === \"object\") {\n\t\t\tmodule.exports = factory();\n\t \t} else {\n\t\t\troot.Tone = factory();\n\t\t}\n\t\n\t}(this, function(){\n\t\n\t\t\"use strict\";\n\t\t\n\t\tvar Tone;\n\t\t//constructs the main Tone object\n\t\tfunction Main(func){\n\t\t\tTone = func();\n\t\t}\n\t\t//invokes each of the modules with the main Tone object as the argument\n\t\tfunction Module(func){\n\t\t\tfunc(Tone);\n\t\t}\t/**\n\t\t *  Tone.js\n\t\t *  @author Yotam Mann\n\t\t *  @license http://opensource.org/licenses/MIT MIT License\n\t\t *  @copyright 2014-2016 Yotam Mann\n\t\t */\n\t\tMain(function () {\n\t\t    \n\t\t    //////////////////////////////////////////////////////////////////////////\n\t\t    //\tWEB AUDIO CONTEXT\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    function isUndef(val) {\n\t\t        return typeof val === 'undefined';\n\t\t    }\n\t\t    function isFunction(val) {\n\t\t        return typeof val === 'function';\n\t\t    }\n\t\t    var audioContext;\n\t\t    //polyfill for AudioContext and OfflineAudioContext\n\t\t    if (isUndef(window.AudioContext)) {\n\t\t        window.AudioContext = window.webkitAudioContext;\n\t\t    }\n\t\t    if (isUndef(window.OfflineAudioContext)) {\n\t\t        window.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t\t    }\n\t\t    if (!isUndef(AudioContext)) {\n\t\t        audioContext = new AudioContext();\n\t\t    } else {\n\t\t        throw new Error('Web Audio is not supported in this browser');\n\t\t    }\n\t\t    //SHIMS////////////////////////////////////////////////////////////////////\n\t\t    if (!isFunction(AudioContext.prototype.createGain)) {\n\t\t        AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t\t    }\n\t\t    if (!isFunction(AudioContext.prototype.createDelay)) {\n\t\t        AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t\t    }\n\t\t    if (!isFunction(AudioContext.prototype.createPeriodicWave)) {\n\t\t        AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t\t    }\n\t\t    if (!isFunction(AudioBufferSourceNode.prototype.start)) {\n\t\t        AudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t\t    }\n\t\t    if (!isFunction(AudioBufferSourceNode.prototype.stop)) {\n\t\t        AudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t\t    }\n\t\t    if (!isFunction(OscillatorNode.prototype.start)) {\n\t\t        OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t\t    }\n\t\t    if (!isFunction(OscillatorNode.prototype.stop)) {\n\t\t        OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\n\t\t    }\n\t\t    if (!isFunction(OscillatorNode.prototype.setPeriodicWave)) {\n\t\t        OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t\t    }\n\t\t    //extend the connect function to include Tones\n\t\t    if (isUndef(AudioNode.prototype._nativeConnect)) {\n\t\t        AudioNode.prototype._nativeConnect = AudioNode.prototype.connect;\n\t\t        AudioNode.prototype.connect = function (B, outNum, inNum) {\n\t\t            if (B.input) {\n\t\t                if (Array.isArray(B.input)) {\n\t\t                    if (isUndef(inNum)) {\n\t\t                        inNum = 0;\n\t\t                    }\n\t\t                    this.connect(B.input[inNum]);\n\t\t                } else {\n\t\t                    this.connect(B.input, outNum, inNum);\n\t\t                }\n\t\t            } else {\n\t\t                try {\n\t\t                    if (B instanceof AudioNode) {\n\t\t                        this._nativeConnect(B, outNum, inNum);\n\t\t                    } else {\n\t\t                        this._nativeConnect(B, outNum);\n\t\t                    }\n\t\t                } catch (e) {\n\t\t                    throw new Error('error connecting to node: ' + B);\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t    }\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTONE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  @class  Tone is the base class of all other classes. It provides \n\t\t\t *          a lot of methods and functionality to all classes that extend\n\t\t\t *          it. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @alias Tone\n\t\t\t *  @param {number} [inputs=1] the number of input nodes\n\t\t\t *  @param {number} [outputs=1] the number of output nodes\n\t\t\t */\n\t\t    var Tone = function (inputs, outputs) {\n\t\t        /**\n\t\t\t\t *  the input node(s)\n\t\t\t\t *  @type {GainNode|Array}\n\t\t\t\t */\n\t\t        if (isUndef(inputs) || inputs === 1) {\n\t\t            this.input = this.context.createGain();\n\t\t        } else if (inputs > 1) {\n\t\t            this.input = new Array(inputs);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  the output node(s)\n\t\t\t\t *  @type {GainNode|Array}\n\t\t\t\t */\n\t\t        if (isUndef(outputs) || outputs === 1) {\n\t\t            this.output = this.context.createGain();\n\t\t        } else if (outputs > 1) {\n\t\t            this.output = new Array(inputs);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the parameters at once. Either pass in an\n\t\t\t *  object mapping parameters to values, or to set a\n\t\t\t *  single parameter, by passing in a string and value.\n\t\t\t *  The last argument is an optional ramp time which \n\t\t\t *  will ramp any signal values to their destination value\n\t\t\t *  over the duration of the rampTime.\n\t\t\t *  @param {Object|string} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * //set values using an object\n\t\t\t * filter.set({\n\t\t\t * \t\"frequency\" : 300,\n\t\t\t * \t\"type\" : highpass\n\t\t\t * });\n\t\t\t *  @example\n\t\t\t * filter.set(\"type\", \"highpass\");\n\t\t\t *  @example\n\t\t\t * //ramp to the value 220 over 3 seconds. \n\t\t\t * oscillator.set({\n\t\t\t * \t\"frequency\" : 220\n\t\t\t * }, 3);\n\t\t\t */\n\t\t    Tone.prototype.set = function (params, value, rampTime) {\n\t\t        if (this.isObject(params)) {\n\t\t            rampTime = value;\n\t\t        } else if (this.isString(params)) {\n\t\t            var tmpObj = {};\n\t\t            tmpObj[params] = value;\n\t\t            params = tmpObj;\n\t\t        }\n\t\t        for (var attr in params) {\n\t\t            value = params[attr];\n\t\t            var parent = this;\n\t\t            if (attr.indexOf('.') !== -1) {\n\t\t                var attrSplit = attr.split('.');\n\t\t                for (var i = 0; i < attrSplit.length - 1; i++) {\n\t\t                    parent = parent[attrSplit[i]];\n\t\t                }\n\t\t                attr = attrSplit[attrSplit.length - 1];\n\t\t            }\n\t\t            var param = parent[attr];\n\t\t            if (isUndef(param)) {\n\t\t                continue;\n\t\t            }\n\t\t            if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {\n\t\t                if (param.value !== value) {\n\t\t                    if (isUndef(rampTime)) {\n\t\t                        param.value = value;\n\t\t                    } else {\n\t\t                        param.rampTo(value, rampTime);\n\t\t                    }\n\t\t                }\n\t\t            } else if (param instanceof AudioParam) {\n\t\t                if (param.value !== value) {\n\t\t                    param.value = value;\n\t\t                }\n\t\t            } else if (param instanceof Tone) {\n\t\t                param.set(value);\n\t\t            } else if (param !== value) {\n\t\t                parent[attr] = value;\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the object's attributes. Given no arguments get\n\t\t\t *  will return all available object properties and their corresponding\n\t\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t\t *  to access deeper properties.\n\t\t\t *  @example\n\t\t\t * osc.get();\n\t\t\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t\t *  @example\n\t\t\t * osc.get(\"type\");\n\t\t\t * //returns { \"type\" : \"sine\"}\n\t\t\t * @example\n\t\t\t * //use dot notation to access deep properties\n\t\t\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t\t\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t\t\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return \n\t\t\t *  \t\t\t\t\t                  all available.\n\t\t\t *  @returns {Object}\n\t\t\t */\n\t\t    Tone.prototype.get = function (params) {\n\t\t        if (isUndef(params)) {\n\t\t            params = this._collectDefaults(this.constructor);\n\t\t        } else if (this.isString(params)) {\n\t\t            params = [params];\n\t\t        }\n\t\t        var ret = {};\n\t\t        for (var i = 0; i < params.length; i++) {\n\t\t            var attr = params[i];\n\t\t            var parent = this;\n\t\t            var subRet = ret;\n\t\t            if (attr.indexOf('.') !== -1) {\n\t\t                var attrSplit = attr.split('.');\n\t\t                for (var j = 0; j < attrSplit.length - 1; j++) {\n\t\t                    var subAttr = attrSplit[j];\n\t\t                    subRet[subAttr] = subRet[subAttr] || {};\n\t\t                    subRet = subRet[subAttr];\n\t\t                    parent = parent[subAttr];\n\t\t                }\n\t\t                attr = attrSplit[attrSplit.length - 1];\n\t\t            }\n\t\t            var param = parent[attr];\n\t\t            if (this.isObject(params[attr])) {\n\t\t                subRet[attr] = param.get();\n\t\t            } else if (Tone.Signal && param instanceof Tone.Signal) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (Tone.Param && param instanceof Tone.Param) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (param instanceof AudioParam) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (param instanceof Tone) {\n\t\t                subRet[attr] = param.get();\n\t\t            } else if (!isFunction(param) && !isUndef(param)) {\n\t\t                subRet[attr] = param;\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  collect all of the default attributes in one\n\t\t\t *  @private\n\t\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t\t */\n\t\t    Tone.prototype._collectDefaults = function (constr) {\n\t\t        var ret = [];\n\t\t        if (!isUndef(constr.defaults)) {\n\t\t            ret = Object.keys(constr.defaults);\n\t\t        }\n\t\t        if (!isUndef(constr._super)) {\n\t\t            var superDefs = this._collectDefaults(constr._super);\n\t\t            //filter out repeats\n\t\t            for (var i = 0; i < superDefs.length; i++) {\n\t\t                if (ret.indexOf(superDefs[i]) === -1) {\n\t\t                    ret.push(superDefs[i]);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  @returns {string} returns the name of the class as a string\n\t\t\t */\n\t\t    Tone.prototype.toString = function () {\n\t\t        for (var className in Tone) {\n\t\t            var isLetter = className[0].match(/^[A-Z]$/);\n\t\t            var sameConstructor = Tone[className] === this.constructor;\n\t\t            if (isFunction(Tone[className]) && isLetter && sameConstructor) {\n\t\t                return className;\n\t\t            }\n\t\t        }\n\t\t        return 'Tone';\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCLASS VARS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  A static pointer to the audio context accessible as Tone.context. \n\t\t\t *  @type {AudioContext}\n\t\t\t */\n\t\t    Tone.context = audioContext;\n\t\t    /**\n\t\t\t *  The audio context.\n\t\t\t *  @type {AudioContext}\n\t\t\t */\n\t\t    Tone.prototype.context = Tone.context;\n\t\t    /**\n\t\t\t *  the default buffer size\n\t\t\t *  @type {number}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.prototype.bufferSize = 2048;\n\t\t    /**\n\t\t\t *  The delay time of a single frame (128 samples according to the spec). \n\t\t\t *  @type {number}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.prototype.blockTime = 128 / Tone.context.sampleRate;\n\t\t    /**\n\t\t\t *  The time of a single sample\n\t\t\t *  @type {number}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.prototype.sampleTime = 1 / Tone.context.sampleRate;\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCONNECTIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  disconnect and dispose\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.dispose = function () {\n\t\t        if (!this.isUndef(this.input)) {\n\t\t            if (this.input instanceof AudioNode) {\n\t\t                this.input.disconnect();\n\t\t            }\n\t\t            this.input = null;\n\t\t        }\n\t\t        if (!this.isUndef(this.output)) {\n\t\t            if (this.output instanceof AudioNode) {\n\t\t                this.output.disconnect();\n\t\t            }\n\t\t            this.output = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  a silent connection to the DesinationNode\n\t\t\t *  which will ensure that anything connected to it\n\t\t\t *  will not be garbage collected\n\t\t\t *  \n\t\t\t *  @private\n\t\t\t */\n\t\t    var _silentNode = null;\n\t\t    /**\n\t\t\t *  makes a connection to ensure that the node will not be garbage collected\n\t\t\t *  until 'dispose' is explicitly called\n\t\t\t *\n\t\t\t *  use carefully. circumvents JS and WebAudio's normal Garbage Collection behavior\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.noGC = function () {\n\t\t        this.output.connect(_silentNode);\n\t\t        return this;\n\t\t    };\n\t\t    AudioNode.prototype.noGC = function () {\n\t\t        this.connect(_silentNode);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t\t *  @param  {Tone | AudioParam | AudioNode} unit \n\t\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.connect = function (unit, outputNum, inputNum) {\n\t\t        if (Array.isArray(this.output)) {\n\t\t            outputNum = this.defaultArg(outputNum, 0);\n\t\t            this.output[outputNum].connect(unit, 0, inputNum);\n\t\t        } else {\n\t\t            this.output.connect(unit, outputNum, inputNum);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  disconnect the output\n\t\t\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t\t\t *                                   if the output is an array, or the\n\t\t\t *                                   node to disconnect from.\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.disconnect = function (output) {\n\t\t        if (Array.isArray(this.output)) {\n\t\t            output = this.defaultArg(output, 0);\n\t\t            this.output[output].disconnect();\n\t\t        } else if (!this.isUndef(output)) {\n\t\t            this.output.disconnect(output);\n\t\t        } else {\n\t\t            this.output.disconnect();\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect together all of the arguments in series\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.connectSeries = function () {\n\t\t        if (arguments.length > 1) {\n\t\t            var currentUnit = arguments[0];\n\t\t            for (var i = 1; i < arguments.length; i++) {\n\t\t                var toUnit = arguments[i];\n\t\t                currentUnit.connect(toUnit);\n\t\t                currentUnit = toUnit;\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t\t *  @example\n\t\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.chain = function () {\n\t\t        if (arguments.length > 0) {\n\t\t            var currentUnit = this;\n\t\t            for (var i = 0; i < arguments.length; i++) {\n\t\t                var toUnit = arguments[i];\n\t\t                currentUnit.connect(toUnit);\n\t\t                currentUnit = toUnit;\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.fan = function () {\n\t\t        if (arguments.length > 0) {\n\t\t            for (var i = 0; i < arguments.length; i++) {\n\t\t                this.connect(arguments[i]);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    //give native nodes chain and fan methods\n\t\t    AudioNode.prototype.chain = Tone.prototype.chain;\n\t\t    AudioNode.prototype.fan = Tone.prototype.fan;\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUTILITIES / HELPERS / MATHS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  If the `given` parameter is undefined, use the `fallback`. \n\t\t\t *  If both `given` and `fallback` are object literals, it will\n\t\t\t *  return a deep copy which includes all of the parameters from both \n\t\t\t *  objects. If a parameter is undefined in given, it will return\n\t\t\t *  the fallback property. \n\t\t\t *  <br><br>\n\t\t\t *  WARNING: if object is self referential, it will go into an an \n\t\t\t *  infinite recursive loop.\n\t\t\t *  \n\t\t\t *  @param  {*} given    \n\t\t\t *  @param  {*} fallback \n\t\t\t *  @return {*}          \n\t\t\t */\n\t\t    Tone.prototype.defaultArg = function (given, fallback) {\n\t\t        if (this.isObject(given) && this.isObject(fallback)) {\n\t\t            var ret = {};\n\t\t            //make a deep copy of the given object\n\t\t            for (var givenProp in given) {\n\t\t                ret[givenProp] = this.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t            }\n\t\t            for (var fallbackProp in fallback) {\n\t\t                ret[fallbackProp] = this.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t            }\n\t\t            return ret;\n\t\t        } else {\n\t\t            return isUndef(given) ? fallback : given;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  returns the args as an options object with given arguments\n\t\t\t *  mapped to the names provided. \n\t\t\t *\n\t\t\t *  if the args given is an array containing only one object, it is assumed\n\t\t\t *  that that's already the options object and will just return it. \n\t\t\t *  \n\t\t\t *  @param  {Array} values  the 'arguments' object of the function\n\t\t\t *  @param  {Array} keys the names of the arguments as they\n\t\t\t *                                 should appear in the options object\n\t\t\t *  @param {Object=} defaults optional defaults to mixin to the returned \n\t\t\t *                            options object                              \n\t\t\t *  @return {Object}       the options object with the names mapped to the arguments\n\t\t\t */\n\t\t    Tone.prototype.optionsObject = function (values, keys, defaults) {\n\t\t        var options = {};\n\t\t        if (values.length === 1 && this.isObject(values[0])) {\n\t\t            options = values[0];\n\t\t        } else {\n\t\t            for (var i = 0; i < keys.length; i++) {\n\t\t                options[keys[i]] = values[i];\n\t\t            }\n\t\t        }\n\t\t        if (!this.isUndef(defaults)) {\n\t\t            return this.defaultArg(options, defaults);\n\t\t        } else {\n\t\t            return options;\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // TYPE CHECKING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  test if the arg is undefined\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is undefined\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.prototype.isUndef = isUndef;\n\t\t    /**\n\t\t\t *  test if the arg is a function\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a function\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.prototype.isFunction = isFunction;\n\t\t    /**\n\t\t\t *  Test if the argument is a number.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a number\n\t\t\t */\n\t\t    Tone.prototype.isNumber = function (arg) {\n\t\t        return typeof arg === 'number';\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is an object literal.\n\t\t\t */\n\t\t    Tone.prototype.isObject = function (arg) {\n\t\t        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is a boolean.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a boolean\n\t\t\t */\n\t\t    Tone.prototype.isBoolean = function (arg) {\n\t\t        return typeof arg === 'boolean';\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is an Array\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is an array\n\t\t\t */\n\t\t    Tone.prototype.isArray = function (arg) {\n\t\t        return Array.isArray(arg);\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is a string.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a string\n\t\t\t */\n\t\t    Tone.prototype.isString = function (arg) {\n\t\t        return typeof arg === 'string';\n\t\t    };\n\t\t    /**\n\t\t\t *  An empty function.\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.noOp = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  Make the property not writable. Internal use only. \n\t\t\t *  @private\n\t\t\t *  @param  {string}  property  the property to make not writable\n\t\t\t */\n\t\t    Tone.prototype._readOnly = function (property) {\n\t\t        if (Array.isArray(property)) {\n\t\t            for (var i = 0; i < property.length; i++) {\n\t\t                this._readOnly(property[i]);\n\t\t            }\n\t\t        } else {\n\t\t            Object.defineProperty(this, property, {\n\t\t                writable: false,\n\t\t                enumerable: true\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Make an attribute writeable. Interal use only. \n\t\t\t *  @private\n\t\t\t *  @param  {string}  property  the property to make writable\n\t\t\t */\n\t\t    Tone.prototype._writable = function (property) {\n\t\t        if (Array.isArray(property)) {\n\t\t            for (var i = 0; i < property.length; i++) {\n\t\t                this._writable(property[i]);\n\t\t            }\n\t\t        } else {\n\t\t            Object.defineProperty(this, property, { writable: true });\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Possible play states. \n\t\t\t * @enum {string}\n\t\t\t */\n\t\t    Tone.State = {\n\t\t        Started: 'started',\n\t\t        Stopped: 'stopped',\n\t\t        Paused: 'paused'\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // GAIN CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Equal power gain scale. Good for cross-fading.\n\t\t\t *  @param  {NormalRange} percent (0-1)\n\t\t\t *  @return {Number}         output gain (0-1)\n\t\t\t */\n\t\t    Tone.prototype.equalPowerScale = function (percent) {\n\t\t        var piFactor = 0.5 * Math.PI;\n\t\t        return Math.sin(percent * piFactor);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert decibels into gain.\n\t\t\t *  @param  {Decibels} db\n\t\t\t *  @return {Number}   \n\t\t\t */\n\t\t    Tone.prototype.dbToGain = function (db) {\n\t\t        return Math.pow(2, db / 6);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert gain to decibels.\n\t\t\t *  @param  {Number} gain (0-1)\n\t\t\t *  @return {Decibels}   \n\t\t\t */\n\t\t    Tone.prototype.gainToDb = function (gain) {\n\t\t        return 20 * (Math.log(gain) / Math.LN10);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t\t *  @param  {Interval} interval the number of semitones above the base note\n\t\t\t *  @return {number}          the frequency ratio\n\t\t\t *  @example\n\t\t\t * tone.intervalToFrequencyRatio(0); // 1\n\t\t\t * tone.intervalToFrequencyRatio(12); // 2\n\t\t\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t\t\t */\n\t\t    Tone.prototype.intervalToFrequencyRatio = function (interval) {\n\t\t        return Math.pow(2, interval / 12);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTIMING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Return the current time of the AudioContext clock.\n\t\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t\t */\n\t\t    Tone.prototype.now = function () {\n\t\t        return this.context.currentTime;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the current time of the AudioContext clock.\n\t\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.now = function () {\n\t\t        return Tone.context.currentTime;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tINHERITANCE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t\t *  to inherit the parent's properties, make sure to call \n\t\t\t *  Parent.call(this) in the child's constructor\n\t\t\t *\n\t\t\t *  based on closure library's inherit function\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @param  {function} \tchild  \n\t\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t\t *                             if no parent is supplied, the child\n\t\t\t *                             will inherit from Tone\n\t\t\t */\n\t\t    Tone.extend = function (child, parent) {\n\t\t        if (isUndef(parent)) {\n\t\t            parent = Tone;\n\t\t        }\n\t\t        function TempConstructor() {\n\t\t        }\n\t\t        TempConstructor.prototype = parent.prototype;\n\t\t        child.prototype = new TempConstructor();\n\t\t        /** @override */\n\t\t        child.prototype.constructor = child;\n\t\t        child._super = parent;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCONTEXT\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  array of callbacks to be invoked when a new context is added\n\t\t\t *  @private \n\t\t\t *  @private\n\t\t\t */\n\t\t    var newContextCallbacks = [];\n\t\t    /**\n\t\t\t *  invoke this callback when a new context is added\n\t\t\t *  will be invoked initially with the first context\n\t\t\t *  @private \n\t\t\t *  @static\n\t\t\t *  @param {function(AudioContext)} callback the callback to be invoked\n\t\t\t *                                           with the audio context\n\t\t\t */\n\t\t    Tone._initAudioContext = function (callback) {\n\t\t        //invoke the callback with the existing AudioContext\n\t\t        callback(Tone.context);\n\t\t        //add it to the array\n\t\t        newContextCallbacks.push(callback);\n\t\t    };\n\t\t    /**\n\t\t\t *  Tone automatically creates a context on init, but if you are working\n\t\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t\t *  useful to set your own. If you are going to set your own context, \n\t\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t\t *  @static\n\t\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t\t */\n\t\t    Tone.setContext = function (ctx) {\n\t\t        //set the prototypes\n\t\t        Tone.prototype.context = ctx;\n\t\t        Tone.context = ctx;\n\t\t        //invoke all the callbacks\n\t\t        for (var i = 0; i < newContextCallbacks.length; i++) {\n\t\t            newContextCallbacks[i](ctx);\n\t\t        }\n\t\t    };\n\t\t    //setup the context\n\t\t    Tone._initAudioContext(function (audioContext) {\n\t\t        //set the blockTime\n\t\t        Tone.prototype.blockTime = 128 / audioContext.sampleRate;\n\t\t        Tone.prototype.sampleTime = 1 / audioContext.sampleRate;\n\t\t        _silentNode = audioContext.createGain();\n\t\t        _silentNode.gain.value = 0;\n\t\t        _silentNode.connect(audioContext.destination);\n\t\t    });\n\t\t    Tone.version = 'r8';\n\t\t    // allow optional silencing of this log\n\t\t    if (!window.TONE_SILENCE_VERSION_LOGGING) {\n\t\t        console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');\n\t\t    }\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base class for all Signals. Used Internally. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.SignalBase = function () {\n\t\t    };\n\t\t    Tone.extend(Tone.SignalBase);\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t */\n\t\t    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {\n\t\t        //zero it out so that the signal can have full control\n\t\t        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor || Tone.TimelineSignal && Tone.TimelineSignal === node.constructor) {\n\t\t            //cancel changes\n\t\t            node._param.cancelScheduledValues(0);\n\t\t            //reset the value\n\t\t            node._param.value = 0;\n\t\t            //mark the value as overridden\n\t\t            node.overridden = true;\n\t\t        } else if (node instanceof AudioParam) {\n\t\t            node.cancelScheduledValues(0);\n\t\t            node.value = 0;\n\t\t        }\n\t\t        Tone.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.SignalBase;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Wraps the native Web Audio API \n\t\t\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {function|Array|Number} mapping The function used to define the values. \n\t\t\t *                                    The mapping function should take two arguments: \n\t\t\t *                                    the first is the value at the current position \n\t\t\t *                                    and the second is the array position. \n\t\t\t *                                    If the argument is an array, that array will be\n\t\t\t *                                    set as the wave shaping function. The input\n\t\t\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t\t\t *                                    signal can take on any numerical values. \n\t\t\t *                                    \n\t\t\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t\t\t *  @example\n\t\t\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t\t\t * \treturn val * 2;\n\t\t\t * }, 2048);\n\t\t\t *  @example\n\t\t\t * //a waveshaper can also be constructed with an array of values\n\t\t\t * var invert = new Tone.WaveShaper([1, -1]);\n\t\t\t */\n\t\t    Tone.WaveShaper = function (mapping, bufferLen) {\n\t\t        /**\n\t\t\t\t *  the waveshaper\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = this.input = this.output = this.context.createWaveShaper();\n\t\t        /**\n\t\t\t\t *  the waveshapers curve\n\t\t\t\t *  @type {Float32Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._curve = null;\n\t\t        if (Array.isArray(mapping)) {\n\t\t            this.curve = mapping;\n\t\t        } else if (isFinite(mapping) || this.isUndef(mapping)) {\n\t\t            this._curve = new Float32Array(this.defaultArg(mapping, 1024));\n\t\t        } else if (this.isFunction(mapping)) {\n\t\t            this._curve = new Float32Array(this.defaultArg(bufferLen, 1024));\n\t\t            this.setMap(mapping);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.WaveShaper, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  Uses a mapping function to set the value of the curve. \n\t\t\t *  @param {function} mapping The function used to define the values. \n\t\t\t *                            The mapping function take two arguments: \n\t\t\t *                            the first is the value at the current position \n\t\t\t *                            which goes from -1 to 1 over the number of elements\n\t\t\t *                            in the curve array. The second argument is the array position. \n\t\t\t *  @returns {Tone.WaveShaper} this\n\t\t\t *  @example\n\t\t\t * //map the input signal from [-1, 1] to [0, 10]\n\t\t\t * shaper.setMap(function(val, index){\n\t\t\t * \treturn (val + 1) * 5;\n\t\t\t * })\n\t\t\t */\n\t\t    Tone.WaveShaper.prototype.setMap = function (mapping) {\n\t\t        for (var i = 0, len = this._curve.length; i < len; i++) {\n\t\t            var normalized = i / (len - 1) * 2 - 1;\n\t\t            this._curve[i] = mapping(normalized, i);\n\t\t        }\n\t\t        this._shaper.curve = this._curve;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The array to set as the waveshaper curve. For linear curves\n\t\t\t * array length does not make much difference, but for complex curves\n\t\t\t * longer arrays will provide smoother interpolation. \n\t\t\t * @memberOf Tone.WaveShaper#\n\t\t\t * @type {Array}\n\t\t\t * @name curve\n\t\t\t */\n\t\t    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {\n\t\t        get: function () {\n\t\t            return this._shaper.curve;\n\t\t        },\n\t\t        set: function (mapping) {\n\t\t            this._curve = new Float32Array(mapping);\n\t\t            this._shaper.curve = this._curve;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Specifies what type of oversampling (if any) should be used when \n\t\t\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\". \n\t\t\t * @memberOf Tone.WaveShaper#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            if ([\n\t\t                    'none',\n\t\t                    '2x',\n\t\t                    '4x'\n\t\t                ].indexOf(oversampling) !== -1) {\n\t\t                this._shaper.oversample = oversampling;\n\t\t            } else {\n\t\t                throw new RangeError('Tone.WaveShaper: oversampling must be either \\'none\\', \\'2x\\', or \\'4x\\'');\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.WaveShaper} this\n\t\t\t */\n\t\t    Tone.WaveShaper.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._shaper.disconnect();\n\t\t        this._shaper = null;\n\t\t        this._curve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.WaveShaper;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.TimeBase is a flexible encoding of time\n\t\t\t *         which can be evaluated to and from a string.\n\t\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t\t *  @param  {String=}  units  Unit values\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(4, \"n\")\n\t\t\t * Tone.TimeBase(2, \"t\")\n\t\t\t * Tone.TimeBase(\"2t\").add(\"1m\")\n\t\t\t * Tone.TimeBase(\"2t + 1m\");\n\t\t\t */\n\t\t    Tone.TimeBase = function (val, units) {\n\t\t        //allows it to be constructed with or without 'new'\n\t\t        if (this instanceof Tone.TimeBase) {\n\t\t            /**\n\t\t\t\t\t *  Any expressions parsed from the Time\n\t\t\t\t\t *  @type  {Array}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._expr = this._noOp;\n\t\t            if (val instanceof Tone.TimeBase) {\n\t\t                this.copy(val);\n\t\t            } else if (!this.isUndef(units) || this.isNumber(val)) {\n\t\t                //default units\n\t\t                units = this.defaultArg(units, this._defaultUnits);\n\t\t                var method = this._primaryExpressions[units].method;\n\t\t                this._expr = method.bind(this, val);\n\t\t            } else if (this.isString(val)) {\n\t\t                this.set(val);\n\t\t            } else if (this.isUndef(val)) {\n\t\t                //default expression\n\t\t                this._expr = this._defaultExpr();\n\t\t            }\n\t\t        } else {\n\t\t            return new Tone.TimeBase(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.TimeBase);\n\t\t    /**\n\t\t\t *  Repalce the current time value with the value\n\t\t\t *  given by the expression string.\n\t\t\t *  @param  {String}  exprString\n\t\t\t *  @return {Tone.TimeBase} this\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.set = function (exprString) {\n\t\t        this._expr = this._parseExprString(exprString);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return a clone of the TimeBase object.\n\t\t\t *  @return  {Tone.TimeBase} The new cloned Tone.TimeBase\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.clone = function () {\n\t\t        var instance = new this.constructor();\n\t\t        instance.copy(this);\n\t\t        return instance;\n\t\t    };\n\t\t    /**\n\t\t\t *  Copies the value of time to this Time\n\t\t\t *  @param {Tone.TimeBase} time\n\t\t\t *  @return  {TimeBase}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.copy = function (time) {\n\t\t        var val = time._expr();\n\t\t        return this.set(val);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tABSTRACT SYNTAX TREE PARSER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  All the primary expressions.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._primaryExpressions = {\n\t\t        'n': {\n\t\t            regexp: /^(\\d+)n/i,\n\t\t            method: function (value) {\n\t\t                value = parseInt(value);\n\t\t                if (value === 1) {\n\t\t                    return this._beatsToUnits(this._timeSignature());\n\t\t                } else {\n\t\t                    return this._beatsToUnits(4 / value);\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        't': {\n\t\t            regexp: /^(\\d+)t/i,\n\t\t            method: function (value) {\n\t\t                value = parseInt(value);\n\t\t                return this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t            }\n\t\t        },\n\t\t        'm': {\n\t\t            regexp: /^(\\d+)m/i,\n\t\t            method: function (value) {\n\t\t                return this._beatsToUnits(parseInt(value) * this._timeSignature());\n\t\t            }\n\t\t        },\n\t\t        'i': {\n\t\t            regexp: /^(\\d+)i/i,\n\t\t            method: function (value) {\n\t\t                return this._ticksToUnits(parseInt(value));\n\t\t            }\n\t\t        },\n\t\t        'hz': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?)hz/i,\n\t\t            method: function (value) {\n\t\t                return this._frequencyToUnits(parseFloat(value));\n\t\t            }\n\t\t        },\n\t\t        'tr': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t            method: function (m, q, s) {\n\t\t                var total = 0;\n\t\t                if (m && m !== '0') {\n\t\t                    total += this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t\t                }\n\t\t                if (q && q !== '0') {\n\t\t                    total += this._beatsToUnits(parseFloat(q));\n\t\t                }\n\t\t                if (s && s !== '0') {\n\t\t                    total += this._beatsToUnits(parseFloat(s) / 4);\n\t\t                }\n\t\t                return total;\n\t\t            }\n\t\t        },\n\t\t        's': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?s)/,\n\t\t            method: function (value) {\n\t\t                return this._secondsToUnits(parseFloat(value));\n\t\t            }\n\t\t        },\n\t\t        'samples': {\n\t\t            regexp: /^(\\d+)samples/,\n\t\t            method: function (value) {\n\t\t                return parseInt(value) / this.context.sampleRate;\n\t\t            }\n\t\t        },\n\t\t        'default': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?)/,\n\t\t            method: function (value) {\n\t\t                return this._primaryExpressions[this._defaultUnits].method.call(this, value);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  All the binary expressions that TimeBase can accept.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._binaryExpressions = {\n\t\t        '+': {\n\t\t            regexp: /^\\+/,\n\t\t            precedence: 2,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() + rh();\n\t\t            }\n\t\t        },\n\t\t        '-': {\n\t\t            regexp: /^\\-/,\n\t\t            precedence: 2,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() - rh();\n\t\t            }\n\t\t        },\n\t\t        '*': {\n\t\t            regexp: /^\\*/,\n\t\t            precedence: 1,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() * rh();\n\t\t            }\n\t\t        },\n\t\t        '/': {\n\t\t            regexp: /^\\//,\n\t\t            precedence: 1,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() / rh();\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  All the unary expressions.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._unaryExpressions = {\n\t\t        'neg': {\n\t\t            regexp: /^\\-/,\n\t\t            method: function (lh) {\n\t\t                return -lh();\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Syntactic glue which holds expressions together\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._syntaxGlue = {\n\t\t        '(': { regexp: /^\\(/ },\n\t\t        ')': { regexp: /^\\)/ }\n\t\t    };\n\t\t    /**\n\t\t\t *  tokenize the expression based on the Expressions object\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._tokenize = function (expr) {\n\t\t        var position = -1;\n\t\t        var tokens = [];\n\t\t        while (expr.length > 0) {\n\t\t            expr = expr.trim();\n\t\t            var token = getNextToken(expr, this);\n\t\t            tokens.push(token);\n\t\t            expr = expr.substr(token.value.length);\n\t\t        }\n\t\t        function getNextToken(expr, context) {\n\t\t            var expressions = [\n\t\t                '_binaryExpressions',\n\t\t                '_unaryExpressions',\n\t\t                '_primaryExpressions',\n\t\t                '_syntaxGlue'\n\t\t            ];\n\t\t            for (var i = 0; i < expressions.length; i++) {\n\t\t                var group = context[expressions[i]];\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    var reg = op.regexp;\n\t\t                    var match = expr.match(reg);\n\t\t                    if (match !== null) {\n\t\t                        return {\n\t\t                            method: op.method,\n\t\t                            precedence: op.precedence,\n\t\t                            regexp: op.regexp,\n\t\t                            value: match[0]\n\t\t                        };\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            throw new SyntaxError('Tone.TimeBase: Unexpected token ' + expr);\n\t\t        }\n\t\t        return {\n\t\t            next: function () {\n\t\t                return tokens[++position];\n\t\t            },\n\t\t            peek: function () {\n\t\t                return tokens[position + 1];\n\t\t            }\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  Given a token, find the value within the groupName\n\t\t\t *  @param {Object} token\n\t\t\t *  @param {String} groupName\n\t\t\t *  @param {Number} precedence\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._matchGroup = function (token, group, prec) {\n\t\t        var ret = false;\n\t\t        if (!this.isUndef(token)) {\n\t\t            for (var opName in group) {\n\t\t                var op = group[opName];\n\t\t                if (op.regexp.test(token.value)) {\n\t\t                    if (!this.isUndef(prec)) {\n\t\t                        if (op.precedence === prec) {\n\t\t                            return op;\n\t\t                        }\n\t\t                    } else {\n\t\t                        return op;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a binary expression given the token and the precedence\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @param {Number} precedence\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseBinary = function (lexer, precedence) {\n\t\t        if (this.isUndef(precedence)) {\n\t\t            precedence = 2;\n\t\t        }\n\t\t        var expr;\n\t\t        if (precedence < 0) {\n\t\t            expr = this._parseUnary(lexer);\n\t\t        } else {\n\t\t            expr = this._parseBinary(lexer, precedence - 1);\n\t\t        }\n\t\t        var token = lexer.peek();\n\t\t        while (token && this._matchGroup(token, this._binaryExpressions, precedence)) {\n\t\t            token = lexer.next();\n\t\t            expr = token.method.bind(this, expr, this._parseBinary(lexer, precedence - 1));\n\t\t            token = lexer.peek();\n\t\t        }\n\t\t        return expr;\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a unary expression.\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseUnary = function (lexer) {\n\t\t        var token, expr;\n\t\t        token = lexer.peek();\n\t\t        var op = this._matchGroup(token, this._unaryExpressions);\n\t\t        if (op) {\n\t\t            token = lexer.next();\n\t\t            expr = this._parseUnary(lexer);\n\t\t            return op.method.bind(this, expr);\n\t\t        }\n\t\t        return this._parsePrimary(lexer);\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a primary expression (a value).\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parsePrimary = function (lexer) {\n\t\t        var token, expr;\n\t\t        token = lexer.peek();\n\t\t        if (this.isUndef(token)) {\n\t\t            throw new SyntaxError('Tone.TimeBase: Unexpected end of expression');\n\t\t        }\n\t\t        if (this._matchGroup(token, this._primaryExpressions)) {\n\t\t            token = lexer.next();\n\t\t            var matching = token.value.match(token.regexp);\n\t\t            return token.method.bind(this, matching[1], matching[2], matching[3]);\n\t\t        }\n\t\t        if (token && token.value === '(') {\n\t\t            lexer.next();\n\t\t            expr = this._parseBinary(lexer);\n\t\t            token = lexer.next();\n\t\t            if (!(token && token.value === ')')) {\n\t\t                throw new SyntaxError('Expected )');\n\t\t            }\n\t\t            return expr;\n\t\t        }\n\t\t        throw new SyntaxError('Tone.TimeBase: Cannot process token ' + token.value);\n\t\t    };\n\t\t    /**\n\t\t\t *  Recursively parse the string expression into a syntax tree.\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Function} the bound method to be evaluated later\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseExprString = function (exprString) {\n\t\t        if (!this.isString(exprString)) {\n\t\t            exprString = exprString.toString();\n\t\t        }\n\t\t        var lexer = this._tokenize(exprString);\n\t\t        var tree = this._parseBinary(lexer);\n\t\t        return tree;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tDEFAULTS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  The initial expression value\n\t\t\t *  @return  {Number}  The initial value 0\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._noOp = function () {\n\t\t        return 0;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default expression value if no arguments are given\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._defaultExpr = function () {\n\t\t        return this._noOp;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default units if none are given.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._defaultUnits = 's';\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value of a frequency in the current units\n\t\t\t *  @param {Frequency} freq\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {\n\t\t        return 1 / freq;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the beats in the current units\n\t\t\t *  @param {Number} beats\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._beatsToUnits = function (beats) {\n\t\t        return 60 / Tone.Transport.bpm.value * beats;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a second in the current units\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {\n\t\t        return seconds;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a tick in the current time units\n\t\t\t *  @param {Ticks} ticks\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {\n\t\t        return ticks * (this._beatsToUnits(1) / Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time signature.\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._timeSignature = function () {\n\t\t        return Tone.Transport.timeSignature;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Push an expression onto the expression list\n\t\t\t *  @param  {Time}  val\n\t\t\t *  @param  {String}  type\n\t\t\t *  @param  {String}  units\n\t\t\t *  @return  {Tone.TimeBase} \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._pushExpr = function (val, name, units) {\n\t\t        //create the expression\n\t\t        if (!(val instanceof Tone.TimeBase)) {\n\t\t            val = new this.constructor(val, units);\n\t\t        }\n\t\t        this._expr = this._binaryExpressions[name].method.bind(this, this._expr, val._expr);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add to the current value.\n\t\t\t *  @param  {Time}  val    The value to add\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").add(\"1m\"); //\"3m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.add = function (val, units) {\n\t\t        return this._pushExpr(val, '+', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Subtract the value from the current time.\n\t\t\t *  @param  {Time}  val    The value to subtract\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").sub(\"1m\"); //\"1m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.sub = function (val, units) {\n\t\t        return this._pushExpr(val, '-', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Multiply the current value by the given time.\n\t\t\t *  @param  {Time}  val    The value to multiply\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").mult(\"2\"); //\"4m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.mult = function (val, units) {\n\t\t        return this._pushExpr(val, '*', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Divide the current value by the given time.\n\t\t\t *  @param  {Time}  val    The value to divide by\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").div(2); //\"1m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.div = function (val, units) {\n\t\t        return this._pushExpr(val, '/', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Evaluate the time value. Returns the time\n\t\t\t *  in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.TimeBase.prototype.eval = function () {\n\t\t        return this._expr();\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return {Tone.TimeBase} this\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.dispose = function () {\n\t\t        this._expr = null;\n\t\t    };\n\t\t    return Tone.TimeBase;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Time is a primitive type for encoding Time values. \n\t\t\t *         Eventually all time values are evaluated to seconds\n\t\t\t *         using the `eval` method. Tone.Time can be constructed\n\t\t\t *         with or without the `new` keyword. Tone.Time can be passed\n\t\t\t *         into the parameter of any method which takes time as an argument. \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.TimeBase}\n\t\t\t *  @param  {String|Number}  val    The time value.\n\t\t\t *  @param  {String=}  units  The units of the value.\n\t\t\t *  @example\n\t\t\t * var t = Tone.Time(\"4n\");//encodes a quarter note\n\t\t\t * t.mult(4); // multiply that value by 4\n\t\t\t * t.toNotation(); //returns \"1m\"\n\t\t\t */\n\t\t    Tone.Time = function (val, units) {\n\t\t        if (this instanceof Tone.Time) {\n\t\t            /**\n\t\t\t\t\t *  If the current clock time should\n\t\t\t\t\t *  be added to the output\n\t\t\t\t\t *  @type  {Boolean}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._plusNow = false;\n\t\t            Tone.TimeBase.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.Time(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Time, Tone.TimeBase);\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.Time.prototype._unaryExpressions = Object.create(Tone.TimeBase.prototype._unaryExpressions);\n\t\t    /*\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which quantizes values to the next subdivision\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._unaryExpressions.quantize = {\n\t\t        regexp: /^@/,\n\t\t        method: function (rh) {\n\t\t            return Tone.Transport.nextSubdivision(rh());\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which adds the current clock time.\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._unaryExpressions.now = {\n\t\t        regexp: /^\\+/,\n\t\t        method: function (lh) {\n\t\t            this._plusNow = true;\n\t\t            return lh();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Quantize the time by the given subdivision. Optionally add a\n\t\t\t *  percentage which will move the time value towards the ideal\n\t\t\t *  quantized value by that percentage. \n\t\t\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t\t\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t\t\t *                                   towards the quantized value by\n\t\t\t *                                   a percentage.\n\t\t\t *  @return  {Tone.Time}  this\n\t\t\t *  @example\n\t\t\t * Tone.Time(21).quantize(2).eval() //returns 22\n\t\t\t * Tone.Time(0.6).quantize(\"4n\", 0.5).eval() //returns 0.55\n\t\t\t */\n\t\t    Tone.Time.prototype.quantize = function (subdiv, percent) {\n\t\t        percent = this.defaultArg(percent, 1);\n\t\t        this._expr = function (expr, subdivision, percent) {\n\t\t            expr = expr();\n\t\t            subdivision = subdivision.toSeconds();\n\t\t            var multiple = Math.round(expr / subdivision);\n\t\t            var ideal = multiple * subdivision;\n\t\t            var diff = ideal - expr;\n\t\t            return expr + diff * percent;\n\t\t        }.bind(this, this._expr, new this.constructor(subdiv), percent);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Adds the clock time to the time expression at the \n\t\t\t *  moment of evaluation. \n\t\t\t *  @return  {Tone.Time}  this\n\t\t\t */\n\t\t    Tone.Time.prototype.addNow = function () {\n\t\t        this._plusNow = true;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  @override\n\t\t\t *  Override the default value return when no arguments are passed in.\n\t\t\t *  The default value is 'now'\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._defaultExpr = function () {\n\t\t        this._plusNow = true;\n\t\t        return this._noOp;\n\t\t    };\n\t\t    /**\n\t\t\t *  Copies the value of time to this Time\n\t\t\t *  @param {Tone.Time} time\n\t\t\t *  @return  {Time}\n\t\t\t */\n\t\t    Tone.Time.prototype.copy = function (time) {\n\t\t        Tone.TimeBase.prototype.copy.call(this, time);\n\t\t        this._plusNow = time._plusNow;\n\t\t        return this;\n\t\t    };\n\t\t    //CONVERSIONS//////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Convert a Time to Notation. Values will be thresholded to the nearest 128th note. \n\t\t\t *  @return {Notation} \n\t\t\t *  @example\n\t\t\t * //if the Transport is at 120bpm:\n\t\t\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t\t\t */\n\t\t    Tone.Time.prototype.toNotation = function () {\n\t\t        var time = this.toSeconds();\n\t\t        var testNotations = [\n\t\t            '1m',\n\t\t            '2n',\n\t\t            '4n',\n\t\t            '8n',\n\t\t            '16n',\n\t\t            '32n',\n\t\t            '64n',\n\t\t            '128n'\n\t\t        ];\n\t\t        var retNotation = this._toNotationHelper(time, testNotations);\n\t\t        //try the same thing but with tripelets\n\t\t        var testTripletNotations = [\n\t\t            '1m',\n\t\t            '2n',\n\t\t            '2t',\n\t\t            '4n',\n\t\t            '4t',\n\t\t            '8n',\n\t\t            '8t',\n\t\t            '16n',\n\t\t            '16t',\n\t\t            '32n',\n\t\t            '32t',\n\t\t            '64n',\n\t\t            '64t',\n\t\t            '128n'\n\t\t        ];\n\t\t        var retTripletNotation = this._toNotationHelper(time, testTripletNotations);\n\t\t        //choose the simpler expression of the two\n\t\t        if (retTripletNotation.split('+').length < retNotation.split('+').length) {\n\t\t            return retTripletNotation;\n\t\t        } else {\n\t\t            return retNotation;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Helper method for Tone.toNotation\n\t\t\t *  @param {Number} units \n\t\t\t *  @param {Array} testNotations\n\t\t\t *  @return {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._toNotationHelper = function (units, testNotations) {\n\t\t        //the threshold is the last value in the array\n\t\t        var threshold = this._notationToUnits(testNotations[testNotations.length - 1]);\n\t\t        var retNotation = '';\n\t\t        for (var i = 0; i < testNotations.length; i++) {\n\t\t            var notationTime = this._notationToUnits(testNotations[i]);\n\t\t            //account for floating point errors (i.e. round up if the value is 0.999999)\n\t\t            var multiple = units / notationTime;\n\t\t            var floatingPointError = 0.000001;\n\t\t            if (1 - multiple % 1 < floatingPointError) {\n\t\t                multiple += floatingPointError;\n\t\t            }\n\t\t            multiple = Math.floor(multiple);\n\t\t            if (multiple > 0) {\n\t\t                if (multiple === 1) {\n\t\t                    retNotation += testNotations[i];\n\t\t                } else {\n\t\t                    retNotation += multiple.toString() + '*' + testNotations[i];\n\t\t                }\n\t\t                units -= multiple * notationTime;\n\t\t                if (units < threshold) {\n\t\t                    break;\n\t\t                } else {\n\t\t                    retNotation += ' + ';\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        if (retNotation === '') {\n\t\t            retNotation = '0';\n\t\t        }\n\t\t        return retNotation;\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a notation value to the current units\n\t\t\t *  @param  {Notation}  notation \n\t\t\t *  @return  {Number} \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._notationToUnits = function (notation) {\n\t\t        var primaryExprs = this._primaryExpressions;\n\t\t        var notationExprs = [\n\t\t            primaryExprs.n,\n\t\t            primaryExprs.t,\n\t\t            primaryExprs.m\n\t\t        ];\n\t\t        for (var i = 0; i < notationExprs.length; i++) {\n\t\t            var expr = notationExprs[i];\n\t\t            var match = notation.match(expr.regexp);\n\t\t            if (match) {\n\t\t                return expr.method.call(this, match[1]);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t\t\t *  @return  {BarsBeatsSixteenths}\n\t\t\t */\n\t\t    Tone.Time.prototype.toBarsBeatsSixteenths = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.toSeconds() / quarterTime;\n\t\t        var measures = Math.floor(quarters / this._timeSignature());\n\t\t        var sixteenths = quarters % 1 * 4;\n\t\t        quarters = Math.floor(quarters) % this._timeSignature();\n\t\t        sixteenths = sixteenths.toString();\n\t\t        if (sixteenths.length > 3) {\n\t\t            sixteenths = parseFloat(sixteenths).toFixed(3);\n\t\t        }\n\t\t        var progress = [\n\t\t            measures,\n\t\t            quarters,\n\t\t            sixteenths\n\t\t        ];\n\t\t        return progress.join(':');\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in ticks.\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.Time.prototype.toTicks = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.eval() / quarterTime;\n\t\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in samples\n\t\t\t *  @return  {Samples}  \n\t\t\t */\n\t\t    Tone.Time.prototype.toSamples = function () {\n\t\t        return this.toSeconds() * this.context.sampleRate;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time as a frequency value\n\t\t\t *  @return  {Frequency} \n\t\t\t *  @example\n\t\t\t * Tone.Time(2).toFrequency(); //0.5\n\t\t\t */\n\t\t    Tone.Time.prototype.toFrequency = function () {\n\t\t        return 1 / this.toSeconds();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.toSeconds = function () {\n\t\t        return this.eval();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in milliseconds.\n\t\t\t *  @return  {Milliseconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.toMilliseconds = function () {\n\t\t        return this.toSeconds() * 1000;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.eval = function () {\n\t\t        var val = this._expr();\n\t\t        return val + (this._plusNow ? this.now() : 0);\n\t\t    };\n\t\t    return Tone.Time;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Frequency is a primitive type for encoding Frequency values. \n\t\t\t *         Eventually all time values are evaluated to hertz\n\t\t\t *         using the `eval` method. \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.TimeBase}\n\t\t\t *  @param  {String|Number}  val    The time value.\n\t\t\t *  @param  {String=}  units  The units of the value.\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"C3\").eval() // 261\n\t\t\t * Tone.Frequency(38, \"midi\").eval() //\n\t\t\t * Tone.Frequency(\"C3\").transpose(4).eval();\n\t\t\t */\n\t\t    Tone.Frequency = function (val, units) {\n\t\t        if (this instanceof Tone.Frequency) {\n\t\t            Tone.TimeBase.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.Frequency(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Frequency, Tone.TimeBase);\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUGMENT BASE EXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.Frequency.prototype._primaryExpressions = Object.create(Tone.TimeBase.prototype._primaryExpressions);\n\t\t    /*\n\t\t\t *  midi type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.midi = {\n\t\t        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t        method: function (value) {\n\t\t            return this.midiToFrequency(value);\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  note type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.note = {\n\t\t        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\t        method: function (pitch, octave) {\n\t\t            var index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t            var noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t            return this.midiToFrequency(noteNumber);\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  BeatsBarsSixteenths type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.tr = {\n\t\t        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t        method: function (m, q, s) {\n\t\t            var total = 1;\n\t\t            if (m && m !== '0') {\n\t\t                total *= this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t\t            }\n\t\t            if (q && q !== '0') {\n\t\t                total *= this._beatsToUnits(parseFloat(q));\n\t\t            }\n\t\t            if (s && s !== '0') {\n\t\t                total *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t            }\n\t\t            return total;\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Transposes the frequency by the given number of semitones.\n\t\t\t *  @param  {Interval}  interval\n\t\t\t *  @return  {Tone.Frequency} this\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t\t\t */\n\t\t    Tone.Frequency.prototype.transpose = function (interval) {\n\t\t        this._expr = function (expr, interval) {\n\t\t            var val = expr();\n\t\t            return val * this.intervalToFrequencyRatio(interval);\n\t\t        }.bind(this, this._expr, interval);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Takes an array of semitone intervals and returns\n\t\t\t *  an array of frequencies transposed by those intervals.\n\t\t\t *  @param  {Array}  intervals\n\t\t\t *  @return  {Tone.Frequency} this\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t\t\t */\n\t\t    Tone.Frequency.prototype.harmonize = function (intervals) {\n\t\t        this._expr = function (expr, intervals) {\n\t\t            var val = expr();\n\t\t            var ret = [];\n\t\t            for (var i = 0; i < intervals.length; i++) {\n\t\t                ret[i] = val * this.intervalToFrequencyRatio(intervals[i]);\n\t\t            }\n\t\t            return ret;\n\t\t        }.bind(this, this._expr, intervals);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Return the value of the frequency as a MIDI note\n\t\t\t *  @return  {MIDI}\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toMidi = function () {\n\t\t        return this.frequencyToMidi(this.eval());\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the frequency in Scientific Pitch Notation\n\t\t\t *  @return  {Note}\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toNote = function () {\n\t\t        var freq = this.eval();\n\t\t        var log = Math.log(freq / Tone.Frequency.A4) / Math.LN2;\n\t\t        var noteNumber = Math.round(12 * log) + 57;\n\t\t        var octave = Math.floor(noteNumber / 12);\n\t\t        if (octave < 0) {\n\t\t            noteNumber += -12 * octave;\n\t\t        }\n\t\t        var noteName = scaleIndexToNote[noteNumber % 12];\n\t\t        return noteName + octave.toString();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the duration of one cycle in seconds.\n\t\t\t *  @return  {Seconds}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toSeconds = function () {\n\t\t        return 1 / this.eval();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value in Hertz\n\t\t\t *  @return  {Frequency}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toFrequency = function () {\n\t\t        return this.eval();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the duration of one cycle in ticks\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toTicks = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.eval() / quarterTime;\n\t\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS HELPERS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value of a frequency in the current units\n\t\t\t *  @param {Frequency} freq\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._frequencyToUnits = function (freq) {\n\t\t        return freq;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a tick in the current time units\n\t\t\t *  @param {Ticks} ticks\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._ticksToUnits = function (ticks) {\n\t\t        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the beats in the current units\n\t\t\t *  @param {Number} beats\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._beatsToUnits = function (beats) {\n\t\t        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a second in the current units\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._secondsToUnits = function (seconds) {\n\t\t        return 1 / seconds;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default units if none are given.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._defaultUnits = 'hz';\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tFREQUENCY CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Note to scale index\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    var noteToScaleIndex = {\n\t\t        'cbb': -2,\n\t\t        'cb': -1,\n\t\t        'c': 0,\n\t\t        'c#': 1,\n\t\t        'cx': 2,\n\t\t        'dbb': 0,\n\t\t        'db': 1,\n\t\t        'd': 2,\n\t\t        'd#': 3,\n\t\t        'dx': 4,\n\t\t        'ebb': 2,\n\t\t        'eb': 3,\n\t\t        'e': 4,\n\t\t        'e#': 5,\n\t\t        'ex': 6,\n\t\t        'fbb': 3,\n\t\t        'fb': 4,\n\t\t        'f': 5,\n\t\t        'f#': 6,\n\t\t        'fx': 7,\n\t\t        'gbb': 5,\n\t\t        'gb': 6,\n\t\t        'g': 7,\n\t\t        'g#': 8,\n\t\t        'gx': 9,\n\t\t        'abb': 7,\n\t\t        'ab': 8,\n\t\t        'a': 9,\n\t\t        'a#': 10,\n\t\t        'ax': 11,\n\t\t        'bbb': 9,\n\t\t        'bb': 10,\n\t\t        'b': 11,\n\t\t        'b#': 12,\n\t\t        'bx': 13\n\t\t    };\n\t\t    /**\n\t\t\t *  scale index to note (sharps)\n\t\t\t *  @type  {Array}\n\t\t\t */\n\t\t    var scaleIndexToNote = [\n\t\t        'C',\n\t\t        'C#',\n\t\t        'D',\n\t\t        'D#',\n\t\t        'E',\n\t\t        'F',\n\t\t        'F#',\n\t\t        'G',\n\t\t        'G#',\n\t\t        'A',\n\t\t        'A#',\n\t\t        'B'\n\t\t    ];\n\t\t    /**\n\t\t\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t\t\t *  A4's values in Hertz. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Frequency.A4 = 440;\n\t\t    /**\n\t\t\t *  Convert a MIDI note to frequency value. \n\t\t\t *  @param  {MIDI} midi The midi number to convert.\n\t\t\t *  @return {Frequency} the corresponding frequency value\n\t\t\t *  @example\n\t\t\t * tone.midiToFrequency(69); // returns 440\n\t\t\t */\n\t\t    Tone.Frequency.prototype.midiToFrequency = function (midi) {\n\t\t        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a frequency value to a MIDI note.\n\t\t\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t\t\t *  @returns  {MIDI}\n\t\t\t *  @example\n\t\t\t * tone.midiToFrequency(440); // returns 69\n\t\t\t */\n\t\t    Tone.Frequency.prototype.frequencyToMidi = function (frequency) {\n\t\t        return 69 + 12 * Math.log(frequency / Tone.Frequency.A4) / Math.LN2;\n\t\t    };\n\t\t    return Tone.Frequency;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.TransportTime is a the time along the Transport's\n\t\t\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t\t\t *         against the AudioContext's clock, it is evaluated against\n\t\t\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t\t\t *  @constructor\n\t\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t\t *  @param  {String=}  units  Unit values\n\t\t\t *  @extends {Tone.Time}\n\t\t\t */\n\t\t    Tone.TransportTime = function (val, units) {\n\t\t        if (this instanceof Tone.TransportTime) {\n\t\t            Tone.Time.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.TransportTime(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.TransportTime, Tone.Time);\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.TransportTime.prototype._unaryExpressions = Object.create(Tone.Time.prototype._unaryExpressions);\n\t\t    /**\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which quantizes values to the next subdivision\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TransportTime.prototype._unaryExpressions.quantize = {\n\t\t        regexp: /^@/,\n\t\t        method: function (rh) {\n\t\t            var subdivision = this._secondsToTicks(rh());\n\t\t            var multiple = Math.ceil(Tone.Transport.ticks / subdivision);\n\t\t            return this._ticksToUnits(multiple * subdivision);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert seconds into ticks\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TransportTime.prototype._secondsToTicks = function (seconds) {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = seconds / quarterTime;\n\t\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Evaluate the time expression. Returns values in ticks\n\t\t\t *  @return {Ticks}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.eval = function () {\n\t\t        var val = this._secondsToTicks(this._expr());\n\t\t        return val + (this._plusNow ? Tone.Transport.ticks : 0);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in ticks.\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toTicks = function () {\n\t\t        return this.eval();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toSeconds = function () {\n\t\t        var val = this._expr();\n\t\t        return val + (this._plusNow ? Tone.Transport.seconds : 0);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time as a frequency value\n\t\t\t *  @return  {Frequency} \n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toFrequency = function () {\n\t\t        return 1 / this.toSeconds();\n\t\t    };\n\t\t    return Tone.TransportTime;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTYPES\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t * Units which a value can take on.\n\t\t\t * @enum {String}\n\t\t\t */\n\t\t    Tone.Type = {\n\t\t        /** \n\t\t\t\t *  Default units\n\t\t\t\t *  @typedef {Default}\n\t\t\t\t */\n\t\t        Default: 'number',\n\t\t        /**\n\t\t\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t\t\t *\n\t\t\t\t *  <ul>\n\t\t\t\t *  <li>Numbers, which will be taken literally as the time (in seconds).</li>\n\t\t\t\t *  <li>Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.</li>\n\t\t\t\t *  <li>TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times \n\t\t\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.</li>\n\t\t\t\t *  <li>Frequency, (\"8hz\") is converted to the length of the cycle in seconds.</li>\n\t\t\t\t *  <li>Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \n\t\t\t\t *  \"the current time plus whatever expression follows\".</li>\n\t\t\t\t *  <li>Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined \n\t\t\t\t *  into a mathematical expression which will be evaluated to compute the desired time.</li>\n\t\t\t\t *  <li>No Argument, for methods which accept time, no argument will be interpreted as \n\t\t\t\t *  \"now\" (i.e. the currentTime).</li>\n\t\t\t\t *  </ul>\n\t\t\t\t *  \n\t\t\t\t *  @typedef {Time}\n\t\t\t\t */\n\t\t        Time: 'time',\n\t\t        /**\n\t\t\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t\t\t *  values are converted to frequency instead of seconds. A number\n\t\t\t\t *  is taken literally as the value in hertz. Additionally any of the \n\t\t\t\t *  Time encodings can be used. Note names in the form\n\t\t\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t\t\t *  frequency value. \n\t\t\t\t *  @typedef {Frequency}\n\t\t\t\t */\n\t\t        Frequency: 'frequency',\n\t\t        /**\n\t\t\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable. \n\t\t\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t\t\t *  @typedef {TransportTime}\n\t\t\t\t */\n\t\t        TransportTime: 'transportTime',\n\t\t        /** \n\t\t\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t\t\t *  the smallest unit of time that the Transport supports.\n\t\t\t\t *  @typedef {Ticks}\n\t\t\t\t */\n\t\t        Ticks: 'ticks',\n\t\t        /** \n\t\t\t\t *  Normal values are within the range [0, 1].\n\t\t\t\t *  @typedef {NormalRange}\n\t\t\t\t */\n\t\t        NormalRange: 'normalRange',\n\t\t        /** \n\t\t\t\t *  AudioRange values are between [-1, 1].\n\t\t\t\t *  @typedef {AudioRange}\n\t\t\t\t */\n\t\t        AudioRange: 'audioRange',\n\t\t        /** \n\t\t\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels \n\t\t\t\t *  means no change in volume. -10db is approximately half as loud and 10db \n\t\t\t\t *  is twice is loud. \n\t\t\t\t *  @typedef {Decibels}\n\t\t\t\t */\n\t\t        Decibels: 'db',\n\t\t        /** \n\t\t\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t\t\t *  @typedef {Interval}\n\t\t\t\t */\n\t\t        Interval: 'interval',\n\t\t        /** \n\t\t\t\t *  Beats per minute. \n\t\t\t\t *  @typedef {BPM}\n\t\t\t\t */\n\t\t        BPM: 'bpm',\n\t\t        /** \n\t\t\t\t *  The value must be greater than or equal to 0.\n\t\t\t\t *  @typedef {Positive}\n\t\t\t\t */\n\t\t        Positive: 'positive',\n\t\t        /** \n\t\t\t\t *  A cent is a hundredth of a semitone. \n\t\t\t\t *  @typedef {Cents}\n\t\t\t\t */\n\t\t        Cents: 'cents',\n\t\t        /** \n\t\t\t\t *  Angle between 0 and 360. \n\t\t\t\t *  @typedef {Degrees}\n\t\t\t\t */\n\t\t        Degrees: 'degrees',\n\t\t        /** \n\t\t\t\t *  A number representing a midi note.\n\t\t\t\t *  @typedef {MIDI}\n\t\t\t\t */\n\t\t        MIDI: 'midi',\n\t\t        /** \n\t\t\t\t *  A colon-separated representation of time in the form of\n\t\t\t\t *  Bars:Beats:Sixteenths. \n\t\t\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t\t\t */\n\t\t        BarsBeatsSixteenths: 'barsBeatsSixteenths',\n\t\t        /** \n\t\t\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t\t\t *  Audio is typically sampled 44100 times per second. \n\t\t\t\t *  @typedef {Samples}\n\t\t\t\t */\n\t\t        Samples: 'samples',\n\t\t        /** \n\t\t\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t\t\t *  @typedef {Hertz}\n\t\t\t\t */\n\t\t        Hertz: 'hertz',\n\t\t        /** \n\t\t\t\t *  A frequency represented by a letter name, \n\t\t\t\t *  accidental and octave. This system is known as\n\t\t\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t\t\t *  @typedef {Note}\n\t\t\t\t */\n\t\t        Note: 'note',\n\t\t        /** \n\t\t\t\t *  One millisecond is a thousandth of a second. \n\t\t\t\t *  @typedef {Milliseconds}\n\t\t\t\t */\n\t\t        Milliseconds: 'milliseconds',\n\t\t        /** \n\t\t\t\t *  Seconds are the time unit of the AudioContext. In the end, \n\t\t\t\t *  all values need to be evaluated to seconds. \n\t\t\t\t *  @typedef {Seconds}\n\t\t\t\t */\n\t\t        Seconds: 'seconds',\n\t\t        /** \n\t\t\t\t *  A string representing a duration relative to a measure. \n\t\t\t\t *  <ul>\n\t\t\t\t *  \t<li>\"4n\" = quarter note</li>\n\t\t\t\t *   \t<li>\"2m\" = two measures</li>\n\t\t\t\t *    \t<li>\"8t\" = eighth-note triplet</li>\n\t\t\t\t *  </ul>\n\t\t\t\t *  @typedef {Notation}\n\t\t\t\t */\n\t\t        Notation: 'notation'\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // AUGMENT TONE's PROTOTYPE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Convert Time into seconds.\n\t\t\t *  \n\t\t\t *  Unlike the method which it overrides, this takes into account \n\t\t\t *  transporttime and musical notation.\n\t\t\t *\n\t\t\t *  Time : 1.40\n\t\t\t *  Notation: 4n|1m|2t\n\t\t\t *  Now Relative: +3n\n\t\t\t *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)\n\t\t\t *\n\t\t\t *  @param  {Time} time \n\t\t\t *  @return {Seconds} \n\t\t\t */\n\t\t    Tone.prototype.toSeconds = function (time) {\n\t\t        if (this.isNumber(time)) {\n\t\t            return time;\n\t\t        } else if (this.isUndef(time)) {\n\t\t            return this.now();\n\t\t        } else if (this.isString(time)) {\n\t\t            return new Tone.Time(time).toSeconds();\n\t\t        } else if (time instanceof Tone.TimeBase) {\n\t\t            return time.toSeconds();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a frequency representation into a number.\n\t\t\t *  @param  {Frequency} freq \n\t\t\t *  @return {Hertz}      the frequency in hertz\n\t\t\t */\n\t\t    Tone.prototype.toFrequency = function (freq) {\n\t\t        if (this.isNumber(freq)) {\n\t\t            return freq;\n\t\t        } else if (this.isString(freq) || this.isUndef(freq)) {\n\t\t            return new Tone.Frequency(freq).eval();\n\t\t        } else if (freq instanceof Tone.TimeBase) {\n\t\t            return freq.toFrequency();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a time representation into ticks.\n\t\t\t *  @param  {Time} time\n\t\t\t *  @return {Ticks}  the time in ticks\n\t\t\t */\n\t\t    Tone.prototype.toTicks = function (time) {\n\t\t        if (this.isNumber(time) || this.isString(time)) {\n\t\t            return new Tone.TransportTime(time).toTicks();\n\t\t        } else if (this.isUndef(time)) {\n\t\t            return Tone.Transport.ticks;\n\t\t        } else if (time instanceof Tone.TimeBase) {\n\t\t            return time.toTicks();\n\t\t        }\n\t\t    };\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t\t\t *         additional unit conversion functionality. It also\n\t\t\t *         serves as a base-class for classes which have a single,\n\t\t\t *         automatable parameter. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t\t\t *  @param  {Tone.Type} units The units of the audio param.\n\t\t\t *  @param  {Boolean} convert If the param should be converted.\n\t\t\t */\n\t\t    Tone.Param = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'param',\n\t\t            'units',\n\t\t            'convert'\n\t\t        ], Tone.Param.defaults);\n\t\t        /**\n\t\t\t\t *  The native parameter to control\n\t\t\t\t *  @type  {AudioParam}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input = options.param;\n\t\t        /**\n\t\t\t\t *  The units of the parameter\n\t\t\t\t *  @type {Tone.Type}\n\t\t\t\t */\n\t\t        this.units = options.units;\n\t\t        /**\n\t\t\t\t *  If the value should be converted or not\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.convert = options.convert;\n\t\t        /**\n\t\t\t\t *  True if the signal value is being overridden by \n\t\t\t\t *  a connected signal.\n\t\t\t\t *  @readOnly\n\t\t\t\t *  @type  {boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.overridden = false;\n\t\t        /**\n\t\t\t\t *  If there is an LFO, this is where it is held.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = null;\n\t\t        if (this.isObject(options.lfo)) {\n\t\t            this.value = options.lfo;\n\t\t        } else if (!this.isUndef(options.value)) {\n\t\t            this.value = options.value;\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Param);\n\t\t    /**\n\t\t\t *  Defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Param.defaults = {\n\t\t        'units': Tone.Type.Default,\n\t\t        'convert': true,\n\t\t        'param': undefined\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the parameter. \n\t\t\t * @memberOf Tone.Param#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Param.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._param.value);\n\t\t        },\n\t\t        set: function (value) {\n\t\t            if (this.isObject(value)) {\n\t\t                //throw an error if the LFO needs to be included\n\t\t                if (this.isUndef(Tone.LFO)) {\n\t\t                    throw new Error('Include \\'Tone.LFO\\' to use an LFO as a Param value.');\n\t\t                }\n\t\t                //remove the old one\n\t\t                if (this._lfo) {\n\t\t                    this._lfo.dispose();\n\t\t                }\n\t\t                this._lfo = new Tone.LFO(value).start();\n\t\t                this._lfo.connect(this.input);\n\t\t            } else {\n\t\t                var convertedVal = this._fromUnits(value);\n\t\t                this._param.cancelScheduledValues(0);\n\t\t                this._param.value = convertedVal;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Convert the given value from the type specified by Tone.Param.units\n\t\t\t *  into the destination value (such as Gain or Frequency).\n\t\t\t *  @private\n\t\t\t *  @param  {*} val the value to convert\n\t\t\t *  @return {number}     the number which the value should be set to\n\t\t\t */\n\t\t    Tone.Param.prototype._fromUnits = function (val) {\n\t\t        if (this.convert || this.isUndef(this.convert)) {\n\t\t            switch (this.units) {\n\t\t            case Tone.Type.Time:\n\t\t                return this.toSeconds(val);\n\t\t            case Tone.Type.Frequency:\n\t\t                return this.toFrequency(val);\n\t\t            case Tone.Type.Decibels:\n\t\t                return this.dbToGain(val);\n\t\t            case Tone.Type.NormalRange:\n\t\t                return Math.min(Math.max(val, 0), 1);\n\t\t            case Tone.Type.AudioRange:\n\t\t                return Math.min(Math.max(val, -1), 1);\n\t\t            case Tone.Type.Positive:\n\t\t                return Math.max(val, 0);\n\t\t            default:\n\t\t                return val;\n\t\t            }\n\t\t        } else {\n\t\t            return val;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t\t\t * @private\n\t\t\t * @param  {number} val the value to convert\n\t\t\t * @return {number}\n\t\t\t */\n\t\t    Tone.Param.prototype._toUnits = function (val) {\n\t\t        if (this.convert || this.isUndef(this.convert)) {\n\t\t            switch (this.units) {\n\t\t            case Tone.Type.Decibels:\n\t\t                return this.gainToDb(val);\n\t\t            default:\n\t\t                return val;\n\t\t            }\n\t\t        } else {\n\t\t            return val;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  the minimum output value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Param.prototype._minOutput = 0.00001;\n\t\t    /**\n\t\t\t *  Schedules a parameter value change at the given time.\n\t\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t\t *  @param {Time}  time The time when the change should occur.\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t\t */\n\t\t    Tone.Param.prototype.setValueAtTime = function (value, time) {\n\t\t        value = this._fromUnits(value);\n\t\t        time = this.toSeconds(time);\n\t\t        if (time <= this.now() + this.blockTime) {\n\t\t            this._param.value = value;\n\t\t        } else {\n\t\t            this._param.setValueAtTime(value, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Creates a schedule point with the current value at the current time.\n\t\t\t *  This is useful for creating an automation anchor point in order to \n\t\t\t *  schedule changes from the current value. \n\t\t\t *\n\t\t\t *  @param {number=} now (Optionally) pass the now value in. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.setRampPoint = function (now) {\n\t\t        now = this.defaultArg(now, this.now());\n\t\t        var currentVal = this._param.value;\n\t\t        // exponentialRampToValueAt cannot ever ramp from or to 0\n\t\t        // More info: https://bugzilla.mozilla.org/show_bug.cgi?id=1125600#c2\n\t\t        if (currentVal === 0) {\n\t\t            currentVal = this._minOutput;\n\t\t        }\n\t\t        this._param.setValueAtTime(currentVal, now);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t\t *  previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        this._param.linearRampToValueAtTime(value, this.toSeconds(endTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        this._param.exponentialRampToValueAtTime(value, this.toSeconds(endTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the current time and current value to the given value over the \n\t\t\t *  duration of the rampTime.\n\t\t\t *  \n\t\t\t *  @param  {number} value   The value to ramp to.\n\t\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t\t *                               value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //exponentially ramp to the value 2 over 4 seconds. \n\t\t\t * signal.exponentialRampToValue(2, 4);\n\t\t\t */\n\t\t    Tone.Param.prototype.exponentialRampToValue = function (value, rampTime, startTime) {\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this.setRampPoint(startTime);\n\t\t        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an linear continuous change in parameter value from \n\t\t\t *  the current time and current value to the given value over the \n\t\t\t *  duration of the rampTime.\n\t\t\t *  \n\t\t\t *  @param  {number} value   The value to ramp to.\n\t\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t\t *                               value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //linearly ramp to the value 4 over 3 seconds. \n\t\t\t * signal.linearRampToValue(4, 3);\n\t\t\t */\n\t\t    Tone.Param.prototype.linearRampToValue = function (value, rampTime, startTime) {\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this.setRampPoint(startTime);\n\t\t        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start exponentially approaching the target value at the given time with\n\t\t\t *  a rate having the given time constant.\n\t\t\t *  @param {number} value        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {number} timeConstant \n\t\t\t *  @returns {Tone.Param} this \n\t\t\t */\n\t\t    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t\t        value = this._fromUnits(value);\n\t\t        // The value will never be able to approach without timeConstant > 0.\n\t\t        // http://www.w3.org/TR/webaudio/#dfn-setTargetAtTime, where the equation\n\t\t        // is described. 0 results in a division by 0.\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t\t        this._param.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t\t *  for the given duration.\n\t\t\t *  \t\n\t\t\t *  @param {Array} values    \n\t\t\t *  @param {Time} startTime \n\t\t\t *  @param {Time} duration  \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration) {\n\t\t        for (var i = 0; i < values.length; i++) {\n\t\t            values[i] = this._fromUnits(values[i]);\n\t\t        }\n\t\t        this._param.setValueCurveAtTime(values, this.toSeconds(startTime), this.toSeconds(duration));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t\t *  equal to startTime.\n\t\t\t *  \n\t\t\t *  @param  {Time} startTime\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.cancelScheduledValues = function (startTime) {\n\t\t        this._param.cancelScheduledValues(this.toSeconds(startTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Ramps to the given value over the duration of the rampTime. \n\t\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t\t *  depending on the `units` of the signal\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} rampTime \tThe time that it takes the \n\t\t\t *                              value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //ramp to the value either linearly or exponentially \n\t\t\t * //depending on the \"units\" value of the signal\n\t\t\t * signal.rampTo(0, 10);\n\t\t\t *  @example\n\t\t\t * //schedule it to ramp starting at a specific time\n\t\t\t * signal.rampTo(0, 10, 5)\n\t\t\t */\n\t\t    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {\n\t\t        rampTime = this.defaultArg(rampTime, 0);\n\t\t        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM) {\n\t\t            this.exponentialRampToValue(value, rampTime, startTime);\n\t\t        } else {\n\t\t            this.linearRampToValue(value, rampTime, startTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The LFO created by the signal instance. If none\n\t\t\t *  was created, this is null.\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Param#\n\t\t\t *  @name lfo\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Param.prototype, 'lfo', {\n\t\t        get: function () {\n\t\t            return this._lfo;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._param = null;\n\t\t        if (this._lfo) {\n\t\t            this._lfo.dispose();\n\t\t            this._lfo = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Param;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t\t\t *         The GainNode is a basic building block of the Web Audio\n\t\t\t *         API and is useful for routing audio and adjusting gains. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t\t\t *  @param {Tone.Type=} units The units of the gain parameter. \n\t\t\t */\n\t\t    Tone.Gain = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'gain',\n\t\t            'units'\n\t\t        ], Tone.Gain.defaults);\n\t\t        /**\n\t\t\t\t *  The GainNode\n\t\t\t\t *  @type  {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = this.output = this._gainNode = this.context.createGain();\n\t\t        /**\n\t\t\t\t *  The gain parameter of the gain node.\n\t\t\t\t *  @type {Tone.Param}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.gain = new Tone.Param({\n\t\t            'param': this._gainNode.gain,\n\t\t            'units': options.units,\n\t\t            'value': options.gain,\n\t\t            'convert': options.convert\n\t\t        });\n\t\t        this._readOnly('gain');\n\t\t    };\n\t\t    Tone.extend(Tone.Gain);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Gain.defaults = {\n\t\t        'gain': 1,\n\t\t        'convert': true\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Gain}  this\n\t\t\t */\n\t\t    Tone.Gain.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._gainNode.disconnect();\n\t\t        this._gainNode = null;\n\t\t        this._writable('gain');\n\t\t        this.gain.dispose();\n\t\t        this.gain = null;\n\t\t    };\n\t\t    //STATIC///////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Create input and outputs for this object.\n\t\t\t *  @param  {Number}  input   The number of inputs\n\t\t\t *  @param  {Number=}  outputs  The number of outputs\n\t\t\t *  @return  {Tone}  this\n\t\t\t *  @internal\n\t\t\t */\n\t\t    Tone.prototype.createInsOuts = function (inputs, outputs) {\n\t\t        if (inputs === 1) {\n\t\t            this.input = new Tone.Gain();\n\t\t        } else if (inputs > 1) {\n\t\t            this.input = new Array(inputs);\n\t\t        }\n\t\t        if (outputs === 1) {\n\t\t            this.output = new Tone.Gain();\n\t\t        } else if (outputs > 1) {\n\t\t            this.output = new Array(inputs);\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    return Tone.Gain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t\t\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t\t\t *          has all of the methods available to native Web Audio \n\t\t\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t\t\t *          as well as additional conveniences. Read more about working with signals \n\t\t\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Param}\n\t\t\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t\t\t *                                     is passed in, that parameter will be wrapped\n\t\t\t *                                     and controlled by the Signal. \n\t\t\t *  @param {string} [units=Number] unit The units the signal is in. \n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(10);\n\t\t\t */\n\t\t    Tone.Signal = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'value',\n\t\t            'units'\n\t\t        ], Tone.Signal.defaults);\n\t\t        /**\n\t\t\t\t * The node where the constant signal value is scaled.\n\t\t\t\t * @type {GainNode}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.output = this._gain = this.context.createGain();\n\t\t        options.param = this._gain.gain;\n\t\t        Tone.Param.call(this, options);\n\t\t        /**\n\t\t\t\t * The node where the value is set.\n\t\t\t\t * @type {Tone.Param}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.input = this._param = this._gain.gain;\n\t\t        //connect the const output to the node output\n\t\t        Tone.Signal._constant.chain(this._gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Signal, Tone.Param);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Signal.defaults = {\n\t\t        'value': 0,\n\t\t        'units': Tone.Type.Default,\n\t\t        'convert': true\n\t\t    };\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t *  @method\n\t\t\t */\n\t\t    Tone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t\t    /**\n\t\t\t *  dispose and disconnect\n\t\t\t *  @returns {Tone.Signal} this\n\t\t\t */\n\t\t    Tone.Signal.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._param = null;\n\t\t        this._gain.disconnect();\n\t\t        this._gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tSTATIC\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Generates a constant output of 1.\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @const\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t\t    Tone.Signal._constant = null;\n\t\t    /**\n\t\t\t *  initializer function\n\t\t\t */\n\t\t    Tone._initAudioContext(function (audioContext) {\n\t\t        var buffer = audioContext.createBuffer(1, 128, audioContext.sampleRate);\n\t\t        var arr = buffer.getChannelData(0);\n\t\t        for (var i = 0; i < arr.length; i++) {\n\t\t            arr[i] = 1;\n\t\t        }\n\t\t        Tone.Signal._constant = audioContext.createBufferSource();\n\t\t        Tone.Signal._constant.channelCount = 1;\n\t\t        Tone.Signal._constant.channelCountMode = 'explicit';\n\t\t        Tone.Signal._constant.buffer = buffer;\n\t\t        Tone.Signal._constant.loop = true;\n\t\t        Tone.Signal._constant.start(0);\n\t\t        Tone.Signal._constant.noGC();\n\t\t    });\n\t\t    return Tone.Signal;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A Timeline class for scheduling and maintaining state\n\t\t\t *         along a timeline. All events must have a \"time\" property. \n\t\t\t *         Internally, events are stored in time order for fast \n\t\t\t *         retrieval.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t\t\t */\n\t\t    Tone.Timeline = function () {\n\t\t        var options = this.optionsObject(arguments, ['memory'], Tone.Timeline.defaults);\n\t\t        /**\n\t\t\t\t *  The array of scheduled timeline events\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeline = [];\n\t\t        /**\n\t\t\t\t *  An array of items to remove from the list. \n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._toRemove = [];\n\t\t        /**\n\t\t\t\t *  Flag if the tieline is mid iteration\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this._iterating = false;\n\t\t        /**\n\t\t\t\t *  The memory of the timeline, i.e.\n\t\t\t\t *  how many events in the past it will retain\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this.memory = options.memory;\n\t\t    };\n\t\t    Tone.extend(Tone.Timeline);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Timeline.defaults = { 'memory': Infinity };\n\t\t    /**\n\t\t\t *  The number of items in the timeline.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Timeline#\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Timeline.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._timeline.length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t\t\t *  @param  {Object}  event  The event object to insert into the \n\t\t\t *                           timeline. \n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.addEvent = function (event) {\n\t\t        //the event needs to have a time attribute\n\t\t        if (this.isUndef(event.time)) {\n\t\t            throw new Error('Tone.Timeline: events must have a time attribute');\n\t\t        }\n\t\t        if (this._timeline.length) {\n\t\t            var index = this._search(event.time);\n\t\t            this._timeline.splice(index + 1, 0, event);\n\t\t        } else {\n\t\t            this._timeline.push(event);\n\t\t        }\n\t\t        //if the length is more than the memory, remove the previous ones\n\t\t        if (this.length > this.memory) {\n\t\t            var diff = this.length - this.memory;\n\t\t            this._timeline.splice(0, diff);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the timeline.\n\t\t\t *  @param  {Object}  event  The event object to remove from the list.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.removeEvent = function (event) {\n\t\t        if (this._iterating) {\n\t\t            this._toRemove.push(event);\n\t\t        } else {\n\t\t            var index = this._timeline.indexOf(event);\n\t\t            if (index !== -1) {\n\t\t                this._timeline.splice(index, 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the nearest event whose time is less than or equal to the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object set after that time.\n\t\t\t */\n\t\t    Tone.Timeline.prototype.getEvent = function (time) {\n\t\t        var index = this._search(time);\n\t\t        if (index !== -1) {\n\t\t            return this._timeline[index];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the event which is scheduled after the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object after the given time\n\t\t\t */\n\t\t    Tone.Timeline.prototype.getEventAfter = function (time) {\n\t\t        var index = this._search(time);\n\t\t        if (index + 1 < this._timeline.length) {\n\t\t            return this._timeline[index + 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the event before the event at the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object before the given time\n\t\t\t */\n\t\t    Tone.Timeline.prototype.getEventBefore = function (time) {\n\t\t        var len = this._timeline.length;\n\t\t        //if it's after the last item, return the last item\n\t\t        if (len > 0 && this._timeline[len - 1].time < time) {\n\t\t            return this._timeline[len - 1];\n\t\t        }\n\t\t        var index = this._search(time);\n\t\t        if (index - 1 >= 0) {\n\t\t            return this._timeline[index - 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel events after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.cancel = function (after) {\n\t\t        if (this._timeline.length > 1) {\n\t\t            var index = this._search(after);\n\t\t            if (index >= 0) {\n\t\t                if (this._timeline[index].time === after) {\n\t\t                    //get the first item with that time\n\t\t                    for (var i = index; i >= 0; i--) {\n\t\t                        if (this._timeline[i].time === after) {\n\t\t                            index = i;\n\t\t                        } else {\n\t\t                            break;\n\t\t                        }\n\t\t                    }\n\t\t                    this._timeline = this._timeline.slice(0, index);\n\t\t                } else {\n\t\t                    this._timeline = this._timeline.slice(0, index + 1);\n\t\t                }\n\t\t            } else {\n\t\t                this._timeline = [];\n\t\t            }\n\t\t        } else if (this._timeline.length === 1) {\n\t\t            //the first item's time\n\t\t            if (this._timeline[0].time >= after) {\n\t\t                this._timeline = [];\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel events before or equal to the given time.\n\t\t\t *  @param  {Number}  time  The time to cancel before.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.cancelBefore = function (time) {\n\t\t        if (this._timeline.length) {\n\t\t            var index = this._search(time);\n\t\t            if (index >= 0) {\n\t\t                this._timeline = this._timeline.slice(index + 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Does a binary serach on the timeline array and returns the \n\t\t\t *  nearest event index whose time is after or equal to the given time.\n\t\t\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t\t\t *  If the time is after the end, the index of the last item is returned.\n\t\t\t *  @param  {Number}  time  \n\t\t\t *  @return  {Number} the index in the timeline array \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Timeline.prototype._search = function (time) {\n\t\t        var beginning = 0;\n\t\t        var len = this._timeline.length;\n\t\t        var end = len;\n\t\t        if (len > 0 && this._timeline[len - 1].time <= time) {\n\t\t            return len - 1;\n\t\t        }\n\t\t        while (beginning < end) {\n\t\t            // calculate the midpoint for roughly equal partition\n\t\t            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t            var event = this._timeline[midPoint];\n\t\t            var nextEvent = this._timeline[midPoint + 1];\n\t\t            if (event.time === time) {\n\t\t                //choose the last one that has the same time\n\t\t                for (var i = midPoint; i < this._timeline.length; i++) {\n\t\t                    var testEvent = this._timeline[i];\n\t\t                    if (testEvent.time === time) {\n\t\t                        midPoint = i;\n\t\t                    }\n\t\t                }\n\t\t                return midPoint;\n\t\t            } else if (event.time < time && nextEvent.time > time) {\n\t\t                return midPoint;\n\t\t            } else if (event.time > time) {\n\t\t                //search lower\n\t\t                end = midPoint;\n\t\t            } else if (event.time < time) {\n\t\t                //search upper\n\t\t                beginning = midPoint + 1;\n\t\t            }\n\t\t        }\n\t\t        return -1;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal iterator. Applies extra safety checks for \n\t\t\t *  removing items from the array. \n\t\t\t *  @param  {Function}  callback \n\t\t\t *  @param  {Number=}    lowerBound     \n\t\t\t *  @param  {Number=}    upperBound    \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n\t\t        this._iterating = true;\n\t\t        lowerBound = this.defaultArg(lowerBound, 0);\n\t\t        upperBound = this.defaultArg(upperBound, this._timeline.length - 1);\n\t\t        for (var i = lowerBound; i <= upperBound; i++) {\n\t\t            callback(this._timeline[i]);\n\t\t        }\n\t\t        this._iterating = false;\n\t\t        if (this._toRemove.length > 0) {\n\t\t            for (var j = 0; j < this._toRemove.length; j++) {\n\t\t                var index = this._timeline.indexOf(this._toRemove[j]);\n\t\t                if (index !== -1) {\n\t\t                    this._timeline.splice(index, 1);\n\t\t                }\n\t\t            }\n\t\t            this._toRemove = [];\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEach = function (callback) {\n\t\t        this._iterate(callback);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at or before the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachBefore = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var upperBound = this._search(time);\n\t\t        if (upperBound !== -1) {\n\t\t            this._iterate(callback, 0, upperBound);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array after the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachAfter = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var lowerBound = this._search(time);\n\t\t        this._iterate(callback, lowerBound + 1);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at or after the given time. Similar to \n\t\t\t *  forEachAfter, but includes the item(s) at the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachFrom = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var lowerBound = this._search(time);\n\t\t        //work backwards until the event time is less than time\n\t\t        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t\t            lowerBound--;\n\t\t        }\n\t\t        this._iterate(callback, lowerBound + 1);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at the given time\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var upperBound = this._search(time);\n\t\t        if (upperBound !== -1) {\n\t\t            this._iterate(function (event) {\n\t\t                if (event.time === time) {\n\t\t                    callback(event);\n\t\t                }\n\t\t            }, 0, upperBound);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Timeline}  this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._timeline = null;\n\t\t        this._toRemove = null;\n\t\t    };\n\t\t    return Tone.Timeline;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A signal which adds the method getValueAtTime. \n\t\t\t *         Code and inspiration from https://github.com/jsantell/web-audio-automation-timeline\n\t\t\t *  @extends {Tone.Param}\n\t\t\t *  @param {Number=} value The initial value of the signal\n\t\t\t *  @param {String=} units The conversion units of the signal.\n\t\t\t */\n\t\t    Tone.TimelineSignal = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'value',\n\t\t            'units'\n\t\t        ], Tone.Signal.defaults);\n\t\t        /**\n\t\t\t\t *  The scheduled events\n\t\t\t\t *  @type {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._events = new Tone.Timeline(10);\n\t\t        //constructors\n\t\t        Tone.Signal.apply(this, options);\n\t\t        options.param = this._param;\n\t\t        Tone.Param.call(this, options);\n\t\t        /**\n\t\t\t\t *  The initial scheduled value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._initial = this._fromUnits(this._param.value);\n\t\t    };\n\t\t    Tone.extend(Tone.TimelineSignal, Tone.Param);\n\t\t    /**\n\t\t\t *  The event types of a schedulable signal.\n\t\t\t *  @enum {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.Type = {\n\t\t        Linear: 'linear',\n\t\t        Exponential: 'exponential',\n\t\t        Target: 'target',\n\t\t        Curve: 'curve',\n\t\t        Set: 'set'\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the signal. \n\t\t\t * @memberOf Tone.TimelineSignal#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.TimelineSignal.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var now = this.now();\n\t\t            var val = this.getValueAtTime(now);\n\t\t            return this._toUnits(val);\n\t\t        },\n\t\t        set: function (value) {\n\t\t            var convertedVal = this._fromUnits(value);\n\t\t            this._initial = convertedVal;\n\t\t            this.cancelScheduledValues();\n\t\t            this._param.value = convertedVal;\n\t\t        }\n\t\t    });\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tSCHEDULING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Schedules a parameter value change at the given time.\n\t\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t\t *  @param {Time}  time The time when the change should occur.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t *  @example\n\t\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setValueAtTime = function (value, startTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Set,\n\t\t            'value': value,\n\t\t            'time': startTime\n\t\t        });\n\t\t        //invoke the original event\n\t\t        this._param.setValueAtTime(value, startTime);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t\t *  previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        endTime = this.toSeconds(endTime);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Linear,\n\t\t            'value': value,\n\t\t            'time': endTime\n\t\t        });\n\t\t        this._param.linearRampToValueAtTime(value, endTime);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t\t        //get the previous event and make sure it's not starting from 0\n\t\t        endTime = this.toSeconds(endTime);\n\t\t        var beforeEvent = this._searchBefore(endTime);\n\t\t        if (beforeEvent && beforeEvent.value === 0) {\n\t\t            //reschedule that event\n\t\t            this.setValueAtTime(this._minOutput, beforeEvent.time);\n\t\t        }\n\t\t        value = this._fromUnits(value);\n\t\t        var setValue = Math.max(value, this._minOutput);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Exponential,\n\t\t            'value': setValue,\n\t\t            'time': endTime\n\t\t        });\n\t\t        //if the ramped to value is 0, make it go to the min output, and then set to 0.\n\t\t        if (value < this._minOutput) {\n\t\t            this._param.exponentialRampToValueAtTime(this._minOutput, endTime - this.sampleTime);\n\t\t            this.setValueAtTime(0, endTime);\n\t\t        } else {\n\t\t            this._param.exponentialRampToValueAtTime(value, endTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start exponentially approaching the target value at the given time with\n\t\t\t *  a rate having the given time constant.\n\t\t\t *  @param {number} value        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {number} timeConstant \n\t\t\t *  @returns {Tone.TimelineSignal} this \n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t\t        value = this._fromUnits(value);\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Target,\n\t\t            'value': value,\n\t\t            'time': startTime,\n\t\t            'constant': timeConstant\n\t\t        });\n\t\t        this._param.setTargetAtTime(value, startTime, timeConstant);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t\t *  @param {Float32Array} values        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {Time} duration\n\t\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t\t *  @returns {Tone.TimelineSignal} this \n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t\t        scaling = this.defaultArg(scaling, 1);\n\t\t        //copy the array\n\t\t        var floats = new Array(values.length);\n\t\t        for (var i = 0; i < floats.length; i++) {\n\t\t            floats[i] = this._fromUnits(values[i]) * scaling;\n\t\t        }\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Curve,\n\t\t            'value': floats,\n\t\t            'time': startTime,\n\t\t            'duration': duration\n\t\t        });\n\t\t        //set the first value\n\t\t        this._param.setValueAtTime(floats[0], startTime);\n\t\t        //schedule a lienar ramp for each of the segments\n\t\t        for (var j = 1; j < floats.length; j++) {\n\t\t            var segmentTime = startTime + j / (floats.length - 1) * duration;\n\t\t            this._param.linearRampToValueAtTime(floats[j], segmentTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t\t *  equal to startTime.\n\t\t\t *  \n\t\t\t *  @param  {Time} startTime\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.cancelScheduledValues = function (after) {\n\t\t        after = this.toSeconds(after);\n\t\t        this._events.cancel(after);\n\t\t        this._param.cancelScheduledValues(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the computed value at the given time. This provides\n\t\t\t *  a point from which a linear or exponential curve\n\t\t\t *  can be scheduled after. Will cancel events after \n\t\t\t *  the given time and shorten the currently scheduled\n\t\t\t *  linear or exponential ramp so that it ends at `time` .\n\t\t\t *  This is to avoid discontinuities and clicks in envelopes. \n\t\t\t *  @param {Time} time When to set the ramp point\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setRampPoint = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        //get the value at the given time\n\t\t        var val = this._toUnits(this.getValueAtTime(time));\n\t\t        //if there is an event at the given time\n\t\t        //and that even is not a \"set\"\n\t\t        var before = this._searchBefore(time);\n\t\t        if (before && before.time === time) {\n\t\t            //remove everything after\n\t\t            this.cancelScheduledValues(time + this.sampleTime);\n\t\t        } else if (before && before.type === Tone.TimelineSignal.Type.Curve && before.time + before.duration > time) {\n\t\t            //if the curve is still playing\n\t\t            //cancel the curve\n\t\t            this.cancelScheduledValues(time);\n\t\t            this.linearRampToValueAtTime(val, time);\n\t\t        } else {\n\t\t            //reschedule the next event to end at the given time\n\t\t            var after = this._searchAfter(time);\n\t\t            if (after) {\n\t\t                //cancel the next event(s)\n\t\t                this.cancelScheduledValues(time);\n\t\t                if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t\t                    this.linearRampToValueAtTime(val, time);\n\t\t                } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t\t                    this.exponentialRampToValueAtTime(val, time);\n\t\t                }\n\t\t            }\n\t\t            this.setValueAtTime(val, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Do a linear ramp to the given value between the start and finish times.\n\t\t\t *  @param {Number} value The value to ramp to.\n\t\t\t *  @param {Time} start The beginning anchor point to do the linear ramp\n\t\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t\t *                       the signal will equal the given value.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.linearRampToValueBetween = function (value, start, finish) {\n\t\t        this.setRampPoint(start);\n\t\t        this.linearRampToValueAtTime(value, finish);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Do a exponential ramp to the given value between the start and finish times.\n\t\t\t *  @param {Number} value The value to ramp to.\n\t\t\t *  @param {Time} start The beginning anchor point to do the exponential ramp\n\t\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t\t *                       the signal will equal the given value.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.exponentialRampToValueBetween = function (value, start, finish) {\n\t\t        this.setRampPoint(start);\n\t\t        this.exponentialRampToValueAtTime(value, finish);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tGETTING SCHEDULED VALUES\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value before or equal to the given time\n\t\t\t *  @param  {Number}  time  The time to query\n\t\t\t *  @return  {Object}  The event at or before the given time.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._searchBefore = function (time) {\n\t\t        return this._events.getEvent(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  The event after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @return  {Object}  The next event after the given time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._searchAfter = function (time) {\n\t\t        return this._events.getEventAfter(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the scheduled value at the given time. This will\n\t\t\t *  return the unconverted (raw) value.\n\t\t\t *  @param  {Number}  time  The time in seconds.\n\t\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.getValueAtTime = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        var after = this._searchAfter(time);\n\t\t        var before = this._searchBefore(time);\n\t\t        var value = this._initial;\n\t\t        //if it was set by\n\t\t        if (before === null) {\n\t\t            value = this._initial;\n\t\t        } else if (before.type === Tone.TimelineSignal.Type.Target) {\n\t\t            var previous = this._events.getEventBefore(before.time);\n\t\t            var previouVal;\n\t\t            if (previous === null) {\n\t\t                previouVal = this._initial;\n\t\t            } else {\n\t\t                previouVal = previous.value;\n\t\t            }\n\t\t            value = this._exponentialApproach(before.time, previouVal, before.value, before.constant, time);\n\t\t        } else if (before.type === Tone.TimelineSignal.Type.Curve) {\n\t\t            value = this._curveInterpolate(before.time, before.value, before.duration, time);\n\t\t        } else if (after === null) {\n\t\t            value = before.value;\n\t\t        } else if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t\t            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t        } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t\t            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t        } else {\n\t\t            value = before.value;\n\t\t        }\n\t\t        return value;\n\t\t    };\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t *  @method\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUTOMATION CURVE CALCULATIONS\n\t\t    //\tMIT License, copyright (c) 2014 Jordan Santell\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by setTargetAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n\t\t        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by linearRampToValueAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n\t\t        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n\t\t        v0 = Math.max(this._minOutput, v0);\n\t\t        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by setValueCurveAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._curveInterpolate = function (start, curve, duration, time) {\n\t\t        var len = curve.length;\n\t\t        // If time is after duration, return the last curve value\n\t\t        if (time >= start + duration) {\n\t\t            return curve[len - 1];\n\t\t        } else if (time <= start) {\n\t\t            return curve[0];\n\t\t        } else {\n\t\t            var progress = (time - start) / duration;\n\t\t            var lowerIndex = Math.floor((len - 1) * progress);\n\t\t            var upperIndex = Math.ceil((len - 1) * progress);\n\t\t            var lowerVal = curve[lowerIndex];\n\t\t            var upperVal = curve[upperIndex];\n\t\t            if (upperIndex === lowerIndex) {\n\t\t                return lowerVal;\n\t\t            } else {\n\t\t                return this._linearInterpolate(lowerIndex, lowerVal, upperIndex, upperVal, progress * (len - 1));\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.dispose = function () {\n\t\t        Tone.Signal.prototype.dispose.call(this);\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._events.dispose();\n\t\t        this._events = null;\n\t\t    };\n\t\t    return Tone.TimelineSignal;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t\t *         must be AudioRange.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t\t\t *  @example\n\t\t\t * var pow = new Tone.Pow(2);\n\t\t\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t\t\t * //output of pow is 0.25. \n\t\t\t */\n\t\t    Tone.Pow = function (exp) {\n\t\t        /**\n\t\t\t\t * the exponent\n\t\t\t\t * @private\n\t\t\t\t * @type {number}\n\t\t\t\t */\n\t\t        this._exp = this.defaultArg(exp, 1);\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t\t    };\n\t\t    Tone.extend(Tone.Pow, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The value of the exponent.\n\t\t\t * @memberOf Tone.Pow#\n\t\t\t * @type {number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pow.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._exp;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp = exp;\n\t\t            this._expScaler.setMap(this._expFunc(this._exp));\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  the function which maps the waveshaper\n\t\t\t *  @param   {number} exp\n\t\t\t *  @return {function}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Pow.prototype._expFunc = function (exp) {\n\t\t        return function (val) {\n\t\t            return Math.pow(Math.abs(val), exp);\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Pow} this\n\t\t\t */\n\t\t    Tone.Pow.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._expScaler.dispose();\n\t\t        this._expScaler = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Pow;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t\t\t *          envelope generator. Tone.Envelope outputs a signal which \n\t\t\t *          can be connected to an AudioParam or Tone.Signal. \n\t\t\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from \n\t\t\t *                         0 to it's maximum value. \n\t\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t\t *                       \tto fall to the sustain value. \n\t\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t\t *                                \tthe release is triggered. \n\t\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t\t *  @example\n\t\t\t * //an amplitude envelope\n\t\t\t * var gainNode = Tone.context.createGain();\n\t\t\t * var env = new Tone.Envelope({\n\t\t\t * \t\"attack\" : 0.1,\n\t\t\t * \t\"decay\" : 0.2,\n\t\t\t * \t\"sustain\" : 1,\n\t\t\t * \t\"release\" : 0.8,\n\t\t\t * });\n\t\t\t * env.connect(gainNode.gain);\n\t\t\t */\n\t\t    Tone.Envelope = function () {\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        /** \n\t\t\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t\t\t *  time it takes for the envelope to reach it's maximum value. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.attack = options.attack;\n\t\t        /**\n\t\t\t\t *  After the attack portion of the envelope, the value will fall\n\t\t\t\t *  over the duration of the decay time to it's sustain value. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.decay = options.decay;\n\t\t        /**\n\t\t\t\t * \tThe sustain value is the value \n\t\t\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t\t\t * \tcalled, but before triggerRelease is invoked. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t */\n\t\t        this.sustain = options.sustain;\n\t\t        /**\n\t\t\t\t *  After triggerRelease is called, the envelope's\n\t\t\t\t *  value will fall to it's miminum value over the\n\t\t\t\t *  duration of the release time. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.release = options.release;\n\t\t        /**\n\t\t\t\t *  the next time the envelope is at standby\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._attackCurve = 'linear';\n\t\t        /**\n\t\t\t\t *  the next time the envelope is at standby\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._releaseCurve = 'exponential';\n\t\t        /**\n\t\t\t\t *  the signal\n\t\t\t\t *  @type {Tone.TimelineSignal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sig = this.output = new Tone.TimelineSignal();\n\t\t        this._sig.setValueAtTime(0, 0);\n\t\t        //set the attackCurve initially\n\t\t        this.attackCurve = options.attackCurve;\n\t\t        this.releaseCurve = options.releaseCurve;\n\t\t    };\n\t\t    Tone.extend(Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Envelope.defaults = {\n\t\t        'attack': 0.01,\n\t\t        'decay': 0.1,\n\t\t        'sustain': 0.5,\n\t\t        'release': 1,\n\t\t        'attackCurve': 'linear',\n\t\t        'releaseCurve': 'exponential'\n\t\t    };\n\t\t    /**\n\t\t\t * Read the current value of the envelope. Useful for \n\t\t\t * syncronizing visual output to the envelope. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this.getValueAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The shape of the attack. \n\t\t\t * Can be any of these strings:\n\t\t\t * <ul>\n\t\t\t *   <li>linear</li>\n\t\t\t *   <li>exponential</li>\n\t\t\t *   <li>sine</li>\n\t\t\t *   <li>ease</li>\n\t\t\t *   <li>bounce</li>\n\t\t\t *   <li>ripple</li>\n\t\t\t *   <li>step</li>\n\t\t\t * </ul>\n\t\t\t * Can also be an array which describes the curve. Values\n\t\t\t * in the array are evenly subdivided and linearly\n\t\t\t * interpolated over the duration of the attack. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {String|Array}\n\t\t\t * @name attackCurve\n\t\t\t * @example\n\t\t\t * env.attackCurve = \"linear\";\n\t\t\t * @example\n\t\t\t * //can also be an array\n\t\t\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {\n\t\t        get: function () {\n\t\t            if (this.isString(this._attackCurve)) {\n\t\t                return this._attackCurve;\n\t\t            } else if (this.isArray(this._attackCurve)) {\n\t\t                //look up the name in the curves array\n\t\t                for (var type in Tone.Envelope.Type) {\n\t\t                    if (Tone.Envelope.Type[type].In === this._attackCurve) {\n\t\t                        return type;\n\t\t                    }\n\t\t                }\n\t\t                //otherwise just return the array\n\t\t                return this._attackCurve;\n\t\t            }\n\t\t        },\n\t\t        set: function (curve) {\n\t\t            //check if it's a valid type\n\t\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t\t                var curveDef = Tone.Envelope.Type[curve];\n\t\t                if (this.isObject(curveDef)) {\n\t\t                    this._attackCurve = curveDef.In;\n\t\t                } else {\n\t\t                    this._attackCurve = curveDef;\n\t\t                }\n\t\t            } else if (this.isArray(curve)) {\n\t\t                this._attackCurve = curve;\n\t\t            } else {\n\t\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The shape of the release. See the attack curve types. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {String|Array}\n\t\t\t * @name releaseCurve\n\t\t\t * @example\n\t\t\t * env.releaseCurve = \"linear\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {\n\t\t        get: function () {\n\t\t            if (this.isString(this._releaseCurve)) {\n\t\t                return this._releaseCurve;\n\t\t            } else if (this.isArray(this._releaseCurve)) {\n\t\t                //look up the name in the curves array\n\t\t                for (var type in Tone.Envelope.Type) {\n\t\t                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {\n\t\t                        return type;\n\t\t                    }\n\t\t                }\n\t\t                //otherwise just return the array\n\t\t                return this._releaseCurve;\n\t\t            }\n\t\t        },\n\t\t        set: function (curve) {\n\t\t            //check if it's a valid type\n\t\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t\t                var curveDef = Tone.Envelope.Type[curve];\n\t\t                if (this.isObject(curveDef)) {\n\t\t                    this._releaseCurve = curveDef.Out;\n\t\t                } else {\n\t\t                    this._releaseCurve = curveDef;\n\t\t                }\n\t\t            } else if (this.isArray(curve)) {\n\t\t                this._releaseCurve = curve;\n\t\t            } else {\n\t\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Trigger the attack/decay portion of the ADSR envelope. \n\t\t\t *  @param  {Time} [time=now] When the attack should start.\n\t\t\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t\t\t *                               number between 0-1\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        var originalAttack = this.toSeconds(this.attack);\n\t\t        var attack = originalAttack;\n\t\t        var decay = this.toSeconds(this.decay);\n\t\t        velocity = this.defaultArg(velocity, 1);\n\t\t        //check if it's not a complete attack\n\t\t        var currentValue = this.getValueAtTime(time);\n\t\t        if (currentValue > 0) {\n\t\t            //subtract the current value from the attack time\n\t\t            var attackRate = 1 / attack;\n\t\t            var remainingDistance = 1 - currentValue;\n\t\t            //the attack is now the remaining time\n\t\t            attack = remainingDistance / attackRate;\n\t\t        }\n\t\t        //attack\n\t\t        if (this._attackCurve === 'linear') {\n\t\t            this._sig.linearRampToValue(velocity, attack, time);\n\t\t        } else if (this._attackCurve === 'exponential') {\n\t\t            this._sig.exponentialRampToValue(velocity, attack, time);\n\t\t        } else if (attack > 0) {\n\t\t            this._sig.setRampPoint(time);\n\t\t            var curve = this._attackCurve;\n\t\t            //take only a portion of the curve\n\t\t            if (attack < originalAttack) {\n\t\t                var percentComplete = 1 - attack / originalAttack;\n\t\t                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);\n\t\t                curve = this._attackCurve.slice(sliceIndex);\n\t\t                //the first index is the current value\n\t\t                curve[0] = currentValue;\n\t\t            }\n\t\t            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t        }\n\t\t        //decay\n\t\t        this._sig.exponentialRampToValue(velocity * this.sustain, decay, attack + time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Triggers the release of the envelope.\n\t\t\t *  @param  {Time} [time=now] When the release portion of the envelope should start. \n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t *  //trigger release immediately\n\t\t\t *  env.triggerRelease();\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        var currentValue = this.getValueAtTime(time);\n\t\t        if (currentValue > 0) {\n\t\t            var release = this.toSeconds(this.release);\n\t\t            if (this._releaseCurve === 'linear') {\n\t\t                this._sig.linearRampToValue(0, release, time);\n\t\t            } else if (this._releaseCurve === 'exponential') {\n\t\t                this._sig.exponentialRampToValue(0, release, time);\n\t\t            } else {\n\t\t                var curve = this._releaseCurve;\n\t\t                if (this.isArray(curve)) {\n\t\t                    this._sig.setRampPoint(time);\n\t\t                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the scheduled value at the given time. This will\n\t\t\t *  return the unconverted (raw) value.\n\t\t\t *  @param  {Number}  time  The time in seconds.\n\t\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t\t */\n\t\t    Tone.Envelope.prototype.getValueAtTime = function (time) {\n\t\t        return this._sig.getValueAtTime(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t\t\t *  some duration, then triggerRelease. \n\t\t\t *  @param {Time} duration The duration of the sustain.\n\t\t\t *  @param {Time} [time=now] When the attack should be triggered.\n\t\t\t *  @param {number} [velocity=1] The velocity of the envelope. \n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t * //trigger the attack and then the release after 0.6 seconds.\n\t\t\t * env.triggerAttackRelease(0.6);\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + this.toSeconds(duration));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled envelope changes after the given time.\n\t\t\t *  @param  {Time} after\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t */\n\t\t    Tone.Envelope.prototype.cancel = function (after) {\n\t\t        this._sig.cancelScheduledValues(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Borrows the connect method from Tone.Signal. \n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\t\t    /**\n\t\t \t *  Generate some complex envelope curves. \n\t\t \t */\n\t\t    (function _createCurves() {\n\t\t        var curveLen = 128;\n\t\t        var i, k;\n\t\t        //cosine curve\n\t\t        var cosineCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n\t\t        }\n\t\t        //ripple curve\n\t\t        var rippleCurve = [];\n\t\t        var rippleCurveFreq = 6.4;\n\t\t        for (i = 0; i < curveLen - 1; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\t            rippleCurve[i] = sineWave / 10 + k * 0.83;\n\t\t        }\n\t\t        rippleCurve[curveLen - 1] = 1;\n\t\t        //stairs curve\n\t\t        var stairsCurve = [];\n\t\t        var steps = 5;\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n\t\t        }\n\t\t        //in-out easing curve\n\t\t        var sineCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t\t        }\n\t\t        //a bounce curve\n\t\t        var bounceCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            var freq = Math.pow(k, 3) * 4 + 0.2;\n\t\t            var val = Math.cos(freq * Math.PI * 2 * k);\n\t\t            bounceCurve[i] = Math.abs(val * (1 - k));\n\t\t        }\n\t\t        /**\n\t\t\t\t *  Invert a value curve to make it work for the release\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        function invertCurve(curve) {\n\t\t            var out = new Array(curve.length);\n\t\t            for (var j = 0; j < curve.length; j++) {\n\t\t                out[j] = 1 - curve[j];\n\t\t            }\n\t\t            return out;\n\t\t        }\n\t\t        /**\n\t\t\t\t *  reverse the curve\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        function reverseCurve(curve) {\n\t\t            return curve.slice(0).reverse();\n\t\t        }\n\t\t        /**\n\t\t\t\t *  attack and release curve arrays\n\t\t\t\t *  @type  {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        Tone.Envelope.Type = {\n\t\t            'linear': 'linear',\n\t\t            'exponential': 'exponential',\n\t\t            'bounce': {\n\t\t                In: invertCurve(bounceCurve),\n\t\t                Out: bounceCurve\n\t\t            },\n\t\t            'cosine': {\n\t\t                In: cosineCurve,\n\t\t                Out: reverseCurve(cosineCurve)\n\t\t            },\n\t\t            'step': {\n\t\t                In: stairsCurve,\n\t\t                Out: invertCurve(stairsCurve)\n\t\t            },\n\t\t            'ripple': {\n\t\t                In: rippleCurve,\n\t\t                Out: invertCurve(rippleCurve)\n\t\t            },\n\t\t            'sine': {\n\t\t                In: sineCurve,\n\t\t                Out: invertCurve(sineCurve)\n\t\t            }\n\t\t        };\n\t\t    }());\n\t\t    /**\n\t\t\t *  Disconnect and dispose.\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t */\n\t\t    Tone.Envelope.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sig.dispose();\n\t\t        this._sig = null;\n\t\t        this._attackCurve = null;\n\t\t        this._releaseCurve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Envelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node. \n\t\t\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t\t\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t\t\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from \n\t\t\t *                               0 to it's maximum value. \n\t\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t\t *                       \tto fall to the sustain value. \n\t\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t\t *                                \tthe release is triggered. \n\t\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t\t *  @example\n\t\t\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t\t\t * \t\"attack\": 0.1,\n\t\t\t * \t\"decay\": 0.2,\n\t\t\t * \t\"sustain\": 1.0,\n\t\t\t * \t\"release\": 0.8\n\t\t\t * }).toMaster();\n\t\t\t * //create an oscillator and connect it\n\t\t\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t\t\t * //trigger the envelopes attack and release \"8t\" apart\n\t\t\t * ampEnv.triggerAttackRelease(\"8t\");\n\t\t\t */\n\t\t    Tone.AmplitudeEnvelope = function () {\n\t\t        Tone.Envelope.apply(this, arguments);\n\t\t        /**\n\t\t\t\t *  the input node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = this.output = new Tone.Gain();\n\t\t        this._sig.connect(this.output.gain);\n\t\t    };\n\t\t    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t\t\t */\n\t\t    Tone.AmplitudeEnvelope.prototype.dispose = function () {\n\t\t        this.input.dispose();\n\t\t        this.input = null;\n\t\t        Tone.Envelope.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AmplitudeEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Wrapper around the native Web Audio's \n\t\t\t *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n\t\t\t *          Extracts FFT or Waveform data from the incoming signal.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\". \n\t\t\t *  @param {Number=} size The size of the FFT. Value must be a power of \n\t\t\t *                       two in the range 32 to 32768.\n\t\t\t */\n\t\t    Tone.Analyser = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'type',\n\t\t            'size'\n\t\t        ], Tone.Analyser.defaults);\n\t\t        /**\n\t\t\t\t *  The analyser node.\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AnalyserNode}\n\t\t\t\t */\n\t\t        this._analyser = this.input = this.output = this.context.createAnalyser();\n\t\t        /**\n\t\t\t\t *  The analysis type\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  The return type of the analysis\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._returnType = options.returnType;\n\t\t        /**\n\t\t\t\t *  The buffer that the FFT data is written to\n\t\t\t\t *  @type {TypedArray}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = null;\n\t\t        //set the values initially\n\t\t        this.size = options.size;\n\t\t        this.type = options.type;\n\t\t        this.returnType = options.returnType;\n\t\t        this.minDecibels = options.minDecibels;\n\t\t        this.maxDecibels = options.maxDecibels;\n\t\t    };\n\t\t    Tone.extend(Tone.Analyser);\n\t\t    /**\n\t\t\t *  The default values.\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Analyser.defaults = {\n\t\t        'size': 1024,\n\t\t        'returnType': 'byte',\n\t\t        'type': 'fft',\n\t\t        'smoothing': 0.8,\n\t\t        'maxDecibels': -30,\n\t\t        'minDecibels': -100\n\t\t    };\n\t\t    /**\n\t\t\t *  Possible return types of Tone.Analyser.analyse()\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Analyser.Type = {\n\t\t        Waveform: 'waveform',\n\t\t        FFT: 'fft'\n\t\t    };\n\t\t    /**\n\t\t\t *  Possible return types of Tone.Analyser.analyse(). \n\t\t\t *  byte values are between [0,255]. float values are between \n\t\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Analyser.ReturnType = {\n\t\t        Byte: 'byte',\n\t\t        Float: 'float'\n\t\t    };\n\t\t    /**\n\t\t\t *  Run the analysis given the current settings and return the \n\t\t\t *  result as a TypedArray. \n\t\t\t *  @returns {TypedArray}\n\t\t\t */\n\t\t    Tone.Analyser.prototype.analyse = function () {\n\t\t        if (this._type === Tone.Analyser.Type.FFT) {\n\t\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._analyser.getByteFrequencyData(this._buffer);\n\t\t            } else {\n\t\t                this._analyser.getFloatFrequencyData(this._buffer);\n\t\t            }\n\t\t        } else if (this._type === Tone.Analyser.Type.Waveform) {\n\t\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._analyser.getByteTimeDomainData(this._buffer);\n\t\t            } else {\n\t\t                if (this.isFunction(AnalyserNode.prototype.getFloatTimeDomainData)) {\n\t\t                    this._analyser.getFloatTimeDomainData(this._buffer);\n\t\t                } else {\n\t\t                    var uint8 = new Uint8Array(this._buffer.length);\n\t\t                    this._analyser.getByteTimeDomainData(uint8);\n\t\t                    //referenced https://github.com/mohayonao/get-float-time-domain-data \n\t\t                    // POLYFILL\n\t\t                    for (var i = 0; i < uint8.length; i++) {\n\t\t                        this._buffer[i] = (uint8[i] - 128) * 0.0078125;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this._buffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Number}\n\t\t\t *  @name size\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'size', {\n\t\t        get: function () {\n\t\t            return this._analyser.frequencyBinCount;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._analyser.fftSize = size * 2;\n\t\t            this.type = this._type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The return type of Tone.Analyser.analyse(), either \"byte\" or \"float\". \n\t\t\t *  When the type is set to \"byte\" the range of values returned in the array\n\t\t\t *  are between 0-255. \"float\" values are between \n\t\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {String}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'returnType', {\n\t\t        get: function () {\n\t\t            return this._returnType;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._buffer = new Uint8Array(this._analyser.frequencyBinCount);\n\t\t            } else if (type === Tone.Analyser.ReturnType.Float) {\n\t\t                this._buffer = new Float32Array(this._analyser.frequencyBinCount);\n\t\t            } else {\n\t\t                throw new TypeError('Tone.Analayser: invalid return type: ' + type);\n\t\t            }\n\t\t            this._returnType = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The analysis function returned by Tone.Analyser.analyse(), either \"fft\" or \"waveform\". \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {String}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {\n\t\t                throw new TypeError('Tone.Analyser: invalid type: ' + type);\n\t\t            }\n\t\t            this._type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  0 represents no time averaging with the last analysis frame.\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name smoothing\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {\n\t\t        get: function () {\n\t\t            return this._analyser.smoothingTimeConstant;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.smoothingTimeConstant = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The smallest decibel value which is analysed by the FFT. \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Decibels}\n\t\t\t *  @name minDecibels\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'minDecibels', {\n\t\t        get: function () {\n\t\t            return this._analyser.minDecibels;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.minDecibels = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The largest decibel value which is analysed by the FFT. \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Decibels}\n\t\t\t *  @name maxDecibels\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'maxDecibels', {\n\t\t        get: function () {\n\t\t            return this._analyser.maxDecibels;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.maxDecibels = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Analyser}  this\n\t\t\t */\n\t\t    Tone.Analyser.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._analyser.disconnect();\n\t\t        this._analyser = null;\n\t\t        this._buffer = null;\n\t\t    };\n\t\t    return Tone.Analyser;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Compressor is a thin wrapper around the Web Audio \n\t\t\t *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n\t\t\t *         Compression reduces the volume of loud sounds or amplifies quiet sounds \n\t\t\t *         by narrowing or \"compressing\" an audio signal's dynamic range. \n\t\t\t *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n\t\t\t *  @param {Positive} [ratio] The gain reduction ratio.\n\t\t\t *  @example\n\t\t\t * var comp = new Tone.Compressor(-30, 3);\n\t\t\t */\n\t\t    Tone.Compressor = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'threshold',\n\t\t            'ratio'\n\t\t        ], Tone.Compressor.defaults);\n\t\t        /**\n\t\t\t\t *  the compressor node\n\t\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\t\t        /**\n\t\t\t\t *  the threshold vaue\n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.threshold = this._compressor.threshold;\n\t\t        /**\n\t\t\t\t *  The attack parameter\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\t\t        /**\n\t\t\t\t *  The release parameter\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\t\t        /**\n\t\t\t\t *  The knee parameter\n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.knee = this._compressor.knee;\n\t\t        /**\n\t\t\t\t *  The ratio value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.ratio = this._compressor.ratio;\n\t\t        //set the defaults\n\t\t        this._readOnly([\n\t\t            'knee',\n\t\t            'release',\n\t\t            'attack',\n\t\t            'ratio',\n\t\t            'threshold'\n\t\t        ]);\n\t\t        this.set(options);\n\t\t    };\n\t\t    Tone.extend(Tone.Compressor);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Compressor.defaults = {\n\t\t        'ratio': 12,\n\t\t        'threshold': -24,\n\t\t        'release': 0.25,\n\t\t        'attack': 0.003,\n\t\t        'knee': 30\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Compressor} this\n\t\t\t */\n\t\t    Tone.Compressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'knee',\n\t\t            'release',\n\t\t            'attack',\n\t\t            'ratio',\n\t\t            'threshold'\n\t\t        ]);\n\t\t        this._compressor.disconnect();\n\t\t        this._compressor = null;\n\t\t        this.attack.dispose();\n\t\t        this.attack = null;\n\t\t        this.release.dispose();\n\t\t        this.release = null;\n\t\t        this.threshold = null;\n\t\t        this.ratio = null;\n\t\t        this.knee = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Compressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Add a signal and a number or two signals. When no value is\n\t\t\t *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n\t\t\t *         and <code>input[1]</code>. If a value is passed into the constructor, \n\t\t\t *         the it will be added to the input.\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number=} value If no value is provided, Tone.Add will sum the first\n\t\t\t *                         and second inputs. \n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(2);\n\t\t\t * var add = new Tone.Add(2);\n\t\t\t * signal.connect(add);\n\t\t\t * //the output of add equals 4\n\t\t\t *  @example\n\t\t\t * //if constructed with no arguments\n\t\t\t * //it will add the first and second inputs\n\t\t\t * var add = new Tone.Add();\n\t\t\t * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t\t * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t\t * //the output of add equals 7. \n\t\t\t */\n\t\t    Tone.Add = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the summing node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this._param = this.input[1] = new Tone.Signal(value);\n\t\t        this._param.connect(this._sum);\n\t\t    };\n\t\t    Tone.extend(Tone.Add, Tone.Signal);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Add} this\n\t\t\t */\n\t\t    Tone.Add.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sum.dispose();\n\t\t        this._sum = null;\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Add;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor, \n\t\t\t *          multiplies the incoming signal by that value. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t\t\t *                         it will return the product of the first and second inputs\n\t\t\t *  @example\n\t\t\t * var mult = new Tone.Multiply();\n\t\t\t * var sigA = new Tone.Signal(3);\n\t\t\t * var sigB = new Tone.Signal(4);\n\t\t\t * sigA.connect(mult, 0, 0);\n\t\t\t * sigB.connect(mult, 0, 1);\n\t\t\t * //output of mult is 12.\n\t\t\t *  @example\n\t\t\t * var mult = new Tone.Multiply(10);\n\t\t\t * var sig = new Tone.Signal(2).connect(mult);\n\t\t\t * //the output of mult is 20. \n\t\t\t */\n\t\t    Tone.Multiply = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the input node is the same as the output node\n\t\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t\t *  \n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mult = this.input[0] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the scaling parameter\n\t\t\t\t *  @type {AudioParam}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input[1] = this.output.gain;\n\t\t        this._param.value = this.defaultArg(value, 0);\n\t\t    };\n\t\t    Tone.extend(Tone.Multiply, Tone.Signal);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Multiply} this\n\t\t\t */\n\t\t    Tone.Multiply.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._mult.dispose();\n\t\t        this._mult = null;\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Multiply;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var neg = new Tone.Negate();\n\t\t\t * var sig = new Tone.Signal(-2).connect(neg);\n\t\t\t * //output of neg is positive 2. \n\t\t\t */\n\t\t    Tone.Negate = function () {\n\t\t        /**\n\t\t\t\t *  negation is done by multiplying by -1\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multiply = this.input = this.output = new Tone.Multiply(-1);\n\t\t    };\n\t\t    Tone.extend(Tone.Negate, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Negate} this\n\t\t\t */\n\t\t    Tone.Negate.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._multiply.dispose();\n\t\t        this._multiply = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Negate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n\t\t\t *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n\t\t\t *         signals <code>.value</code> will be subtracted from the incoming signal.\n\t\t\t *\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @constructor\n\t\t\t *  @param {number=} value The value to subtract from the incoming signal. If the value\n\t\t\t *                         is omitted, it will subtract the second signal from the first.\n\t\t\t *  @example\n\t\t\t * var sub = new Tone.Subtract(1);\n\t\t\t * var sig = new Tone.Signal(4).connect(sub);\n\t\t\t * //the output of sub is 3. \n\t\t\t *  @example\n\t\t\t * var sub = new Tone.Subtract();\n\t\t\t * var sigA = new Tone.Signal(10);\n\t\t\t * var sigB = new Tone.Signal(2.5);\n\t\t\t * sigA.connect(sub, 0, 0);\n\t\t\t * sigB.connect(sub, 0, 1);\n\t\t\t * //output of sub is 7.5\n\t\t\t */\n\t\t    Tone.Subtract = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the summing node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sum = this.input[0] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  negate the input of the second input before connecting it\n\t\t\t\t *  to the summing node.\n\t\t\t\t *  @type {Tone.Negate}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._neg = new Tone.Negate();\n\t\t        /**\n\t\t\t\t *  the node where the value is set\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this._param = this.input[1] = new Tone.Signal(value);\n\t\t        this._param.chain(this._neg, this._sum);\n\t\t    };\n\t\t    Tone.extend(Tone.Subtract, Tone.Signal);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t */\n\t\t    Tone.Subtract.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._neg.dispose();\n\t\t        this._neg = null;\n\t\t        this._sum.disconnect();\n\t\t        this._sum = null;\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Subtract;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var gt0 = new Tone.GreaterThanZero();\n\t\t\t * var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t\t * //the output of gt0 is 1. \n\t\t\t * sig.value = 0;\n\t\t\t * //the output of gt0 is 0. \n\t\t\t */\n\t\t    Tone.GreaterThanZero = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._thresh = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (val <= 0) {\n\t\t                return 0;\n\t\t            } else {\n\t\t                return 1;\n\t\t            }\n\t\t        }, 127);\n\t\t        /**\n\t\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t\t *  this will help with values which are very close to 0\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.input = new Tone.Multiply(10000);\n\t\t        //connections\n\t\t        this._scale.connect(this._thresh);\n\t\t    };\n\t\t    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.GreaterThanZero} this\n\t\t\t */\n\t\t    Tone.GreaterThanZero.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._thresh.dispose();\n\t\t        this._thresh = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GreaterThanZero;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t\t *          can compare two signals or a signal and a number. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t\t *  @example\n\t\t\t * var gt = new Tone.GreaterThan(2);\n\t\t\t * var sig = new Tone.Signal(4).connect(gt);\n\t\t\t * //output of gt is equal 1. \n\t\t\t */\n\t\t    Tone.GreaterThan = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  subtract the amount from the incoming signal\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input[0] = new Tone.Subtract(value);\n\t\t        this.input[1] = this._param.input[1];\n\t\t        /**\n\t\t\t\t *  compare that amount to zero\n\t\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gtz = this.output = new Tone.GreaterThanZero();\n\t\t        //connect\n\t\t        this._param.connect(this._gtz);\n\t\t    };\n\t\t    Tone.extend(Tone.GreaterThan, Tone.Signal);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.GreaterThan} this\n\t\t\t */\n\t\t    Tone.GreaterThan.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        this._gtz.dispose();\n\t\t        this._gtz = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GreaterThan;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Return the absolute value of an incoming signal. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(-1);\n\t\t\t * var abs = new Tone.Abs();\n\t\t\t * signal.connect(abs);\n\t\t\t * //the output of abs is 1. \n\t\t\t */\n\t\t    Tone.Abs = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.LessThan}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (val === 0) {\n\t\t                return 0;\n\t\t            } else {\n\t\t                return Math.abs(val);\n\t\t            }\n\t\t        }, 127);\n\t\t    };\n\t\t    Tone.extend(Tone.Abs, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.Abs} this\n\t\t\t */\n\t\t    Tone.Abs.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._abs.dispose();\n\t\t        this._abs = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Abs;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n\t\t\t *         values in the NormalRange. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {NormalRange} modulus The modulus to apply.\n\t\t\t *  @example\n\t\t\t * var mod = new Tone.Modulo(0.2)\n\t\t\t * var sig = new Tone.Signal(0.5).connect(mod);\n\t\t\t * //mod outputs 0.1\n\t\t\t */\n\t\t    Tone.Modulo = function (modulus) {\n\t\t        this.createInsOuts(1, 0);\n\t\t        /**\n\t\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t\t *  the input signal and the modulus.\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\t\t        /**\n\t\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t\t *  @type  {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multiply = new Tone.Multiply();\n\t\t        /**\n\t\t\t\t *  and subtracted from the input signal\n\t\t\t\t *  @type  {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subtract = this.output = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  the modulus signal\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modSignal = new Tone.Signal(modulus);\n\t\t        //connections\n\t\t        this.input.fan(this._shaper, this._subtract);\n\t\t        this._modSignal.connect(this._multiply, 0, 0);\n\t\t        this._shaper.connect(this._multiply, 0, 1);\n\t\t        this._multiply.connect(this._subtract, 0, 1);\n\t\t        this._setWaveShaper(modulus);\n\t\t    };\n\t\t    Tone.extend(Tone.Modulo, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  @param  {number}  mod  the modulus to apply\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Modulo.prototype._setWaveShaper = function (mod) {\n\t\t        this._shaper.setMap(function (val) {\n\t\t            var multiple = Math.floor((val + 0.0001) / mod);\n\t\t            return multiple;\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t * The modulus value.\n\t\t\t * @memberOf Tone.Modulo#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Modulo.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._modSignal.value;\n\t\t        },\n\t\t        set: function (mod) {\n\t\t            this._modSignal.value = mod;\n\t\t            this._setWaveShaper(mod);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * clean up\n\t\t\t *  @returns {Tone.Modulo} this\n\t\t\t */\n\t\t    Tone.Modulo.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        this._multiply.dispose();\n\t\t        this._multiply = null;\n\t\t        this._subtract.dispose();\n\t\t        this._subtract = null;\n\t\t        this._modSignal.dispose();\n\t\t        this._modSignal = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Modulo;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t\t\t *         See Tone.GainToAudio.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t *  var a2g = new Tone.AudioToGain();\n\t\t\t */\n\t\t    Tone.AudioToGain = function () {\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t\t            return (x + 1) / 2;\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.AudioToGain, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AudioToGain} this\n\t\t\t */\n\t\t    Tone.AudioToGain.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._norm.dispose();\n\t\t        this._norm = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AudioToGain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Evaluate an expression at audio rate. <br><br>\n\t\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {string} expr the expression to generate\n\t\t\t *  @example\n\t\t\t * //adds the signals from input[0] and input[1].\n\t\t\t * var expr = new Tone.Expr(\"$0 + $1\");\n\t\t\t */\n\t\t    Tone.Expr = function () {\n\t\t        var expr = this._replacements(Array.prototype.slice.call(arguments));\n\t\t        var inputCount = this._parseInputs(expr);\n\t\t        /**\n\t\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._nodes = [];\n\t\t        /**\n\t\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.input = new Array(inputCount);\n\t\t        //create a gain for each input\n\t\t        for (var i = 0; i < inputCount; i++) {\n\t\t            this.input[i] = this.context.createGain();\n\t\t        }\n\t\t        //parse the syntax tree\n\t\t        var tree = this._parseTree(expr);\n\t\t        //evaluate the results\n\t\t        var result;\n\t\t        try {\n\t\t            result = this._eval(tree);\n\t\t        } catch (e) {\n\t\t            this._disposeNodes();\n\t\t            throw new Error('Tone.Expr: Could evaluate expression: ' + expr);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  The output node is the result of the expression\n\t\t\t\t *  @type {Tone}\n\t\t\t\t */\n\t\t        this.output = result;\n\t\t    };\n\t\t    Tone.extend(Tone.Expr, Tone.SignalBase);\n\t\t    //some helpers to cut down the amount of code\n\t\t    function applyBinary(Constructor, args, self) {\n\t\t        var op = new Constructor();\n\t\t        self._eval(args[0]).connect(op, 0, 0);\n\t\t        self._eval(args[1]).connect(op, 0, 1);\n\t\t        return op;\n\t\t    }\n\t\t    function applyUnary(Constructor, args, self) {\n\t\t        var op = new Constructor();\n\t\t        self._eval(args[0]).connect(op, 0, 0);\n\t\t        return op;\n\t\t    }\n\t\t    function getNumber(arg) {\n\t\t        return arg ? parseFloat(arg) : undefined;\n\t\t    }\n\t\t    function literalNumber(arg) {\n\t\t        return arg && arg.args ? parseFloat(arg.args) : undefined;\n\t\t    }\n\t\t    /*\n\t\t\t *  the Expressions that Tone.Expr can parse.\n\t\t\t *\n\t\t\t *  each expression belongs to a group and contains a regexp \n\t\t\t *  for selecting the operator as well as that operators method\n\t\t\t *  \n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr._Expressions = {\n\t\t        //values\n\t\t        'value': {\n\t\t            'signal': {\n\t\t                regexp: /^\\d+\\.\\d+|^\\d+/,\n\t\t                method: function (arg) {\n\t\t                    var sig = new Tone.Signal(getNumber(arg));\n\t\t                    return sig;\n\t\t                }\n\t\t            },\n\t\t            'input': {\n\t\t                regexp: /^\\$\\d/,\n\t\t                method: function (arg, self) {\n\t\t                    return self.input[getNumber(arg.substr(1))];\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        //syntactic glue\n\t\t        'glue': {\n\t\t            '(': { regexp: /^\\(/ },\n\t\t            ')': { regexp: /^\\)/ },\n\t\t            ',': { regexp: /^,/ }\n\t\t        },\n\t\t        //functions\n\t\t        'func': {\n\t\t            'abs': {\n\t\t                regexp: /^abs/,\n\t\t                method: applyUnary.bind(this, Tone.Abs)\n\t\t            },\n\t\t            'mod': {\n\t\t                regexp: /^mod/,\n\t\t                method: function (args, self) {\n\t\t                    var modulus = literalNumber(args[1]);\n\t\t                    var op = new Tone.Modulo(modulus);\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            },\n\t\t            'pow': {\n\t\t                regexp: /^pow/,\n\t\t                method: function (args, self) {\n\t\t                    var exp = literalNumber(args[1]);\n\t\t                    var op = new Tone.Pow(exp);\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            },\n\t\t            'a2g': {\n\t\t                regexp: /^a2g/,\n\t\t                method: function (args, self) {\n\t\t                    var op = new Tone.AudioToGain();\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        //binary expressions\n\t\t        'binary': {\n\t\t            '+': {\n\t\t                regexp: /^\\+/,\n\t\t                precedence: 1,\n\t\t                method: applyBinary.bind(this, Tone.Add)\n\t\t            },\n\t\t            '-': {\n\t\t                regexp: /^\\-/,\n\t\t                precedence: 1,\n\t\t                method: function (args, self) {\n\t\t                    //both unary and binary op\n\t\t                    if (args.length === 1) {\n\t\t                        return applyUnary(Tone.Negate, args, self);\n\t\t                    } else {\n\t\t                        return applyBinary(Tone.Subtract, args, self);\n\t\t                    }\n\t\t                }\n\t\t            },\n\t\t            '*': {\n\t\t                regexp: /^\\*/,\n\t\t                precedence: 0,\n\t\t                method: applyBinary.bind(this, Tone.Multiply)\n\t\t            }\n\t\t        },\n\t\t        //unary expressions\n\t\t        'unary': {\n\t\t            '-': {\n\t\t                regexp: /^\\-/,\n\t\t                method: applyUnary.bind(this, Tone.Negate)\n\t\t            },\n\t\t            '!': {\n\t\t                regexp: /^\\!/,\n\t\t                method: applyUnary.bind(this, Tone.NOT)\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  @param   {string} expr the expression string\n\t\t\t *  @return  {number}      the input count\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._parseInputs = function (expr) {\n\t\t        var inputArray = expr.match(/\\$\\d/g);\n\t\t        var inputMax = 0;\n\t\t        if (inputArray !== null) {\n\t\t            for (var i = 0; i < inputArray.length; i++) {\n\t\t                var inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t\t                inputMax = Math.max(inputMax, inputNum);\n\t\t            }\n\t\t        }\n\t\t        return inputMax;\n\t\t    };\n\t\t    /**\n\t\t\t *  @param   {Array} args \tan array of arguments\n\t\t\t *  @return  {string} the results of the replacements being replaced\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._replacements = function (args) {\n\t\t        var expr = args.shift();\n\t\t        for (var i = 0; i < args.length; i++) {\n\t\t            expr = expr.replace(/\\%/i, args[i]);\n\t\t        }\n\t\t        return expr;\n\t\t    };\n\t\t    /**\n\t\t\t *  tokenize the expression based on the Expressions object\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._tokenize = function (expr) {\n\t\t        var position = -1;\n\t\t        var tokens = [];\n\t\t        while (expr.length > 0) {\n\t\t            expr = expr.trim();\n\t\t            var token = getNextToken(expr);\n\t\t            tokens.push(token);\n\t\t            expr = expr.substr(token.value.length);\n\t\t        }\n\t\t        function getNextToken(expr) {\n\t\t            for (var type in Tone.Expr._Expressions) {\n\t\t                var group = Tone.Expr._Expressions[type];\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    var reg = op.regexp;\n\t\t                    var match = expr.match(reg);\n\t\t                    if (match !== null) {\n\t\t                        return {\n\t\t                            type: type,\n\t\t                            value: match[0],\n\t\t                            method: op.method\n\t\t                        };\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            throw new SyntaxError('Tone.Expr: Unexpected token ' + expr);\n\t\t        }\n\t\t        return {\n\t\t            next: function () {\n\t\t                return tokens[++position];\n\t\t            },\n\t\t            peek: function () {\n\t\t                return tokens[position + 1];\n\t\t            }\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  recursively parse the string expression into a syntax tree\n\t\t\t *  \n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._parseTree = function (expr) {\n\t\t        var lexer = this._tokenize(expr);\n\t\t        var isUndef = this.isUndef.bind(this);\n\t\t        function matchSyntax(token, syn) {\n\t\t            return !isUndef(token) && token.type === 'glue' && token.value === syn;\n\t\t        }\n\t\t        function matchGroup(token, groupName, prec) {\n\t\t            var ret = false;\n\t\t            var group = Tone.Expr._Expressions[groupName];\n\t\t            if (!isUndef(token)) {\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    if (op.regexp.test(token.value)) {\n\t\t                        if (!isUndef(prec)) {\n\t\t                            if (op.precedence === prec) {\n\t\t                                return true;\n\t\t                            }\n\t\t                        } else {\n\t\t                            return true;\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return ret;\n\t\t        }\n\t\t        function parseExpression(precedence) {\n\t\t            if (isUndef(precedence)) {\n\t\t                precedence = 5;\n\t\t            }\n\t\t            var expr;\n\t\t            if (precedence < 0) {\n\t\t                expr = parseUnary();\n\t\t            } else {\n\t\t                expr = parseExpression(precedence - 1);\n\t\t            }\n\t\t            var token = lexer.peek();\n\t\t            while (matchGroup(token, 'binary', precedence)) {\n\t\t                token = lexer.next();\n\t\t                expr = {\n\t\t                    operator: token.value,\n\t\t                    method: token.method,\n\t\t                    args: [\n\t\t                        expr,\n\t\t                        parseExpression(precedence - 1)\n\t\t                    ]\n\t\t                };\n\t\t                token = lexer.peek();\n\t\t            }\n\t\t            return expr;\n\t\t        }\n\t\t        function parseUnary() {\n\t\t            var token, expr;\n\t\t            token = lexer.peek();\n\t\t            if (matchGroup(token, 'unary')) {\n\t\t                token = lexer.next();\n\t\t                expr = parseUnary();\n\t\t                return {\n\t\t                    operator: token.value,\n\t\t                    method: token.method,\n\t\t                    args: [expr]\n\t\t                };\n\t\t            }\n\t\t            return parsePrimary();\n\t\t        }\n\t\t        function parsePrimary() {\n\t\t            var token, expr;\n\t\t            token = lexer.peek();\n\t\t            if (isUndef(token)) {\n\t\t                throw new SyntaxError('Tone.Expr: Unexpected termination of expression');\n\t\t            }\n\t\t            if (token.type === 'func') {\n\t\t                token = lexer.next();\n\t\t                return parseFunctionCall(token);\n\t\t            }\n\t\t            if (token.type === 'value') {\n\t\t                token = lexer.next();\n\t\t                return {\n\t\t                    method: token.method,\n\t\t                    args: token.value\n\t\t                };\n\t\t            }\n\t\t            if (matchSyntax(token, '(')) {\n\t\t                lexer.next();\n\t\t                expr = parseExpression();\n\t\t                token = lexer.next();\n\t\t                if (!matchSyntax(token, ')')) {\n\t\t                    throw new SyntaxError('Expected )');\n\t\t                }\n\t\t                return expr;\n\t\t            }\n\t\t            throw new SyntaxError('Tone.Expr: Parse error, cannot process token ' + token.value);\n\t\t        }\n\t\t        function parseFunctionCall(func) {\n\t\t            var token, args = [];\n\t\t            token = lexer.next();\n\t\t            if (!matchSyntax(token, '(')) {\n\t\t                throw new SyntaxError('Tone.Expr: Expected ( in a function call \"' + func.value + '\"');\n\t\t            }\n\t\t            token = lexer.peek();\n\t\t            if (!matchSyntax(token, ')')) {\n\t\t                args = parseArgumentList();\n\t\t            }\n\t\t            token = lexer.next();\n\t\t            if (!matchSyntax(token, ')')) {\n\t\t                throw new SyntaxError('Tone.Expr: Expected ) in a function call \"' + func.value + '\"');\n\t\t            }\n\t\t            return {\n\t\t                method: func.method,\n\t\t                args: args,\n\t\t                name: name\n\t\t            };\n\t\t        }\n\t\t        function parseArgumentList() {\n\t\t            var token, expr, args = [];\n\t\t            while (true) {\n\t\t                expr = parseExpression();\n\t\t                if (isUndef(expr)) {\n\t\t                    // TODO maybe throw exception?\n\t\t                    break;\n\t\t                }\n\t\t                args.push(expr);\n\t\t                token = lexer.peek();\n\t\t                if (!matchSyntax(token, ',')) {\n\t\t                    break;\n\t\t                }\n\t\t                lexer.next();\n\t\t            }\n\t\t            return args;\n\t\t        }\n\t\t        return parseExpression();\n\t\t    };\n\t\t    /**\n\t\t\t *  recursively evaluate the expression tree\n\t\t\t *  @param   {Object} tree \n\t\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._eval = function (tree) {\n\t\t        if (!this.isUndef(tree)) {\n\t\t            var node = tree.method(tree.args, this);\n\t\t            this._nodes.push(node);\n\t\t            return node;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  dispose all the nodes\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._disposeNodes = function () {\n\t\t        for (var i = 0; i < this._nodes.length; i++) {\n\t\t            var node = this._nodes[i];\n\t\t            if (this.isFunction(node.dispose)) {\n\t\t                node.dispose();\n\t\t            } else if (this.isFunction(node.disconnect)) {\n\t\t                node.disconnect();\n\t\t            }\n\t\t            node = null;\n\t\t            this._nodes[i] = null;\n\t\t        }\n\t\t        this._nodes = null;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t */\n\t\t    Tone.Expr.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._disposeNodes();\n\t\t    };\n\t\t    return Tone.Expr;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t * var eqPowGain = new Tone.EqualPowerGain();\n\t\t\t */\n\t\t    Tone.EqualPowerGain = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (Math.abs(val) < 0.001) {\n\t\t                //should output 0 when input is 0\n\t\t                return 0;\n\t\t            } else {\n\t\t                return this.equalPowerScale(val);\n\t\t            }\n\t\t        }.bind(this), 4096);\n\t\t    };\n\t\t    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.EqualPowerGain} this\n\t\t\t */\n\t\t    Tone.EqualPowerGain.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._eqPower.dispose();\n\t\t        this._eqPower = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.EqualPowerGain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * @class  Tone.Crossfade provides equal power fading between two inputs. \n\t\t\t *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n\t\t\t *\n\t\t\t * @constructor\n\t\t\t * @extends {Tone}\n\t\t\t * @param {NormalRange} [initialFade=0.5]\n\t\t\t * @example\n\t\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t\t * //connect effect A to crossfade from\n\t\t\t * //effect output 0 to crossfade input 0\n\t\t\t * effectA.connect(crossFade, 0, 0);\n\t\t\t * //connect effect B to crossfade from\n\t\t\t * //effect output 0 to crossfade input 1\n\t\t\t * effectB.connect(crossFade, 0, 1);\n\t\t\t * crossFade.fade.value = 0;\n\t\t\t * // ^ only effectA is output\n\t\t\t * crossFade.fade.value = 1;\n\t\t\t * // ^ only effectB is output\n\t\t\t * crossFade.fade.value = 0.5;\n\t\t\t * // ^ the two signals are mixed equally. \n\t\t\t */\n\t\t    Tone.CrossFade = function (initialFade) {\n\t\t        this.createInsOuts(2, 1);\n\t\t        /**\n\t\t\t\t *  Alias for <code>input[0]</code>. \n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.a = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Alias for <code>input[1]</code>. \n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.b = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t * \tThe mix between the two inputs. A fade value of 0\n\t\t\t\t * \twill output 100% <code>input[0]</code> and \n\t\t\t\t * \ta value of 1 will output 100% <code>input[1]</code>. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.fade = new Tone.Signal(this.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  equal power gain cross fade\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t\t */\n\t\t        this._equalPowerA = new Tone.EqualPowerGain();\n\t\t        /**\n\t\t\t\t *  equal power gain cross fade\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t\t */\n\t\t        this._equalPowerB = new Tone.EqualPowerGain();\n\t\t        /**\n\t\t\t\t *  invert the incoming signal\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone}\n\t\t\t\t */\n\t\t        this._invert = new Tone.Expr('1 - $0');\n\t\t        //connections\n\t\t        this.a.connect(this.output);\n\t\t        this.b.connect(this.output);\n\t\t        this.fade.chain(this._equalPowerB, this.b.gain);\n\t\t        this.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t\t        this._readOnly('fade');\n\t\t    };\n\t\t    Tone.extend(Tone.CrossFade);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.CrossFade} this\n\t\t\t */\n\t\t    Tone.CrossFade.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('fade');\n\t\t        this._equalPowerA.dispose();\n\t\t        this._equalPowerA = null;\n\t\t        this._equalPowerB.dispose();\n\t\t        this._equalPowerB = null;\n\t\t        this.fade.dispose();\n\t\t        this.fade = null;\n\t\t        this._invert.dispose();\n\t\t        this._invert = null;\n\t\t        this.a.dispose();\n\t\t        this.a = null;\n\t\t        this.b.dispose();\n\t\t        this.b = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.CrossFade;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Filter is a filter which allows for all of the same native methods\n\t\t\t *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface). \n\t\t\t *          Tone.Filter has the added ability to set the filter rolloff at -12 \n\t\t\t *          (default), -24 and -48. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n\t\t\t *  @param {string=} type The type of filter.\n\t\t\t *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n\t\t\t *                            3 choices: -12, -24, and -48\n\t\t\t *  @example\n\t\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t\t */\n\t\t    Tone.Filter = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'rolloff'\n\t\t        ], Tone.Filter.defaults);\n\t\t        /**\n\t\t\t\t *  the filter(s)\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filters = [];\n\t\t        /**\n\t\t\t\t *  The cutoff frequency of the filter. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune parameter\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(0, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  The gain of the filter, only used in certain filter types\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.gain = new Tone.Signal({\n\t\t            'value': options.gain,\n\t\t            'convert': false\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The Q or Quality of the filter\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q);\n\t\t        /**\n\t\t\t\t *  the type of the filter\n\t\t\t\t *  @type {string}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  the rolloff value of the filter\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rolloff = options.rolloff;\n\t\t        //set the rolloff;\n\t\t        this.rolloff = options.rolloff;\n\t\t        this._readOnly([\n\t\t            'detune',\n\t\t            'frequency',\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Filter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Filter.defaults = {\n\t\t        'type': 'lowpass',\n\t\t        'frequency': 350,\n\t\t        'rolloff': -12,\n\t\t        'Q': 1,\n\t\t        'gain': 0\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the filter. Types: \"lowpass\", \"highpass\", \n\t\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\". \n\t\t\t * @memberOf Tone.Filter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Filter.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            var types = [\n\t\t                'lowpass',\n\t\t                'highpass',\n\t\t                'bandpass',\n\t\t                'lowshelf',\n\t\t                'highshelf',\n\t\t                'notch',\n\t\t                'allpass',\n\t\t                'peaking'\n\t\t            ];\n\t\t            if (types.indexOf(type) === -1) {\n\t\t                throw new TypeError('Tone.Filter: invalid type ' + type);\n\t\t            }\n\t\t            this._type = type;\n\t\t            for (var i = 0; i < this._filters.length; i++) {\n\t\t                this._filters[i].type = type;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The rolloff of the filter which is the drop in db\n\t\t\t * per octave. Implemented internally by cascading filters.\n\t\t\t * Only accepts the values -12, -24, -48 and -96.\n\t\t\t * @memberOf Tone.Filter#\n\t\t\t * @type {number}\n\t\t\t * @name rolloff\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {\n\t\t        get: function () {\n\t\t            return this._rolloff;\n\t\t        },\n\t\t        set: function (rolloff) {\n\t\t            rolloff = parseInt(rolloff, 10);\n\t\t            var possibilities = [\n\t\t                -12,\n\t\t                -24,\n\t\t                -48,\n\t\t                -96\n\t\t            ];\n\t\t            var cascadingCount = possibilities.indexOf(rolloff);\n\t\t            //check the rolloff is valid\n\t\t            if (cascadingCount === -1) {\n\t\t                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');\n\t\t            }\n\t\t            cascadingCount += 1;\n\t\t            this._rolloff = rolloff;\n\t\t            //first disconnect the filters and throw them away\n\t\t            this.input.disconnect();\n\t\t            for (var i = 0; i < this._filters.length; i++) {\n\t\t                this._filters[i].disconnect();\n\t\t                this._filters[i] = null;\n\t\t            }\n\t\t            this._filters = new Array(cascadingCount);\n\t\t            for (var count = 0; count < cascadingCount; count++) {\n\t\t                var filter = this.context.createBiquadFilter();\n\t\t                filter.type = this._type;\n\t\t                this.frequency.connect(filter.frequency);\n\t\t                this.detune.connect(filter.detune);\n\t\t                this.Q.connect(filter.Q);\n\t\t                this.gain.connect(filter.gain);\n\t\t                this._filters[count] = filter;\n\t\t            }\n\t\t            //connect them up\n\t\t            var connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t\t            this.connectSeries.apply(this, connectionChain);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @return {Tone.Filter} this\n\t\t\t */\n\t\t    Tone.Filter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this._filters.length; i++) {\n\t\t            this._filters[i].disconnect();\n\t\t            this._filters[i] = null;\n\t\t        }\n\t\t        this._filters = null;\n\t\t        this._writable([\n\t\t            'detune',\n\t\t            'frequency',\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.Q.dispose();\n\t\t        this.frequency = null;\n\t\t        this.Q = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.gain.dispose();\n\t\t        this.gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Filter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t\t *         with two crossover frequency controls. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n\t\t\t *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n\t\t\t */\n\t\t    Tone.MultibandSplit = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ], Tone.MultibandSplit.defaults);\n\t\t        /**\n\t\t\t\t *  the input\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the outputs\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Array(3);\n\t\t        /**\n\t\t\t\t *  The low band. Alias for <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');\n\t\t        /**\n\t\t\t\t *  the lower filter of the mid band\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowMidFilter = new Tone.Filter(0, 'highpass');\n\t\t        /**\n\t\t\t\t *  The mid band output. Alias for <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');\n\t\t        /**\n\t\t\t\t *  The high band output. Alias for <code>output[2]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.high = this.output[2] = new Tone.Filter(0, 'highpass');\n\t\t        /**\n\t\t\t\t *  The low/mid crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The mid/high crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The quality of all the filters\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q);\n\t\t        this.input.fan(this.low, this.high);\n\t\t        this.input.chain(this._lowMidFilter, this.mid);\n\t\t        //the frequency control signal\n\t\t        this.lowFrequency.connect(this.low.frequency);\n\t\t        this.lowFrequency.connect(this._lowMidFilter.frequency);\n\t\t        this.highFrequency.connect(this.mid.frequency);\n\t\t        this.highFrequency.connect(this.high.frequency);\n\t\t        //the Q value\n\t\t        this.Q.connect(this.low.Q);\n\t\t        this.Q.connect(this._lowMidFilter.Q);\n\t\t        this.Q.connect(this.mid.Q);\n\t\t        this.Q.connect(this.high.Q);\n\t\t        this._readOnly([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MultibandSplit);\n\t\t    /**\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MultibandSplit.defaults = {\n\t\t        'lowFrequency': 400,\n\t\t        'highFrequency': 2500,\n\t\t        'Q': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MultibandSplit} this\n\t\t\t */\n\t\t    Tone.MultibandSplit.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t        this.low.dispose();\n\t\t        this.low = null;\n\t\t        this._lowMidFilter.dispose();\n\t\t        this._lowMidFilter = null;\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.high.dispose();\n\t\t        this.high = null;\n\t\t        this.lowFrequency.dispose();\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency.dispose();\n\t\t        this.highFrequency = null;\n\t\t        this.Q.dispose();\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultibandSplit;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n\t\t\t *         well as the low and high crossover frequencies.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  \n\t\t\t *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n\t\t\t *  @param {Decibels} [midLevel] The gain applied to the mid.\n\t\t\t *  @param {Decibels} [highLevel] The gain applied to the high.\n\t\t\t *  @example\n\t\t\t * var eq = new Tone.EQ3(-10, 3, -20);\n\t\t\t */\n\t\t    Tone.EQ3 = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high'\n\t\t        ], Tone.EQ3.defaults);\n\t\t        /**\n\t\t\t\t *  the output node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the multiband split\n\t\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multibandSplit = this.input = new Tone.MultibandSplit({\n\t\t            'lowFrequency': options.lowFrequency,\n\t\t            'highFrequency': options.highFrequency\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The gain for the lower signals\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t *  The gain for the mid signals\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The gain in decibels of the high part\n\t\t\t\t * @type {Tone.Gain}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The gain in decibels of the low part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.low = this._lowGain.gain;\n\t\t        /**\n\t\t\t\t * The gain in decibels of the mid part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.mid = this._midGain.gain;\n\t\t        /**\n\t\t\t\t * The gain in decibels of the high part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.high = this._highGain.gain;\n\t\t        /**\n\t\t\t\t *  The Q value for all of the filters. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = this._multibandSplit.Q;\n\t\t        /**\n\t\t\t\t *  The low/mid crossover frequency. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = this._multibandSplit.lowFrequency;\n\t\t        /**\n\t\t\t\t *  The mid/high crossover frequency. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = this._multibandSplit.highFrequency;\n\t\t        //the frequency bands\n\t\t        this._multibandSplit.low.chain(this._lowGain, this.output);\n\t\t        this._multibandSplit.mid.chain(this._midGain, this.output);\n\t\t        this._multibandSplit.high.chain(this._highGain, this.output);\n\t\t        this._readOnly([\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high',\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.EQ3);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t */\n\t\t    Tone.EQ3.defaults = {\n\t\t        'low': 0,\n\t\t        'mid': 0,\n\t\t        'high': 0,\n\t\t        'lowFrequency': 400,\n\t\t        'highFrequency': 2500\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.EQ3} this\n\t\t\t */\n\t\t    Tone.EQ3.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high',\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ]);\n\t\t        this._multibandSplit.dispose();\n\t\t        this._multibandSplit = null;\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency = null;\n\t\t        this._lowGain.dispose();\n\t\t        this._lowGain = null;\n\t\t        this._midGain.dispose();\n\t\t        this._midGain = null;\n\t\t        this._highGain.dispose();\n\t\t        this._highGain = null;\n\t\t        this.low = null;\n\t\t        this.mid = null;\n\t\t        this.high = null;\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.EQ3;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t\t *          Scales a NormalRange input to between\n\t\t\t *          outputMin and outputMax.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t\t *  @example\n\t\t\t * var scale = new Tone.Scale(50, 100);\n\t\t\t * var signal = new Tone.Signal(0.5).connect(scale);\n\t\t\t * //the output of scale equals 75\n\t\t\t */\n\t\t    Tone.Scale = function (outputMin, outputMax) {\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._outputMin = this.defaultArg(outputMin, 0);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._outputMax = this.defaultArg(outputMax, 1);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.input = new Tone.Multiply(1);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Add}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._add = this.output = new Tone.Add(0);\n\t\t        this._scale.connect(this._add);\n\t\t        this._setRange();\n\t\t    };\n\t\t    Tone.extend(Tone.Scale, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The minimum output value. This number is output when \n\t\t\t * the value input value is 0. \n\t\t\t * @memberOf Tone.Scale#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Scale.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._outputMin;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._outputMin = min;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output value. This number is output when \n\t\t\t * the value input value is 1. \n\t\t\t * @memberOf Tone.Scale#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Scale.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._outputMax;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._outputMax = max;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  set the values\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Scale.prototype._setRange = function () {\n\t\t        this._add.value = this._outputMin;\n\t\t        this._scale.value = this._outputMax - this._outputMin;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Scale} this\n\t\t\t */\n\t\t    Tone.Scale.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._add.dispose();\n\t\t        this._add = null;\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Scale;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t\t *          Scales a NormalRange value [0,1] exponentially\n\t\t\t *          to the output range of outputMin to outputMax.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t\t *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n\t\t\t *  @example\n\t\t\t * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n\t\t\t * var signal = new Tone.Signal(0.5).connect(scaleExp);\n\t\t\t */\n\t\t    Tone.ScaleExp = function (outputMin, outputMax, exponent) {\n\t\t        /**\n\t\t\t\t *  scale the input to the output range\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Pow}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._exp = this.input = new Tone.Pow(this.defaultArg(exponent, 2));\n\t\t        this._exp.connect(this._scale);\n\t\t    };\n\t\t    Tone.extend(Tone.ScaleExp, Tone.SignalBase);\n\t\t    /**\n\t\t\t * Instead of interpolating linearly between the <code>min</code> and \n\t\t\t * <code>max</code> values, setting the exponent will interpolate between\n\t\t\t * the two values with an exponential curve. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The minimum output value. This number is output when \n\t\t\t * the value input value is 0. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output value. This number is output when \n\t\t\t * the value input value is 1. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._scale.max;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._scale.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.ScaleExp} this\n\t\t\t */\n\t\t    Tone.ScaleExp.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._exp.dispose();\n\t\t        this._exp = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.ScaleExp;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface). \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time=} delayTime The delay applied to the incoming signal.\n\t\t\t *  @param {Time=} maxDelay The maximum delay time. \n\t\t\t */\n\t\t    Tone.Delay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'maxDelay'\n\t\t        ], Tone.Delay.defaults);\n\t\t        /**\n\t\t\t\t *  The native delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = this.input = this.output = this.context.createDelay(this.toSeconds(options.maxDelay));\n\t\t        /**\n\t\t\t\t *  The amount of time the incoming signal is\n\t\t\t\t *  delayed. \n\t\t\t\t *  @type {Tone.Param}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = new Tone.Param({\n\t\t            'param': this._delayNode.delayTime,\n\t\t            'units': Tone.Type.Time,\n\t\t            'value': options.delayTime\n\t\t        });\n\t\t        this._readOnly('delayTime');\n\t\t    };\n\t\t    Tone.extend(Tone.Delay);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Delay.defaults = {\n\t\t        'maxDelay': 1,\n\t\t        'delayTime': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Delay}  this\n\t\t\t */\n\t\t    Tone.Delay.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._delayNode.disconnect();\n\t\t        this._delayNode = null;\n\t\t        this._writable('delayTime');\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Delay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Comb filters are basic building blocks for physical modeling. Read more\n\t\t\t *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [delayTime] The delay time of the filter. \n\t\t\t *  @param {NormalRange=} resonance The amount of feedback the filter has. \n\t\t\t */\n\t\t    Tone.FeedbackCombFilter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'resonance'\n\t\t        ], Tone.FeedbackCombFilter.defaults);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The amount of delay of the comb filter. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delay.delayTime;\n\t\t        /**\n\t\t\t\t *  the feedback node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._feedback.gain;\n\t\t        this._delay.chain(this._feedback, this._delay);\n\t\t        this._readOnly([\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackCombFilter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackCombFilter.defaults = {\n\t\t        'delayTime': 0.1,\n\t\t        'resonance': 0.5\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FeedbackCombFilter} this\n\t\t\t */\n\t\t    Tone.FeedbackCombFilter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this.delayTime = null;\n\t\t        this._feedback.dispose();\n\t\t        this._feedback = null;\n\t\t        this.resonance = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackCombFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Follower is a  crude envelope follower which will follow \n\t\t\t *          the amplitude of an incoming signal. \n\t\t\t *          Take care with small (< 0.02) attack or decay values \n\t\t\t *          as follower has some ripple which is exaggerated\n\t\t\t *          at these values. Read more about envelope followers (also known \n\t\t\t *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time|Object} [attack] The rate at which the follower rises.\n\t\t\t *  @param {Time=} release The rate at which the folower falls. \n\t\t\t *  @example\n\t\t\t * var follower = new Tone.Follower(0.2, 0.4);\n\t\t\t */\n\t\t    Tone.Follower = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'release'\n\t\t        ], Tone.Follower.defaults);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Abs}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._abs = new Tone.Abs();\n\t\t        /**\n\t\t\t\t *  the lowpass filter which smooths the input\n\t\t\t\t *  @type {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filter = this.context.createBiquadFilter();\n\t\t        this._filter.type = 'lowpass';\n\t\t        this._filter.frequency.value = 0;\n\t\t        this._filter.Q.value = -100;\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._frequencyValues = new Tone.WaveShaper();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sub = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = new Tone.Delay(this.blockTime);\n\t\t        /**\n\t\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mult = new Tone.Multiply(10000);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._attack = options.attack;\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._release = options.release;\n\t\t        //the smoothed signal to get the values\n\t\t        this.input.chain(this._abs, this._filter, this.output);\n\t\t        //the difference path\n\t\t        this._abs.connect(this._sub, 0, 1);\n\t\t        this._filter.chain(this._delay, this._sub);\n\t\t        //threshold the difference and use the thresh to set the frequency\n\t\t        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t\t        //set the attack and release values in the table\n\t\t        this._setAttackRelease(this._attack, this._release);\n\t\t    };\n\t\t    Tone.extend(Tone.Follower);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Follower.defaults = {\n\t\t        'attack': 0.05,\n\t\t        'release': 0.5\n\t\t    };\n\t\t    /**\n\t\t\t *  sets the attack and release times in the wave shaper\n\t\t\t *  @param   {Time} attack  \n\t\t\t *  @param   {Time} release \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Follower.prototype._setAttackRelease = function (attack, release) {\n\t\t        var minTime = this.blockTime;\n\t\t        attack = Tone.Time(attack).toFrequency();\n\t\t        release = Tone.Time(release).toFrequency();\n\t\t        attack = Math.max(attack, minTime);\n\t\t        release = Math.max(release, minTime);\n\t\t        this._frequencyValues.setMap(function (val) {\n\t\t            if (val <= 0) {\n\t\t                return attack;\n\t\t            } else {\n\t\t                return release;\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t * The attack time.\n\t\t\t * @memberOf Tone.Follower#\n\t\t\t * @type {Time}\n\t\t\t * @name attack\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Follower.prototype, 'attack', {\n\t\t        get: function () {\n\t\t            return this._attack;\n\t\t        },\n\t\t        set: function (attack) {\n\t\t            this._attack = attack;\n\t\t            this._setAttackRelease(this._attack, this._release);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The release time.\n\t\t\t * @memberOf Tone.Follower#\n\t\t\t * @type {Time}\n\t\t\t * @name release\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Follower.prototype, 'release', {\n\t\t        get: function () {\n\t\t            return this._release;\n\t\t        },\n\t\t        set: function (release) {\n\t\t            this._release = release;\n\t\t            this._setAttackRelease(this._attack, this._release);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Borrows the connect method from Signal so that the output can be used\n\t\t\t *  as a Tone.Signal control signal.\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\t\t    /**\n\t\t\t *  dispose\n\t\t\t *  @returns {Tone.Follower} this\n\t\t\t */\n\t\t    Tone.Follower.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._filter.disconnect();\n\t\t        this._filter = null;\n\t\t        this._frequencyValues.disconnect();\n\t\t        this._frequencyValues = null;\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this._sub.disconnect();\n\t\t        this._sub = null;\n\t\t        this._abs.dispose();\n\t\t        this._abs = null;\n\t\t        this._mult.dispose();\n\t\t        this._mult = null;\n\t\t        this._curve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Follower;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.ScaledEnvelop is an envelope which can be scaled \n\t\t\t *         to any range. It's useful for applying an envelope \n\t\t\t *         to a frequency or any other non-NormalRange signal \n\t\t\t *         parameter. \n\t\t\t *\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t\t *  @example\n\t\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t\t *  \t\"attack\" : 0.2,\n\t\t\t *  \t\"min\" : 200,\n\t\t\t *  \t\"max\" : 2000\n\t\t\t *  });\n\t\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t\t */\n\t\t    Tone.ScaledEnvelope = function () {\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        Tone.Envelope.call(this, options);\n\t\t        options = this.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\t\t        /** \n\t\t\t\t *  scale the incoming signal by an exponent\n\t\t\t\t *  @type {Tone.Pow}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._exp = this.output = new Tone.Pow(options.exponent);\n\t\t        /**\n\t\t\t\t *  scale the signal to the desired range\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.output = new Tone.Scale(options.min, options.max);\n\t\t        this._sig.chain(this._exp, this._scale);\n\t\t    };\n\t\t    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.ScaledEnvelope.defaults = {\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'exponent': 1\n\t\t    };\n\t\t    /**\n\t\t\t * The envelope's min output value. This is the value which it\n\t\t\t * starts at. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's max output value. In other words, the value\n\t\t\t * at the peak of the attack portion of the envelope. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._scale.max;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._scale.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's exponent value. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.ScaledEnvelope} this\n\t\t\t */\n\t\t    Tone.ScaledEnvelope.prototype.dispose = function () {\n\t\t        Tone.Envelope.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._exp.dispose();\n\t\t        this._exp = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.ScaledEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n\t\t\t *         it's got a `baseFrequency` and `octaves` parameter. \n\t\t\t *\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t\t *  @example\n\t\t\t *  var env = new Tone.FrequencyEnvelope({\n\t\t\t *  \t\"attack\" : 0.2,\n\t\t\t *  \t\"baseFrequency\" : \"C2\",\n\t\t\t *  \t\"octaves\" : 4\n\t\t\t *  });\n\t\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        Tone.ScaledEnvelope.call(this, options);\n\t\t        options = this.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\t\t        /**\n\t\t\t\t *  Stores the octave value\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        //setup\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t        this.octaves = options.octaves;\n\t\t    };\n\t\t    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope.defaults = {\n\t\t        'baseFrequency': 200,\n\t\t        'octaves': 4,\n\t\t        'exponent': 2\n\t\t    };\n\t\t    /**\n\t\t\t * The envelope's mininum output value. This is the value which it\n\t\t\t * starts at. \n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {Frequency}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = this.toFrequency(min);\n\t\t            //also update the octaves\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of octaves above the baseFrequency that the\n\t\t\t * envelope will scale to.\n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            this._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's exponent value. \n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FrequencyEnvelope} this\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope.prototype.dispose = function () {\n\t\t        Tone.ScaledEnvelope.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FrequencyEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Gate only passes a signal through when the incoming \n\t\t\t *          signal exceeds a specified threshold. To do this, Gate uses \n\t\t\t *          a Tone.Follower to follow the amplitude of the incoming signal. \n\t\t\t *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Decibels|Object} [threshold] The threshold above which the gate will open. \n\t\t\t *  @param {Time=} attack The follower's attack time\n\t\t\t *  @param {Time=} release The follower's release time\n\t\t\t *  @example\n\t\t\t * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n\t\t\t * var mic = new Tone.Microphone().connect(gate);\n\t\t\t * //the gate will only pass through the incoming \n\t\t\t * //signal when it's louder than -30db\n\t\t\t */\n\t\t    Tone.Gate = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'threshold',\n\t\t            'attack',\n\t\t            'release'\n\t\t        ], Tone.Gate.defaults);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Follower}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._follower = new Tone.Follower(options.attack, options.release);\n\t\t        /**\n\t\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gt = new Tone.GreaterThan(this.dbToGain(options.threshold));\n\t\t        //the connections\n\t\t        this.input.connect(this.output);\n\t\t        //the control signal\n\t\t        this.input.chain(this._gt, this._follower, this.output.gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Gate);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Gate.defaults = {\n\t\t        'attack': 0.1,\n\t\t        'release': 0.1,\n\t\t        'threshold': -40\n\t\t    };\n\t\t    /**\n\t\t\t * The threshold of the gate in decibels\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Decibels}\n\t\t\t * @name threshold\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'threshold', {\n\t\t        get: function () {\n\t\t            return this.gainToDb(this._gt.value);\n\t\t        },\n\t\t        set: function (thresh) {\n\t\t            this._gt.value = this.dbToGain(thresh);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The attack speed of the gate\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Time}\n\t\t\t * @name attack\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'attack', {\n\t\t        get: function () {\n\t\t            return this._follower.attack;\n\t\t        },\n\t\t        set: function (attackTime) {\n\t\t            this._follower.attack = attackTime;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The release speed of the gate\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Time}\n\t\t\t * @name release\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'release', {\n\t\t        get: function () {\n\t\t            return this._follower.release;\n\t\t        },\n\t\t        set: function (releaseTime) {\n\t\t            this._follower.release = releaseTime;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Gate} this\n\t\t\t */\n\t\t    Tone.Gate.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._follower.dispose();\n\t\t        this._gt.dispose();\n\t\t        this._follower = null;\n\t\t        this._gt = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Gate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t\t\t *          and <code>getStateAtTime(time)</code>.\n\t\t\t *\n\t\t\t *  @extends {Tone.Timeline}\n\t\t\t *  @param {String} initial The initial state of the TimelineState. \n\t\t\t *                          Defaults to <code>undefined</code>\n\t\t\t */\n\t\t    Tone.TimelineState = function (initial) {\n\t\t        Tone.Timeline.call(this);\n\t\t        /**\n\t\t\t\t *  The initial state\n\t\t\t\t *  @private\n\t\t\t\t *  @type {String}\n\t\t\t\t */\n\t\t        this._initial = initial;\n\t\t    };\n\t\t    Tone.extend(Tone.TimelineState, Tone.Timeline);\n\t\t    /**\n\t\t\t *  Returns the scheduled state scheduled before or at\n\t\t\t *  the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t\t */\n\t\t    Tone.TimelineState.prototype.getStateAtTime = function (time) {\n\t\t        var event = this.getEvent(time);\n\t\t        if (event !== null) {\n\t\t            return event.state;\n\t\t        } else {\n\t\t            return this._initial;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the scheduled state scheduled before or at\n\t\t\t *  the given time.\n\t\t\t *  @param  {String}  state The name of the state to set.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t */\n\t\t    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {\n\t\t        this.addEvent({\n\t\t            'state': state,\n\t\t            'time': time\n\t\t        });\n\t\t    };\n\t\t    return Tone.TimelineState;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Emitter gives classes which extend it\n\t\t\t *         the ability to listen for and emit events. \n\t\t\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t\t\t *         MIT (c) 2011 Jerome Etienne.\n\t\t\t *         \n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Emitter = function () {\n\t\t        /**\n\t\t\t\t *  Contains all of the events.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Object}\n\t\t\t\t */\n\t\t        this._events = {};\n\t\t    };\n\t\t    Tone.extend(Tone.Emitter);\n\t\t    /**\n\t\t\t *  Bind a callback to a specific event.\n\t\t\t *  @param  {String}    event     The name of the event to listen for.\n\t\t\t *  @param  {Function}  callback  The callback to invoke when the\n\t\t\t *                                event is emitted\n\t\t\t *  @return  {Tone.Emitter}    this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.on = function (event, callback) {\n\t\t        //split the event\n\t\t        var events = event.split(/\\W+/);\n\t\t        for (var i = 0; i < events.length; i++) {\n\t\t            var eventName = events[i];\n\t\t            if (!this._events.hasOwnProperty(eventName)) {\n\t\t                this._events[eventName] = [];\n\t\t            }\n\t\t            this._events[eventName].push(callback);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove the event listener.\n\t\t\t *  @param  {String}    event     The event to stop listening to.\n\t\t\t *  @param  {Function=}  callback  The callback which was bound to \n\t\t\t *                                the event with Tone.Emitter.on.\n\t\t\t *                                If no callback is given, all callbacks\n\t\t\t *                                events are removed.\n\t\t\t *  @return  {Tone.Emitter}    this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.off = function (event, callback) {\n\t\t        var events = event.split(/\\W+/);\n\t\t        for (var ev = 0; ev < events.length; ev++) {\n\t\t            event = events[ev];\n\t\t            if (this._events.hasOwnProperty(event)) {\n\t\t                if (Tone.prototype.isUndef(callback)) {\n\t\t                    this._events[event] = [];\n\t\t                } else {\n\t\t                    var eventList = this._events[event];\n\t\t                    for (var i = 0; i < eventList.length; i++) {\n\t\t                        if (eventList[i] === callback) {\n\t\t                            eventList.splice(i, 1);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoke all of the callbacks bound to the event\n\t\t\t *  with any arguments passed in. \n\t\t\t *  @param  {String}  event  The name of the event.\n\t\t\t *  @param {*...} args The arguments to pass to the functions listening.\n\t\t\t *  @return  {Tone.Emitter}  this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.emit = function (event) {\n\t\t        if (this._events) {\n\t\t            var args = Array.prototype.slice.call(arguments, 1);\n\t\t            if (this._events.hasOwnProperty(event)) {\n\t\t                var eventList = this._events[event];\n\t\t                for (var i = 0, len = eventList.length; i < len; i++) {\n\t\t                    eventList[i].apply(this, args);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add Emitter functions (on/off/emit) to the object\n\t\t\t *  @param  {Object|Function}  object  The object or class to extend.\n\t\t\t */\n\t\t    Tone.Emitter.mixin = function (object) {\n\t\t        var functions = [\n\t\t            'on',\n\t\t            'off',\n\t\t            'emit'\n\t\t        ];\n\t\t        object._events = {};\n\t\t        for (var i = 0; i < functions.length; i++) {\n\t\t            var func = functions[i];\n\t\t            var emitterFunc = Tone.Emitter.prototype[func];\n\t\t            object[func] = emitterFunc;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Emitter}  this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._events = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Emitter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A sample accurate clock which provides a callback at the given rate. \n\t\t\t *          While the callback is not sample-accurate (it is still susceptible to\n\t\t\t *          loose JS timing), the time passed in as the argument to the callback\n\t\t\t *          is precise. For most applications, it is better to use Tone.Transport\n\t\t\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t\t\t *\n\t\t\t * \t@constructor\n\t\t\t *  @extends {Tone.Emitter}\n\t\t\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t\t\t * \t@param {Frequency} frequency The rate of the callback\n\t\t\t * \t@example\n\t\t\t * //the callback will be invoked approximately once a second\n\t\t\t * //and will print the time exactly once a second apart.\n\t\t\t * var clock = new Tone.Clock(function(time){\n\t\t\t * \tconsole.log(time);\n\t\t\t * }, 1);\n\t\t\t */\n\t\t    Tone.Clock = function () {\n\t\t        Tone.Emitter.call(this);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'frequency'\n\t\t        ], Tone.Clock.defaults);\n\t\t        /**\n\t\t\t\t *  The callback function to invoke at the scheduled tick.\n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  The internal lookahead value\n\t\t\t\t *  @type {Number|String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lookAhead = 'auto';\n\t\t        /**\n\t\t\t\t *  The lookahead value which was automatically\n\t\t\t\t *  computed using a time-based averaging.\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._computedLookAhead = UPDATE_RATE / 1000;\n\t\t        /**\n\t\t\t\t *  The next time the callback is scheduled.\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._nextTick = -1;\n\t\t        /**\n\t\t\t\t *  The last time the callback was invoked\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lastUpdate = -1;\n\t\t        /**\n\t\t\t\t *  The rate the callback function should be invoked. \n\t\t\t\t *  @type  {BPM}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.TimelineSignal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The number of times the callback was invoked. Starts counting at 0\n\t\t\t\t *  and increments after the callback was invoked. \n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @readOnly\n\t\t\t\t */\n\t\t        this.ticks = 0;\n\t\t        /**\n\t\t\t\t *  The state timeline\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  The loop function bound to its context. \n\t\t\t\t *  This is necessary to remove the event in the end.\n\t\t\t\t *  @type {Function}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._boundLoop = this._loop.bind(this);\n\t\t        //bind a callback to the worker thread\n\t\t        Tone.Clock._worker.addEventListener('message', this._boundLoop);\n\t\t        this._readOnly('frequency');\n\t\t    };\n\t\t    Tone.extend(Tone.Clock, Tone.Emitter);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Clock.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'frequency': 1,\n\t\t        'lookAhead': 'auto'\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Clock#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Clock.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._state.getStateAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The time which the clock will schedule events in advance\n\t\t\t *  of the current time. Scheduling notes in advance improves\n\t\t\t *  performance and decreases the chance for clicks caused\n\t\t\t *  by scheduling events in the past. If set to \"auto\",\n\t\t\t *  this value will be automatically computed based on the \n\t\t\t *  rate of the update (~0.02 seconds). Larger values\n\t\t\t *  will yeild better performance, but at the cost of latency. \n\t\t\t *  Values less than 0.016 are not recommended.\n\t\t\t *  @type {Number|String}\n\t\t\t *  @memberOf Tone.Clock#\n\t\t\t *  @name lookAhead\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Clock.prototype, 'lookAhead', {\n\t\t        get: function () {\n\t\t            return this._lookAhead;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            if (val === 'auto') {\n\t\t                this._lookAhead = 'auto';\n\t\t            } else {\n\t\t                this._lookAhead = this.toSeconds(val);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the clock at the given time. Optionally pass in an offset\n\t\t\t *  of where to start the tick counter from.\n\t\t\t *  @param  {Time}  time    The time the clock should start\n\t\t\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t\t\t *  @return  {Tone.Clock}  this\n\t\t\t */\n\t\t    Tone.Clock.prototype.start = function (time, offset) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getStateAtTime(time) !== Tone.State.Started) {\n\t\t            this._state.addEvent({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': time,\n\t\t                'offset': offset\n\t\t            });\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t *  @example\n\t\t\t * clock.stop();\n\t\t\t */\n\t\t    Tone.Clock.prototype.stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._state.cancel(time);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Pause the clock. Pausing does not reset the tick counter.\n\t\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t */\n\t\t    Tone.Clock.prototype.pause = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t\t            this._state.setStateAtTime(Tone.State.Paused, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The scheduling loop.\n\t\t\t *  @param  {Number}  time  The current page time starting from 0\n\t\t\t *                          when the page was loaded.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Clock.prototype._loop = function () {\n\t\t        //compute the look ahead\n\t\t        if (this._lookAhead === 'auto') {\n\t\t            var time = this.now();\n\t\t            if (this._lastUpdate !== -1) {\n\t\t                var diff = time - this._lastUpdate;\n\t\t                //max size on the diff\n\t\t                diff = Math.min(10 * UPDATE_RATE / 1000, diff);\n\t\t                //averaging\n\t\t                this._computedLookAhead = (9 * this._computedLookAhead + diff) / 10;\n\t\t            }\n\t\t            this._lastUpdate = time;\n\t\t        } else {\n\t\t            this._computedLookAhead = this._lookAhead;\n\t\t        }\n\t\t        //get the frequency value to compute the value of the next loop\n\t\t        var now = this.now();\n\t\t        //if it's started\n\t\t        var lookAhead = this._computedLookAhead * 2;\n\t\t        var event = this._state.getEvent(now + lookAhead);\n\t\t        var state = Tone.State.Stopped;\n\t\t        if (event) {\n\t\t            state = event.state;\n\t\t            //if it was stopped and now started\n\t\t            if (this._nextTick === -1 && state === Tone.State.Started) {\n\t\t                this._nextTick = event.time;\n\t\t                if (!this.isUndef(event.offset)) {\n\t\t                    this.ticks = event.offset;\n\t\t                }\n\t\t                this.emit('start', event.time, this.ticks);\n\t\t            }\n\t\t        }\n\t\t        if (state === Tone.State.Started) {\n\t\t            while (now + lookAhead > this._nextTick) {\n\t\t                var tickTime = this._nextTick;\n\t\t                this._nextTick += 1 / this.frequency.getValueAtTime(this._nextTick);\n\t\t                this.callback(tickTime);\n\t\t                this.ticks++;\n\t\t            }\n\t\t        } else if (state === Tone.State.Stopped) {\n\t\t            if (event && this.ticks !== 0) {\n\t\t                this.emit('stop', event.time);\n\t\t            }\n\t\t            this._nextTick = -1;\n\t\t            this.ticks = 0;\n\t\t        } else if (state === Tone.State.Paused) {\n\t\t            if (this._nextTick !== -1) {\n\t\t                this.emit('pause', event.time);\n\t\t            }\n\t\t            this._nextTick = -1;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the scheduled state at the given time.\n\t\t\t *  @param  {Time}  time  The time to query.\n\t\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t\t *  @example\n\t\t\t * clock.start(\"+0.1\");\n\t\t\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t\t\t */\n\t\t    Tone.Clock.prototype.getStateAtTime = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        return this._state.getStateAtTime(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t */\n\t\t    Tone.Clock.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        Tone.TimelineState.prototype.dispose.call(this);\n\t\t        Tone.Clock._worker.removeEventListener('message', this._boundLoop);\n\t\t        this._writable('frequency');\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._boundLoop = null;\n\t\t        this._nextTick = Infinity;\n\t\t        this.callback = null;\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t    };\n\t\t    //URL Shim\n\t\t    window.URL = window.URL || window.webkitURL;\n\t\t    /**\n\t\t\t *  The update rate in Milliseconds\n\t\t\t *  @const\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var UPDATE_RATE = 20;\n\t\t    /**\n\t\t\t *  The script which runs in a web worker\n\t\t\t *  @type {Blob}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var blob = new Blob(['setInterval(function(){self.postMessage(\\'tick\\')}, ' + UPDATE_RATE + ')']);\n\t\t    /**\n\t\t\t *  Create a blob url from the Blob\n\t\t\t *  @type  {URL}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var blobUrl = URL.createObjectURL(blob);\n\t\t    /**\n\t\t\t *  The Worker which generates a regular callback\n\t\t\t *  @type {Worker}\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Clock._worker = new Worker(blobUrl);\n\t\t    return Tone.Clock;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Similar to Tone.Timeline, but all events represent\n\t\t\t *         intervals with both \"time\" and \"duration\" times. The \n\t\t\t *         events are placed in a tree structure optimized\n\t\t\t *         for querying an intersection point with the timeline\n\t\t\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t\t\t *         to represent the data.\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.IntervalTimeline = function () {\n\t\t        /**\n\t\t\t\t *  The root node of the inteval tree\n\t\t\t\t *  @type  {IntervalNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._root = null;\n\t\t        /**\n\t\t\t\t *  Keep track of the length of the timeline.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._length = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.IntervalTimeline);\n\t\t    /**\n\t\t\t *  The event to add to the timeline. All events must \n\t\t\t *  have a time and duration value\n\t\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.addEvent = function (event) {\n\t\t        if (this.isUndef(event.time) || this.isUndef(event.duration)) {\n\t\t            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');\n\t\t        }\n\t\t        var node = new IntervalNode(event.time, event.time + event.duration, event);\n\t\t        if (this._root === null) {\n\t\t            this._root = node;\n\t\t        } else {\n\t\t            this._root.insert(node);\n\t\t        }\n\t\t        this._length++;\n\t\t        // Restructure tree to be balanced\n\t\t        while (node !== null) {\n\t\t            node.updateHeight();\n\t\t            node.updateMax();\n\t\t            this._rebalance(node);\n\t\t            node = node.parent;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the timeline.\n\t\t\t *  @param  {Object}  event  The event to remove from the timeline\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.removeEvent = function (event) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(event.time, results);\n\t\t            for (var i = 0; i < results.length; i++) {\n\t\t                var node = results[i];\n\t\t                if (node.event === event) {\n\t\t                    this._removeNode(node);\n\t\t                    this._length--;\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The number of items in the timeline.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.IntervalTimeline#\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Remove events whose time time is after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.cancel = function (after) {\n\t\t        this.forEachAfter(after, function (event) {\n\t\t            this.removeEvent(event);\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the root node as the given node\n\t\t\t *  @param {IntervalNode} node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._setRoot = function (node) {\n\t\t        this._root = node;\n\t\t        if (this._root !== null) {\n\t\t            this._root.parent = null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Replace the references to the node in the node's parent\n\t\t\t *  with the replacement node.\n\t\t\t *  @param  {IntervalNode}  node        \n\t\t\t *  @param  {IntervalNode}  replacement \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n\t\t        if (node.parent !== null) {\n\t\t            if (node.isLeftChild()) {\n\t\t                node.parent.left = replacement;\n\t\t            } else {\n\t\t                node.parent.right = replacement;\n\t\t            }\n\t\t            this._rebalance(node.parent);\n\t\t        } else {\n\t\t            this._setRoot(replacement);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove the node from the tree and replace it with \n\t\t\t *  a successor which follows the schema.\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._removeNode = function (node) {\n\t\t        if (node.left === null && node.right === null) {\n\t\t            this._replaceNodeInParent(node, null);\n\t\t        } else if (node.right === null) {\n\t\t            this._replaceNodeInParent(node, node.left);\n\t\t        } else if (node.left === null) {\n\t\t            this._replaceNodeInParent(node, node.right);\n\t\t        } else {\n\t\t            var balance = node.getBalance();\n\t\t            var replacement, temp;\n\t\t            if (balance > 0) {\n\t\t                if (node.left.right === null) {\n\t\t                    replacement = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                    temp = replacement;\n\t\t                } else {\n\t\t                    replacement = node.left.right;\n\t\t                    while (replacement.right !== null) {\n\t\t                        replacement = replacement.right;\n\t\t                    }\n\t\t                    replacement.parent.right = replacement.left;\n\t\t                    temp = replacement.parent;\n\t\t                    replacement.left = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                }\n\t\t            } else {\n\t\t                if (node.right.left === null) {\n\t\t                    replacement = node.right;\n\t\t                    replacement.left = node.left;\n\t\t                    temp = replacement;\n\t\t                } else {\n\t\t                    replacement = node.right.left;\n\t\t                    while (replacement.left !== null) {\n\t\t                        replacement = replacement.left;\n\t\t                    }\n\t\t                    replacement.parent = replacement.parent;\n\t\t                    replacement.parent.left = replacement.right;\n\t\t                    temp = replacement.parent;\n\t\t                    replacement.left = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                }\n\t\t            }\n\t\t            if (node.parent !== null) {\n\t\t                if (node.isLeftChild()) {\n\t\t                    node.parent.left = replacement;\n\t\t                } else {\n\t\t                    node.parent.right = replacement;\n\t\t                }\n\t\t            } else {\n\t\t                this._setRoot(replacement);\n\t\t            }\n\t\t            // this._replaceNodeInParent(node, replacement);\n\t\t            this._rebalance(temp);\n\t\t        }\n\t\t        node.dispose();\n\t\t    };\n\t\t    /**\n\t\t\t *  Rotate the tree to the left\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {\n\t\t        var parent = node.parent;\n\t\t        var isLeftChild = node.isLeftChild();\n\t\t        // Make node.right the new root of this sub tree (instead of node)\n\t\t        var pivotNode = node.right;\n\t\t        node.right = pivotNode.left;\n\t\t        pivotNode.left = node;\n\t\t        if (parent !== null) {\n\t\t            if (isLeftChild) {\n\t\t                parent.left = pivotNode;\n\t\t            } else {\n\t\t                parent.right = pivotNode;\n\t\t            }\n\t\t        } else {\n\t\t            this._setRoot(pivotNode);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Rotate the tree to the right\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rotateRight = function (node) {\n\t\t        var parent = node.parent;\n\t\t        var isLeftChild = node.isLeftChild();\n\t\t        // Make node.left the new root of this sub tree (instead of node)\n\t\t        var pivotNode = node.left;\n\t\t        node.left = pivotNode.right;\n\t\t        pivotNode.right = node;\n\t\t        if (parent !== null) {\n\t\t            if (isLeftChild) {\n\t\t                parent.left = pivotNode;\n\t\t            } else {\n\t\t                parent.right = pivotNode;\n\t\t            }\n\t\t        } else {\n\t\t            this._setRoot(pivotNode);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Balance the BST\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rebalance = function (node) {\n\t\t        var balance = node.getBalance();\n\t\t        if (balance > 1) {\n\t\t            if (node.left.getBalance() < 0) {\n\t\t                this._rotateLeft(node.left);\n\t\t            } else {\n\t\t                this._rotateRight(node);\n\t\t            }\n\t\t        } else if (balance < -1) {\n\t\t            if (node.right.getBalance() > 0) {\n\t\t                this._rotateRight(node.right);\n\t\t            } else {\n\t\t                this._rotateLeft(node);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get an event whose time and duration span the give time. Will\n\t\t\t *  return the match whose \"time\" value is closest to the given time.\n\t\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t\t *  @return  {Object}  The event which spans the desired time\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.getEvent = function (time) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(time, results);\n\t\t            if (results.length > 0) {\n\t\t                var max = results[0];\n\t\t                for (var i = 1; i < results.length; i++) {\n\t\t                    if (results[i].low > max.low) {\n\t\t                        max = results[i];\n\t\t                    }\n\t\t                }\n\t\t                return max.event;\n\t\t            }\n\t\t        }\n\t\t        return null;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the timeline.\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEach = function (callback) {\n\t\t        if (this._root !== null) {\n\t\t            var allNodes = [];\n\t\t            if (this._root !== null) {\n\t\t                this._root.traverse(function (node) {\n\t\t                    allNodes.push(node);\n\t\t                });\n\t\t            }\n\t\t            for (var i = 0; i < allNodes.length; i++) {\n\t\t                var ev = allNodes[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array in which the given time\n\t\t\t *  overlaps with the time and duration time of the event.\n\t\t\t *  @param  {Number}  time The time to check if items are overlapping\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(time, results);\n\t\t            for (var i = results.length - 1; i >= 0; i--) {\n\t\t                var ev = results[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array in which the time is greater\n\t\t\t *  than the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEachAfter = function (time, callback) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.searchAfter(time, results);\n\t\t            for (var i = results.length - 1; i >= 0; i--) {\n\t\t                var ev = results[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.dispose = function () {\n\t\t        var allNodes = [];\n\t\t        if (this._root !== null) {\n\t\t            this._root.traverse(function (node) {\n\t\t                allNodes.push(node);\n\t\t            });\n\t\t        }\n\t\t        for (var i = 0; i < allNodes.length; i++) {\n\t\t            allNodes[i].dispose();\n\t\t        }\n\t\t        allNodes = null;\n\t\t        this._root = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tINTERVAL NODE HELPER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Represents a node in the binary search tree, with the addition\n\t\t\t *  of a \"high\" value which keeps track of the highest value of\n\t\t\t *  its children. \n\t\t\t *  References: \n\t\t\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t\t\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t\t\t *  @param {Number} low\n\t\t\t *  @param {Number} high\n\t\t\t *  @private\n\t\t\t */\n\t\t    var IntervalNode = function (low, high, event) {\n\t\t        //the event container\n\t\t        this.event = event;\n\t\t        //the low value\n\t\t        this.low = low;\n\t\t        //the high value\n\t\t        this.high = high;\n\t\t        //the high value for this and all child nodes\n\t\t        this.max = this.high;\n\t\t        //the nodes to the left\n\t\t        this._left = null;\n\t\t        //the nodes to the right\n\t\t        this._right = null;\n\t\t        //the parent node\n\t\t        this.parent = null;\n\t\t        //the number of child nodes\n\t\t        this.height = 0;\n\t\t    };\n\t\t    /** \n\t\t\t *  Insert a node into the correct spot in the tree\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t */\n\t\t    IntervalNode.prototype.insert = function (node) {\n\t\t        if (node.low <= this.low) {\n\t\t            if (this.left === null) {\n\t\t                this.left = node;\n\t\t            } else {\n\t\t                this.left.insert(node);\n\t\t            }\n\t\t        } else {\n\t\t            if (this.right === null) {\n\t\t                this.right = node;\n\t\t            } else {\n\t\t                this.right.insert(node);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Search the tree for nodes which overlap \n\t\t\t *  with the given point\n\t\t\t *  @param  {Number}  point  The point to query\n\t\t\t *  @param  {Array}  results  The array to put the results\n\t\t\t */\n\t\t    IntervalNode.prototype.search = function (point, results) {\n\t\t        // If p is to the right of the rightmost point of any interval\n\t\t        // in this node and all children, there won't be any matches.\n\t\t        if (point > this.max) {\n\t\t            return;\n\t\t        }\n\t\t        // Search left children\n\t\t        if (this.left !== null) {\n\t\t            this.left.search(point, results);\n\t\t        }\n\t\t        // Check this node\n\t\t        if (this.low <= point && this.high > point) {\n\t\t            results.push(this);\n\t\t        }\n\t\t        // If p is to the left of the time of this interval,\n\t\t        // then it can't be in any child to the right.\n\t\t        if (this.low > point) {\n\t\t            return;\n\t\t        }\n\t\t        // Search right children\n\t\t        if (this.right !== null) {\n\t\t            this.right.search(point, results);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Search the tree for nodes which are less \n\t\t\t *  than the given point\n\t\t\t *  @param  {Number}  point  The point to query\n\t\t\t *  @param  {Array}  results  The array to put the results\n\t\t\t */\n\t\t    IntervalNode.prototype.searchAfter = function (point, results) {\n\t\t        // Check this node\n\t\t        if (this.low >= point) {\n\t\t            results.push(this);\n\t\t            if (this.left !== null) {\n\t\t                this.left.searchAfter(point, results);\n\t\t            }\n\t\t        }\n\t\t        // search the right side\n\t\t        if (this.right !== null) {\n\t\t            this.right.searchAfter(point, results);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoke the callback on this element and both it's branches\n\t\t\t *  @param  {Function}  callback\n\t\t\t */\n\t\t    IntervalNode.prototype.traverse = function (callback) {\n\t\t        callback(this);\n\t\t        if (this.left !== null) {\n\t\t            this.left.traverse(callback);\n\t\t        }\n\t\t        if (this.right !== null) {\n\t\t            this.right.traverse(callback);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Update the height of the node\n\t\t\t */\n\t\t    IntervalNode.prototype.updateHeight = function () {\n\t\t        if (this.left !== null && this.right !== null) {\n\t\t            this.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t        } else if (this.right !== null) {\n\t\t            this.height = this.right.height + 1;\n\t\t        } else if (this.left !== null) {\n\t\t            this.height = this.left.height + 1;\n\t\t        } else {\n\t\t            this.height = 0;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Update the height of the node\n\t\t\t */\n\t\t    IntervalNode.prototype.updateMax = function () {\n\t\t        this.max = this.high;\n\t\t        if (this.left !== null) {\n\t\t            this.max = Math.max(this.max, this.left.max);\n\t\t        }\n\t\t        if (this.right !== null) {\n\t\t            this.max = Math.max(this.max, this.right.max);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The balance is how the leafs are distributed on the node\n\t\t\t *  @return  {Number}  Negative numbers are balanced to the right\n\t\t\t */\n\t\t    IntervalNode.prototype.getBalance = function () {\n\t\t        var balance = 0;\n\t\t        if (this.left !== null && this.right !== null) {\n\t\t            balance = this.left.height - this.right.height;\n\t\t        } else if (this.left !== null) {\n\t\t            balance = this.left.height + 1;\n\t\t        } else if (this.right !== null) {\n\t\t            balance = -(this.right.height + 1);\n\t\t        }\n\t\t        return balance;\n\t\t    };\n\t\t    /**\n\t\t\t *  @returns {Boolean} true if this node is the left child\n\t\t\t *  of its parent\n\t\t\t */\n\t\t    IntervalNode.prototype.isLeftChild = function () {\n\t\t        return this.parent !== null && this.parent.left === this;\n\t\t    };\n\t\t    /**\n\t\t\t *  get/set the left node\n\t\t\t *  @type {IntervalNode}\n\t\t\t */\n\t\t    Object.defineProperty(IntervalNode.prototype, 'left', {\n\t\t        get: function () {\n\t\t            return this._left;\n\t\t        },\n\t\t        set: function (node) {\n\t\t            this._left = node;\n\t\t            if (node !== null) {\n\t\t                node.parent = this;\n\t\t            }\n\t\t            this.updateHeight();\n\t\t            this.updateMax();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  get/set the right node\n\t\t\t *  @type {IntervalNode}\n\t\t\t */\n\t\t    Object.defineProperty(IntervalNode.prototype, 'right', {\n\t\t        get: function () {\n\t\t            return this._right;\n\t\t        },\n\t\t        set: function (node) {\n\t\t            this._right = node;\n\t\t            if (node !== null) {\n\t\t                node.parent = this;\n\t\t            }\n\t\t            this.updateHeight();\n\t\t            this.updateMax();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  null out references.\n\t\t\t */\n\t\t    IntervalNode.prototype.dispose = function () {\n\t\t        this.parent = null;\n\t\t        this._left = null;\n\t\t        this._right = null;\n\t\t        this.event = null;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEND INTERVAL NODE HELPER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    return Tone.IntervalTimeline;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Transport for timing musical events.\n\t\t\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t\t\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t\t\t *          in the argument of the callback function. Pass that time value to the object\n\t\t\t *          you're scheduling. <br><br>\n\t\t\t *          A single transport is created for you when the library is initialized. \n\t\t\t *          <br><br>\n\t\t\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t\t\t *          called with the time of that event as the argument. \n\t\t\t *\n\t\t\t *  @extends {Tone.Emitter}\n\t\t\t *  @singleton\n\t\t\t *  @example\n\t\t\t * //repeated event every 8th note\n\t\t\t * Tone.Transport.scheduleRepeat(function(time){\n\t\t\t * \t//do something with the time\n\t\t\t * }, \"8n\");\n\t\t\t *  @example\n\t\t\t * //schedule an event on the 16th measure\n\t\t\t * Tone.Transport.schedule(function(time){\n\t\t\t * \t//do something with the time\n\t\t\t * }, \"16:0:0\");\n\t\t\t */\n\t\t    Tone.Transport = function () {\n\t\t        Tone.Emitter.call(this);\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tLOOPING\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /** \n\t\t\t\t * \tIf the transport loops or not.\n\t\t\t\t *  @type {boolean}\n\t\t\t\t */\n\t\t        this.loop = false;\n\t\t        /** \n\t\t\t\t * \tThe loop start position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = 0;\n\t\t        /** \n\t\t\t\t * \tThe loop end position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = 0;\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tCLOCK/TEMPO\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this._ppq = TransportConstructor.defaults.PPQ;\n\t\t        /**\n\t\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t\t *  initially starts at 120bpm\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Clock}\n\t\t\t\t */\n\t\t        this._clock = new Tone.Clock({\n\t\t            'callback': this._processTick.bind(this),\n\t\t            'frequency': 0\n\t\t        });\n\t\t        this._bindClockEvents();\n\t\t        /**\n\t\t\t\t *  The Beats Per Minute of the Transport. \n\t\t\t\t *  @type {BPM}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t\t */\n\t\t        this.bpm = this._clock.frequency;\n\t\t        this.bpm._toUnits = this._toUnits.bind(this);\n\t\t        this.bpm._fromUnits = this._fromUnits.bind(this);\n\t\t        this.bpm.units = Tone.Type.BPM;\n\t\t        this.bpm.value = TransportConstructor.defaults.bpm;\n\t\t        this._readOnly('bpm');\n\t\t        /**\n\t\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t\t *  of the time signature over a denominator of 4. \n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeSignature = TransportConstructor.defaults.timeSignature;\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tTIMELINE EVENTS\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  All the events in an object to keep track by ID\n\t\t\t\t *  @type {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scheduledEvents = {};\n\t\t        /**\n\t\t\t\t *  The event ID counter\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._eventID = 0;\n\t\t        /**\n\t\t\t\t * \tThe scheduled events.\n\t\t\t\t *  @type {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeline = new Tone.Timeline();\n\t\t        /**\n\t\t\t\t *  Repeated events\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._repeatedEvents = new Tone.IntervalTimeline();\n\t\t        /**\n\t\t\t\t *  Events that occur once\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._onceEvents = new Tone.Timeline();\n\t\t        /** \n\t\t\t\t *  All of the synced Signals\n\t\t\t\t *  @private \n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this._syncedSignals = [];\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tSWING\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  The subdivision of the swing\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._swingTicks = TransportConstructor.defaults.PPQ / 2;\n\t\t        //8n\n\t\t        /**\n\t\t\t\t *  The swing amount\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._swingAmount = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.Transport, Tone.Emitter);\n\t\t    /**\n\t\t\t *  the defaults\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Transport.defaults = {\n\t\t        'bpm': 120,\n\t\t        'swing': 0,\n\t\t        'swingSubdivision': '8n',\n\t\t        'timeSignature': 4,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': '4m',\n\t\t        'PPQ': 192\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tTICKS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  called on every tick\n\t\t\t *  @param   {number} tickTime clock relative tick time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._processTick = function (tickTime) {\n\t\t        var ticks = this._clock.ticks;\n\t\t        //handle swing\n\t\t        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat\n\t\t            ticks % (this._swingTicks * 2) !== 0) {\n\t\t            //add some swing\n\t\t            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\t\t            var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t\t            tickTime += Tone.Time(this._swingTicks * 2 / 3, 'i').eval() * amount;\n\t\t        }\n\t\t        //do the loop test\n\t\t        if (this.loop) {\n\t\t            if (ticks === this._loopEnd) {\n\t\t                this.emit('stop', tickTime);\n\t\t                this._clock.ticks = this._loopStart;\n\t\t                ticks = this._loopStart;\n\t\t                this.emit('start', tickTime, this.seconds);\n\t\t                this.emit('loop', tickTime);\n\t\t            }\n\t\t        }\n\t\t        //process the single occurrence events\n\t\t        this._onceEvents.forEachBefore(ticks, function (event) {\n\t\t            event.callback(tickTime);\n\t\t        });\n\t\t        //and clear the single occurrence timeline\n\t\t        this._onceEvents.cancelBefore(ticks);\n\t\t        //fire the next tick events if their time has come\n\t\t        this._timeline.forEachAtTime(ticks, function (event) {\n\t\t            event.callback(tickTime);\n\t\t        });\n\t\t        //process the repeated events\n\t\t        this._repeatedEvents.forEachAtTime(ticks, function (event) {\n\t\t            if ((ticks - event.time) % event.interval === 0) {\n\t\t                event.callback(tickTime);\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSCHEDULABLE EVENTS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Schedule an event along the timeline.\n\t\t\t *  @param {Function} callback The callback to be invoked at the time.\n\t\t\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t\t\t *  @return {Number} The id of the event which can be used for canceling the event. \n\t\t\t *  @example\n\t\t\t * //trigger the callback when the Transport reaches the desired time\n\t\t\t * Tone.Transport.schedule(function(time){\n\t\t\t * \tenvelope.triggerAttack(time);\n\t\t\t * }, \"128i\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.schedule = function (callback, time) {\n\t\t        var event = {\n\t\t            'time': this.toTicks(time),\n\t\t            'callback': callback\n\t\t        };\n\t\t        var id = this._eventID++;\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._timeline\n\t\t        };\n\t\t        this._timeline.addEvent(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedule a repeated event along the timeline. The event will fire\n\t\t\t *  at the `interval` starting at the `startTime` and for the specified\n\t\t\t *  `duration`. \n\t\t\t *  @param  {Function}  callback   The callback to invoke.\n\t\t\t *  @param  {Time}    interval   The duration between successive\n\t\t\t *                               callbacks.\n\t\t\t *  @param  {TimelinePosition=}    startTime  When along the timeline the events should\n\t\t\t *                               start being invoked.\n\t\t\t *  @param {Time} [duration=Infinity] How long the event should repeat. \n\t\t\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t\t\t *                           the event. \n\t\t\t *  @example\n\t\t\t * //a callback invoked every eighth note after the first measure\n\t\t\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n\t\t        if (interval <= 0) {\n\t\t            throw new Error('Tone.Transport: repeat events must have an interval larger than 0');\n\t\t        }\n\t\t        var event = {\n\t\t            'time': this.toTicks(startTime),\n\t\t            'duration': this.toTicks(this.defaultArg(duration, Infinity)),\n\t\t            'interval': this.toTicks(interval),\n\t\t            'callback': callback\n\t\t        };\n\t\t        var id = this._eventID++;\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._repeatedEvents\n\t\t        };\n\t\t        this._repeatedEvents.addEvent(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedule an event that will be removed after it is invoked. \n\t\t\t *  Note that if the given time is less than the current transport time, \n\t\t\t *  the event will be invoked immediately. \n\t\t\t *  @param {Function} callback The callback to invoke once.\n\t\t\t *  @param {TransportTime} time The time the callback should be invoked.\n\t\t\t *  @returns {Number} The ID of the scheduled event. \n\t\t\t */\n\t\t    Tone.Transport.prototype.scheduleOnce = function (callback, time) {\n\t\t        var event = {\n\t\t            'time': this.toTicks(time),\n\t\t            'callback': callback\n\t\t        };\n\t\t        var id = this._eventID++;\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._onceEvents\n\t\t        };\n\t\t        this._onceEvents.addEvent(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clear the passed in event id from the timeline\n\t\t\t *  @param {Number} eventId The id of the event.\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.clear = function (eventId) {\n\t\t        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t\t            var item = this._scheduledEvents[eventId.toString()];\n\t\t            item.timeline.removeEvent(item.event);\n\t\t            delete this._scheduledEvents[eventId.toString()];\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove scheduled events from the timeline after\n\t\t\t *  the given time. Repeated events will be removed\n\t\t\t *  if their startTime is after the given time\n\t\t\t *  @param {TransportTime} [after=0] Clear all events after\n\t\t\t *                          this time. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.cancel = function (after) {\n\t\t        after = this.defaultArg(after, 0);\n\t\t        after = this.toTicks(after);\n\t\t        this._timeline.cancel(after);\n\t\t        this._onceEvents.cancel(after);\n\t\t        this._repeatedEvents.cancel(after);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSTART/STOP/PAUSE\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Bind start/stop/pause events from the clock and emit them.\n\t\t\t */\n\t\t    Tone.Transport.prototype._bindClockEvents = function () {\n\t\t        this._clock.on('start', function (time, offset) {\n\t\t            offset = Tone.Time(this._clock.ticks, 'i').toSeconds();\n\t\t            this.emit('start', time, offset);\n\t\t        }.bind(this));\n\t\t        this._clock.on('stop', function (time) {\n\t\t            this.emit('stop', time);\n\t\t        }.bind(this));\n\t\t        this._clock.on('pause', function (time) {\n\t\t            this.emit('pause', time);\n\t\t        }.bind(this));\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._clock.getStateAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now] The time when the transport should start.\n\t\t\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * //start the transport in one second starting at beginning of the 5th measure. \n\t\t\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.start = function (time, offset) {\n\t\t        //start the clock\n\t\t        if (!this.isUndef(offset)) {\n\t\t            offset = this.toTicks(offset);\n\t\t        }\n\t\t        this._clock.start(time, offset);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now] The time when the transport should stop. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * Tone.Transport.stop();\n\t\t\t */\n\t\t    Tone.Transport.prototype.stop = function (time) {\n\t\t        this._clock.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Pause the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.pause = function (time) {\n\t\t        this._clock.pause(time);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSETTERS/GETTERS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  The time signature as just the numerator over 4. \n\t\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Number|Array}\n\t\t\t *  @name timeSignature\n\t\t\t *  @example\n\t\t\t * //common time\n\t\t\t * Tone.Transport.timeSignature = 4;\n\t\t\t * // 7/8\n\t\t\t * Tone.Transport.timeSignature = [7, 8];\n\t\t\t * //this will be reduced to a single number\n\t\t\t * Tone.Transport.timeSignature; //returns 3.5\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {\n\t\t        get: function () {\n\t\t            return this._timeSignature;\n\t\t        },\n\t\t        set: function (timeSig) {\n\t\t            if (this.isArray(timeSig)) {\n\t\t                timeSig = timeSig[0] / timeSig[1] * 4;\n\t\t            }\n\t\t            this._timeSignature = timeSig;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t\t\t * @memberOf Tone.Transport#\n\t\t\t * @type {TransportTime}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (startPosition) {\n\t\t            this._loopStart = this.toTicks(startPosition);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t\t\t * @memberOf Tone.Transport#\n\t\t\t * @type {TransportTime}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (endPosition) {\n\t\t            this._loopEnd = this.toTicks(endPosition);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the loop start and stop at the same time. \n\t\t\t *  @param {TransportTime} startPosition \n\t\t\t *  @param {TransportTime} endPosition   \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * //loop over the first measure\n\t\t\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t\t\t * Tone.Transport.loop = true;\n\t\t\t */\n\t\t    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n\t\t        this.loopStart = startPosition;\n\t\t        this.loopEnd = endPosition;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The swing value. Between 0-1 where 1 equal to \n\t\t\t *  the note + half the subdivision.\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name swing\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'swing', {\n\t\t        get: function () {\n\t\t            return this._swingAmount;\n\t\t        },\n\t\t        set: function (amount) {\n\t\t            //scale the values to a normal range\n\t\t            this._swingAmount = amount;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the subdivision which the swing will be applied to. \n\t\t\t *  The default values is a 16th note. Value must be less \n\t\t\t *  than a quarter note.\n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Time}\n\t\t\t *  @name swingSubdivision\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {\n\t\t        get: function () {\n\t\t            return Tone.Time(this._swingTicks, 'i').toNotation();\n\t\t        },\n\t\t        set: function (subdivision) {\n\t\t            this._swingTicks = this.toTicks(subdivision);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t\t\t *  Setting the value will jump to that position right away. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {BarsBeatsSixteenths}\n\t\t\t *  @name position\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'position', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this.ticks, 'i').toBarsBeatsSixteenths();\n\t\t        },\n\t\t        set: function (progress) {\n\t\t            var ticks = this.toTicks(progress);\n\t\t            this.ticks = ticks;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's position in seconds\n\t\t\t *  Setting the value will jump to that position right away. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Seconds}\n\t\t\t *  @name seconds\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'seconds', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this.ticks, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (progress) {\n\t\t            var ticks = this.toTicks(progress);\n\t\t            this.ticks = ticks;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's loop position as a normalized value. Always\n\t\t\t *  returns 0 if the transport if loop is not true. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @name progress\n\t\t\t *  @type {NormalRange}\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            if (this.loop) {\n\t\t                return (this.ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The transports current tick position.\n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Ticks}\n\t\t\t *  @name ticks\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'ticks', {\n\t\t        get: function () {\n\t\t            return this._clock.ticks;\n\t\t        },\n\t\t        set: function (t) {\n\t\t            var now = this.now();\n\t\t            //stop everything synced to the transport\n\t\t            if (this.state === Tone.State.Started) {\n\t\t                this.emit('stop', now);\n\t\t                this._clock.ticks = t;\n\t\t                //restart it with the new time\n\t\t                this.emit('start', now, this.seconds);\n\t\t            } else {\n\t\t                this._clock.ticks = t;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Pulses Per Quarter note. This is the smallest resolution\n\t\t\t *  the Transport timing supports. This should be set once\n\t\t\t *  on initialization and not set again. Changing this value \n\t\t\t *  after other objects have been created can cause problems. \n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Number}\n\t\t\t *  @name PPQ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {\n\t\t        get: function () {\n\t\t            return this._ppq;\n\t\t        },\n\t\t        set: function (ppq) {\n\t\t            var bpm = this.bpm.value;\n\t\t            this._ppq = ppq;\n\t\t            this.bpm.value = bpm;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Convert from BPM to frequency (factoring in PPQ)\n\t\t\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t\t\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._fromUnits = function (bpm) {\n\t\t        return 1 / (60 / bpm / this.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert from frequency (with PPQ) into BPM\n\t\t\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t\t\t *  @return  {BPM}  The frequency value as BPM.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._toUnits = function (freq) {\n\t\t        return freq / this.PPQ * 60;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSYNCING\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the time aligned to the next subdivision\n\t\t\t *  of the Transport. If the Transport is not started,\n\t\t\t *  it will return 0.\n\t\t\t *  Note: this will not work precisely during tempo ramps.\n\t\t\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t\t\t *  @return  {Number}  The context time of the next subdivision.\n\t\t\t *  @example\n\t\t\t * Tone.Transport.start(); //the transport must be started\n\t\t\t * Tone.Transport.nextSubdivision(\"4n\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.nextSubdivision = function (subdivision) {\n\t\t        subdivision = this.toSeconds(subdivision);\n\t\t        //if the transport's not started, return 0\n\t\t        var now;\n\t\t        if (this.state === Tone.State.Started) {\n\t\t            now = this._clock._nextTick;\n\t\t        } else {\n\t\t            return 0;\n\t\t        }\n\t\t        var transportPos = Tone.Time(this.ticks, 'i').eval();\n\t\t        var remainingTime = subdivision - transportPos % subdivision;\n\t\t        if (remainingTime === 0) {\n\t\t            remainingTime = subdivision;\n\t\t        }\n\t\t        return now + remainingTime;\n\t\t    };\n\t\t    /**\n\t\t\t *  Attaches the signal to the tempo control signal so that \n\t\t\t *  any changes in the tempo will change the signal in the same\n\t\t\t *  ratio. \n\t\t\t *  \n\t\t\t *  @param  {Tone.Signal} signal \n\t\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t\t *                         the two signals. Otherwise it will be computed\n\t\t\t *                         based on their current values. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.syncSignal = function (signal, ratio) {\n\t\t        if (!ratio) {\n\t\t            //get the sync ratio\n\t\t            if (signal._param.value !== 0) {\n\t\t                ratio = signal._param.value / this.bpm._param.value;\n\t\t            } else {\n\t\t                ratio = 0;\n\t\t            }\n\t\t        }\n\t\t        var ratioSignal = new Tone.Gain(ratio);\n\t\t        this.bpm.chain(ratioSignal, signal._param);\n\t\t        this._syncedSignals.push({\n\t\t            'ratio': ratioSignal,\n\t\t            'signal': signal,\n\t\t            'initial': signal._param.value\n\t\t        });\n\t\t        signal._param.value = 0;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsyncs a previously synced signal from the transport's control. \n\t\t\t *  See Tone.Transport.syncSignal.\n\t\t\t *  @param  {Tone.Signal} signal \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.unsyncSignal = function (signal) {\n\t\t        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t\t            var syncedSignal = this._syncedSignals[i];\n\t\t            if (syncedSignal.signal === signal) {\n\t\t                syncedSignal.ratio.dispose();\n\t\t                syncedSignal.signal._param.value = syncedSignal.initial;\n\t\t                this._syncedSignals.splice(i, 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        this._clock.dispose();\n\t\t        this._clock = null;\n\t\t        this._writable('bpm');\n\t\t        this.bpm = null;\n\t\t        this._timeline.dispose();\n\t\t        this._timeline = null;\n\t\t        this._onceEvents.dispose();\n\t\t        this._onceEvents = null;\n\t\t        this._repeatedEvents.dispose();\n\t\t        this._repeatedEvents = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tINITIALIZATION\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    var TransportConstructor = Tone.Transport;\n\t\t    Tone._initAudioContext(function () {\n\t\t        if (typeof Tone.Transport === 'function') {\n\t\t            //a single transport object\n\t\t            Tone.Transport = new Tone.Transport();\n\t\t        } else {\n\t\t            //stop the clock\n\t\t            Tone.Transport.stop();\n\t\t            //get the previous values\n\t\t            var prevSettings = Tone.Transport.get();\n\t\t            //destory the old transport\n\t\t            Tone.Transport.dispose();\n\t\t            //make new Transport insides\n\t\t            TransportConstructor.call(Tone.Transport);\n\t\t            //set the previous config\n\t\t            Tone.Transport.set(prevSettings);\n\t\t        }\n\t\t    });\n\t\t    return Tone.Transport;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Decibels} [volume=0] the initial volume\n\t\t\t *  @example\n\t\t\t * var vol = new Tone.Volume(-12);\n\t\t\t * instrument.chain(vol, Tone.Master);\n\t\t\t */\n\t\t    Tone.Volume = function () {\n\t\t        var options = this.optionsObject(arguments, ['volume'], Tone.Volume.defaults);\n\t\t        /**\n\t\t\t\t * the output node\n\t\t\t\t * @type {GainNode}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The unmuted volume\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._unmutedVolume = 0;\n\t\t        /**\n\t\t\t\t *  if the volume is muted\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._muted = false;\n\t\t        /**\n\t\t\t\t *  The volume control in decibels. \n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.volume = this.output.gain;\n\t\t        this._readOnly('volume');\n\t\t        //set the mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.Volume);\n\t\t    /**\n\t\t\t *  Defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Volume.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Volume#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * volume.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Volume.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._muted;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            if (!this._muted && mute) {\n\t\t                this._unmutedVolume = this.volume.value;\n\t\t                //maybe it should ramp here?\n\t\t                this.volume.value = -Infinity;\n\t\t            } else if (this._muted && !mute) {\n\t\t                this.volume.value = this._unmutedVolume;\n\t\t            }\n\t\t            this._muted = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Volume} this\n\t\t\t */\n\t\t    Tone.Volume.prototype.dispose = function () {\n\t\t        this.input.dispose();\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('volume');\n\t\t        this.volume.dispose();\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Volume;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A single master output which is connected to the\n\t\t\t *          AudioDestinationNode (aka your speakers). \n\t\t\t *          It provides useful conveniences such as the ability \n\t\t\t *          to set the volume and mute the entire application. \n\t\t\t *          It also gives you the ability to apply master effects to your application. \n\t\t\t *          <br><br>\n\t\t\t *          Like Tone.Transport, A single Tone.Master is created\n\t\t\t *          on initialization and you do not need to explicitly construct one.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @singleton\n\t\t\t *  @example\n\t\t\t * //the audio will go from the oscillator to the speakers\n\t\t\t * oscillator.connect(Tone.Master);\n\t\t\t * //a convenience for connecting to the master output is also provided:\n\t\t\t * oscillator.toMaster();\n\t\t\t * //the above two examples are equivalent.\n\t\t\t */\n\t\t    Tone.Master = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        /**\n\t\t\t\t *  The private volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume();\n\t\t        /**\n\t\t\t\t * The volume of the master output.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        //connections\n\t\t        this.input.chain(this.output, this.context.destination);\n\t\t    };\n\t\t    Tone.extend(Tone.Master);\n\t\t    /**\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Master.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Master#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * Tone.Master.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Master.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously \n\t\t\t *  chained in the master effects chain. \n\t\t\t *  @param {AudioNode|Tone...} args All arguments will be connected in a row\n\t\t\t *                                  and the Master will be routed through it.\n\t\t\t *  @return  {Tone.Master}  this\n\t\t\t *  @example\n\t\t\t * //some overall compression to keep the levels in check\n\t\t\t * var masterCompressor = new Tone.Compressor({\n\t\t\t * \t\"threshold\" : -6,\n\t\t\t * \t\"ratio\" : 3,\n\t\t\t * \t\"attack\" : 0.5,\n\t\t\t * \t\"release\" : 0.1\n\t\t\t * });\n\t\t\t * //give a little boost to the lows\n\t\t\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t\t\t * //route everything through the filter \n\t\t\t * //and compressor before going to the speakers\n\t\t\t * Tone.Master.chain(lowBump, masterCompressor);\n\t\t\t */\n\t\t    Tone.Master.prototype.chain = function () {\n\t\t        this.input.disconnect();\n\t\t        this.input.chain.apply(this.input, arguments);\n\t\t        arguments[arguments.length - 1].connect(this.output);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Master}  this\n\t\t\t */\n\t\t    Tone.Master.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('volume');\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUGMENT TONE's PROTOTYPE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * //connect an oscillator to the master output\n\t\t\t * var osc = new Tone.Oscillator().toMaster();\n\t\t\t */\n\t\t    Tone.prototype.toMaster = function () {\n\t\t        this.connect(Tone.Master);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Also augment AudioNode's prototype to include toMaster\n\t\t\t *  as a convenience\n\t\t\t *  @returns {AudioNode} this\n\t\t\t */\n\t\t    AudioNode.prototype.toMaster = function () {\n\t\t        this.connect(Tone.Master);\n\t\t        return this;\n\t\t    };\n\t\t    var MasterConstructor = Tone.Master;\n\t\t    /**\n\t\t\t *  initialize the module and listen for new audio contexts\n\t\t\t */\n\t\t    Tone._initAudioContext(function () {\n\t\t        //a single master output\n\t\t        if (!Tone.prototype.isUndef(Tone.Master)) {\n\t\t            Tone.Master = new MasterConstructor();\n\t\t        } else {\n\t\t            MasterConstructor.prototype.dispose.call(Tone.Master);\n\t\t            MasterConstructor.call(Tone.Master);\n\t\t        }\n\t\t    });\n\t\t    return Tone.Master;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base class for sources. Sources have start/stop methods\n\t\t\t *          and the ability to be synced to the \n\t\t\t *          start/stop of Tone.Transport. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * //Multiple state change events can be chained together,\n\t\t\t * //but must be set in the correct order and with ascending times\n\t\t\t * \n\t\t\t * // OK\n\t\t\t * state.start().stop(\"+0.2\");\n\t\t\t * // AND\n\t\t\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t\t\t *\n\t\t\t * // BAD\n\t\t\t * state.stop(\"+0.2\").start();\n\t\t\t * // OR\n\t\t\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t\t\t * \n\t\t\t */\n\t\t    Tone.Source = function (options) {\n\t\t        // this.createInsOuts(0, 1);\n\t\t        options = this.defaultArg(options, Tone.Source.defaults);\n\t\t        /**\n\t\t\t\t *  The output volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        /**\n\t\t\t\t * \tKeep track of the scheduled state.\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        this._state.memory = 10;\n\t\t        /**\n\t\t\t\t *  The synced `start` callback function from the transport\n\t\t\t\t *  @type {Function}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._synced = false;\n\t\t        /**\n\t\t\t\t *  Keep track of all of the scheduled event ids\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scheduled = [];\n\t\t        //make the output explicitly stereo\n\t\t        this._volume.output.output.channelCount = 2;\n\t\t        this._volume.output.output.channelCountMode = 'explicit';\n\t\t        //mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.Source);\n\t\t    /**\n\t\t\t *  The default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Source.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Source#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Source.prototype, 'state', {\n\t\t        get: function () {\n\t\t            if (this._synced) {\n\t\t                if (Tone.Transport.state === Tone.State.Started) {\n\t\t                    return this._state.getStateAtTime(Tone.Transport.seconds);\n\t\t                } else {\n\t\t                    return Tone.State.Stopped;\n\t\t                }\n\t\t            } else {\n\t\t                return this._state.getStateAtTime(this.now());\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Source#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * source.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Source.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    //overwrite these functions\n\t\t    Tone.Source.prototype._start = Tone.noOp;\n\t\t    Tone.Source.prototype._stop = Tone.noOp;\n\t\t    /**\n\t\t\t *  Start the source at the specified time. If no time is given, \n\t\t\t *  start the source now.\n\t\t\t *  @param  {Time} [time=now] When the source should be started.\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t\t */\n\t\t    Tone.Source.prototype.start = function (time, offset, duration) {\n\t\t        if (this.isUndef(time) && this._synced) {\n\t\t            time = Tone.Transport.seconds;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        //if it's started, stop it and restart it\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t\t            this.stop(time);\n\t\t        }\n\t\t        this._state.setStateAtTime(Tone.State.Started, time);\n\t\t        if (this._synced) {\n\t\t            // add the offset time to the event\n\t\t            var event = this._state.getEvent(time);\n\t\t            event.offset = this.defaultArg(offset, 0);\n\t\t            event.duration = duration;\n\t\t            var sched = Tone.Transport.schedule(function (t) {\n\t\t                this._start(t, offset, duration);\n\t\t            }.bind(this), time);\n\t\t            this._scheduled.push(sched);\n\t\t        } else {\n\t\t            this._start.apply(this, arguments);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the source at the specified time. If no time is given, \n\t\t\t *  stop the source now.\n\t\t\t *  @param  {Time} [time=now] When the source should be stopped. \n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * source.stop(); // stops the source immediately\n\t\t\t */\n\t\t    Tone.Source.prototype.stop = function (time) {\n\t\t        if (this.isUndef(time) && this._synced) {\n\t\t            time = Tone.Transport.seconds;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._state.cancel(time);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t        if (!this._synced) {\n\t\t            this._stop.apply(this, arguments);\n\t\t        } else {\n\t\t            var sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\t            this._scheduled.push(sched);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the source to the Transport so that all subsequent\n\t\t\t *  calls to `start` and `stop` are synced to the TransportTime\n\t\t\t *  instead of the AudioContext time. \n\t\t\t *\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t\t\t * source.sync().start(0).stop(0.3);\n\t\t\t * //start the transport.\n\t\t\t * Tone.Transport.start();\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * //start the transport with an offset and the sync'ed sources\n\t\t\t * //will start in the correct position\n\t\t\t * source.sync().start(0.1);\n\t\t\t * //the source will be invoked with an offset of 0.4\n\t\t\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t\t\t */\n\t\t    Tone.Source.prototype.sync = function () {\n\t\t        this._synced = true;\n\t\t        Tone.Transport.on('start', function (time, offset) {\n\t\t            if (offset > 0) {\n\t\t                // get the playback state at that time\n\t\t                var stateEvent = this._state.getEvent(offset);\n\t\t                // listen for start events which may occur in the middle of the sync'ed time\n\t\t                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {\n\t\t                    // get the offset\n\t\t                    var startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t                    var duration;\n\t\t                    if (stateEvent.duration) {\n\t\t                        duration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t                    }\n\t\t                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t                }\n\t\t            }\n\t\t        }.bind(this));\n\t\t        Tone.Transport.on('stop pause', function (time) {\n\t\t            if (this._state.getStateAtTime(Tone.Transport.seconds) === Tone.State.Started) {\n\t\t                this._stop(time);\n\t\t            }\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t */\n\t\t    Tone.Source.prototype.unsync = function () {\n\t\t        this._synced = false;\n\t\t        Tone.Transport.off('start stop pause');\n\t\t        // clear all of the scheduled ids\n\t\t        for (var i = 0; i < this._scheduled.length; i++) {\n\t\t            var id = this._scheduled[i];\n\t\t            Tone.Transport.clear(id);\n\t\t        }\n\t\t        this._scheduled = [];\n\t\t        this._state.cancel(0);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *\tClean up.\n\t\t\t *  @return {Tone.Source} this\n\t\t\t */\n\t\t    Tone.Source.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.unsync();\n\t\t        this._scheduled = null;\n\t\t        this._writable('volume');\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t    };\n\t\t    return Tone.Source;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Oscillator supports a number of features including\n\t\t\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type), \n\t\t\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source}\n\t\t\t *  @param {Frequency} [frequency] Starting frequency\n\t\t\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t\t\t *  @example\n\t\t\t * //make and start a 440hz sine tone\n\t\t\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t\t\t */\n\t\t    Tone.Oscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type'\n\t\t        ], Tone.Oscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  the main oscillator\n\t\t\t\t *  @type {OscillatorNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = null;\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  the periodic wave\n\t\t\t\t *  @type {PeriodicWave}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._wave = null;\n\t\t        /**\n\t\t\t\t *  The partials of the oscillator\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._partials = this.defaultArg(options.partials, [1]);\n\t\t        /**\n\t\t\t\t *  the phase of the oscillator\n\t\t\t\t *  between 0 - 360\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._phase = options.phase;\n\t\t        /**\n\t\t\t\t *  the type of the oscillator\n\t\t\t\t *  @type {string}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = null;\n\t\t        //setup\n\t\t        this.type = options.type;\n\t\t        this.phase = this._phase;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Oscillator, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Oscillator.defaults = {\n\t\t        'type': 'sine',\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'partials': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The Oscillator types\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Oscillator.Type = {\n\t\t        Sine: 'sine',\n\t\t        Triangle: 'triangle',\n\t\t        Sawtooth: 'sawtooth',\n\t\t        Square: 'square',\n\t\t        Custom: 'custom'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now] \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._start = function (time) {\n\t\t        //new oscillator with previous values\n\t\t        this._oscillator = this.context.createOscillator();\n\t\t        this._oscillator.setPeriodicWave(this._wave);\n\t\t        //connect the control signal to the oscillator frequency & detune\n\t\t        this._oscillator.connect(this.output);\n\t\t        this.frequency.connect(this._oscillator.frequency);\n\t\t        this.detune.connect(this._oscillator.detune);\n\t\t        //start the oscillator\n\t\t        this._oscillator.start(this.toSeconds(time));\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @private\n\t\t\t *  @param  {Time} [time=now] (optional) timing parameter\n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._stop = function (time) {\n\t\t        if (this._oscillator) {\n\t\t            this._oscillator.stop(this.toSeconds(time));\n\t\t            this._oscillator = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t\t *  will also affect the oscillators frequency. \n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t *  @example\n\t\t\t * Tone.Transport.bpm.value = 120;\n\t\t\t * osc.frequency.value = 440;\n\t\t\t * //the ration between the bpm and the frequency will be maintained\n\t\t\t * osc.syncFrequency();\n\t\t\t * Tone.Transport.bpm.value = 240; \n\t\t\t * // the frequency of the oscillator is doubled to 880\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.syncFrequency = function () {\n\t\t        Tone.Transport.syncSignal(this.frequency);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsync the oscillator's frequency from the Transport. \n\t\t\t *  See Tone.Oscillator.syncFrequency\n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.unsyncFrequency = function () {\n\t\t        Tone.Transport.unsyncSignal(this.frequency);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t\t\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t\t\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t\t\t * 8 partials of the triangle wave.\n\t\t\t * <br><br> \n\t\t\t * Uses PeriodicWave internally even for native types so that it can set the phase. \n\t\t\t * PeriodicWave equations are from the \n\t\t\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t\t\t *  \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * //set it to a square wave\n\t\t\t * osc.type = \"square\";\n\t\t\t * @example\n\t\t\t * //set the first 6 partials of a sawtooth wave\n\t\t\t * osc.type = \"sawtooth6\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            var coefs = this._getRealImaginary(type, this._phase);\n\t\t            var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t            this._wave = periodicWave;\n\t\t            if (this._oscillator !== null) {\n\t\t                this._oscillator.setPeriodicWave(this._wave);\n\t\t            }\n\t\t            this._type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Returns the real and imaginary components based \n\t\t\t *  on the oscillator type.\n\t\t\t *  @returns {Array} [real, imaginary]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {\n\t\t        var fftSize = 4096;\n\t\t        var periodicWaveSize = fftSize / 2;\n\t\t        var real = new Float32Array(periodicWaveSize);\n\t\t        var imag = new Float32Array(periodicWaveSize);\n\t\t        var partialCount = 1;\n\t\t        if (type === Tone.Oscillator.Type.Custom) {\n\t\t            partialCount = this._partials.length + 1;\n\t\t            periodicWaveSize = partialCount;\n\t\t        } else {\n\t\t            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t            if (partial) {\n\t\t                partialCount = parseInt(partial[2]) + 1;\n\t\t                type = partial[1];\n\t\t                partialCount = Math.max(partialCount, 2);\n\t\t                periodicWaveSize = partialCount;\n\t\t            }\n\t\t        }\n\t\t        for (var n = 1; n < periodicWaveSize; ++n) {\n\t\t            var piFactor = 2 / (n * Math.PI);\n\t\t            var b;\n\t\t            switch (type) {\n\t\t            case Tone.Oscillator.Type.Sine:\n\t\t                b = n <= partialCount ? 1 : 0;\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Square:\n\t\t                b = n & 1 ? 2 * piFactor : 0;\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Sawtooth:\n\t\t                b = piFactor * (n & 1 ? 1 : -1);\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Triangle:\n\t\t                if (n & 1) {\n\t\t                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n\t\t                } else {\n\t\t                    b = 0;\n\t\t                }\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Custom:\n\t\t                b = this._partials[n - 1];\n\t\t                break;\n\t\t            default:\n\t\t                throw new TypeError('Tone.Oscillator: invalid type: ' + type);\n\t\t            }\n\t\t            if (b !== 0) {\n\t\t                real[n] = -b * Math.sin(phase * n);\n\t\t                imag[n] = b * Math.cos(phase * n);\n\t\t            } else {\n\t\t                real[n] = 0;\n\t\t                imag[n] = 0;\n\t\t            }\n\t\t        }\n\t\t        return [\n\t\t            real,\n\t\t            imag\n\t\t        ];\n\t\t    };\n\t\t    /**\n\t\t\t *  Compute the inverse FFT for a given phase.\t\n\t\t\t *  @param  {Float32Array}  real\n\t\t\t *  @param  {Float32Array}  imag \n\t\t\t *  @param  {NormalRange}  phase \n\t\t\t *  @return  {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n\t\t        var sum = 0;\n\t\t        var len = real.length;\n\t\t        for (var i = 0; i < len; i++) {\n\t\t            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t        }\n\t\t        return sum;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the initial value of the oscillator.\n\t\t\t *  @return  {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._getInitialValue = function () {\n\t\t        var coefs = this._getRealImaginary(this._type, 0);\n\t\t        var real = coefs[0];\n\t\t        var imag = coefs[1];\n\t\t        var maxValue = 0;\n\t\t        var twoPi = Math.PI * 2;\n\t\t        //check for peaks in 8 places\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);\n\t\t        }\n\t\t        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t\t    };\n\t\t    /**\n\t\t\t * The partials of the waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            if (this._type !== Tone.Oscillator.Type.Custom) {\n\t\t                return [];\n\t\t            } else {\n\t\t                return this._partials;\n\t\t            }\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._partials = partials;\n\t\t            this.type = Tone.Oscillator.Type.Custom;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees. \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t * @example\n\t\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._phase * (180 / Math.PI);\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._phase = phase * Math.PI / 180;\n\t\t            //reset the type\n\t\t            this.type = this._type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Dispose and disconnect.\n\t\t\t *  @return {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._oscillator !== null) {\n\t\t            this._oscillator.disconnect();\n\t\t            this._oscillator = null;\n\t\t        }\n\t\t        this._wave = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this._partials = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Oscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n\t\t\t *         it's own class is that many browsers optimize out Tone.Signal\n\t\t\t *         with a value of 0 and will not process nodes further down the graph. \n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Zero = function () {\n\t\t        /**\n\t\t\t\t *  The gain node\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gain = this.input = this.output = new Tone.Gain();\n\t\t        Tone.Zero._zeros.connect(this._gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Zero);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @return  {Tone.Zero}  this\n\t\t\t */\n\t\t    Tone.Zero.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._gain.dispose();\n\t\t        this._gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Generates a constant output of 0. This is so \n\t\t\t *  the processing graph doesn't optimize out this\n\t\t\t *  segment of the graph. \n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @const\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t\t    Tone.Zero._zeros = null;\n\t\t    /**\n\t\t\t *  initializer function\n\t\t\t */\n\t\t    Tone._initAudioContext(function (audioContext) {\n\t\t        var buffer = audioContext.createBuffer(1, 128, audioContext.sampleRate);\n\t\t        var arr = buffer.getChannelData(0);\n\t\t        for (var i = 0; i < arr.length; i++) {\n\t\t            arr[i] = 0;\n\t\t        }\n\t\t        Tone.Zero._zeros = audioContext.createBufferSource();\n\t\t        Tone.Zero._zeros.channelCount = 1;\n\t\t        Tone.Zero._zeros.channelCountMode = 'explicit';\n\t\t        Tone.Zero._zeros.buffer = buffer;\n\t\t        Tone.Zero._zeros.loop = true;\n\t\t        Tone.Zero._zeros.start(0);\n\t\t        Tone.Zero._zeros.noGC();\n\t\t    });\n\t\t    return Tone.Zero;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal \n\t\t\t *          which can be attached to an AudioParam or Tone.Signal \n\t\t\t *          in order to modulate that parameter with an oscillator. The LFO can \n\t\t\t *          also be synced to the transport to start/stop and change when the tempo changes.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n\t\t\t *                               in the frequency range of 0.1 to 10 hertz. \n\t\t\t *  @param {number=} min The minimum output value of the LFO. \n\t\t\t *  @param {number=} max The maximum value of the LFO. \n\t\t\t *  @example\n\t\t\t * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t\t * lfo.connect(filter.frequency);\n\t\t\t */\n\t\t    Tone.LFO = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'min',\n\t\t            'max'\n\t\t        ], Tone.LFO.defaults);\n\t\t        /** \n\t\t\t\t *  The oscillator. \n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = new Tone.Oscillator({\n\t\t            'frequency': options.frequency,\n\t\t            'type': options.type\n\t\t        });\n\t\t        /**\n\t\t\t\t *  the lfo's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._oscillator.frequency;\n\t\t        /**\n\t\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t\t * the min and max output. For example if the min is -10 and the max \n\t\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t\t * between -5 and 5. \n\t\t\t\t * @type {Number}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.amplitude = this._oscillator.volume;\n\t\t        this.amplitude.units = Tone.Type.NormalRange;\n\t\t        this.amplitude.value = options.amplitude;\n\t\t        /**\n\t\t\t\t *  The signal which is output when the LFO is stopped\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\t\t        /**\n\t\t\t\t *  Just outputs zeros.\n\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._zeros = new Tone.Zero();\n\t\t        /**\n\t\t\t\t *  The value that the LFO outputs when it's stopped\n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stoppedValue = 0;\n\t\t        /**\n\t\t\t\t *  @type {Tone.AudioToGain} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._a2g = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Scale} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scaler = this.output = new Tone.Scale(options.min, options.max);\n\t\t        /**\n\t\t\t\t *  the units of the LFO (used for converting)\n\t\t\t\t *  @type {Tone.Type} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._units = Tone.Type.Default;\n\t\t        this.units = options.units;\n\t\t        //connect it up\n\t\t        this._oscillator.chain(this._a2g, this._scaler);\n\t\t        this._zeros.connect(this._a2g);\n\t\t        this._stoppedSignal.connect(this._a2g);\n\t\t        this._readOnly([\n\t\t            'amplitude',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this.phase = options.phase;\n\t\t    };\n\t\t    Tone.extend(Tone.LFO, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.LFO.defaults = {\n\t\t        'type': 'sine',\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'phase': 0,\n\t\t        'frequency': '4n',\n\t\t        'amplitude': 1,\n\t\t        'units': Tone.Type.Default\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the LFO. \n\t\t\t *  @param  {Time} [time=now] the time the LFO will start\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._stoppedSignal.setValueAtTime(0, time);\n\t\t        this._oscillator.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the LFO. \n\t\t\t *  @param  {Time} [time=now] the time the LFO will stop\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t\t        this._oscillator.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the start/stop/pause to the transport \n\t\t\t *  and the frequency to the bpm of the transport\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t *  @example\n\t\t\t *  lfo.frequency.value = \"8n\";\n\t\t\t *  lfo.sync().start(0)\n\t\t\t *  //the rate of the LFO will always be an eighth note, \n\t\t\t *  //even as the tempo changes\n\t\t\t */\n\t\t    Tone.LFO.prototype.sync = function () {\n\t\t        this._oscillator.sync();\n\t\t        this._oscillator.syncFrequency();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  unsync the LFO from transport control\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.unsync = function () {\n\t\t        this._oscillator.unsync();\n\t\t        this._oscillator.unsyncFrequency();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The miniumum output of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._scaler.min);\n\t\t        },\n\t\t        set: function (min) {\n\t\t            min = this._fromUnits(min);\n\t\t            this._scaler.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._scaler.max);\n\t\t        },\n\t\t        set: function (max) {\n\t\t            max = this._fromUnits(max);\n\t\t            this._scaler.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the oscillator: sine, square, sawtooth, triangle. \n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._oscillator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._oscillator.type = type;\n\t\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t\t            this._stoppedSignal.value = this._stoppedValue;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._oscillator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._oscillator.phase = phase;\n\t\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t\t            this._stoppedSignal.value = this._stoppedValue;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The output units of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {Tone.Type}\n\t\t\t * @name units\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'units', {\n\t\t        get: function () {\n\t\t            return this._units;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            var currentMin = this.min;\n\t\t            var currentMax = this.max;\n\t\t            //convert the min and the max\n\t\t            this._units = val;\n\t\t            this.min = currentMin;\n\t\t            this.max = currentMax;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {Boolean}\n\t\t\t * @name mute\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._oscillator.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._oscillator.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.LFO#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._oscillator.state;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node. \n\t\t\t *  Tone.LFO will automatically convert to the destination units of the \n\t\t\t *  will get the units from the connected node.\n\t\t\t *  @param  {Tone | AudioParam | AudioNode} node \n\t\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype.connect = function (node) {\n\t\t        if (node.constructor === Tone.Signal || node.constructor === Tone.Param || node.constructor === Tone.TimelineSignal) {\n\t\t            this.convert = node.convert;\n\t\t            this.units = node.units;\n\t\t        }\n\t\t        Tone.Signal.prototype.connect.apply(this, arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  private method borrowed from Param converts \n\t\t\t *  units from their destination value\n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\t\t    /**\n\t\t\t *  private method borrowed from Param converts \n\t\t\t *  units to their destination value\n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\t\t    /**\n\t\t\t *  disconnect and dispose\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'amplitude',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this._oscillator.dispose();\n\t\t        this._oscillator = null;\n\t\t        this._stoppedSignal.dispose();\n\t\t        this._stoppedSignal = null;\n\t\t        this._zeros.dispose();\n\t\t        this._zeros = null;\n\t\t        this._scaler.dispose();\n\t\t        this._scaler = null;\n\t\t        this._a2g.dispose();\n\t\t        this._a2g = null;\n\t\t        this.frequency = null;\n\t\t        this.amplitude = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.LFO;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Limiter will limit the loudness of an incoming signal. \n\t\t\t *         It is composed of a Tone.Compressor with a fast attack \n\t\t\t *         and release. Limiters are commonly used to safeguard against \n\t\t\t *         signal clipping. Unlike a compressor, limiters do not provide \n\t\t\t *         smooth gain reduction and almost completely prevent \n\t\t\t *         additional gain above the threshold.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {number} threshold The theshold above which the limiting is applied. \n\t\t\t *  @example\n\t\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t\t */\n\t\t    Tone.Limiter = function () {\n\t\t        var options = this.optionsObject(arguments, ['threshold'], Tone.Limiter.defaults);\n\t\t        /**\n\t\t\t\t *  the compressor\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this._compressor = this.input = this.output = new Tone.Compressor({\n\t\t            'attack': 0.001,\n\t\t            'decay': 0.001,\n\t\t            'threshold': options.threshold\n\t\t        });\n\t\t        /**\n\t\t\t\t * The threshold of of the limiter\n\t\t\t\t * @type {Decibel}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.threshold = this._compressor.threshold;\n\t\t        this._readOnly('threshold');\n\t\t    };\n\t\t    Tone.extend(Tone.Limiter);\n\t\t    /**\n\t\t\t *  The default value\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Limiter.defaults = { 'threshold': -12 };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Limiter} this\n\t\t\t */\n\t\t    Tone.Limiter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._compressor.dispose();\n\t\t        this._compressor = null;\n\t\t        this._writable('threshold');\n\t\t        this.threshold = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Limiter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to \n\t\t\t *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [delayTime] The delay time of the comb filter\n\t\t\t *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n\t\t\t *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n\t\t\t *                                signal as it is fedback. \n\t\t\t */\n\t\t    Tone.LowpassCombFilter = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ], Tone.LowpassCombFilter.defaults);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = this.input = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The delayTime of the comb filter. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delay.delayTime;\n\t\t        /**\n\t\t\t\t *  the lowpass filter\n\t\t\t\t *  @type  {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowpass = this.output = this.context.createBiquadFilter();\n\t\t        this._lowpass.Q.value = -3.0102999566398125;\n\t\t        this._lowpass.type = 'lowpass';\n\t\t        /**\n\t\t\t\t *  The dampening control of the feedback\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = new Tone.Param({\n\t\t            'param': this._lowpass.frequency,\n\t\t            'units': Tone.Type.Frequency,\n\t\t            'value': options.dampening\n\t\t        });\n\t\t        /**\n\t\t\t\t *  the feedback gain\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._feedback.gain;\n\t\t        //connections\n\t\t        this._delay.chain(this._lowpass, this._feedback, this._delay);\n\t\t        this._readOnly([\n\t\t            'dampening',\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.LowpassCombFilter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.LowpassCombFilter.defaults = {\n\t\t        'delayTime': 0.1,\n\t\t        'resonance': 0.5,\n\t\t        'dampening': 3000\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.LowpassCombFilter} this\n\t\t\t */\n\t\t    Tone.LowpassCombFilter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'dampening',\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t        this.dampening.dispose();\n\t\t        this.dampening = null;\n\t\t        this.resonance.dispose();\n\t\t        this.resonance = null;\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this.delayTime = null;\n\t\t        this._lowpass.disconnect();\n\t\t        this._lowpass = null;\n\t\t        this._feedback.disconnect();\n\t\t        this._feedback = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.LowpassCombFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Merge brings two signals into the left and right \n\t\t\t *          channels of a single stereo channel.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var merge = new Tone.Merge().toMaster();\n\t\t\t * //routing a sine tone in the left channel\n\t\t\t * //and noise in the right channel\n\t\t\t * var osc = new Tone.Oscillator().connect(merge.left);\n\t\t\t * var noise = new Tone.Noise().connect(merge.right);\n\t\t\t * //starting our oscillators\n\t\t\t * noise.start();\n\t\t\t * osc.start();\n\t\t\t */\n\t\t    Tone.Merge = function () {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  The left input channel.\n\t\t\t\t *  Alias for <code>input[0]</code>\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t */\n\t\t        this.left = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The right input channel.\n\t\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t */\n\t\t        this.right = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the merger node for the two channels\n\t\t\t\t *  @type {ChannelMergerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merger = this.output = this.context.createChannelMerger(2);\n\t\t        //connections\n\t\t        this.left.connect(this._merger, 0, 0);\n\t\t        this.right.connect(this._merger, 0, 1);\n\t\t        this.left.channelCount = 1;\n\t\t        this.right.channelCount = 1;\n\t\t        this.left.channelCountMode = 'explicit';\n\t\t        this.right.channelCountMode = 'explicit';\n\t\t    };\n\t\t    Tone.extend(Tone.Merge);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Merge} this\n\t\t\t */\n\t\t    Tone.Merge.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.left.dispose();\n\t\t        this.left = null;\n\t\t        this.right.dispose();\n\t\t        this.right = null;\n\t\t        this._merger.disconnect();\n\t\t        this._merger = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Merge;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n\t\t\t *          of an input signal with some averaging applied. It can also get the raw \n\t\t\t *          value of the input signal.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {String} type Either \"level\" or \"signal\". \n\t\t\t *  @param {Number} smoothing The amount of smoothing applied between frames.\n\t\t\t *  @example\n\t\t\t * var meter = new Tone.Meter();\n\t\t\t * var mic = new Tone.Microphone().start();\n\t\t\t * //connect mic to the meter\n\t\t\t * mic.connect(meter);\n\t\t\t * //the current level of the mic input\n\t\t\t * var level = meter.value;\n\t\t\t */\n\t\t    Tone.Meter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'type',\n\t\t            'smoothing'\n\t\t        ], Tone.Meter.defaults);\n\t\t        /**\n\t\t\t\t *  The type of the meter, either \"level\" or \"signal\". \n\t\t\t\t *  A \"level\" meter will return the volume level (rms) of the \n\t\t\t\t *  input signal and a \"signal\" meter will return\n\t\t\t\t *  the signal value of the input. \n\t\t\t\t *  @type  {String}\n\t\t\t\t */\n\t\t        this.type = options.type;\n\t\t        /**\n\t\t\t\t *  The analyser node which computes the levels.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Tone.Analyser}\n\t\t\t\t */\n\t\t        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 512);\n\t\t        this._analyser.returnType = 'float';\n\t\t        /**\n\t\t\t\t *  The amount of carryover between the current and last frame. \n\t\t\t\t *  Only applied meter for \"level\" type.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this.smoothing = options.smoothing;\n\t\t        /**\n\t\t\t\t *  The last computed value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lastValue = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.Meter);\n\t\t    /**\n\t\t\t *  @private\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Meter.Type = {\n\t\t        Level: 'level',\n\t\t        Signal: 'signal'\n\t\t    };\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type {Object}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Meter.defaults = {\n\t\t        'smoothing': 0.8,\n\t\t        'type': Tone.Meter.Type.Level\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the meter. A value of 1 is\n\t\t\t * \"unity\".\n\t\t\t * @memberOf Tone.Meter#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Meter.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var signal = this._analyser.analyse();\n\t\t            if (this.type === Tone.Meter.Type.Level) {\n\t\t                //rms\n\t\t                var sum = 0;\n\t\t                for (var i = 0; i < signal.length; i++) {\n\t\t                    sum += Math.pow(signal[i], 2);\n\t\t                }\n\t\t                var rms = Math.sqrt(sum / signal.length);\n\t\t                //smooth it\n\t\t                rms = Math.max(rms, this._lastValue * this.smoothing);\n\t\t                this._lastValue = rms;\n\t\t                //scale it\n\t\t                var unity = 0.35;\n\t\t                var val = rms / unity;\n\t\t                //scale the output curve\n\t\t                return Math.sqrt(val);\n\t\t            } else {\n\t\t                return signal[0];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Meter} this\n\t\t\t */\n\t\t    Tone.Meter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._analyser.dispose();\n\t\t        this._analyser = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Meter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *\t@class  Tone.Split splits an incoming signal into left and right channels.\n\t\t\t *\t\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var split = new Tone.Split();\n\t\t\t * stereoSignal.connect(split);\n\t\t\t */\n\t\t    Tone.Split = function () {\n\t\t        this.createInsOuts(0, 2);\n\t\t        /** \n\t\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._splitter = this.input = this.context.createChannelSplitter(2);\n\t\t        /** \n\t\t\t\t *  Left channel output. \n\t\t\t\t *  Alias for <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.left = this.output[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Right channel output.\n\t\t\t\t *  Alias for <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.right = this.output[1] = new Tone.Gain();\n\t\t        //connections\n\t\t        this._splitter.connect(this.left, 0, 0);\n\t\t        this._splitter.connect(this.right, 1, 0);\n\t\t    };\n\t\t    Tone.extend(Tone.Split);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Split} this\n\t\t\t */\n\t\t    Tone.Split.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._splitter.disconnect();\n\t\t        this.left.dispose();\n\t\t        this.left = null;\n\t\t        this.right.dispose();\n\t\t        this.right = null;\n\t\t        this._splitter = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Split;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels). <br><br>\n\t\t\t *         <code>\n\t\t\t *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n\t\t\t *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideSplit = function () {\n\t\t        this.createInsOuts(0, 2);\n\t\t        /**\n\t\t\t\t *  split the incoming signal into left and right channels\n\t\t\t\t *  @type  {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._split = this.input = new Tone.Split();\n\t\t        /**\n\t\t\t\t *  The mid send. Connect to mid processing. Alias for\n\t\t\t\t *  <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t */\n\t\t        this.mid = this.output[0] = new Tone.Expr('($0 + $1) * $2');\n\t\t        /**\n\t\t\t\t *  The side output. Connect to side processing. Alias for\n\t\t\t\t *  <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t */\n\t\t        this.side = this.output[1] = new Tone.Expr('($0 - $1) * $2');\n\t\t        this._split.connect(this.mid, 0, 0);\n\t\t        this._split.connect(this.mid, 1, 1);\n\t\t        this._split.connect(this.side, 0, 0);\n\t\t        this._split.connect(this.side, 1, 1);\n\t\t        sqrtTwo.connect(this.mid, 0, 2);\n\t\t        sqrtTwo.connect(this.side, 0, 2);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideSplit);\n\t\t    /**\n\t\t\t *  a constant signal equal to 1 / sqrt(2)\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t */\n\t\t    var sqrtTwo = null;\n\t\t    Tone._initAudioContext(function () {\n\t\t        sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MidSideSplit} this\n\t\t\t */\n\t\t    Tone.MidSideSplit.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._split.dispose();\n\t\t        this._split = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideSplit;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels). \n\t\t\t *         MidSideMerge merges the mid and side signal after they've been seperated\n\t\t\t *         by Tone.MidSideSplit.<br><br>\n\t\t\t *         <code>\n\t\t\t *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n\t\t\t *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone.StereoEffect}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideMerge = function () {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  The mid signal input. Alias for\n\t\t\t\t *  <code>input[0]</code>\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t */\n\t\t        this.mid = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  recombine the mid/side into Left\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._left = new Tone.Expr('($0 + $1) * $2');\n\t\t        /**\n\t\t\t\t *  The side signal input. Alias for\n\t\t\t\t *  <code>input[1]</code>\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t */\n\t\t        this.side = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  recombine the mid/side into Right\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._right = new Tone.Expr('($0 - $1) * $2');\n\t\t        /**\n\t\t\t\t *  Merge the left/right signal back into a stereo signal.\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = this.output = new Tone.Merge();\n\t\t        this.mid.connect(this._left, 0, 0);\n\t\t        this.side.connect(this._left, 0, 1);\n\t\t        this.mid.connect(this._right, 0, 0);\n\t\t        this.side.connect(this._right, 0, 1);\n\t\t        this._left.connect(this._merge, 0, 0);\n\t\t        this._right.connect(this._merge, 0, 1);\n\t\t        sqrtTwo.connect(this._left, 0, 2);\n\t\t        sqrtTwo.connect(this._right, 0, 2);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideMerge);\n\t\t    /**\n\t\t\t *  A constant signal equal to 1 / sqrt(2).\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t */\n\t\t    var sqrtTwo = null;\n\t\t    Tone._initAudioContext(function () {\n\t\t        sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MidSideMerge} this\n\t\t\t */\n\t\t    Tone.MidSideMerge.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._left.dispose();\n\t\t        this._left = null;\n\t\t        this._right.dispose();\n\t\t        this._right = null;\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideMerge;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.MidSideCompressor applies two different compressors to the mid\n\t\t\t *         and side signal components. See Tone.MidSideSplit. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Object} options The options that are passed to the mid and side\n\t\t\t *                          compressors. \n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideCompressor = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MidSideCompressor.defaults);\n\t\t        /**\n\t\t\t\t *  the mid/side split\n\t\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideSplit = this.input = new Tone.MidSideSplit();\n\t\t        /**\n\t\t\t\t *  the mid/side recombination\n\t\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideMerge = this.output = new Tone.MidSideMerge();\n\t\t        /**\n\t\t\t\t *  The compressor applied to the mid signal\n\t\t\t\t *  @type  {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.mid = new Tone.Compressor(options.mid);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the side signal\n\t\t\t\t *  @type  {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.side = new Tone.Compressor(options.side);\n\t\t        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t\t        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t\t        this._readOnly([\n\t\t            'mid',\n\t\t            'side'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideCompressor);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MidSideCompressor.defaults = {\n\t\t        'mid': {\n\t\t            'ratio': 3,\n\t\t            'threshold': -24,\n\t\t            'release': 0.03,\n\t\t            'attack': 0.02,\n\t\t            'knee': 16\n\t\t        },\n\t\t        'side': {\n\t\t            'ratio': 6,\n\t\t            'threshold': -30,\n\t\t            'release': 0.25,\n\t\t            'attack': 0.03,\n\t\t            'knee': 10\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MidSideCompressor} this\n\t\t\t */\n\t\t    Tone.MidSideCompressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'mid',\n\t\t            'side'\n\t\t        ]);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._midSideSplit.dispose();\n\t\t        this._midSideSplit = null;\n\t\t        this._midSideMerge.dispose();\n\t\t        this._midSideMerge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideCompressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n\t\t\t *         where both left and right channels have the same value. This can be useful \n\t\t\t *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.Mono = function () {\n\t\t        this.createInsOuts(1, 0);\n\t\t        /**\n\t\t\t\t *  merge the signal\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = this.output = new Tone.Merge();\n\t\t        this.input.connect(this._merge, 0, 0);\n\t\t        this.input.connect(this._merge, 0, 1);\n\t\t        this.input.gain.value = this.dbToGain(-10);\n\t\t    };\n\t\t    Tone.extend(Tone.Mono);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Mono} this\n\t\t\t */\n\t\t    Tone.Mono.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Mono;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Object} options The low/mid/high compressor settings.\n\t\t\t *  @example\n\t\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t\t *  \t\"lowFrequency\" : 200,\n\t\t\t *  \t\"highFrequency\" : 1300\n\t\t\t *  \t\"low\" : {\n\t\t\t *  \t\t\"threshold\" : -12\n\t\t\t *  \t}\n\t\t\t *  })\n\t\t\t */\n\t\t    Tone.MultibandCompressor = function (options) {\n\t\t        options = this.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\t\t        /**\n\t\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._splitter = this.input = new Tone.MultibandSplit({\n\t\t            'lowFrequency': options.lowFrequency,\n\t\t            'highFrequency': options.highFrequency\n\t\t        });\n\t\t        /**\n\t\t\t\t *  low/mid crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = this._splitter.lowFrequency;\n\t\t        /**\n\t\t\t\t *  mid/high crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = this._splitter.highFrequency;\n\t\t        /**\n\t\t\t\t *  the output\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The compressor applied to the low frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.low = new Tone.Compressor(options.low);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the mid frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.mid = new Tone.Compressor(options.mid);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the high frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.high = new Tone.Compressor(options.high);\n\t\t        //connect the compressor\n\t\t        this._splitter.low.chain(this.low, this.output);\n\t\t        this._splitter.mid.chain(this.mid, this.output);\n\t\t        this._splitter.high.chain(this.high, this.output);\n\t\t        this._readOnly([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MultibandCompressor);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MultibandCompressor.defaults = {\n\t\t        'low': Tone.Compressor.defaults,\n\t\t        'mid': Tone.Compressor.defaults,\n\t\t        'high': Tone.Compressor.defaults,\n\t\t        'lowFrequency': 250,\n\t\t        'highFrequency': 2000\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MultibandCompressor} this\n\t\t\t */\n\t\t    Tone.MultibandCompressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._splitter.dispose();\n\t\t        this._writable([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t        this.low.dispose();\n\t\t        this.mid.dispose();\n\t\t        this.high.dispose();\n\t\t        this._splitter = null;\n\t\t        this.low = null;\n\t\t        this.mid = null;\n\t\t        this.high = null;\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultibandCompressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n\t\t\t *          support 3D. Panner uses the StereoPannerNode when available. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {NormalRange} [initialPan=0] The initail panner value (defaults to 0 = center)\n\t\t\t *  @example\n\t\t\t *  //pan the input signal hard right. \n\t\t\t *  var panner = new Tone.Panner(1);\n\t\t\t */\n\t\t    Tone.Panner = function (initialPan) {\n\t\t        if (this._hasStereoPanner) {\n\t\t            /**\n\t\t\t\t\t *  the panner node\n\t\t\t\t\t *  @type {StereoPannerNode}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._panner = this.input = this.output = this.context.createStereoPanner();\n\t\t            /**\n\t\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t\t *  @type {NormalRange}\n\t\t\t\t\t *  @signal\n\t\t\t\t\t */\n\t\t            this.pan = this._panner.pan;\n\t\t        } else {\n\t\t            /**\n\t\t\t\t\t *  the dry/wet knob\n\t\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._crossFade = new Tone.CrossFade();\n\t\t            /**\n\t\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._merger = this.output = new Tone.Merge();\n\t\t            /**\n\t\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._splitter = this.input = new Tone.Split();\n\t\t            /**\n\t\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t\t *  @type {AudioRange}\n\t\t\t\t\t *  @signal\n\t\t\t\t\t */\n\t\t            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\t\t            /**\n\t\t\t\t\t *  always sends 0\n\t\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._zero = new Tone.Zero();\n\t\t            /**\n\t\t\t\t\t *  The analog to gain conversion\n\t\t\t\t\t *  @type  {Tone.AudioToGain}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._a2g = new Tone.AudioToGain();\n\t\t            //CONNECTIONS:\n\t\t            this._zero.connect(this._a2g);\n\t\t            this.pan.chain(this._a2g, this._crossFade.fade);\n\t\t            //left channel is a, right channel is b\n\t\t            this._splitter.connect(this._crossFade, 0, 0);\n\t\t            this._splitter.connect(this._crossFade, 1, 1);\n\t\t            //merge it back together\n\t\t            this._crossFade.a.connect(this._merger, 0, 0);\n\t\t            this._crossFade.b.connect(this._merger, 0, 1);\n\t\t        }\n\t\t        //initial value\n\t\t        this.pan.value = this.defaultArg(initialPan, 0);\n\t\t        this._readOnly('pan');\n\t\t    };\n\t\t    Tone.extend(Tone.Panner);\n\t\t    /**\n\t\t\t *  indicates if the panner is using the new StereoPannerNode internally\n\t\t\t *  @type  {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Panner.prototype._hasStereoPanner = Tone.prototype.isFunction(Tone.context.createStereoPanner);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Panner} this\n\t\t\t */\n\t\t    Tone.Panner.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('pan');\n\t\t        if (this._hasStereoPanner) {\n\t\t            this._panner.disconnect();\n\t\t            this._panner = null;\n\t\t            this.pan = null;\n\t\t        } else {\n\t\t            this._zero.dispose();\n\t\t            this._zero = null;\n\t\t            this._crossFade.dispose();\n\t\t            this._crossFade = null;\n\t\t            this._splitter.dispose();\n\t\t            this._splitter = null;\n\t\t            this._merger.dispose();\n\t\t            this._merger = null;\n\t\t            this.pan.dispose();\n\t\t            this.pan = null;\n\t\t            this._a2g.dispose();\n\t\t            this._a2g = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Panner;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n\t\t\t *          Tries to normalize the API across various browsers. See Tone.Listener\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Number} positionX The initial x position.\n\t\t\t *  @param {Number} positionY The initial y position.\n\t\t\t *  @param {Number} positionZ The initial z position.\n\t\t\t */\n\t\t    Tone.Panner3D = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'positionX',\n\t\t            'positionY',\n\t\t            'positionZ'\n\t\t        ], Tone.Panner3D.defaults);\n\t\t        /**\n\t\t\t\t *  The panner node\n\t\t\t\t *  @type {PannerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = this.input = this.output = this.context.createPanner();\n\t\t        //set some values\n\t\t        this._panner.panningModel = options.panningModel;\n\t\t        this._panner.maxDistance = options.maxDistance;\n\t\t        this._panner.distanceModel = options.distanceModel;\n\t\t        this._panner.coneOuterGain = options.coneOuterGain;\n\t\t        this._panner.coneOuterAngle = options.coneOuterAngle;\n\t\t        this._panner.coneInnerAngle = options.coneInnerAngle;\n\t\t        this._panner.refDistance = options.refDistance;\n\t\t        this._panner.rolloffFactor = options.rolloffFactor;\n\t\t        /**\n\t\t\t\t *  Holds the current orientation\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._orientation = [\n\t\t            options.orientationX,\n\t\t            options.orientationY,\n\t\t            options.orientationZ\n\t\t        ];\n\t\t        /**\n\t\t\t\t *  Holds the current position\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._position = [\n\t\t            options.positionX,\n\t\t            options.positionY,\n\t\t            options.positionZ\n\t\t        ];\n\t\t        // set the default position/orientation\n\t\t        this.orientationX = options.orientationX;\n\t\t        this.orientationY = options.orientationY;\n\t\t        this.orientationZ = options.orientationZ;\n\t\t        this.positionX = options.positionX;\n\t\t        this.positionY = options.positionY;\n\t\t        this.positionZ = options.positionZ;\n\t\t    };\n\t\t    Tone.extend(Tone.Panner3D);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t *  Defaults according to the specification\n\t\t\t */\n\t\t    Tone.Panner3D.defaults = {\n\t\t        'positionX': 0,\n\t\t        'positionY': 0,\n\t\t        'positionZ': 0,\n\t\t        'orientationX': 0,\n\t\t        'orientationY': 0,\n\t\t        'orientationZ': 0,\n\t\t        'panningModel': 'equalpower',\n\t\t        'maxDistance': 10000,\n\t\t        'distanceModel': 'inverse',\n\t\t        'coneOuterGain': 0,\n\t\t        'coneOuterAngle': 360,\n\t\t        'coneInnerAngle': 360,\n\t\t        'refDistance': 1,\n\t\t        'rolloffFactor': 1\n\t\t    };\n\t\t    Tone.Panner3D.prototype._rampTimeConstant = 0.3;\n\t\t    /**\n\t\t\t *  Sets the position of the source in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.setPosition = function (x, y, z) {\n\t\t        if (this._panner.positionX) {\n\t\t            var now = this.now();\n\t\t            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._panner.setPosition(x, y, z);\n\t\t        }\n\t\t        this._position = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the orientation of the source in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {\n\t\t        if (this._panner.orientationX) {\n\t\t            var now = this.now();\n\t\t            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._panner.setOrientation(x, y, z);\n\t\t        }\n\t\t        this._orientation = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The x position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {\n\t\t        set: function (pos) {\n\t\t            this._position[0] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {\n\t\t        set: function (pos) {\n\t\t            this._position[1] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {\n\t\t        set: function (pos) {\n\t\t            this._position[2] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[0] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[1] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[2] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Proxy a property on the panner to an exposed public propery\n\t\t\t *  @param  {String}  prop\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty = function (prop) {\n\t\t        Object.defineProperty(Tone.Panner3D.prototype, prop, {\n\t\t            set: function (val) {\n\t\t                this._panner[prop] = val;\n\t\t            },\n\t\t            get: function () {\n\t\t                return this._panner[prop];\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  The panning model. Either \"equalpower\" or \"HRTF\".\n\t\t\t *  @type {String}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name panningModel\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('panningModel');\n\t\t    /**\n\t\t\t *  A reference distance for reducing volume as source move further from the listener\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name refDistance\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('refDistance');\n\t\t    /**\n\t\t\t *  Describes how quickly the volume is reduced as source moves away from listener.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name rolloffFactor\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('rolloffFactor');\n\t\t    /**\n\t\t\t *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t\t\t *  @type {String}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name distanceModel\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('distanceModel');\n\t\t    /**\n\t\t\t *  The angle, in degrees, inside of which there will be no volume reduction\n\t\t\t *  @type {Degrees}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneInnerAngle\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneInnerAngle');\n\t\t    /**\n\t\t\t *  The angle, in degrees, outside of which the volume will be reduced \n\t\t\t *  to a constant value of coneOuterGain\n\t\t\t *  @type {Degrees}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneOuterAngle\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneOuterAngle');\n\t\t    /**\n\t\t\t *  The gain outside of the coneOuterAngle\n\t\t\t *  @type {Gain}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneOuterGain\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneOuterGain');\n\t\t    /**\n\t\t\t *  The maximum distance between source and listener, \n\t\t\t *  after which the volume will not be reduced any further.\n\t\t\t *  @type {Positive}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name maxDistance\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('maxDistance');\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.dispose = function () {\n\t\t        this._panner.disconnect();\n\t\t        this._panner = null;\n\t\t        this._orientation = null;\n\t\t        this._position = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Panner3D;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {AudioRange} pan the initial pan\n\t\t\t *  @param {number} volume The output volume. \n\t\t\t *  @example\n\t\t\t * //pan the incoming signal left and drop the volume\n\t\t\t * var panVol = new Tone.PanVol(0.25, -12);\n\t\t\t */\n\t\t    Tone.PanVol = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ], Tone.PanVol.defaults);\n\t\t        /**\n\t\t\t\t *  The panning node\n\t\t\t\t *  @type {Tone.Panner}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = this.input = new Tone.Panner(options.pan);\n\t\t        /**\n\t\t\t\t *  The L/R panning control.\n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.pan = this._panner.pan;\n\t\t        /**\n\t\t\t\t *  The volume node\n\t\t\t\t *  @type {Tone.Volume}\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t *  The volume control in decibels. \n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        //connections\n\t\t        this._panner.connect(this._volume);\n\t\t        this._readOnly([\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PanVol);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.PanVol.defaults = {\n\t\t        'pan': 0.5,\n\t\t        'volume': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.PanVol} this\n\t\t\t */\n\t\t    Tone.PanVol.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ]);\n\t\t        this._panner.dispose();\n\t\t        this._panner = null;\n\t\t        this.pan = null;\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PanVol;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.CtrlInterpolate will interpolate between given values based\n\t\t\t *         on the \"index\" property. Passing in an array or object literal\n\t\t\t *         will interpolate each of the parameters. Note (i.e. \"C3\")\n\t\t\t *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n\t\t\t *         assumed to be numbers. \n\t\t\t *  @example\n\t\t\t * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n\t\t\t * interp.index = 0.75;\n\t\t\t * interp.value; //returns 1.5\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * var interp = new Tone.CtrlInterpolate([\n\t\t\t * \t[2, 4, 5],\n\t\t\t * \t[9, 3, 2],\n\t\t\t * ]);\n\t\t\t * @param {Array} values The array of values to interpolate over\n\t\t\t * @param {Positive} index The initial interpolation index.\n\t\t\t * @extends {Tone}\n\t\t\t */\n\t\t    Tone.CtrlInterpolate = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'values',\n\t\t            'index'\n\t\t        ], Tone.CtrlInterpolate.defaults);\n\t\t        /**\n\t\t\t\t *  The values to interpolate between\n\t\t\t\t *  @type  {Array}\n\t\t\t\t */\n\t\t        this.values = options.values;\n\t\t        /**\n\t\t\t\t *  The interpolated index between values. For example: a value of 1.5\n\t\t\t\t *  would interpolate equally between the value at index 1\n\t\t\t\t *  and the value at index 2. \n\t\t\t\t *  @example\n\t\t\t\t * interp.index = 0; \n\t\t\t\t * interp.value; //returns the value at 0\n\t\t\t\t * interp.index = 0.5;\n\t\t\t\t * interp.value; //returns the value between indices 0 and 1. \n\t\t\t\t *  @type  {Positive}\n\t\t\t\t */\n\t\t        this.index = options.index;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlInterpolate);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.defaults = {\n\t\t        'index': 0,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The current interpolated value based on the index\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlInterpolate#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var index = this.index;\n\t\t            index = Math.min(index, this.values.length - 1);\n\t\t            var lowerPosition = Math.floor(index);\n\t\t            var lower = this.values[lowerPosition];\n\t\t            var upper = this.values[Math.ceil(index)];\n\t\t            return this._interpolate(index - lowerPosition, lower, upper);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Internal interpolation routine\n\t\t\t *  @param  {NormalRange}  index  The index between the lower and upper\n\t\t\t *  @param  {*}  lower \n\t\t\t *  @param  {*}  upper \n\t\t\t *  @return  {*}  The interpolated value\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {\n\t\t        if (this.isArray(lower)) {\n\t\t            var retArray = [];\n\t\t            for (var i = 0; i < lower.length; i++) {\n\t\t                retArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t\t            }\n\t\t            return retArray;\n\t\t        } else if (this.isObject(lower)) {\n\t\t            var retObj = {};\n\t\t            for (var attr in lower) {\n\t\t                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t\t            }\n\t\t            return retObj;\n\t\t        } else {\n\t\t            lower = this._toNumber(lower);\n\t\t            upper = this._toNumber(upper);\n\t\t            return (1 - index) * lower + index * upper;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert from the given type into a number\n\t\t\t *  @param  {Number|String}  value\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype._toNumber = function (val) {\n\t\t        if (this.isNumber(val)) {\n\t\t            return val;\n\t\t        } else {\n\t\t            //otherwise assume that it's Time...\n\t\t            return this.toSeconds(val);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.CtrlInterpolate}  this\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype.dispose = function () {\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlInterpolate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n\t\t\t *         to Tone.CtrlMarkov.next will move to the next state. If the next\n\t\t\t *         state choice is an array, the next state is chosen randomly with\n\t\t\t *         even probability for all of the choices. For a weighted probability\n\t\t\t *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n\t\t\t *         The probabilities will be normalized and then chosen. If no next options\n\t\t\t *         are given for the current state, the state will stay there. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var chain = new Tone.CtrlMarkov({\n\t\t\t * \t\"beginning\" : [\"end\", \"middle\"],\n\t\t\t * \t\"middle\" : \"end\"\n\t\t\t * });\n\t\t\t * chain.value = \"beginning\";\n\t\t\t * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * var chain = new Tone.CtrlMarkov({\n\t\t\t * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n\t\t\t * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n\t\t\t * \t\"middle\" : \"end\"\n\t\t\t * });\n\t\t\t * chain.value = \"beginning\";\n\t\t\t * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n\t\t\t *  @param {Object} values An object with the state names as the keys\n\t\t\t *                         and the next state(s) as the values. \n\t\t\t */\n\t\t    Tone.CtrlMarkov = function (values, initial) {\n\t\t        /**\n\t\t\t\t *  The Markov values with states as the keys\n\t\t\t\t *  and next state(s) as the values. \n\t\t\t\t *  @type {Object}\n\t\t\t\t */\n\t\t        this.values = this.defaultArg(values, {});\n\t\t        /**\n\t\t\t\t *  The current state of the Markov values. The next\n\t\t\t\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t\t\t\t *  is invoked.\n\t\t\t\t *  @type {String}\n\t\t\t\t */\n\t\t        this.value = this.defaultArg(initial, Object.keys(this.values)[0]);\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlMarkov);\n\t\t    /**\n\t\t\t *  Returns the next state of the Markov values. \n\t\t\t *  @return  {String}\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype.next = function () {\n\t\t        if (this.values.hasOwnProperty(this.value)) {\n\t\t            var next = this.values[this.value];\n\t\t            if (this.isArray(next)) {\n\t\t                var distribution = this._getProbDistribution(next);\n\t\t                var rand = Math.random();\n\t\t                var total = 0;\n\t\t                for (var i = 0; i < distribution.length; i++) {\n\t\t                    var dist = distribution[i];\n\t\t                    if (rand > total && rand < total + dist) {\n\t\t                        var chosen = next[i];\n\t\t                        if (this.isObject(chosen)) {\n\t\t                            this.value = chosen.value;\n\t\t                        } else {\n\t\t                            this.value = chosen;\n\t\t                        }\n\t\t                    }\n\t\t                    total += dist;\n\t\t                }\n\t\t            } else {\n\t\t                this.value = next;\n\t\t            }\n\t\t        }\n\t\t        return this.value;\n\t\t    };\n\t\t    /**\n\t\t\t *  Choose randomly from an array weighted options in the form \n\t\t\t *  {\"state\" : string, \"probability\" : number} or an array of values\n\t\t\t *  @param  {Array}  options \n\t\t\t *  @return  {Array}  The randomly selected choice\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {\n\t\t        var distribution = [];\n\t\t        var total = 0;\n\t\t        var needsNormalizing = false;\n\t\t        for (var i = 0; i < options.length; i++) {\n\t\t            var option = options[i];\n\t\t            if (this.isObject(option)) {\n\t\t                needsNormalizing = true;\n\t\t                distribution[i] = option.probability;\n\t\t            } else {\n\t\t                distribution[i] = 1 / options.length;\n\t\t            }\n\t\t            total += distribution[i];\n\t\t        }\n\t\t        if (needsNormalizing) {\n\t\t            //normalize the values\n\t\t            for (var j = 0; j < distribution.length; j++) {\n\t\t                distribution[j] = distribution[j] / total;\n\t\t            }\n\t\t        }\n\t\t        return distribution;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.CtrlMarkov}  this\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype.dispose = function () {\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlMarkov;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Generate patterns from an array of values.\n\t\t\t *         Has a number of arpeggiation and randomized\n\t\t\t *         selection patterns. \n\t\t\t *           <ul>\n\t\t\t *  \t        <li>\"up\" - cycles upward</li>\n\t\t\t *  \t\t\t<li>\"down\" - cycles downward</li>\n\t\t\t *  \t\t\t<li>\"upDown\" - up then and down</li>\n\t\t\t *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n\t\t\t *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n\t\t\t *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n\t\t\t *  \t\t\t<li>\"random\" - randomly select an index</li>\n\t\t\t *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n\t\t\t *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n\t\t\t *     \t\t</ul>\n\t\t\t *  @param  {Array}  values   An array of options to choose from.\n\t\t\t *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.CtrlPattern = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'values',\n\t\t            'type'\n\t\t        ], Tone.CtrlPattern.defaults);\n\t\t        /**\n\t\t\t\t *  The array of values to arpeggiate over\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.values = options.values;\n\t\t        /**\n\t\t\t\t *  The current position in the values array\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this.index = 0;\n\t\t        /**\n\t\t\t\t *  The type placeholder\n\t\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = null;\n\t\t        /**\n\t\t\t\t *  Shuffled values for the RandomOnce type\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shuffled = null;\n\t\t        /**\n\t\t\t\t *  The direction of the movement\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._direction = null;\n\t\t        this.type = options.type;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlPattern);\n\t\t    /**\n\t\t\t *  The Control Patterns\n\t\t\t *  @type  {Object}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.CtrlPattern.Type = {\n\t\t        Up: 'up',\n\t\t        Down: 'down',\n\t\t        UpDown: 'upDown',\n\t\t        DownUp: 'downUp',\n\t\t        AlternateUp: 'alternateUp',\n\t\t        AlternateDown: 'alternateDown',\n\t\t        Random: 'random',\n\t\t        RandomWalk: 'randomWalk',\n\t\t        RandomOnce: 'randomOnce'\n\t\t    };\n\t\t    /**\n\t\t\t *  The default values. \n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlPattern.defaults = {\n\t\t        'type': Tone.CtrlPattern.Type.Up,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The value at the current index of the pattern.\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlPattern#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {\n\t\t        get: function () {\n\t\t            //some safeguards\n\t\t            if (this.values.length === 0) {\n\t\t                return;\n\t\t            } else if (this.values.length === 1) {\n\t\t                return this.values[0];\n\t\t            }\n\t\t            this.index = Math.min(this.index, this.values.length - 1);\n\t\t            var val = this.values[this.index];\n\t\t            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t                if (this.values.length !== this._shuffled.length) {\n\t\t                    this._shuffleValues();\n\t\t                }\n\t\t                val = this.values[this._shuffled[this.index]];\n\t\t            }\n\t\t            return val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The pattern used to select the next\n\t\t\t *  item from the values array\n\t\t\t *  @memberOf Tone.CtrlPattern#\n\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._type = type;\n\t\t            this._shuffled = null;\n\t\t            //the first index\n\t\t            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t                this.index = 0;\n\t\t            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t                this.index = this.values.length - 1;\n\t\t            }\n\t\t            //the direction\n\t\t            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t            //randoms\n\t\t            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t                this._shuffleValues();\n\t\t            } else if (this._type === Tone.CtrlPattern.Random) {\n\t\t                this.index = Math.floor(Math.random() * this.values.length);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Return the next value given the current position\n\t\t\t *  and pattern.\n\t\t\t *  @return {*} The next value\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype.next = function () {\n\t\t        var type = this.type;\n\t\t        //choose the next index\n\t\t        if (type === Tone.CtrlPattern.Type.Up) {\n\t\t            this.index++;\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.Down) {\n\t\t            this.index--;\n\t\t            if (this.index < 0) {\n\t\t                this.index = this.values.length - 1;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index++;\n\t\t            } else {\n\t\t                this.index--;\n\t\t            }\n\t\t            if (this.index < 0) {\n\t\t                this.index = 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            } else if (this.index >= this.values.length) {\n\t\t                this.index = this.values.length - 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.Random) {\n\t\t            this.index = Math.floor(Math.random() * this.values.length);\n\t\t        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {\n\t\t            if (Math.random() < 0.5) {\n\t\t                this.index--;\n\t\t                this.index = Math.max(this.index, 0);\n\t\t            } else {\n\t\t                this.index++;\n\t\t                this.index = Math.min(this.index, this.values.length - 1);\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t            this.index++;\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t                //reshuffle the values for next time\n\t\t                this._shuffleValues();\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index += 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            } else {\n\t\t                this.index -= 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index += 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            } else {\n\t\t                this.index -= 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t            if (this.index < 0) {\n\t\t                this.index = this.values.length - 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t        }\n\t\t        return this.value;\n\t\t    };\n\t\t    /**\n\t\t\t *  Shuffles the values and places the results into the _shuffled\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype._shuffleValues = function () {\n\t\t        var copy = [];\n\t\t        this._shuffled = [];\n\t\t        for (var i = 0; i < this.values.length; i++) {\n\t\t            copy[i] = i;\n\t\t        }\n\t\t        while (copy.length > 0) {\n\t\t            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\t            this._shuffled.push(randVal[0]);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.CtrlPattern} this\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype.dispose = function () {\n\t\t        this._shuffled = null;\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlPattern;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Choose a random value.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var randomWalk = new Tone.CtrlRandom({\n\t\t\t * \t\"min\" : 0,\n\t\t\t * \t\"max\" : 10,\n\t\t\t * \t\"integer\" : true\n\t\t\t * });\n\t\t\t * randomWalk.eval();\n\t\t\t *\n\t\t\t *  @param {Number|Time=} min The minimum return value.\n\t\t\t *  @param {Number|Time=} max The maximum return value.\n\t\t\t */\n\t\t    Tone.CtrlRandom = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'min',\n\t\t            'max'\n\t\t        ], Tone.CtrlRandom.defaults);\n\t\t        /**\n\t\t\t\t *  The minimum return value\n\t\t\t\t *  @type  {Number|Time}\n\t\t\t\t */\n\t\t        this.min = options.min;\n\t\t        /**\n\t\t\t\t *  The maximum return value\n\t\t\t\t *  @type  {Number|Time}\n\t\t\t\t */\n\t\t        this.max = options.max;\n\t\t        /**\n\t\t\t\t *  If the return value should be an integer\n\t\t\t\t *  @type  {Boolean}\n\t\t\t\t */\n\t\t        this.integer = options.integer;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlRandom);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlRandom.defaults = {\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'integer': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Return a random value between min and max. \n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlRandom#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var min = this.toSeconds(this.min);\n\t\t            var max = this.toSeconds(this.max);\n\t\t            var rand = Math.random();\n\t\t            var val = rand * min + (1 - rand) * max;\n\t\t            if (this.integer) {\n\t\t                val = Math.floor(val);\n\t\t            }\n\t\t            return val;\n\t\t        }\n\t\t    });\n\t\t    return Tone.CtrlRandom;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t\t *          classes that make requests for audio files such as Tone.Player,\n\t\t\t *          Tone.Sampler and Tone.Convolver.\n\t\t\t *          <br><br>\n\t\t\t *          Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t\t *  \t\tprovides static methods which keep track of the loading progress \n\t\t\t *  \t\tof all of the buffers. These methods are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t\t\t *\n\t\t\t *  @constructor \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {AudioBuffer|string} url The url to load, or the audio buffer to set. \n\t\t\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded. \n\t\t\t *                            It's recommended to use Tone.Buffer.onload instead \n\t\t\t *                            since it will give you a callback when ALL buffers are loaded.\n\t\t\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t\t\t *  @example\n\t\t\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t\t\t * \t//the buffer is now available.\n\t\t\t * \tvar buff = buffer.get();\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.Buffer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload',\n\t\t            'onerror'\n\t\t        ], Tone.Buffer.defaults);\n\t\t        /**\n\t\t\t\t *  stores the loaded AudioBuffer\n\t\t\t\t *  @type {AudioBuffer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = null;\n\t\t        /**\n\t\t\t\t *  indicates if the buffer should be reversed or not\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._reversed = options.reverse;\n\t\t        /**\n\t\t\t\t *  The XHR\n\t\t\t\t *  @type  {XMLHttpRequest}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._xhr = null;\n\t\t        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {\n\t\t            this.set(options.url);\n\t\t            // invoke the onload callback\n\t\t            if (options.onload) {\n\t\t                options.onload(this);\n\t\t            }\n\t\t        } else if (this.isString(options.url)) {\n\t\t            this.load(options.url, options.onload, options.onerror);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Buffer);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Buffer.defaults = {\n\t\t        'url': undefined,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t\t\t *  of this buffer.\n\t\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t\t *  @returns {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.set = function (buffer) {\n\t\t        if (buffer instanceof Tone.Buffer) {\n\t\t            this._buffer = buffer.get();\n\t\t        } else {\n\t\t            this._buffer = buffer;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t\t\t */\n\t\t    Tone.Buffer.prototype.get = function () {\n\t\t        return this._buffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  Makes an xhr reqest for the selected url then decodes\n\t\t\t *  the file as an audio buffer. Invokes\n\t\t\t *  the callback once the audio buffer loads.\n\t\t\t *  @param {String} url The url of the buffer to load.\n\t\t\t *                      filetype support depends on the\n\t\t\t *                      browser.\n\t\t\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t\t\t */\n\t\t    Tone.Buffer.prototype.load = function (url, onload, onerror) {\n\t\t        var promise = new Promise(function (load, error) {\n\t\t            this._xhr = Tone.Buffer.load(url, //success\n\t\t            function (buff) {\n\t\t                this._xhr = null;\n\t\t                this.set(buff);\n\t\t                load(this);\n\t\t                if (onload) {\n\t\t                    onload(this);\n\t\t                }\n\t\t            }.bind(this), //error\n\t\t            function (err) {\n\t\t                this._xhr = null;\n\t\t                error(err);\n\t\t                if (onerror) {\n\t\t                    onerror(err);\n\t\t                }\n\t\t            }.bind(this));\n\t\t        }.bind(this));\n\t\t        return promise;\n\t\t    };\n\t\t    /**\n\t\t\t *  dispose and disconnect\n\t\t\t *  @returns {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        this._buffer = null;\n\t\t        if (this._xhr) {\n\t\t            Tone.Buffer._currentDownloads--;\n\t\t            this._xhr.abort();\n\t\t            this._xhr = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * If the buffer is loaded or not\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Boolean}\n\t\t\t * @name loaded\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {\n\t\t        get: function () {\n\t\t            return this.length > 0;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The duration of the buffer. \n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name duration\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'duration', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.duration;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The length of the buffer in samples\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name length\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'length', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.length;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of discrete audio channels. Returns 0 if no buffer\n\t\t\t * is loaded.\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name numberOfChannels\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.numberOfChannels;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the audio buffer from the array\n\t\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t\t *  @param {Number} [channels=1] The number of channels contained in the array. \n\t\t\t *                               If the channel is more than 1, the input array\n\t\t\t *                               is expected to be a multidimensional array\n\t\t\t *                               with dimensions equal to the number of channels.\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.fromArray = function (array) {\n\t\t        var isMultidimensional = array[0].length > 0;\n\t\t        var channels = isMultidimensional ? array.length : 1;\n\t\t        var len = isMultidimensional ? array[0].length : array.length;\n\t\t        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t\t        if (!isMultidimensional && channels === 1) {\n\t\t            array = [array];\n\t\t        }\n\t\t        for (var c = 0; c < channels; c++) {\n\t\t            if (this.isFunction(buffer.copyToChannel)) {\n\t\t                buffer.copyToChannel(array[c], c);\n\t\t            } else {\n\t\t                var channel = buffer.getChannelData(c);\n\t\t                var channelArray = array[c];\n\t\t                for (var i = 0; i < channelArray.length; i++) {\n\t\t                    channel[i] = channelArray[i];\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        this._buffer = buffer;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional \n\t\t\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t\t *  @return {Array}\n\t\t\t */\n\t\t    Tone.Buffer.prototype.toArray = function (channel) {\n\t\t        if (this.isNumber(channel)) {\n\t\t            return this._buffer.getChannelData(channel);\n\t\t        } else {\n\t\t            var ret = [];\n\t\t            for (var c = 0; c < this.numberOfChannels; c++) {\n\t\t                ret[c] = new Float32Array(this.length);\n\t\t                if (this.isFunction(this._buffer.copyFromChannel)) {\n\t\t                    this._buffer.copyFromChannel(ret[c], c);\n\t\t                } else {\n\t\t                    var channelData = this._buffer.getChannelData(c);\n\t\t                    var retArray = ret[c];\n\t\t                    for (var i = 0; i < channelData.length; i++) {\n\t\t                        retArray[i] = channelData[i];\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            if (ret.length === 1) {\n\t\t                return ret[0];\n\t\t            } else {\n\t\t                return ret;\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Cut a subsection of the array and return a buffer of the\n\t\t\t *  subsection. Does not modify the original buffer\n\t\t\t *  @param {Time} start The time to start the slice\n\t\t\t *  @param {Time=} end The end time to slice. If none is given\n\t\t\t *                     will default to the end of the buffer\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.slice = function (start, end) {\n\t\t        end = this.defaultArg(end, this.duration);\n\t\t        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t\t        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t\t        var replacement = [];\n\t\t        for (var i = 0; i < this.numberOfChannels; i++) {\n\t\t            replacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t\t        }\n\t\t        var retBuffer = new Tone.Buffer().fromArray(replacement);\n\t\t        return retBuffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  Reverse the buffer.\n\t\t\t *  @private\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype._reverse = function () {\n\t\t        if (this.loaded) {\n\t\t            for (var i = 0; i < this._buffer.numberOfChannels; i++) {\n\t\t                Array.prototype.reverse.call(this._buffer.getChannelData(i));\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Reverse the buffer.\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this._reversed;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            if (this._reversed !== rev) {\n\t\t                this._reversed = rev;\n\t\t                this._reverse();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // STATIC METHODS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //statically inherits Emitter methods\n\t\t    Tone.Emitter.mixin(Tone.Buffer);\n\t\t    /**\n\t\t\t *  the static queue for all of the xhr requests\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffer._downloadQueue = [];\n\t\t    /**\n\t\t\t *  the total number of downloads\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffer._currentDownloads = 0;\n\t\t    /**\n\t\t\t *  A path which is prefixed before every url.\n\t\t\t *  @type  {String}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Buffer.baseUrl = '';\n\t\t    /**\n\t\t\t *  Loads a url using XMLHttpRequest.\n\t\t\t *  @param {String} url\n\t\t\t *  @param {Function} onload\n\t\t\t *  @param {Function} onerror\n\t\t\t *  @param {Function} onprogress\n\t\t\t *  @return {XMLHttpRequest}\n\t\t\t */\n\t\t    Tone.Buffer.load = function (url, onload, onerror) {\n\t\t        //default\n\t\t        onload = onload || Tone.noOp;\n\t\t        function onError(e) {\n\t\t            Tone.Buffer._currentDownloads--;\n\t\t            if (onerror) {\n\t\t                onerror(e);\n\t\t            } else {\n\t\t                throw new Error(e);\n\t\t            }\n\t\t        }\n\t\t        function onProgress() {\n\t\t            //calculate the progress\n\t\t            var totalProgress = 0;\n\t\t            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {\n\t\t                totalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t            }\n\t\t            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);\n\t\t        }\n\t\t        var request = new XMLHttpRequest();\n\t\t        request.open('GET', Tone.Buffer.baseUrl + url, true);\n\t\t        request.responseType = 'arraybuffer';\n\t\t        //start out as 0\n\t\t        request.progress = 0;\n\t\t        Tone.Buffer._currentDownloads++;\n\t\t        Tone.Buffer._downloadQueue.push(request);\n\t\t        request.addEventListener('load', function () {\n\t\t            if (request.status === 200) {\n\t\t                Tone.context.decodeAudioData(request.response, function (buff) {\n\t\t                    request.progress = 1;\n\t\t                    onProgress();\n\t\t                    onload(buff);\n\t\t                    Tone.Buffer._currentDownloads--;\n\t\t                    if (Tone.Buffer._currentDownloads === 0) {\n\t\t                        // clear the downloads\n\t\t                        Tone.Buffer._downloadQueue = [];\n\t\t                        //emit the event at the end\n\t\t                        Tone.Buffer.emit('load');\n\t\t                    }\n\t\t                }, function () {\n\t\t                    onError('Tone.Buffer: could not decode audio data: ' + url);\n\t\t                });\n\t\t            } else {\n\t\t                onError('Tone.Buffer: could not locate file: ' + url);\n\t\t            }\n\t\t        });\n\t\t        request.addEventListener('error', onError);\n\t\t        request.addEventListener('progress', function (event) {\n\t\t            if (event.lengthComputable) {\n\t\t                //only go to 95%, the last 5% is when the audio is decoded\n\t\t                request.progress = event.loaded / event.total * 0.95;\n\t\t                onProgress();\n\t\t            }\n\t\t        });\n\t\t        request.send();\n\t\t        return request;\n\t\t    };\n\t\t    /**\n\t\t\t *  Checks a url's extension to see if the current browser can play that file type.\n\t\t\t *  @param {String} url The url/extension to test\n\t\t\t *  @return {Boolean} If the file extension can be played\n\t\t\t *  @static\n\t\t\t *  @example\n\t\t\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t\t\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t\t\t */\n\t\t    Tone.Buffer.supportsType = function (url) {\n\t\t        var extension = url.split('.');\n\t\t        extension = extension[extension.length - 1];\n\t\t        var response = document.createElement('audio').canPlayType('audio/' + extension);\n\t\t        return response !== '';\n\t\t    };\n\t\t    return Tone.Buffer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class A data structure for holding multiple buffers.\n\t\t\t *  \n\t\t\t *  @param  {Object|Array}    urls      An object literal or array\n\t\t\t *                                      of urls to load.\n\t\t\t *  @param  {Function=}  callback  The callback to invoke when\n\t\t\t *                                 the buffers are loaded. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * //load a whole bank of piano samples\n\t\t\t * var pianoSamples = new Tone.Buffers({\n\t\t\t * \t\"C4\" : \"path/to/C4.mp3\"\n\t\t\t * \t\"C#4\" : \"path/to/C#4.mp3\"\n\t\t\t * \t\"D4\" : \"path/to/D4.mp3\"\n\t\t\t * \t\"D#4\" : \"path/to/D#4.mp3\"\n\t\t\t * \t...\n\t\t\t * }, function(){\n\t\t\t * \t//play one of the samples when they all load\n\t\t\t * \tplayer.buffer = pianoSamples.get(\"C4\");\n\t\t\t * \tplayer.start();\n\t\t\t * });\n\t\t\t * \n\t\t\t */\n\t\t    Tone.Buffers = function (urls, onload, baseUrl) {\n\t\t        /**\n\t\t\t\t *  All of the buffers\n\t\t\t\t *  @type  {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffers = {};\n\t\t        /**\n\t\t\t\t *  A path which is prefixed before every url.\n\t\t\t\t *  @type  {String}\n\t\t\t\t */\n\t\t        this.baseUrl = this.defaultArg(baseUrl, '');\n\t\t        urls = this._flattenUrls(urls);\n\t\t        this._loadingCount = 0;\n\t\t        //add each one\n\t\t        for (var key in urls) {\n\t\t            this._loadingCount++;\n\t\t            this.add(key, urls[key], this._bufferLoaded.bind(this, onload));\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Buffers);\n\t\t    /**\n\t\t\t *  True if the buffers object has a buffer by that name.\n\t\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t\t *                                 buffer.\n\t\t\t *  @return  {Boolean}\n\t\t\t */\n\t\t    Tone.Buffers.prototype.has = function (name) {\n\t\t        return this._buffers.hasOwnProperty(name);\n\t\t    };\n\t\t    /**\n\t\t\t *  Get a buffer by name. If an array was loaded, \n\t\t\t *  then use the array index.\n\t\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t\t *                                 buffer.\n\t\t\t *  @return  {Tone.Buffer}\n\t\t\t */\n\t\t    Tone.Buffers.prototype.get = function (name) {\n\t\t        if (this.has(name)) {\n\t\t            return this._buffers[name];\n\t\t        } else {\n\t\t            throw new Error('Tone.Buffers: no buffer named ' + name);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  A buffer was loaded. decrement the counter.\n\t\t\t *  @param  {Function}  callback \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffers.prototype._bufferLoaded = function (callback) {\n\t\t        this._loadingCount--;\n\t\t        if (this._loadingCount === 0 && callback) {\n\t\t            callback(this);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * If the buffers are loaded or not\n\t\t\t * @memberOf Tone.Buffers#\n\t\t\t * @type {Boolean}\n\t\t\t * @name loaded\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {\n\t\t        get: function () {\n\t\t            var isLoaded = true;\n\t\t            for (var buffName in this._buffers) {\n\t\t                var buff = this.get(buffName);\n\t\t                isLoaded = isLoaded && buff.loaded;\n\t\t            }\n\t\t            return isLoaded;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Add a buffer by name and url to the Buffers\n\t\t\t *  @param  {String}    name      A unique name to give\n\t\t\t *                                the buffer\n\t\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n\t\t\t *                                                 or a buffer which will be added\n\t\t\t *                                                 with the given name.\n\t\t\t *  @param  {Function=}  callback  The callback to invoke \n\t\t\t *                                 when the url is loaded.\n\t\t\t */\n\t\t    Tone.Buffers.prototype.add = function (name, url, callback) {\n\t\t        callback = this.defaultArg(callback, Tone.noOp);\n\t\t        if (url instanceof Tone.Buffer) {\n\t\t            this._buffers[name] = url;\n\t\t            callback(this);\n\t\t        } else if (url instanceof AudioBuffer) {\n\t\t            this._buffers[name] = new Tone.Buffer(url);\n\t\t            callback(this);\n\t\t        } else if (this.isString(url)) {\n\t\t            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Flatten an object into a single depth object. \n\t\t\t *  thanks to https://gist.github.com/penguinboy/762197\n\t\t\t *  @param   {Object} ob \t\n\t\t\t *  @return  {Object}    \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffers.prototype._flattenUrls = function (ob) {\n\t\t        var toReturn = {};\n\t\t        for (var i in ob) {\n\t\t            if (!ob.hasOwnProperty(i))\n\t\t                continue;\n\t\t            if (this.isObject(ob[i])) {\n\t\t                var flatObject = this._flattenUrls(ob[i]);\n\t\t                for (var x in flatObject) {\n\t\t                    if (!flatObject.hasOwnProperty(x))\n\t\t                        continue;\n\t\t                    toReturn[i + '.' + x] = flatObject[x];\n\t\t                }\n\t\t            } else {\n\t\t                toReturn[i] = ob[i];\n\t\t            }\n\t\t        }\n\t\t        return toReturn;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Buffers} this\n\t\t\t */\n\t\t    Tone.Buffers.prototype.dispose = function () {\n\t\t        for (var name in this._buffers) {\n\t\t            this._buffers[name].dispose();\n\t\t        }\n\t\t        this._buffers = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Buffers;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  buses are another way of routing audio\n\t\t\t *\n\t\t\t *  augments Tone.prototype to include send and recieve\n\t\t\t */\n\t\t    /**\n\t\t\t  *  All of the routes\n\t\t\t  *  \n\t\t\t  *  @type {Object}\n\t\t\t  *  @static\n\t\t\t  *  @private\n\t\t\t  */\n\t\t    var Buses = {};\n\t\t    /**\n\t\t\t *  Send this signal to the channel name. \n\t\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t\t *  @param  {Decibels} amount The amount of the source to send to the bus. \n\t\t\t *  @return {GainNode} The gain node which connects this node to the desired channel. \n\t\t\t *                     Can be used to adjust the levels of the send.\n\t\t\t *  @example\n\t\t\t * source.send(\"reverb\", -12);\n\t\t\t */\n\t\t    Tone.prototype.send = function (channelName, amount) {\n\t\t        if (!Buses.hasOwnProperty(channelName)) {\n\t\t            Buses[channelName] = this.context.createGain();\n\t\t        }\n\t\t        amount = this.defaultArg(amount, 0);\n\t\t        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\t\t        this.output.chain(sendKnob, Buses[channelName]);\n\t\t        return sendKnob;\n\t\t    };\n\t\t    /**\n\t\t\t *  Recieve the input from the desired channelName to the input\n\t\t\t *\n\t\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t\t *  @param {AudioNode} [input] If no input is selected, the\n\t\t\t *                                         input of the current node is\n\t\t\t *                                         chosen. \n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * reverbEffect.receive(\"reverb\");\n\t\t\t */\n\t\t    Tone.prototype.receive = function (channelName, input) {\n\t\t        if (!Buses.hasOwnProperty(channelName)) {\n\t\t            Buses[channelName] = this.context.createGain();\n\t\t        }\n\t\t        if (this.isUndef(input)) {\n\t\t            input = this.input;\n\t\t        }\n\t\t        Buses[channelName].connect(input);\n\t\t        return this;\n\t\t    };\n\t\t    //remove all the send/receives when a new audio context is passed in\n\t\t    Tone._initAudioContext(function () {\n\t\t        Buses = {};\n\t\t    });\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space \n\t\t\t *          using a right-handed cartesian coordinate system. \n\t\t\t *          The units used in the coordinate system are not defined; \n\t\t\t *          these coordinates are independent/invariant of any particular \n\t\t\t *          units such as meters or feet. Tone.Panner3D objects have an forward \n\t\t\t *          vector representing the direction the sound is projecting. Additionally, \n\t\t\t *          they have a sound cone representing how directional the sound is. \n\t\t\t *          For example, the sound could be omnidirectional, in which case it would \n\t\t\t *          be heard anywhere regardless of its forward, or it can be more directional \n\t\t\t *          and heard only if it is facing the listener. Tone.Listener objects \n\t\t\t *          (representing a person's ears) have an forward and up vector \n\t\t\t *          representing in which direction the person is facing. Because both the \n\t\t\t *          source stream and the listener can be moving, they both have a velocity \n\t\t\t *          vector representing both the speed and direction of movement. Taken together, \n\t\t\t *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n\t\t\t *          <br><br>\n\t\t\t *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @singleton\n\t\t\t *  @param {Number} positionX The initial x position.\n\t\t\t *  @param {Number} positionY The initial y position.\n\t\t\t *  @param {Number} positionZ The initial z position.\n\t\t\t */\n\t\t    Tone.Listener = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'positionX',\n\t\t            'positionY',\n\t\t            'positionZ'\n\t\t        ], ListenerConstructor.defaults);\n\t\t        /**\n\t\t\t\t *  The listener node\n\t\t\t\t *  @type {AudioListener}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._listener = this.context.listener;\n\t\t        /**\n\t\t\t\t *  Holds the current forward orientation\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._orientation = [\n\t\t            options.forwardX,\n\t\t            options.forwardY,\n\t\t            options.forwardZ,\n\t\t            options.upX,\n\t\t            options.upY,\n\t\t            options.upZ\n\t\t        ];\n\t\t        /**\n\t\t\t\t *  Holds the current position\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._position = [\n\t\t            options.positionX,\n\t\t            options.positionY,\n\t\t            options.positionZ\n\t\t        ];\n\t\t        // set the default position/forward\n\t\t        this.forwardX = options.forwardX;\n\t\t        this.forwardY = options.forwardY;\n\t\t        this.forwardZ = options.forwardZ;\n\t\t        this.upX = options.upX;\n\t\t        this.upY = options.upY;\n\t\t        this.upZ = options.upZ;\n\t\t        this.positionX = options.positionX;\n\t\t        this.positionY = options.positionY;\n\t\t        this.positionZ = options.positionZ;\n\t\t    };\n\t\t    Tone.extend(Tone.Listener);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t *  Defaults according to the specification\n\t\t\t */\n\t\t    Tone.Listener.defaults = {\n\t\t        'positionX': 0,\n\t\t        'positionY': 0,\n\t\t        'positionZ': 0,\n\t\t        'forwardX': 0,\n\t\t        'forwardY': 0,\n\t\t        'forwardZ': 1,\n\t\t        'upX': 0,\n\t\t        'upY': 1,\n\t\t        'upZ': 0\n\t\t    };\n\t\t    Tone.Listener.prototype._rampTimeConstant = 0.3;\n\t\t    /**\n\t\t\t *  Sets the position of the listener in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.setPosition = function (x, y, z) {\n\t\t        if (this._listener.positionX) {\n\t\t            var now = this.now();\n\t\t            this._listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._listener.setPosition(x, y, z);\n\t\t        }\n\t\t        this._position = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the orientation of the listener using two vectors, the forward\n\t\t\t *  vector (which direction the listener is facing) and the up vector \n\t\t\t *  (which the up direction of the listener). An up vector\n\t\t\t *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction. \n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @param  {Number}  upX\n\t\t\t *  @param  {Number}  upY\n\t\t\t *  @param  {Number}  upZ\n\t\t\t *  @return {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {\n\t\t        if (this._listener.forwardX) {\n\t\t            var now = this.now();\n\t\t            this._listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t            this._listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t\t            this._listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t\t            this._listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._listener.setOrientation(x, y, z, upX, upY, upZ);\n\t\t        }\n\t\t        this._orientation = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The x position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionX', {\n\t\t        set: function (pos) {\n\t\t            this._position[0] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionY', {\n\t\t        set: function (pos) {\n\t\t            this._position[1] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {\n\t\t        set: function (pos) {\n\t\t            this._position[2] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[0] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[1] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[2] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[3] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[3];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[4] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[4];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[5] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[5];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.dispose = function () {\n\t\t        this._listener.disconnect();\n\t\t        this._listener = null;\n\t\t        this._orientation = null;\n\t\t        this._position = null;\n\t\t        return this;\n\t\t    };\n\t\t    //SINGLETON SETUP\n\t\t    var ListenerConstructor = Tone.Listener;\n\t\t    Tone._initAudioContext(function () {\n\t\t        if (typeof Tone.Listener === 'function') {\n\t\t            //a single listener object\n\t\t            Tone.Listener = new Tone.Listener();\n\t\t        } else {\n\t\t            //make new Listener insides\n\t\t            ListenerConstructor.call(Tone.Listener);\n\t\t        }\n\t\t    });\n\t\t    //END SINGLETON SETUP\n\t\t    return Tone.Listener;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n\t\t\t * \t        the effectSend and effectReturn GainNodes, then control the amount of\n\t\t\t * \t        effect which goes to the output using the wet control.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {NormalRange|Object} [wet] The starting wet value. \n\t\t\t */\n\t\t    Tone.Effect = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t\t        /**\n\t\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t\t        /**\n\t\t\t\t *  The wet control is how much of the effected\n\t\t\t\t *  will pass through to the output. 1 = 100% effected\n\t\t\t\t *  signal, 0 = 100% dry signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.wet = this._dryWet.fade;\n\t\t        /**\n\t\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSend = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturn = new Tone.Gain();\n\t\t        //connections\n\t\t        this.input.connect(this._dryWet.a);\n\t\t        this.input.connect(this.effectSend);\n\t\t        this.effectReturn.connect(this._dryWet.b);\n\t\t        this._dryWet.connect(this.output);\n\t\t        this._readOnly(['wet']);\n\t\t    };\n\t\t    Tone.extend(Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Effect.defaults = { 'wet': 1 };\n\t\t    /**\n\t\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t\t *  @param  {Tone} effect\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.Effect} this\n\t\t\t */\n\t\t    Tone.Effect.prototype.connectEffect = function (effect) {\n\t\t        this.effectSend.chain(effect, this.effectReturn);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Effect} this\n\t\t\t */\n\t\t    Tone.Effect.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._dryWet.dispose();\n\t\t        this._dryWet = null;\n\t\t        this.effectSend.dispose();\n\t\t        this.effectSend = null;\n\t\t        this.effectReturn.dispose();\n\t\t        this.effectReturn = null;\n\t\t        this._writable(['wet']);\n\t\t        this.wet = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Effect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n\t\t\t *         Setting the LFO rate and depth allows for control over the filter modulation rate \n\t\t\t *         and depth.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Time|Object} [frequency] The rate of the LFO.\n\t\t\t *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n\t\t \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n\t\t\t *  @example\n\t\t\t * //create an autofilter and start it's LFO\n\t\t\t * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n\t\t\t * //route an oscillator through the filter and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n\t\t\t */\n\t\t    Tone.AutoFilter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'baseFrequency',\n\t\t            'octaves'\n\t\t        ], Tone.AutoFilter.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which drives the filter cutoff\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'amplitude': options.depth\n\t\t        });\n\t\t        /**\n\t\t\t\t * The range of the filter modulating between the min and max frequency. \n\t\t\t\t * 0 = no modulation. 1 = full modulation.\n\t\t\t\t * @type {NormalRange}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        /**\n\t\t\t\t * How fast the filter modulates between min and max. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        /**\n\t\t\t\t *  The filter node\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.filter = new Tone.Filter(options.filter);\n\t\t        /**\n\t\t\t\t *  The octaves placeholder\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = 0;\n\t\t        //connections\n\t\t        this.connectEffect(this.filter);\n\t\t        this._lfo.connect(this.filter.frequency);\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.octaves = options.octaves;\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t    };\n\t\t    //extend Effect\n\t\t    Tone.extend(Tone.AutoFilter, Tone.Effect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoFilter.defaults = {\n\t\t        'frequency': 1,\n\t\t        'type': 'sine',\n\t\t        'depth': 1,\n\t\t        'baseFrequency': 200,\n\t\t        'octaves': 2.6,\n\t\t        'filter': {\n\t\t            'type': 'lowpass',\n\t\t            'rolloff': -12,\n\t\t            'Q': 1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Start the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.start = function (time) {\n\t\t        this._lfo.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.stop = function (time) {\n\t\t        this._lfo.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the filter to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                               Transport has started. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.sync = function (delay) {\n\t\t        this._lfo.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the filter from the transport.\n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.unsync = function () {\n\t\t        this._lfo.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the AutoFilter. \n\t\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The minimum value of the filter's cutoff frequency.\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {Frequency}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._lfo.min;\n\t\t        },\n\t\t        set: function (freq) {\n\t\t            this._lfo.min = this.toFrequency(freq);\n\t\t            //and set the max\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum value of the filter's cutoff frequency. \n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (oct) {\n\t\t            this._octaves = oct;\n\t\t            this._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this.filter.dispose();\n\t\t        this.filter = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n\t\t\t *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n\t\t\t *  @example\n\t\t\t * //create an autopanner and start it's LFO\n\t\t\t * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n\t\t\t * //route an oscillator through the panner and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n\t\t\t */\n\t\t    Tone.AutoPanner = function () {\n\t\t        var options = this.optionsObject(arguments, ['frequency'], Tone.AutoPanner.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which drives the panning\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'amplitude': options.depth,\n\t\t            'min': -1,\n\t\t            'max': 1\n\t\t        });\n\t\t        /**\n\t\t\t\t * The amount of panning between left and right. \n\t\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t\t * @type {NormalRange}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        /**\n\t\t\t\t *  the panner node which does the panning\n\t\t\t\t *  @type {Tone.Panner}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = new Tone.Panner();\n\t\t        /**\n\t\t\t\t * How fast the panner modulates between left and right. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        //connections\n\t\t        this.connectEffect(this._panner);\n\t\t        this._lfo.connect(this._panner.pan);\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'depth',\n\t\t            'frequency'\n\t\t        ]);\n\t\t    };\n\t\t    //extend Effect\n\t\t    Tone.extend(Tone.AutoPanner, Tone.Effect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoPanner.defaults = {\n\t\t        'frequency': 1,\n\t\t        'type': 'sine',\n\t\t        'depth': 1\n\t\t    };\n\t\t    /**\n\t\t\t * Start the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.start = function (time) {\n\t\t        this._lfo.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.stop = function (time) {\n\t\t        this._lfo.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the panner to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                               Transport has started. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.sync = function (delay) {\n\t\t        this._lfo.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the panner from the transport\n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.unsync = function () {\n\t\t        this._lfo.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the AutoFilter. \n\t\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this._panner.dispose();\n\t\t        this._panner = null;\n\t\t        this._writable([\n\t\t            'depth',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoPanner;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n\t\t\t *          The frequency of the filter is adjusted proportionally to the \n\t\t\t *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set \n\t\t\t *                                            to at the low point of the wah\n\t\t\t *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n\t\t\t *                                the filter will sweep to when fully open\n\t\t\t *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for \n\t\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t\t *  @example\n\t\t\t * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n\t\t\t * //initialize the synth and connect to autowah\n\t\t\t * var synth = new Synth.connect(autoWah);\n\t\t\t * //Q value influences the effect of the wah - default is 2\n\t\t\t * autoWah.Q.value = 6;\n\t\t\t * //more audible on higher notes\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\")\n\t\t\t */\n\t\t    Tone.AutoWah = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'baseFrequency',\n\t\t            'octaves',\n\t\t            'sensitivity'\n\t\t        ], Tone.AutoWah.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The envelope follower. Set the attack/release\n\t\t\t\t *  timing to adjust how the envelope is followed. \n\t\t\t\t *  @type {Tone.Follower}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.follower = new Tone.Follower(options.follower);\n\t\t        /**\n\t\t\t\t *  scales the follower value to the frequency domain\n\t\t\t\t *  @type {Tone}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\t\t        /**\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._baseFrequency = options.baseFrequency;\n\t\t        /**\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  the input gain to adjust the sensitivity\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputBoost = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  @type {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._bandpass = new Tone.Filter({\n\t\t            'rolloff': -48,\n\t\t            'frequency': 0,\n\t\t            'Q': options.Q\n\t\t        });\n\t\t        /**\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._peaking = new Tone.Filter(0, 'peaking');\n\t\t        this._peaking.gain.value = options.gain;\n\t\t        /**\n\t\t\t\t * The gain of the filter.\n\t\t\t\t * @type {Number}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.gain = this._peaking.gain;\n\t\t        /**\n\t\t\t\t * The quality of the filter.\n\t\t\t\t * @type {Positive}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.Q = this._bandpass.Q;\n\t\t        //the control signal path\n\t\t        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t\t        this._sweepRange.connect(this._bandpass.frequency);\n\t\t        this._sweepRange.connect(this._peaking.frequency);\n\t\t        //the filtered path\n\t\t        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t\t        //set the initial value\n\t\t        this._setSweepRange();\n\t\t        this.sensitivity = options.sensitivity;\n\t\t        this._readOnly([\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AutoWah, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoWah.defaults = {\n\t\t        'baseFrequency': 100,\n\t\t        'octaves': 6,\n\t\t        'sensitivity': 0,\n\t\t        'Q': 2,\n\t\t        'gain': 2,\n\t\t        'follower': {\n\t\t            'attack': 0.3,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The number of octaves that the filter will sweep above the \n\t\t\t * baseFrequency. \n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Number}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            this._setSweepRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The base frequency from which the sweep will start from.\n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Frequency}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._baseFrequency;\n\t\t        },\n\t\t        set: function (baseFreq) {\n\t\t            this._baseFrequency = baseFreq;\n\t\t            this._setSweepRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Decibels}\n\t\t\t * @name sensitivity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {\n\t\t        get: function () {\n\t\t            return this.gainToDb(1 / this._inputBoost.gain.value);\n\t\t        },\n\t\t        set: function (sensitivy) {\n\t\t            this._inputBoost.gain.value = 1 / this.dbToGain(sensitivy);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  sets the sweep range of the scaler\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AutoWah.prototype._setSweepRange = function () {\n\t\t        this._sweepRange.min = this._baseFrequency;\n\t\t        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.AutoWah} this\n\t\t\t */\n\t\t    Tone.AutoWah.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this.follower.dispose();\n\t\t        this.follower = null;\n\t\t        this._sweepRange.dispose();\n\t\t        this._sweepRange = null;\n\t\t        this._bandpass.dispose();\n\t\t        this._bandpass = null;\n\t\t        this._peaking.dispose();\n\t\t        this._peaking = null;\n\t\t        this._inputBoost.dispose();\n\t\t        this._inputBoost = null;\n\t\t        this._writable([\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.gain = null;\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoWah;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth. \n\t\t\t *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n\t\t\t *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n\t\t\t *                       of 1 to 8. \n\t\t\t *  @example\n\t\t\t * //initialize crusher and route a synth through it\n\t\t\t * var crusher = new Tone.BitCrusher(4).toMaster();\n\t\t\t * var synth = new Tone.MonoSynth().connect(crusher);\n\t\t\t */\n\t\t    Tone.BitCrusher = function () {\n\t\t        var options = this.optionsObject(arguments, ['bits'], Tone.BitCrusher.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        var invStepSize = 1 / Math.pow(2, options.bits - 1);\n\t\t        /**\n\t\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subtract = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  The mod function\n\t\t\t\t *  @type  {Tone.Modulo}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulo = new Tone.Modulo(invStepSize);\n\t\t        /**\n\t\t\t\t *  keeps track of the bits\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._bits = options.bits;\n\t\t        //connect it up\n\t\t        this.effectSend.fan(this._subtract, this._modulo);\n\t\t        this._modulo.connect(this._subtract, 0, 1);\n\t\t        this._subtract.connect(this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.BitCrusher, Tone.Effect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.BitCrusher.defaults = { 'bits': 4 };\n\t\t    /**\n\t\t\t * The bit depth of the effect. Nominal range of 1-8. \n\t\t\t * @memberOf Tone.BitCrusher#\n\t\t\t * @type {number}\n\t\t\t * @name bits\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {\n\t\t        get: function () {\n\t\t            return this._bits;\n\t\t        },\n\t\t        set: function (bits) {\n\t\t            this._bits = bits;\n\t\t            var invStepSize = 1 / Math.pow(2, bits - 1);\n\t\t            this._modulo.value = invStepSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.BitCrusher} this\n\t\t\t */\n\t\t    Tone.BitCrusher.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._subtract.dispose();\n\t\t        this._subtract = null;\n\t\t        this._modulo.dispose();\n\t\t        this._modulo = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.BitCrusher;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n\t\t\t *         for making different types of distortion sounds.\n\t\t\t *         Note that odd orders sound very different from even ones, \n\t\t\t *         and order = 1 is no change. \n\t\t\t *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t\t *  @example\n\t\t\t * //create a new cheby\n\t\t\t * var cheby = new Tone.Chebyshev(50);\n\t\t\t * //create a monosynth connected to our cheby\n\t\t\t * synth = new Tone.MonoSynth().connect(cheby);\n\t\t\t */\n\t\t    Tone.Chebyshev = function () {\n\t\t        var options = this.optionsObject(arguments, ['order'], Tone.Chebyshev.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(4096);\n\t\t        /**\n\t\t\t\t * holds onto the order of the filter\n\t\t\t\t * @type {number}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._order = options.order;\n\t\t        this.connectEffect(this._shaper);\n\t\t        this.order = options.order;\n\t\t        this.oversample = options.oversample;\n\t\t    };\n\t\t    Tone.extend(Tone.Chebyshev, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Chebyshev.defaults = {\n\t\t        'order': 1,\n\t\t        'oversample': 'none'\n\t\t    };\n\t\t    /**\n\t\t\t *  get the coefficient for that degree\n\t\t\t *  @param {number} x the x value\n\t\t\t *  @param   {number} degree \n\t\t\t *  @param {Object} memo memoize the computed value. \n\t\t\t *                       this speeds up computation greatly. \n\t\t\t *  @return  {number}       the coefficient \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n\t\t        if (memo.hasOwnProperty(degree)) {\n\t\t            return memo[degree];\n\t\t        } else if (degree === 0) {\n\t\t            memo[degree] = 0;\n\t\t        } else if (degree === 1) {\n\t\t            memo[degree] = x;\n\t\t        } else {\n\t\t            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t\t        }\n\t\t        return memo[degree];\n\t\t    };\n\t\t    /**\n\t\t\t * The order of the Chebyshev polynomial which creates\n\t\t\t * the equation which is applied to the incoming \n\t\t\t * signal through a Tone.WaveShaper. The equations\n\t\t\t * are in the form:<br>\n\t\t\t * order 2: 2x^2 + 1<br>\n\t\t\t * order 3: 4x^3 + 3x <br>\n\t\t\t * @memberOf Tone.Chebyshev#\n\t\t\t * @type {Positive}\n\t\t\t * @name order\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {\n\t\t        get: function () {\n\t\t            return this._order;\n\t\t        },\n\t\t        set: function (order) {\n\t\t            this._order = order;\n\t\t            var curve = new Array(4096);\n\t\t            var len = curve.length;\n\t\t            for (var i = 0; i < len; ++i) {\n\t\t                var x = i * 2 / len - 1;\n\t\t                if (x === 0) {\n\t\t                    //should output 0 when input is 0\n\t\t                    curve[i] = 0;\n\t\t                } else {\n\t\t                    curve[i] = this._getCoefficient(x, order, {});\n\t\t                }\n\t\t            }\n\t\t            this._shaper.curve = curve;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t\t * @memberOf Tone.Chebyshev#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            this._shaper.oversample = oversampling;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Chebyshev} this\n\t\t\t */\n\t\t    Tone.Chebyshev.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Chebyshev;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R. \n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.Effect}\n\t\t\t */\n\t\t    Tone.StereoEffect = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        //get the defaults\n\t\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t\t        /**\n\t\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t\t        /**\n\t\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t\t *  will pass through to the output. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.wet = this._dryWet.fade;\n\t\t        /**\n\t\t\t\t *  then split it\n\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._split = new Tone.Split();\n\t\t        /**\n\t\t\t\t *  the effects send LEFT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSendL = this._split.left;\n\t\t        /**\n\t\t\t\t *  the effects send RIGHT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSendR = this._split.right;\n\t\t        /**\n\t\t\t\t *  the stereo effect merger\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = new Tone.Merge();\n\t\t        /**\n\t\t\t\t *  the effect return LEFT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturnL = this._merge.left;\n\t\t        /**\n\t\t\t\t *  the effect return RIGHT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturnR = this._merge.right;\n\t\t        //connections\n\t\t        this.input.connect(this._split);\n\t\t        //dry wet connections\n\t\t        this.input.connect(this._dryWet, 0, 0);\n\t\t        this._merge.connect(this._dryWet, 0, 1);\n\t\t        this._dryWet.connect(this.output);\n\t\t        this._readOnly(['wet']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.StereoEffect} this\n\t\t\t */\n\t\t    Tone.StereoEffect.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._dryWet.dispose();\n\t\t        this._dryWet = null;\n\t\t        this._split.dispose();\n\t\t        this._split = null;\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        this.effectSendL = null;\n\t\t        this.effectSendR = null;\n\t\t        this.effectReturnL = null;\n\t\t        this.effectReturnR = null;\n\t\t        this._writable(['wet']);\n\t\t        this.wet = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * \t@class  Tone.FeedbackEffect provides a loop between an \n\t\t\t * \t        audio source and its own output. This is a base-class\n\t\t\t * \t        for feedback effects. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {NormalRange|Object} [feedback] The initial feedback value.\n\t\t\t */\n\t\t    Tone.FeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback']);\n\t\t        options = this.defaultArg(options, Tone.FeedbackEffect.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the gain which controls the feedback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of signal which is fed back into the effect input. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = this._feedbackGain.gain;\n\t\t        //the feedback loop\n\t\t        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.FeedbackEffect} this\n\t\t\t */\n\t\t    Tone.FeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this._feedbackGain.dispose();\n\t\t        this._feedbackGain = null;\n\t\t        this.feedback = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t\t *         and right to left instead of on the same channel.\n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t\t */\n\t\t    Tone.StereoXFeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The amount of feedback from the output\n\t\t\t\t *  back into the input of the effect (routed\n\t\t\t\t *  across left and right channels).\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  the left side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackLR = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the right side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackRL = new Tone.Gain();\n\t\t        //connect it up\n\t\t        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t\t        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t\t        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoXFeedbackEffect, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.StereoXFeedbackEffect} this\n\t\t\t */\n\t\t    Tone.StereoXFeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this.feedback.dispose();\n\t\t        this.feedback = null;\n\t\t        this._feedbackLR.dispose();\n\t\t        this._feedbackLR = null;\n\t\t        this._feedbackRL.dispose();\n\t\t        this._feedbackRL = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoXFeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Chorus is a stereo chorus effect with feedback composed of \n\t\t\t *         a left and right delay with a Tone.LFO applied to the delayTime of each channel. \n\t\t\t *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n\t\t\t *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t\t *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n\t\t\t *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms. \n\t\t\t *\t@param {NormalRange} [depth] The depth of the chorus.\n\t\t\t *\t@example\n\t\t\t * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t\t * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n\t\t\t * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n\t\t\t */\n\t\t    Tone.Chorus = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'delayTime',\n\t\t            'depth'\n\t\t        ], Tone.Chorus.defaults);\n\t\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the depth of the chorus\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._depth = options.depth;\n\t\t        /**\n\t\t\t\t *  the delayTime\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayTime = options.delayTime / 1000;\n\t\t        /**\n\t\t\t\t *  the lfo which controls the delayTime\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'min': 0,\n\t\t            'max': 1\n\t\t        });\n\t\t        /**\n\t\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'min': 0,\n\t\t            'max': 1,\n\t\t            'phase': 180\n\t\t        });\n\t\t        /**\n\t\t\t\t *  delay for left\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNodeL = new Tone.Delay();\n\t\t        /**\n\t\t\t\t *  delay for right\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNodeR = new Tone.Delay();\n\t\t        /**\n\t\t\t\t * The frequency of the LFO which modulates the delayTime. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfoL.frequency;\n\t\t        //connections\n\t\t        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t\t        //and pass through to make the detune apparent\n\t\t        this.effectSendL.connect(this.effectReturnL);\n\t\t        this.effectSendR.connect(this.effectReturnR);\n\t\t        //lfo setup\n\t\t        this._lfoL.connect(this._delayNodeL.delayTime);\n\t\t        this._lfoR.connect(this._delayNodeR.delayTime);\n\t\t        //start the lfo\n\t\t        this._lfoL.start();\n\t\t        this._lfoR.start();\n\t\t        //have one LFO frequency control the other\n\t\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t        //set the initial values\n\t\t        this.depth = this._depth;\n\t\t        this.frequency.value = options.frequency;\n\t\t        this.type = options.type;\n\t\t        this._readOnly(['frequency']);\n\t\t        this.spread = options.spread;\n\t\t    };\n\t\t    Tone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Chorus.defaults = {\n\t\t        'frequency': 1.5,\n\t\t        'delayTime': 3.5,\n\t\t        'depth': 0.7,\n\t\t        'feedback': 0.1,\n\t\t        'type': 'sine',\n\t\t        'spread': 180\n\t\t    };\n\t\t    /**\n\t\t\t * The depth of the effect. A depth of 1 makes the delayTime\n\t\t\t * modulate between 0 and 2*delayTime (centered around the delayTime). \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name depth\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'depth', {\n\t\t        get: function () {\n\t\t            return this._depth;\n\t\t        },\n\t\t        set: function (depth) {\n\t\t            this._depth = depth;\n\t\t            var deviation = this._delayTime * depth;\n\t\t            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\t            this._lfoL.max = this._delayTime + deviation;\n\t\t            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\t            this._lfoR.max = this._delayTime + deviation;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t\t\t * will give a more pronounced effect. Nominal range a delayTime\n\t\t\t * is between 2 and 20ms. \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {Milliseconds}\n\t\t\t * @name delayTime\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {\n\t\t        get: function () {\n\t\t            return this._delayTime * 1000;\n\t\t        },\n\t\t        set: function (delayTime) {\n\t\t            this._delayTime = delayTime / 1000;\n\t\t            this.depth = this._depth;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oscillator type of the LFO. \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfoL.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfoL.type = type;\n\t\t            this._lfoR.type = type;\n\t\t        }\n\t\t    });\n\t\t    /** \n\t\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {Degrees}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._lfoL.phase = 90 - spread / 2;\n\t\t            this._lfoR.phase = spread / 2 + 90;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Chorus} this\n\t\t\t */\n\t\t    Tone.Chorus.prototype.dispose = function () {\n\t\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        this._delayNodeL.dispose();\n\t\t        this._delayNodeL = null;\n\t\t        this._delayNodeR.dispose();\n\t\t        this._delayNodeR = null;\n\t\t        this._writable('frequency');\n\t\t        this.frequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Chorus;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Convolver is a wrapper around the Native Web Audio \n\t\t\t *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n\t\t\t *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n\t\t\t *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n\t\t\t *                                           contianing the impulse response. \n\t\t\t *  @param {Function} onload The callback to invoke when the url is loaded.\n\t\t\t *  @example\n\t\t\t * //initializing the convolver with an impulse response\n\t\t\t * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n\t\t\t */\n\t\t    Tone.Convolver = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.Convolver.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  convolver node\n\t\t\t\t *  @type {ConvolverNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._convolver = this.context.createConvolver();\n\t\t        /**\n\t\t\t\t *  the convolution buffer\n\t\t\t\t *  @type {Tone.Buffer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = new Tone.Buffer();\n\t\t        if (this.isString(options.url)) {\n\t\t            this._buffer.load(options.url, function (buffer) {\n\t\t                this.buffer = buffer;\n\t\t                options.onload();\n\t\t            }.bind(this));\n\t\t        } else if (options.url) {\n\t\t            this.buffer = options.url;\n\t\t            options.onload();\n\t\t        }\n\t\t        this.connectEffect(this._convolver);\n\t\t    };\n\t\t    Tone.extend(Tone.Convolver, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Convolver.defaults = { 'onload': Tone.noOp };\n\t\t    /**\n\t\t\t *  The convolver's buffer\n\t\t\t *  @memberOf Tone.Convolver#\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this._buffer.get();\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            this._buffer.set(buffer);\n\t\t            this._convolver.buffer = this._buffer.get();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Load an impulse response url as an audio buffer.\n\t\t\t *  Decodes the audio asynchronously and invokes\n\t\t\t *  the callback once the audio buffer loads.\n\t\t\t *  @param {string} url The url of the buffer to load.\n\t\t\t *                      filetype support depends on the\n\t\t\t *                      browser.\n\t\t\t *  @param  {function=} callback\n\t\t\t *  @returns {Tone.Convolver} this\n\t\t\t */\n\t\t    Tone.Convolver.prototype.load = function (url, callback) {\n\t\t        this._buffer.load(url, function (buff) {\n\t\t            this.buffer = buff;\n\t\t            if (callback) {\n\t\t                callback();\n\t\t            }\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Convolver} this\n\t\t\t */\n\t\t    Tone.Convolver.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._convolver.disconnect();\n\t\t        this._convolver = null;\n\t\t        this._buffer.dispose();\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Convolver;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n\t\t\t *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n\t\t\t *  @example\n\t\t\t * var dist = new Tone.Distortion(0.8).toMaster();\n\t\t\t * var fm = new Tone.SimpleFM().connect(dist);\n\t\t\t * //this sounds good on bass notes\n\t\t\t * fm.triggerAttackRelease(\"A1\", \"8n\");\n\t\t\t */\n\t\t    Tone.Distortion = function () {\n\t\t        var options = this.optionsObject(arguments, ['distortion'], Tone.Distortion.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(4096);\n\t\t        /**\n\t\t\t\t * holds the distortion amount\n\t\t\t\t * @type {number}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._distortion = options.distortion;\n\t\t        this.connectEffect(this._shaper);\n\t\t        this.distortion = options.distortion;\n\t\t        this.oversample = options.oversample;\n\t\t    };\n\t\t    Tone.extend(Tone.Distortion, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Distortion.defaults = {\n\t\t        'distortion': 0.4,\n\t\t        'oversample': 'none'\n\t\t    };\n\t\t    /**\n\t\t\t * The amount of distortion.\n\t\t\t * @memberOf Tone.Distortion#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name distortion\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {\n\t\t        get: function () {\n\t\t            return this._distortion;\n\t\t        },\n\t\t        set: function (amount) {\n\t\t            this._distortion = amount;\n\t\t            var k = amount * 100;\n\t\t            var deg = Math.PI / 180;\n\t\t            this._shaper.setMap(function (x) {\n\t\t                if (Math.abs(x) < 0.001) {\n\t\t                    //should output 0 when input is 0\n\t\t                    return 0;\n\t\t                } else {\n\t\t                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t\t * @memberOf Tone.Distortion#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            this._shaper.oversample = oversampling;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Distortion} this\n\t\t\t */\n\t\t    Tone.Distortion.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Distortion;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n\t\t\t *          signal is fed back into the delay. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.FeedbackEffect}\n\t\t\t *  @param {Time|Object} [delayTime] The delay applied to the incoming signal. \n\t\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t\t *                            is fed back through the delay.\n\t\t\t *  @example\n\t\t\t * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n\t\t\t * var tom = new Tone.DrumSynth({\n\t\t\t * \t\"octaves\" : 4,\n\t\t\t * \t\"pitchDecay\" : 0.1\n\t\t\t * }).connect(feedbackDelay);\n\t\t\t * tom.triggerAttackRelease(\"A2\",\"32n\");\n\t\t\t */\n\t\t    Tone.FeedbackDelay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'feedback'\n\t\t        ], Tone.FeedbackDelay.defaults);\n\t\t        Tone.FeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The delayTime of the DelayNode. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delayNode.delayTime;\n\t\t        // connect it up\n\t\t        this.connectEffect(this._delayNode);\n\t\t        this._readOnly(['delayTime']);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  The default values. \n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackDelay.defaults = { 'delayTime': 0.25 };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FeedbackDelay} this\n\t\t\t */\n\t\t    Tone.FeedbackDelay.prototype.dispose = function () {\n\t\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t\t        this._delayNode.dispose();\n\t\t        this._delayNode = null;\n\t\t        this._writable(['delayTime']);\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackDelay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterTunings = [\n\t\t        1557 / 44100,\n\t\t        1617 / 44100,\n\t\t        1491 / 44100,\n\t\t        1422 / 44100,\n\t\t        1277 / 44100,\n\t\t        1356 / 44100,\n\t\t        1188 / 44100,\n\t\t        1116 / 44100\n\t\t    ];\n\t\t    /**\n\t\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var allpassFilterFrequencies = [\n\t\t        225,\n\t\t        556,\n\t\t        441,\n\t\t        341\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n\t\t\t *         Read more on reverb on [SoundOnSound](http://www.soundonsound.com/sos/may00/articles/reverb.htm).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [roomSize] Correlated to the decay time. \n\t\t\t *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part \n\t\t\t *                                 of the reverb. \n\t\t\t *  @example\n\t\t\t * var freeverb = new Tone.Freeverb().toMaster();\n\t\t\t * freeverb.dampening.value = 1000;\n\t\t\t * //routing synth through the reverb\n\t\t\t * var synth = new Tone.AMSynth().connect(freeverb);\n\t\t\t */\n\t\t    Tone.Freeverb = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ], Tone.Freeverb.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The roomSize value between. A larger roomSize\n\t\t\t\t *  will result in a longer decay. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of dampening of the reverberant signal. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  the comb filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._combFilters = [];\n\t\t        /**\n\t\t\t\t *  the allpass filters on the left\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFiltersL = [];\n\t\t        /**\n\t\t\t\t *  the allpass filters on the right\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFiltersR = [];\n\t\t        //make the allpass filters on teh right\n\t\t        for (var l = 0; l < allpassFilterFrequencies.length; l++) {\n\t\t            var allpassL = this.context.createBiquadFilter();\n\t\t            allpassL.type = 'allpass';\n\t\t            allpassL.frequency.value = allpassFilterFrequencies[l];\n\t\t            this._allpassFiltersL.push(allpassL);\n\t\t        }\n\t\t        //make the allpass filters on the left\n\t\t        for (var r = 0; r < allpassFilterFrequencies.length; r++) {\n\t\t            var allpassR = this.context.createBiquadFilter();\n\t\t            allpassR.type = 'allpass';\n\t\t            allpassR.frequency.value = allpassFilterFrequencies[r];\n\t\t            this._allpassFiltersR.push(allpassR);\n\t\t        }\n\t\t        //make the comb filters\n\t\t        for (var c = 0; c < combFilterTunings.length; c++) {\n\t\t            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t\t            if (c < combFilterTunings.length / 2) {\n\t\t                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t\t            } else {\n\t\t                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t\t            }\n\t\t            this.roomSize.connect(lfpf.resonance);\n\t\t            this.dampening.connect(lfpf.dampening);\n\t\t            this._combFilters.push(lfpf);\n\t\t        }\n\t\t        //chain the allpass filters togetehr\n\t\t        this.connectSeries.apply(this, this._allpassFiltersL);\n\t\t        this.connectSeries.apply(this, this._allpassFiltersR);\n\t\t        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t\t        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t\t        this._readOnly([\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Freeverb, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Freeverb.defaults = {\n\t\t        'roomSize': 0.7,\n\t\t        'dampening': 3000\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Freeverb} this\n\t\t\t */\n\t\t    Tone.Freeverb.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        for (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t\t            this._allpassFiltersL[al].disconnect();\n\t\t            this._allpassFiltersL[al] = null;\n\t\t        }\n\t\t        this._allpassFiltersL = null;\n\t\t        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t\t            this._allpassFiltersR[ar].disconnect();\n\t\t            this._allpassFiltersR[ar] = null;\n\t\t        }\n\t\t        this._allpassFiltersR = null;\n\t\t        for (var cf = 0; cf < this._combFilters.length; cf++) {\n\t\t            this._combFilters[cf].dispose();\n\t\t            this._combFilters[cf] = null;\n\t\t        }\n\t\t        this._combFilters = null;\n\t\t        this._writable([\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ]);\n\t\t        this.roomSize.dispose();\n\t\t        this.roomSize = null;\n\t\t        this.dampening.dispose();\n\t\t        this.dampening = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Freeverb;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  an array of the comb filter delay time values\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterDelayTimes = [\n\t\t        1687 / 25000,\n\t\t        1601 / 25000,\n\t\t        2053 / 25000,\n\t\t        2251 / 25000\n\t\t    ];\n\t\t    /**\n\t\t\t *  the resonances of each of the comb filters\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterResonances = [\n\t\t        0.773,\n\t\t        0.802,\n\t\t        0.753,\n\t\t        0.733\n\t\t    ];\n\t\t    /**\n\t\t\t *  the allpass filter frequencies\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var allpassFilterFreqs = [\n\t\t        347,\n\t\t        113,\n\t\t        37\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n\t\t\t *         tuned by John Chowning in 1970.\n\t\t\t *         It is made up of three allpass filters and four Tone.FeedbackCombFilter. \n\t\t\t *         \n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n\t\t\t *  @example\n\t\t\t * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n\t\t\t * var delay = new Tone.FeedbackDelay(0.5); \n\t\t\t * //connecting the synth to reverb through delay\n\t\t\t * var synth = new Tone.DuoSynth().chain(delay, reverb);\n\t\t\t * synth.triggerAttackRelease(\"A4\",\"8n\");\n\t\t\t */\n\t\t    Tone.JCReverb = function () {\n\t\t        var options = this.optionsObject(arguments, ['roomSize'], Tone.JCReverb.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  room size control values between [0,1]\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  scale the room size\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\t\t        /**\n\t\t\t\t *  a series of allpass filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFilters = [];\n\t\t        /**\n\t\t\t\t *  parallel feedback comb filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackCombFilters = [];\n\t\t        //make the allpass filters\n\t\t        for (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t\t            var allpass = this.context.createBiquadFilter();\n\t\t            allpass.type = 'allpass';\n\t\t            allpass.frequency.value = allpassFilterFreqs[af];\n\t\t            this._allpassFilters.push(allpass);\n\t\t        }\n\t\t        //and the comb filters\n\t\t        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t\t            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t\t            this._scaleRoomSize.connect(fbcf.resonance);\n\t\t            fbcf.resonance.value = combFilterResonances[cf];\n\t\t            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t\t            if (cf < combFilterDelayTimes.length / 2) {\n\t\t                fbcf.connect(this.effectReturnL);\n\t\t            } else {\n\t\t                fbcf.connect(this.effectReturnR);\n\t\t            }\n\t\t            this._feedbackCombFilters.push(fbcf);\n\t\t        }\n\t\t        //chain the allpass filters together\n\t\t        this.roomSize.connect(this._scaleRoomSize);\n\t\t        this.connectSeries.apply(this, this._allpassFilters);\n\t\t        this.effectSendL.connect(this._allpassFilters[0]);\n\t\t        this.effectSendR.connect(this._allpassFilters[0]);\n\t\t        this._readOnly(['roomSize']);\n\t\t    };\n\t\t    Tone.extend(Tone.JCReverb, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.JCReverb.defaults = { 'roomSize': 0.5 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.JCReverb} this\n\t\t\t */\n\t\t    Tone.JCReverb.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        for (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t\t            this._allpassFilters[apf].disconnect();\n\t\t            this._allpassFilters[apf] = null;\n\t\t        }\n\t\t        this._allpassFilters = null;\n\t\t        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t\t            this._feedbackCombFilters[fbcf].dispose();\n\t\t            this._feedbackCombFilters[fbcf] = null;\n\t\t        }\n\t\t        this._feedbackCombFilters = null;\n\t\t        this._writable(['roomSize']);\n\t\t        this.roomSize.dispose();\n\t\t        this.roomSize = null;\n\t\t        this._scaleRoomSize.dispose();\n\t\t        this._scaleRoomSize = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.JCReverb;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels) \n\t\t\t *         and effects them separately before being recombined.\n\t\t\t *         Applies a Mid/Side seperation and recombination.\n\t\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t\t *         <br><br>\n\t\t\t *         This is a base-class for Mid/Side Effects. \n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideEffect = function () {\n\t\t        Tone.Effect.apply(this, arguments);\n\t\t        /**\n\t\t\t\t *  The mid/side split\n\t\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideSplit = new Tone.MidSideSplit();\n\t\t        /**\n\t\t\t\t *  The mid/side merge\n\t\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideMerge = new Tone.MidSideMerge();\n\t\t        /**\n\t\t\t\t *  The mid send. Connect to mid processing\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.midSend = this._midSideSplit.mid;\n\t\t        /**\n\t\t\t\t *  The side send. Connect to side processing\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.sideSend = this._midSideSplit.side;\n\t\t        /**\n\t\t\t\t *  The mid return connection\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.midReturn = this._midSideMerge.mid;\n\t\t        /**\n\t\t\t\t *  The side return connection\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.sideReturn = this._midSideMerge.side;\n\t\t        //the connections\n\t\t        this.effectSend.connect(this._midSideSplit);\n\t\t        this._midSideMerge.connect(this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.MidSideEffect} this\n\t\t\t */\n\t\t    Tone.MidSideEffect.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._midSideSplit.dispose();\n\t\t        this._midSideSplit = null;\n\t\t        this._midSideMerge.dispose();\n\t\t        this._midSideMerge = null;\n\t\t        this.midSend = null;\n\t\t        this.sideSend = null;\n\t\t        this.midReturn = null;\n\t\t        this.sideReturn = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n\t\t\t *         of different frequency components of an incoming signal. Read more on \n\t\t\t *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)). \n\t\t\t *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n\t\t\t *\n\t\t\t *\t@extends {Tone.StereoEffect}\n\t\t\t *\t@constructor\n\t\t\t *\t@param {Frequency|Object} [frequency] The speed of the phasing. \n\t\t\t *\t@param {number} [octaves] The octaves of the effect. \n\t\t\t *\t@param {Frequency} [baseFrequency] The base frequency of the filters. \n\t\t\t *\t@example\n\t\t\t * var phaser = new Tone.Phaser({\n\t\t\t * \t\"frequency\" : 15, \n\t\t\t * \t\"octaves\" : 5, \n\t\t\t * \t\"baseFrequency\" : 1000\n\t\t\t * }).toMaster();\n\t\t\t * var synth = new Tone.FMSynth().connect(phaser);\n\t\t\t * synth.triggerAttackRelease(\"E3\", \"2n\");\n\t\t\t */\n\t\t    Tone.Phaser = function () {\n\t\t        //set the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'octaves',\n\t\t            'baseFrequency'\n\t\t        ], Tone.Phaser.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\t\t        /**\n\t\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t\t        this._lfoR.phase = 180;\n\t\t        /**\n\t\t\t\t *  the base modulation frequency\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._baseFrequency = options.baseFrequency;\n\t\t        /**\n\t\t\t\t *  the octaves of the phasing\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  The quality factor of the filters\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t *  the array of filters for the left side\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\t\t        /**\n\t\t\t\t *  the array of filters for the left side\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\t\t        /**\n\t\t\t\t * the frequency of the effect\n\t\t\t\t * @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this.frequency = this._lfoL.frequency;\n\t\t        this.frequency.value = options.frequency;\n\t\t        //connect them up\n\t\t        this.effectSendL.connect(this._filtersL[0]);\n\t\t        this.effectSendR.connect(this._filtersR[0]);\n\t\t        this._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t\t        this._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t\t        //control the frequency with one LFO\n\t\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t        //set the options\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t        this.octaves = options.octaves;\n\t\t        //start the lfo\n\t\t        this._lfoL.start();\n\t\t        this._lfoR.start();\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Phaser, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {object}\n\t\t\t */\n\t\t    Tone.Phaser.defaults = {\n\t\t        'frequency': 0.5,\n\t\t        'octaves': 3,\n\t\t        'stages': 10,\n\t\t        'Q': 10,\n\t\t        'baseFrequency': 350\n\t\t    };\n\t\t    /**\n\t\t\t *  @param {number} stages\n\t\t\t *  @returns {Array} the number of filters all connected together\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {\n\t\t        var filters = new Array(stages);\n\t\t        //make all the filters\n\t\t        for (var i = 0; i < stages; i++) {\n\t\t            var filter = this.context.createBiquadFilter();\n\t\t            filter.type = 'allpass';\n\t\t            Q.connect(filter.Q);\n\t\t            connectToFreq.connect(filter.frequency);\n\t\t            filters[i] = filter;\n\t\t        }\n\t\t        this.connectSeries.apply(this, filters);\n\t\t        return filters;\n\t\t    };\n\t\t    /**\n\t\t\t * The number of octaves the phase goes above\n\t\t\t * the baseFrequency\n\t\t\t * @memberOf Tone.Phaser#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            var max = this._baseFrequency * Math.pow(2, octaves);\n\t\t            this._lfoL.max = max;\n\t\t            this._lfoR.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The the base frequency of the filters. \n\t\t\t * @memberOf Tone.Phaser#\n\t\t\t * @type {number}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._baseFrequency;\n\t\t        },\n\t\t        set: function (freq) {\n\t\t            this._baseFrequency = freq;\n\t\t            this._lfoL.min = freq;\n\t\t            this._lfoR.min = freq;\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Phaser} this\n\t\t\t */\n\t\t    Tone.Phaser.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.Q.dispose();\n\t\t        this.Q = null;\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        for (var i = 0; i < this._filtersL.length; i++) {\n\t\t            this._filtersL[i].disconnect();\n\t\t            this._filtersL[i] = null;\n\t\t        }\n\t\t        this._filtersL = null;\n\t\t        for (var j = 0; j < this._filtersR.length; j++) {\n\t\t            this._filtersR[j].disconnect();\n\t\t            this._filtersR[j] = null;\n\t\t        }\n\t\t        this._filtersR = null;\n\t\t        this.frequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Phaser;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n\t\t\t *          first in one channel and next in the opposite channel. In a stereo\n\t\t\t *          system these are the right and left channels.\n\t\t\t *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays \n\t\t\t *          with independent delay values. Each delay is routed to one channel\n\t\t\t *          (left or right), and the channel triggered second will always \n\t\t\t *          trigger at the same interval after the first.\n\t\t\t *\n\t\t\t * \t@constructor\n\t\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t\t *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n\t\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t\t *                                 is fed back through the delay.\n\t\t\t *  @example\n\t\t\t * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n\t\t\t * var drum = new Tone.DrumSynth().connect(pingPong);\n\t\t\t * drum.triggerAttackRelease(\"C4\", \"32n\");\n\t\t\t */\n\t\t    Tone.PingPongDelay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'feedback'\n\t\t        ], Tone.PingPongDelay.defaults);\n\t\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the delay node on the left side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the delay node on the right side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the predelay on the right side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the delay time signal\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\t\t        //connect it up\n\t\t        this.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t\t        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t\t        //rearranged the feedback to be after the rightPreDelay\n\t\t        this._feedbackLR.disconnect();\n\t\t        this._feedbackLR.connect(this._rightDelay);\n\t\t        this._readOnly(['delayTime']);\n\t\t    };\n\t\t    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PingPongDelay.defaults = {\n\t\t        'delayTime': 0.25,\n\t\t        'maxDelayTime': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.PingPongDelay} this\n\t\t\t */\n\t\t    Tone.PingPongDelay.prototype.dispose = function () {\n\t\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t\t        this._leftDelay.dispose();\n\t\t        this._leftDelay = null;\n\t\t        this._rightDelay.dispose();\n\t\t        this._rightDelay = null;\n\t\t        this._rightPreDelay.dispose();\n\t\t        this._rightPreDelay = null;\n\t\t        this._writable(['delayTime']);\n\t\t        this.delayTime.dispose();\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PingPongDelay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal. \n\t\t\t *         The effect is achieved by speeding up or slowing down the delayTime\n\t\t\t *         of a DelayNode using a sawtooth wave. \n\t\t\t *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n\t\t\t *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n\t\t\t *         \n\t\t\t *  @extends {Tone.FeedbackEffect}\n\t\t\t *  @param {Interval=} pitch The interval to transpose the incoming signal by. \n\t\t\t */\n\t\t    Tone.PitchShift = function () {\n\t\t        var options = this.optionsObject(arguments, ['pitch'], Tone.PitchShift.defaults);\n\t\t        Tone.FeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The pitch signal\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._frequency = new Tone.Signal(0);\n\t\t        /**\n\t\t\t\t *  Uses two DelayNodes to cover up the jump in\n\t\t\t\t *  the sawtooth wave. \n\t\t\t\t *  @type  {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayA = new Tone.Delay(0, 1);\n\t\t        /**\n\t\t\t\t *  The first LFO.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoA = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 0.1,\n\t\t            'type': 'sawtooth'\n\t\t        }).connect(this._delayA.delayTime);\n\t\t        /**\n\t\t\t\t *  The second DelayNode\n\t\t\t\t *  @type  {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayB = new Tone.Delay(0, 1);\n\t\t        /**\n\t\t\t\t *  The first LFO.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoB = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 0.1,\n\t\t            'type': 'sawtooth',\n\t\t            'phase': 180\n\t\t        }).connect(this._delayB.delayTime);\n\t\t        /**\n\t\t\t\t *  Crossfade quickly between the two delay lines\n\t\t\t\t *  to cover up the jump in the sawtooth wave\n\t\t\t\t *  @type  {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._crossFade = new Tone.CrossFade();\n\t\t        /**\n\t\t\t\t *  LFO which alternates between the two\n\t\t\t\t *  delay lines to cover up the disparity in the\n\t\t\t\t *  sawtooth wave. \n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._crossFadeLFO = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 1,\n\t\t            'type': 'triangle',\n\t\t            'phase': 90\n\t\t        }).connect(this._crossFade.fade);\n\t\t        /**\n\t\t\t\t *  The delay node\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackDelay = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The amount of delay on the input signal\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._feedbackDelay.delayTime;\n\t\t        this._readOnly('delayTime');\n\t\t        /**\n\t\t\t\t *  Hold the current pitch\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pitch = options.pitch;\n\t\t        /**\n\t\t\t\t *  Hold the current windowSize\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._windowSize = options.windowSize;\n\t\t        //connect the two delay lines up\n\t\t        this._delayA.connect(this._crossFade.a);\n\t\t        this._delayB.connect(this._crossFade.b);\n\t\t        //connect the frequency\n\t\t        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t\t        //route the input\n\t\t        this.effectSend.fan(this._delayA, this._delayB);\n\t\t        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t\t        //start the LFOs at the same time\n\t\t        var now = this.now();\n\t\t        this._lfoA.start(now);\n\t\t        this._lfoB.start(now);\n\t\t        this._crossFadeLFO.start(now);\n\t\t        //set the initial value\n\t\t        this.windowSize = this._windowSize;\n\t\t    };\n\t\t    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.PitchShift.defaults = {\n\t\t        'pitch': 0,\n\t\t        'windowSize': 0.1,\n\t\t        'delayTime': 0,\n\t\t        'feedback': 0\n\t\t    };\n\t\t    /**\n\t\t\t * Repitch the incoming signal by some interval (measured\n\t\t\t * in semi-tones). \n\t\t\t * @memberOf Tone.PitchShift#\n\t\t\t * @type {Interval}\n\t\t\t * @name pitch\n\t\t\t * @example\n\t\t\t * pitchShift.pitch = -12; //down one octave\n\t\t\t * pitchShift.pitch = 7; //up a fifth\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {\n\t\t        get: function () {\n\t\t            return this._pitch;\n\t\t        },\n\t\t        set: function (interval) {\n\t\t            this._pitch = interval;\n\t\t            var factor = 0;\n\t\t            if (interval < 0) {\n\t\t                this._lfoA.min = 0;\n\t\t                this._lfoA.max = this._windowSize;\n\t\t                this._lfoB.min = 0;\n\t\t                this._lfoB.max = this._windowSize;\n\t\t                factor = this.intervalToFrequencyRatio(interval - 1) + 1;\n\t\t            } else {\n\t\t                this._lfoA.min = this._windowSize;\n\t\t                this._lfoA.max = 0;\n\t\t                this._lfoB.min = this._windowSize;\n\t\t                this._lfoB.max = 0;\n\t\t                factor = this.intervalToFrequencyRatio(interval) - 1;\n\t\t            }\n\t\t            this._frequency.value = factor * (1.2 / this._windowSize);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The window size corresponds roughly to the sample length in a looping sampler. \n\t\t\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t\t\t * signal, but larger values will result in smoother pitch shifting for larger intervals. \n\t\t\t * A nominal range of 0.03 to 0.1 is recommended. \n\t\t\t * @memberOf Tone.PitchShift#\n\t\t\t * @type {Time}\n\t\t\t * @name windowSize\n\t\t\t * @example\n\t\t\t * pitchShift.windowSize = 0.1;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {\n\t\t        get: function () {\n\t\t            return this._windowSize;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._windowSize = this.toSeconds(size);\n\t\t            this.pitch = this._pitch;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.PitchShift}  this\n\t\t\t */\n\t\t    Tone.PitchShift.prototype.dispose = function () {\n\t\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t\t        this._frequency.dispose();\n\t\t        this._frequency = null;\n\t\t        this._delayA.disconnect();\n\t\t        this._delayA = null;\n\t\t        this._delayB.disconnect();\n\t\t        this._delayB = null;\n\t\t        this._lfoA.dispose();\n\t\t        this._lfoA = null;\n\t\t        this._lfoB.dispose();\n\t\t        this._lfoB = null;\n\t\t        this._crossFade.dispose();\n\t\t        this._crossFade = null;\n\t\t        this._crossFadeLFO.dispose();\n\t\t        this._crossFadeLFO = null;\n\t\t        this._writable('delayTime');\n\t\t        this._feedbackDelay.dispose();\n\t\t        this._feedbackDelay = null;\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PitchShift;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Base class for stereo feedback effects where the effectReturn\n\t\t\t *         is fed back into the same channel. \n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t\t */\n\t\t    Tone.StereoFeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  controls the amount of feedback\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  the left side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackL = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the right side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackR = new Tone.Gain();\n\t\t        //connect it up\n\t\t        this.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t\t        this.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t\t        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoFeedbackEffect, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.StereoFeedbackEffect} this\n\t\t\t */\n\t\t    Tone.StereoFeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this.feedback.dispose();\n\t\t        this.feedback = null;\n\t\t        this._feedbackL.dispose();\n\t\t        this._feedbackL = null;\n\t\t        this._feedbackR.dispose();\n\t\t        this._feedbackR = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoFeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Applies a width factor to the mid/side seperation. \n\t\t\t *         0 is all mid and 1 is all side.\n\t\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t\t *         <br><br>\n\t\t\t *         <code>\n\t\t\t *         Mid *= 2*(1-width)<br>\n\t\t\t *         Side *= 2*width\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone.MidSideEffect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t\t */\n\t\t    Tone.StereoWidener = function () {\n\t\t        var options = this.optionsObject(arguments, ['width'], Tone.StereoWidener.defaults);\n\t\t        Tone.MidSideEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  Mid multiplier\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midMult = new Tone.Expr('$0 * ($1 * (1 - $2))');\n\t\t        /**\n\t\t\t\t *  Side multiplier\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sideMult = new Tone.Expr('$0 * ($1 * $2)');\n\t\t        /**\n\t\t\t\t *  constant output of 2\n\t\t\t\t *  @type {Tone}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._two = new Tone.Signal(2);\n\t\t        //the mid chain\n\t\t        this._two.connect(this._midMult, 0, 1);\n\t\t        this.width.connect(this._midMult, 0, 2);\n\t\t        //the side chain\n\t\t        this._two.connect(this._sideMult, 0, 1);\n\t\t        this.width.connect(this._sideMult, 0, 2);\n\t\t        //connect it to the effect send/return\n\t\t        this.midSend.chain(this._midMult, this.midReturn);\n\t\t        this.sideSend.chain(this._sideMult, this.sideReturn);\n\t\t        this._readOnly(['width']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.StereoWidener.defaults = { 'width': 0.5 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.StereoWidener} this\n\t\t\t */\n\t\t    Tone.StereoWidener.prototype.dispose = function () {\n\t\t        Tone.MidSideEffect.prototype.dispose.call(this);\n\t\t        this._writable(['width']);\n\t\t        this.width.dispose();\n\t\t        this.width = null;\n\t\t        this._midMult.dispose();\n\t\t        this._midMult = null;\n\t\t        this._sideMult.dispose();\n\t\t        this._sideMult = null;\n\t\t        this._two.dispose();\n\t\t        this._two = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoWidener;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n\t\t\t *         The type, frequency, and depth of the LFO is controllable.\n\t\t\t *\n\t\t\t *  @extends {Tone.StereoEffect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} [frequency] The rate of the effect.\n\t\t\t *  @param {NormalRange} [depth] The depth of the effect.\n\t\t\t *  @example\n\t\t\t * //create a tremolo and start it's LFO\n\t\t\t * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n\t\t\t * //route an oscillator through the tremolo and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n\t\t\t */\n\t\t    Tone.Tremolo = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ], Tone.Tremolo.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The tremelo LFO in the left channel\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO({\n\t\t            'phase': options.spread,\n\t\t            'min': 1,\n\t\t            'max': 0\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The tremelo LFO in the left channel\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO({\n\t\t            'phase': options.spread,\n\t\t            'min': 1,\n\t\t            'max': 0\n\t\t        });\n\t\t        /**\n\t\t\t\t *  Where the gain is multiplied\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitudeL = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Where the gain is multiplied\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitudeR = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The frequency of the tremolo.\n\t\t\t\t *  @type  {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The depth of the effect. A depth of 0, has no effect\n\t\t\t\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t\t\t\t *  modulate fully between 0 and 1.\n\t\t\t\t *  @type  {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\t\t        this._lfoL.connect(this._amplitudeL.gain);\n\t\t        this._lfoR.connect(this._amplitudeR.gain);\n\t\t        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t\t        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t\t        this.type = options.type;\n\t\t        this.spread = options.spread;\n\t\t    };\n\t\t    Tone.extend(Tone.Tremolo, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Tremolo.defaults = {\n\t\t        'frequency': 10,\n\t\t        'type': 'sine',\n\t\t        'depth': 0.5,\n\t\t        'spread': 180\n\t\t    };\n\t\t    /**\n\t\t\t * Start the tremolo.\n\t\t\t * @param {Time} [time=now] When the tremolo begins.\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.start = function (time) {\n\t\t        this._lfoL.start(time);\n\t\t        this._lfoR.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the tremolo.\n\t\t\t * @param {Time} [time=now] When the tremolo stops.\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.stop = function (time) {\n\t\t        this._lfoL.stop(time);\n\t\t        this._lfoR.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the effect to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                              Transport has started.\n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.sync = function (delay) {\n\t\t        this._lfoL.sync(delay);\n\t\t        this._lfoR.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the filter from the transport\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.unsync = function () {\n\t\t        this._lfoL.unsync();\n\t\t        this._lfoR.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The Tremolo's oscillator type.\n\t\t\t * @memberOf Tone.Tremolo#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Tremolo.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfoL.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfoL.type = type;\n\t\t            this._lfoR.type = type;\n\t\t        }\n\t\t    });\n\t\t    /** \n\t\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t\t * @memberOf Tone.Tremolo#\n\t\t\t * @type {Degrees}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._lfoL.phase = 90 - spread / 2;\n\t\t            this._lfoR.phase = spread / 2 + 90;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        this._amplitudeL.dispose();\n\t\t        this._amplitudeL = null;\n\t\t        this._amplitudeR.dispose();\n\t\t        this._amplitudeR = null;\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Tremolo;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n\t\t\t *         modulates the delayTime of the delay, causing the pitch to rise\n\t\t\t *         and fall. \n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency} frequency The frequency of the vibrato.\n\t\t\t *  @param {NormalRange} depth The amount the pitch is modulated.\n\t\t\t */\n\t\t    Tone.Vibrato = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ], Tone.Vibrato.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The delay node used for the vibrato effect\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = new Tone.Delay(0, options.maxDelay);\n\t\t        /**\n\t\t\t\t *  The LFO used to control the vibrato\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'type': options.type,\n\t\t            'min': 0,\n\t\t            'max': options.maxDelay,\n\t\t            'frequency': options.frequency,\n\t\t            'phase': -90    //offse the phase so the resting position is in the center\n\t\t        }).start().connect(this._delayNode.delayTime);\n\t\t        /**\n\t\t\t\t *  The frequency of the vibrato\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        /**\n\t\t\t\t *  The depth of the vibrato. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        this.depth.value = options.depth;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.effectSend.chain(this._delayNode, this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.Vibrato, Tone.Effect);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Vibrato.defaults = {\n\t\t        'maxDelay': 0.005,\n\t\t        'frequency': 5,\n\t\t        'depth': 0.1,\n\t\t        'type': 'sine'\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the Vibrato.\n\t\t\t * @memberOf Tone.Vibrato#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Vibrato.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Vibrato} this\n\t\t\t */\n\t\t    Tone.Vibrato.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._delayNode.dispose();\n\t\t        this._delayNode = null;\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t    };\n\t\t    return Tone.Vibrato;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n\t\t\t *          callback for a single or repeatable events along the timeline. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {function} callback The callback to invoke at the time. \n\t\t\t *  @param {*} value The value or values which should be passed to\n\t\t\t *                      the callback function on invocation.  \n\t\t\t *  @example\n\t\t\t * var chord = new Tone.Event(function(time, chord){\n\t\t\t * \t//the chord as well as the exact time of the event\n\t\t\t * \t//are passed in as arguments to the callback function\n\t\t\t * }, [\"D4\", \"E4\", \"F4\"]);\n\t\t\t * //start the chord at the beginning of the transport timeline\n\t\t\t * chord.start();\n\t\t\t * //loop it every measure for 8 measures\n\t\t\t * chord.loop = 8;\n\t\t\t * chord.loopEnd = \"1m\";\n\t\t\t */\n\t\t    Tone.Event = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'value'\n\t\t        ], Tone.Event.defaults);\n\t\t        /**\n\t\t\t\t *  Loop value\n\t\t\t\t *  @type  {Boolean|Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  The callback to invoke. \n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  The value which is passed to the\n\t\t\t\t *  callback function.\n\t\t\t\t *  @type  {*}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.value = options.value;\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = this.toTicks(options.loopStart);\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t\t        /**\n\t\t\t\t *  Tracks the scheduled events\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  The playback speed of the note. A speed of 1\n\t\t\t\t *  is no change. \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this._playbackRate = 1;\n\t\t        /**\n\t\t\t\t *  A delay time from when the event is scheduled to start\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startOffset = 0;\n\t\t        /**\n\t\t\t\t *  The probability that the callback will be invoked\n\t\t\t\t *  at the scheduled time. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @example\n\t\t\t\t * //the callback will be invoked 50% of the time\n\t\t\t\t * event.probability = 0.5;\n\t\t\t\t */\n\t\t        this.probability = options.probability;\n\t\t        /**\n\t\t\t\t *  If set to true, will apply small (+/-0.02 seconds) random variation\n\t\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t\t *  by that amount.\n\t\t\t\t *  @example\n\t\t\t\t * event.humanize = true;\n\t\t\t\t *  @type {Boolean|Time}\n\t\t\t\t */\n\t\t        this.humanize = options.humanize;\n\t\t        /**\n\t\t\t\t *  If mute is true, the callback won't be\n\t\t\t\t *  invoked.\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.mute = options.mute;\n\t\t        //set the initial values\n\t\t        this.playbackRate = options.playbackRate;\n\t\t    };\n\t\t    Tone.extend(Tone.Event);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Event.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'loopEnd': '1m',\n\t\t        'loopStart': 0,\n\t\t        'playbackRate': 1,\n\t\t        'value': null,\n\t\t        'probability': 1,\n\t\t        'mute': false,\n\t\t        'humanize': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Reschedule all of the events along the timeline\n\t\t\t *  with the updated values.\n\t\t\t *  @param {Time} after Only reschedules events after the given time.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._rescheduleEvents = function (after) {\n\t\t        //if no argument is given, schedules all of the events\n\t\t        after = this.defaultArg(after, -1);\n\t\t        this._state.forEachFrom(after, function (event) {\n\t\t            var duration;\n\t\t            if (event.state === Tone.State.Started) {\n\t\t                if (!this.isUndef(event.id)) {\n\t\t                    Tone.Transport.clear(event.id);\n\t\t                }\n\t\t                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t                if (this._loop) {\n\t\t                    duration = Infinity;\n\t\t                    if (this.isNumber(this._loop)) {\n\t\t                        duration = this._loop * this._getLoopDuration();\n\t\t                    }\n\t\t                    var nextEvent = this._state.getEventAfter(startTick);\n\t\t                    if (nextEvent !== null) {\n\t\t                        duration = Math.min(duration, nextEvent.time - startTick);\n\t\t                    }\n\t\t                    if (duration !== Infinity) {\n\t\t                        //schedule a stop since it's finite duration\n\t\t                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t\t                        duration = Tone.Time(duration, 'i');\n\t\t                    }\n\t\t                    var interval = Tone.Time(this._getLoopDuration(), 'i');\n\t\t                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.TransportTime(startTick, 'i'), duration);\n\t\t                } else {\n\t\t                    event.id = Tone.Transport.schedule(this._tick.bind(this), startTick + 'i');\n\t\t                }\n\t\t            }\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the note, either \"started\" or \"stopped\".\n\t\t\t *  @type {String}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._state.getStateAtTime(Tone.Transport.ticks);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The start from the scheduled start time\n\t\t\t *  @type {Ticks}\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @name startOffset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'startOffset', {\n\t\t        get: function () {\n\t\t            return this._startOffset;\n\t\t        },\n\t\t        set: function (offset) {\n\t\t            this._startOffset = offset;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the note at the given time. \n\t\t\t *  @param  {TimelinePosition}  time  When the note should start.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.start = function (time) {\n\t\t        time = this.toTicks(time);\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Stopped) {\n\t\t            this._state.addEvent({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': time,\n\t\t                'id': undefined\n\t\t            });\n\t\t            this._rescheduleEvents(time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the Event at the given time.\n\t\t\t *  @param  {TimelinePosition}  time  When the note should stop.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.stop = function (time) {\n\t\t        this.cancel(time);\n\t\t        time = this.toTicks(time);\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t\t            this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t            var previousEvent = this._state.getEventBefore(time);\n\t\t            var reschedulTime = time;\n\t\t            if (previousEvent !== null) {\n\t\t                reschedulTime = previousEvent.time;\n\t\t            }\n\t\t            this._rescheduleEvents(reschedulTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.cancel = function (time) {\n\t\t        time = this.defaultArg(time, -Infinity);\n\t\t        time = this.toTicks(time);\n\t\t        this._state.forEachFrom(time, function (event) {\n\t\t            Tone.Transport.clear(event.id);\n\t\t        });\n\t\t        this._state.cancel(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The callback function invoker. Also \n\t\t\t *  checks if the Event is done playing\n\t\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._tick = function (time) {\n\t\t        if (!this.mute && this._state.getStateAtTime(Tone.Transport.ticks) === Tone.State.Started) {\n\t\t            if (this.probability < 1 && Math.random() > this.probability) {\n\t\t                return;\n\t\t            }\n\t\t            if (this.humanize) {\n\t\t                var variation = 0.02;\n\t\t                if (!this.isBoolean(this.humanize)) {\n\t\t                    variation = this.toSeconds(this.humanize);\n\t\t                }\n\t\t                time += (Math.random() * 2 - 1) * variation;\n\t\t            }\n\t\t            this.callback(time, this.value);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the duration of the loop.\n\t\t\t *  @return  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._getLoopDuration = function () {\n\t\t        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n\t\t    };\n\t\t    /**\n\t\t\t *  If the note should loop or not\n\t\t\t *  between Tone.Event.loopStart and \n\t\t\t *  Tone.Event.loopEnd. An integer\n\t\t\t *  value corresponds to the number of\n\t\t\t *  loops the Event does after it starts.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {Boolean|Positive}\n\t\t\t *  @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            this._rescheduleEvents();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe playback rate of the note. Defaults to 1.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name playbackRate\n\t\t\t *  @example\n\t\t\t * note.loop = true;\n\t\t\t * //repeat the note twice as fast\n\t\t\t * note.playbackRate = 2;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this._rescheduleEvents();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopEnd point is the time the event will loop\n\t\t\t *  if Tone.Event.loop is true.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = this.toTicks(loopEnd);\n\t\t            if (this._loop) {\n\t\t                this._rescheduleEvents();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The time when the loop should start. \n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = this.toTicks(loopStart);\n\t\t            if (this._loop) {\n\t\t                this._rescheduleEvents();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The current progress of the loop interval.\n\t\t\t *  Returns 0 if the event is not started yet or\n\t\t\t *  it is not set to loop.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name progress\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            if (this._loop) {\n\t\t                var ticks = Tone.Transport.ticks;\n\t\t                var lastEvent = this._state.getEvent(ticks);\n\t\t                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {\n\t\t                    var loopDuration = this._getLoopDuration();\n\t\t                    var progress = (ticks - lastEvent.time) % loopDuration;\n\t\t                    return progress / loopDuration;\n\t\t                } else {\n\t\t                    return 0;\n\t\t                }\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.dispose = function () {\n\t\t        this.cancel();\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t        this.callback = null;\n\t\t        this.value = null;\n\t\t    };\n\t\t    return Tone.Event;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Loop creates a looped callback at the \n\t\t\t *         specified interval. The callback can be \n\t\t\t *         started, stopped and scheduled along\n\t\t\t *         the Transport's timeline. \n\t\t\t *  @example\n\t\t\t * var loop = new Tone.Loop(function(time){\n\t\t\t * \t//triggered every eighth note. \n\t\t\t * \tconsole.log(time);\n\t\t\t * }, \"8n\").start(0);\n\t\t\t * Tone.Transport.start();\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Function} callback The callback to invoke with the event.\n\t\t\t *  @param {Time} interval The time between successive callback calls. \n\t\t\t */\n\t\t    Tone.Loop = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'interval'\n\t\t        ], Tone.Loop.defaults);\n\t\t        /**\n\t\t\t\t *  The event which produces the callbacks\n\t\t\t\t */\n\t\t        this._event = new Tone.Event({\n\t\t            'callback': this._tick.bind(this),\n\t\t            'loop': true,\n\t\t            'loopEnd': options.interval,\n\t\t            'playbackRate': options.playbackRate,\n\t\t            'probability': options.probability\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The callback to invoke with the next event in the pattern\n\t\t\t\t *  @type {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        //set the iterations\n\t\t        this.iterations = options.iterations;\n\t\t    };\n\t\t    Tone.extend(Tone.Loop);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Loop.defaults = {\n\t\t        'interval': '4n',\n\t\t        'callback': Tone.noOp,\n\t\t        'playbackRate': 1,\n\t\t        'iterations': Infinity,\n\t\t        'probability': true,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the loop at the specified time along the Transport's\n\t\t\t *  timeline.\n\t\t\t *  @param  {TimelinePosition=}  time  When to start the Loop.\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.start = function (time) {\n\t\t        this._event.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the loop at the given time.\n\t\t\t *  @param  {TimelinePosition=}  time  When to stop the Arpeggio\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.stop = function (time) {\n\t\t        this._event.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.cancel = function (time) {\n\t\t        this._event.cancel(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal function called when the notes should be called\n\t\t\t *  @param  {Number}  time  The time the event occurs\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Loop.prototype._tick = function (time) {\n\t\t        this.callback(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  The state of the Loop, either started or stopped.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {String}\n\t\t\t *  @name state\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._event.state;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The progress of the loop as a value between 0-1. 0, when\n\t\t\t *  the loop is stopped or done iterating. \n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name progress\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            return this._event.progress;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The time between successive callbacks. \n\t\t\t *  @example\n\t\t\t * loop.interval = \"8n\"; //loop every 8n\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Time}\n\t\t\t *  @name interval\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'interval', {\n\t\t        get: function () {\n\t\t            return this._event.loopEnd;\n\t\t        },\n\t\t        set: function (interval) {\n\t\t            this._event.loopEnd = interval;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The playback rate of the loop. The normal playback rate is 1 (no change). \n\t\t\t *  A `playbackRate` of 2 would be twice as fast. \n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Time}\n\t\t\t *  @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._event.playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._event.playbackRate = rate;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Random variation +/-0.01s to the scheduled time. \n\t\t\t *  Or give it a time value which it will randomize by.\n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @name humanize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'humanize', {\n\t\t        get: function () {\n\t\t            return this._event.humanize;\n\t\t        },\n\t\t        set: function (variation) {\n\t\t            this._event.humanize = variation;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The probably of the callback being invoked.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name probability\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'probability', {\n\t\t        get: function () {\n\t\t            return this._event.probability;\n\t\t        },\n\t\t        set: function (prob) {\n\t\t            this._event.probability = prob;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Muting the Loop means that no callbacks are invoked.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Boolean}\n\t\t\t *  @name mute\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._event.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._event.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The number of iterations of the loop. The default\n\t\t\t *  value is Infinity (loop forever).\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name iterations\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'iterations', {\n\t\t        get: function () {\n\t\t            if (this._event.loop === true) {\n\t\t                return Infinity;\n\t\t            } else {\n\t\t                return this._event.loop;\n\t\t            }\n\t\t            return this._pattern.index;\n\t\t        },\n\t\t        set: function (iters) {\n\t\t            if (iters === Infinity) {\n\t\t                this._event.loop = true;\n\t\t            } else {\n\t\t                this._event.loop = iters;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.dispose = function () {\n\t\t        this._event.dispose();\n\t\t        this._event = null;\n\t\t        this.callback = null;\n\t\t    };\n\t\t    return Tone.Loop;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Part is a collection Tone.Events which can be\n\t\t\t *         started/stoped and looped as a single unit.\n\t\t\t *\n\t\t\t *  @extends {Tone.Event}\n\t\t\t *  @param {Function} callback The callback to invoke on each event\n\t\t\t *  @param {Array} events the array of events\n\t\t\t *  @example\n\t\t\t * var part = new Tone.Part(function(time, note){\n\t\t\t * \t//the notes given as the second element in the array\n\t\t\t * \t//will be passed in as the second argument\n\t\t\t * \tsynth.triggerAttackRelease(note, \"8n\", time);\n\t\t\t * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n\t\t\t *  @example\n\t\t\t * //use an array of objects as long as the object has a \"time\" attribute\n\t\t\t * var part = new Tone.Part(function(time, value){\n\t\t\t * \t//the value is an object which contains both the note and the velocity\n\t\t\t * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n\t\t\t * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9}, \n\t\t\t * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n\t\t\t * ]).start(0);\n\t\t\t */\n\t\t    Tone.Part = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'events'\n\t\t        ], Tone.Part.defaults);\n\t\t        /**\n\t\t\t\t *  If the part is looping or not\n\t\t\t\t *  @type  {Boolean|Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = this.toTicks(options.loopStart);\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t\t        /**\n\t\t\t\t *  The playback rate of the part\n\t\t\t\t *  @type  {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  private holder of probability value\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._probability = options.probability;\n\t\t        /**\n\t\t\t\t *  the amount of variation from the\n\t\t\t\t *  given time. \n\t\t\t\t *  @type {Boolean|Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._humanize = options.humanize;\n\t\t        /**\n\t\t\t\t *  The start offset\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startOffset = 0;\n\t\t        /**\n\t\t\t\t *  Keeps track of the current state\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  An array of Objects. \n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._events = [];\n\t\t        /**\n\t\t\t\t *  The callback to invoke at all the scheduled events.\n\t\t\t\t *  @type {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  If mute is true, the callback won't be\n\t\t\t\t *  invoked.\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.mute = options.mute;\n\t\t        //add the events\n\t\t        var events = this.defaultArg(options.events, []);\n\t\t        if (!this.isUndef(options.events)) {\n\t\t            for (var i = 0; i < events.length; i++) {\n\t\t                if (Array.isArray(events[i])) {\n\t\t                    this.add(events[i][0], events[i][1]);\n\t\t                } else {\n\t\t                    this.add(events[i]);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Part, Tone.Event);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Part.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'loopEnd': '1m',\n\t\t        'loopStart': 0,\n\t\t        'playbackRate': 1,\n\t\t        'probability': 1,\n\t\t        'humanize': false,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the part at the given time. \n\t\t\t *  @param  {TransportTime}  time    When to start the part.\n\t\t\t *  @param  {Time=}  offset  The offset from the start of the part\n\t\t\t *                           to begin playing at.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.start = function (time, offset) {\n\t\t        var ticks = this.toTicks(time);\n\t\t        if (this._state.getStateAtTime(ticks) !== Tone.State.Started) {\n\t\t            if (this._loop) {\n\t\t                offset = this.defaultArg(offset, this._loopStart);\n\t\t            } else {\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toTicks(offset);\n\t\t            this._state.addEvent({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': ticks,\n\t\t                'offset': offset\n\t\t            });\n\t\t            this._forEach(function (event) {\n\t\t                this._startNote(event, ticks, offset);\n\t\t            });\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the event in the given event at the correct time given\n\t\t\t *  the ticks and offset and looping.\n\t\t\t *  @param  {Tone.Event}  event \n\t\t\t *  @param  {Ticks}  ticks\n\t\t\t *  @param  {Ticks}  offset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._startNote = function (event, ticks, offset) {\n\t\t        ticks -= offset;\n\t\t        if (this._loop) {\n\t\t            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t\t                if (event.startOffset < offset) {\n\t\t                    //start it on the next loop\n\t\t                    ticks += this._getLoopDuration();\n\t\t                }\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t\t                event.loop = false;\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            }\n\t\t        } else {\n\t\t            if (event.startOffset >= offset) {\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The start from the scheduled start time\n\t\t\t *  @type {Ticks}\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @name startOffset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'startOffset', {\n\t\t        get: function () {\n\t\t            return this._startOffset;\n\t\t        },\n\t\t        set: function (offset) {\n\t\t            this._startOffset = offset;\n\t\t            this._forEach(function (event) {\n\t\t                event.startOffset += this._startOffset;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Stop the part at the given time.\n\t\t\t *  @param  {TimelinePosition}  time  When to stop the part.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.stop = function (time) {\n\t\t        var ticks = this.toTicks(time);\n\t\t        this._state.cancel(ticks);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, ticks);\n\t\t        this._forEach(function (event) {\n\t\t            event.stop(time);\n\t\t        });\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get/Set an Event's value at the given time. \n\t\t\t *  If a value is passed in and no event exists at\n\t\t\t *  the given time, one will be created with that value. \n\t\t\t *  If two events are at the same time, the first one will\n\t\t\t *  be returned.\n\t\t\t *  @example\n\t\t\t * part.at(\"1m\"); //returns the part at the first measure\n\t\t\t *\n\t\t\t * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2. \n\t\t\t * //if an event didn't exist at that time, it will be created.\n\t\t\t *  @param {TransportTime} time The time of the event to get or set.\n\t\t\t *  @param {*=} value If a value is passed in, the value of the\n\t\t\t *                    event at the given time will be set to it.\n\t\t\t *  @return {Tone.Event} the event at the time\n\t\t\t */\n\t\t    Tone.Part.prototype.at = function (time, value) {\n\t\t        time = Tone.TransportTime(time);\n\t\t        var tickTime = Tone.Time(1, 'i').toSeconds();\n\t\t        for (var i = 0; i < this._events.length; i++) {\n\t\t            var event = this._events[i];\n\t\t            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {\n\t\t                if (!this.isUndef(value)) {\n\t\t                    event.value = value;\n\t\t                }\n\t\t                return event;\n\t\t            }\n\t\t        }\n\t\t        //if there was no event at that time, create one\n\t\t        if (!this.isUndef(value)) {\n\t\t            this.add(time, value);\n\t\t            //return the new event\n\t\t            return this._events[this._events.length - 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Add a an event to the part. \n\t\t\t *  @param {Time} time The time the note should start.\n\t\t\t *                            If an object is passed in, it should\n\t\t\t *                            have a 'time' attribute and the rest\n\t\t\t *                            of the object will be used as the 'value'.\n\t\t\t *  @param  {Tone.Event|*}  value \n\t\t\t *  @returns {Tone.Part} this\n\t\t\t *  @example\n\t\t\t * part.add(\"1m\", \"C#+11\");\n\t\t\t */\n\t\t    Tone.Part.prototype.add = function (time, value) {\n\t\t        //extract the parameters\n\t\t        if (time.hasOwnProperty('time')) {\n\t\t            value = time;\n\t\t            time = value.time;\n\t\t        }\n\t\t        time = this.toTicks(time);\n\t\t        var event;\n\t\t        if (value instanceof Tone.Event) {\n\t\t            event = value;\n\t\t            event.callback = this._tick.bind(this);\n\t\t        } else {\n\t\t            event = new Tone.Event({\n\t\t                'callback': this._tick.bind(this),\n\t\t                'value': value\n\t\t            });\n\t\t        }\n\t\t        //the start offset\n\t\t        event.startOffset = time;\n\t\t        //initialize the values\n\t\t        event.set({\n\t\t            'loopEnd': this.loopEnd,\n\t\t            'loopStart': this.loopStart,\n\t\t            'loop': this.loop,\n\t\t            'humanize': this.humanize,\n\t\t            'playbackRate': this.playbackRate,\n\t\t            'probability': this.probability\n\t\t        });\n\t\t        this._events.push(event);\n\t\t        //start the note if it should be played right now\n\t\t        this._restartEvent(event);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Restart the given event\n\t\t\t *  @param  {Tone.Event}  event \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._restartEvent = function (event) {\n\t\t        var stateEvent = this._state.getEvent(Tone.Transport.ticks);\n\t\t        if (stateEvent && stateEvent.state === Tone.State.Started) {\n\t\t            this._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the part. Will recursively iterate\n\t\t\t *  into nested parts to find the event.\n\t\t\t *  @param {Time} time The time of the event\n\t\t\t *  @param {*} value Optionally select only a specific event value\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.remove = function (time, value) {\n\t\t        //extract the parameters\n\t\t        if (time.hasOwnProperty('time')) {\n\t\t            value = time;\n\t\t            time = value.time;\n\t\t        }\n\t\t        time = this.toTicks(time);\n\t\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t\t            var event = this._events[i];\n\t\t            if (event instanceof Tone.Part) {\n\t\t                event.remove(time, value);\n\t\t            } else {\n\t\t                if (event.startOffset === time) {\n\t\t                    if (this.isUndef(value) || !this.isUndef(value) && event.value === value) {\n\t\t                        this._events.splice(i, 1);\n\t\t                        event.dispose();\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove all of the notes from the group. \n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.removeAll = function () {\n\t\t        this._forEach(function (event) {\n\t\t            event.dispose();\n\t\t        });\n\t\t        this._events = [];\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t\t\t *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.cancel = function (after) {\n\t\t        after = this.toTicks(after);\n\t\t        this._forEach(function (event) {\n\t\t            event.cancel(after);\n\t\t        });\n\t\t        this._state.cancel(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over all of the events\n\t\t\t *  @param {Function} callback\n\t\t\t *  @param {Object} ctx The context\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._forEach = function (callback, ctx) {\n\t\t        ctx = this.defaultArg(ctx, this);\n\t\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t\t            var e = this._events[i];\n\t\t            if (e instanceof Tone.Part) {\n\t\t                e._forEach(callback, ctx);\n\t\t            } else {\n\t\t                callback.call(ctx, e);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the attribute of all of the events\n\t\t\t *  @param  {String}  attr  the attribute to set\n\t\t\t *  @param  {*}  value      The value to set it to\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._setAll = function (attr, value) {\n\t\t        this._forEach(function (event) {\n\t\t            event[attr] = value;\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal tick method\n\t\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._tick = function (time, value) {\n\t\t        if (!this.mute) {\n\t\t            this.callback(time, value);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Determine if the event should be currently looping\n\t\t\t *  given the loop boundries of this Part.\n\t\t\t *  @param  {Tone.Event}  event  The event to test\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._testLoopBoundries = function (event) {\n\t\t        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {\n\t\t            event.cancel();\n\t\t        } else {\n\t\t            //reschedule it if it's stopped\n\t\t            if (event.state === Tone.State.Stopped) {\n\t\t                this._restartEvent(event);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The probability of the notes being triggered.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name probability\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'probability', {\n\t\t        get: function () {\n\t\t            return this._probability;\n\t\t        },\n\t\t        set: function (prob) {\n\t\t            this._probability = prob;\n\t\t            this._setAll('probability', prob);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  If set to true, will apply small random variation\n\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t *  by that amount.\n\t\t\t *  @example\n\t\t\t * event.humanize = true;\n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @name humanize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'humanize', {\n\t\t        get: function () {\n\t\t            return this._humanize;\n\t\t        },\n\t\t        set: function (variation) {\n\t\t            this._humanize = variation;\n\t\t            this._setAll('humanize', variation);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  If the part should loop or not\n\t\t\t *  between Tone.Part.loopStart and \n\t\t\t *  Tone.Part.loopEnd. An integer\n\t\t\t *  value corresponds to the number of\n\t\t\t *  loops the Part does after it starts.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Boolean|Positive}\n\t\t\t *  @name loop\n\t\t\t *  @example\n\t\t\t * //loop the part 8 times\n\t\t\t * part.loop = 8;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            this._forEach(function (event) {\n\t\t                event._loopStart = this._loopStart;\n\t\t                event._loopEnd = this._loopEnd;\n\t\t                event.loop = loop;\n\t\t                this._testLoopBoundries(event);\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopEnd point determines when it will \n\t\t\t *  loop if Tone.Part.loop is true.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = this.toTicks(loopEnd);\n\t\t            if (this._loop) {\n\t\t                this._forEach(function (event) {\n\t\t                    event.loopEnd = this.loopEnd;\n\t\t                    this._testLoopBoundries(event);\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopStart point determines when it will \n\t\t\t *  loop if Tone.Part.loop is true.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = this.toTicks(loopStart);\n\t\t            if (this._loop) {\n\t\t                this._forEach(function (event) {\n\t\t                    event.loopStart = this.loopStart;\n\t\t                    this._testLoopBoundries(event);\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe playback rate of the part\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this._setAll('playbackRate', rate);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe number of scheduled notes in the part. \n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._events.length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.dispose = function () {\n\t\t        this.removeAll();\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t        this.callback = null;\n\t\t        this._events = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Part;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Pattern arpeggiates between the given notes\n\t\t\t *         in a number of patterns. See Tone.CtrlPattern for\n\t\t\t *         a full list of patterns.\n\t\t\t *  @example\n\t\t\t * var pattern = new Tone.Pattern(function(time, note){\n\t\t\t *   //the order of the notes passed in depends on the pattern\n\t\t\t * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n\t\t\t *  @extends {Tone.Loop}\n\t\t\t *  @param {Function} callback The callback to invoke with the\n\t\t\t *                             event.\n\t\t\t *  @param {Array} values The values to arpeggiate over.\n\t\t\t */\n\t\t    Tone.Pattern = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'values',\n\t\t            'pattern'\n\t\t        ], Tone.Pattern.defaults);\n\t\t        Tone.Loop.call(this, options);\n\t\t        /**\n\t\t\t\t *  The pattern manager\n\t\t\t\t *  @type {Tone.CtrlPattern}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pattern = new Tone.CtrlPattern({\n\t\t            'values': options.values,\n\t\t            'type': options.pattern,\n\t\t            'index': options.index\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.Pattern, Tone.Loop);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Pattern.defaults = {\n\t\t        'pattern': Tone.CtrlPattern.Type.Up,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal function called when the notes should be called\n\t\t\t *  @param  {Number}  time  The time the event occurs\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Pattern.prototype._tick = function (time) {\n\t\t        this.callback(time, this._pattern.value);\n\t\t        this._pattern.next();\n\t\t    };\n\t\t    /**\n\t\t\t *  The current index in the values array.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name index\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'index', {\n\t\t        get: function () {\n\t\t            return this._pattern.index;\n\t\t        },\n\t\t        set: function (i) {\n\t\t            this._pattern.index = i;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The array of events.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {Array}\n\t\t\t *  @name values\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'values', {\n\t\t        get: function () {\n\t\t            return this._pattern.values;\n\t\t        },\n\t\t        set: function (vals) {\n\t\t            this._pattern.values = vals;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The current value of the pattern.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._pattern.value;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {String}\n\t\t\t *  @name pattern\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {\n\t\t        get: function () {\n\t\t            return this._pattern.type;\n\t\t        },\n\t\t        set: function (pattern) {\n\t\t            this._pattern.type = pattern;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Pattern}  this\n\t\t\t */\n\t\t    Tone.Pattern.prototype.dispose = function () {\n\t\t        Tone.Loop.prototype.dispose.call(this);\n\t\t        this._pattern.dispose();\n\t\t        this._pattern = null;\n\t\t    };\n\t\t    return Tone.Pattern;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A sequence is an alternate notation of a part. Instead\n\t\t\t *         of passing in an array of [time, event] pairs, pass\n\t\t\t *         in an array of events which will be spaced at the\n\t\t\t *         given subdivision. Sub-arrays will subdivide that beat\n\t\t\t *         by the number of items are in the array. \n\t\t\t *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n\t\t\t *  @param  {Function}  callback  The callback to invoke with every note\n\t\t\t *  @param  {Array}    events  The sequence\n\t\t\t *  @param  {Time} subdivision  The subdivision between which events are placed. \n\t\t\t *  @extends {Tone.Part}\n\t\t\t *  @example\n\t\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t\t * \tconsole.log(note);\n\t\t\t * //straight quater notes\n\t\t\t * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n\t\t\t *  @example\n\t\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t\t * \tconsole.log(note);\n\t\t\t * //subdivisions are given as subarrays\n\t\t\t * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n\t\t\t */\n\t\t    Tone.Sequence = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'events',\n\t\t            'subdivision'\n\t\t        ], Tone.Sequence.defaults);\n\t\t        //remove the events\n\t\t        var events = options.events;\n\t\t        delete options.events;\n\t\t        Tone.Part.call(this, options);\n\t\t        /**\n\t\t\t\t *  The subdivison of each note\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subdivision = this.toTicks(options.subdivision);\n\t\t        //if no time was passed in, the loop end is the end of the cycle\n\t\t        if (this.isUndef(options.loopEnd) && !this.isUndef(events)) {\n\t\t            this._loopEnd = events.length * this._subdivision;\n\t\t        }\n\t\t        //defaults to looping\n\t\t        this._loop = true;\n\t\t        //add all of the events\n\t\t        if (!this.isUndef(events)) {\n\t\t            for (var i = 0; i < events.length; i++) {\n\t\t                this.add(i, events[i]);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Sequence, Tone.Part);\n\t\t    /**\n\t\t\t *  The default values.\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Sequence.defaults = { 'subdivision': '4n' };\n\t\t    /**\n\t\t\t *  The subdivision of the sequence. This can only be \n\t\t\t *  set in the constructor. The subdivision is the \n\t\t\t *  interval between successive steps. \n\t\t\t *  @type {Time}\n\t\t\t *  @memberOf Tone.Sequence#\n\t\t\t *  @name subdivision\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {\n\t\t        get: function () {\n\t\t            return Tone.Time(this._subdivision, 'i').toNotation();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Get/Set an index of the sequence. If the index contains a subarray, \n\t\t\t *  a Tone.Sequence representing that sub-array will be returned. \n\t\t\t *  @example\n\t\t\t * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n\t\t\t * sequence.at(0)// => returns \"E4\"\n\t\t\t * //set a value\n\t\t\t * sequence.at(0, \"G3\");\n\t\t\t * //get a nested sequence\n\t\t\t * sequence.at(3).at(1)// => returns \"Bb3\"\n\t\t\t * @param {Positive} index The index to get or set\n\t\t\t * @param {*} value Optionally pass in the value to set at the given index.\n\t\t\t */\n\t\t    Tone.Sequence.prototype.at = function (index, value) {\n\t\t        //if the value is an array, \n\t\t        if (this.isArray(value)) {\n\t\t            //remove the current event at that index\n\t\t            this.remove(index);\n\t\t        }\n\t\t        //call the parent's method\n\t\t        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n\t\t    };\n\t\t    /**\n\t\t\t *  Add an event at an index, if there's already something\n\t\t\t *  at that index, overwrite it. If `value` is an array, \n\t\t\t *  it will be parsed as a subsequence.\n\t\t\t *  @param {Number} index The index to add the event to\n\t\t\t *  @param {*} value The value to add at that index\n\t\t\t *  @returns {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.add = function (index, value) {\n\t\t        if (value === null) {\n\t\t            return this;\n\t\t        }\n\t\t        if (this.isArray(value)) {\n\t\t            //make a subsequence and add that to the sequence\n\t\t            var subSubdivision = Math.round(this._subdivision / value.length);\n\t\t            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Time(subSubdivision, 'i'));\n\t\t        }\n\t\t        Tone.Part.prototype.add.call(this, this._indexTime(index), value);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove a value from the sequence by index\n\t\t\t *  @param {Number} index The index of the event to remove\n\t\t\t *  @returns {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.remove = function (index, value) {\n\t\t        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the time of the index given the Sequence's subdivision\n\t\t\t *  @param  {Number}  index \n\t\t\t *  @return  {Time}  The time of that index\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Sequence.prototype._indexTime = function (index) {\n\t\t        if (index instanceof Tone.TransportTime) {\n\t\t            return index;\n\t\t        } else {\n\t\t            return Tone.TransportTime(index * this._subdivision + this.startOffset, 'i');\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.dispose = function () {\n\t\t        Tone.Part.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Sequence;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t\t\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is \n\t\t\t *         a square and only odd-numbered harmonics are present. At all other widths \n\t\t\t *         even-numbered harmonics are present. Read more \n\t\t\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t\t\t *  @param {NormalRange} [width] The width of the pulse\n\t\t\t *  @example\n\t\t\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t\t\t */\n\t\t    Tone.PulseOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'width'\n\t\t        ], Tone.Oscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The width of the pulse. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  gate the width amount\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._widthGate = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the sawtooth oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sawtooth = new Tone.Oscillator({\n\t\t            frequency: options.frequency,\n\t\t            detune: options.detune,\n\t\t            type: 'sawtooth',\n\t\t            phase: options.phase\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._sawtooth.frequency;\n\t\t        /**\n\t\t\t\t *  The detune in cents. \n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._sawtooth.detune;\n\t\t        /**\n\t\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._thresh = new Tone.WaveShaper(function (val) {\n\t\t            if (val < 0) {\n\t\t                return -1;\n\t\t            } else {\n\t\t                return 1;\n\t\t            }\n\t\t        });\n\t\t        //connections\n\t\t        this._sawtooth.chain(this._thresh, this.output);\n\t\t        this.width.chain(this._widthGate, this._thresh);\n\t\t        this._readOnly([\n\t\t            'width',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PulseOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  The default parameters.\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PulseOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'width': 0.2\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._sawtooth.start(time);\n\t\t        this._widthGate.gain.setValueAtTime(1, time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._sawtooth.stop(time);\n\t\t        //the width is still connected to the output. \n\t\t        //that needs to be stopped also\n\t\t        this._widthGate.gain.setValueAtTime(0, time);\n\t\t    };\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._sawtooth.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._sawtooth.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t\t * @readOnly\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return 'pulse';\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return [];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up method.\n\t\t\t *  @return {Tone.PulseOscillator} this\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._sawtooth.dispose();\n\t\t        this._sawtooth = null;\n\t\t        this._writable([\n\t\t            'width',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.width.dispose();\n\t\t        this.width = null;\n\t\t        this._widthGate.dispose();\n\t\t        this._widthGate = null;\n\t\t        this._thresh.dispose();\n\t\t        this._thresh = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PulseOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator \n\t\t\t *         at the modulationFrequency. This has the effect of continuously\n\t\t\t *         changing the timbre of the oscillator by altering the harmonics \n\t\t\t *         generated.\n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse. \n\t\t\t *  @example\n\t\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t\t\t */\n\t\t    Tone.PWMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'modulationFrequency'\n\t\t        ], Tone.PWMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  the pulse oscillator\n\t\t\t\t *  @type {Tone.PulseOscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t\t        //change the pulse oscillator type\n\t\t        this._pulse._sawtooth.type = 'sine';\n\t\t        /**\n\t\t\t\t *  the modulator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator({\n\t\t            'frequency': options.frequency,\n\t\t            'detune': options.detune,\n\t\t            'phase': options.phase\n\t\t        });\n\t\t        /**\n\t\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t\t *  at the extreme values.\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = new Tone.Multiply(2);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._modulator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune of the oscillator.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._modulator.detune;\n\t\t        /**\n\t\t\t\t *  The modulation rate of the oscillator. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.modulationFrequency = this._pulse.frequency;\n\t\t        //connections\n\t\t        this._modulator.chain(this._scale, this._pulse.width);\n\t\t        this._pulse.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'modulationFrequency',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PWMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.PWMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationFrequency': 0.4\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._pulse.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._pulse.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t\t * @readOnly\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return 'pwm';\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return [];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._modulator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.PWMOscillator} this\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._pulse.dispose();\n\t\t        this._pulse = null;\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._writable([\n\t\t            'modulationFrequency',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.modulationFrequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PWMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FMOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.FMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'modulationType'\n\t\t        ], Tone.FMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._carrier.detune;\n\t\t        this.detune.value = options.detune;\n\t\t        /**\n\t\t\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t\t *\t@type {Positive}\n\t\t\t\t *\t@signal\n\t\t\t\t */\n\t\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t\t        this.modulationIndex.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  The modulating oscillator\n\t\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //connections\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\t        this._modulator.connect(this._modulationNode.gain);\n\t\t        this._modulationNode.connect(this._carrier.frequency);\n\t\t        this._carrier.connect(this.output);\n\t\t        this.detune.connect(this._modulator.detune);\n\t\t        this.phase = options.phase;\n\t\t        this._readOnly([\n\t\t            'modulationIndex',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.FMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationIndex': 2,\n\t\t        'modulationType': 'square',\n\t\t        'harmonicity': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._carrier.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._carrier.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._carrier.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._carrier.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            return this._modulator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._modulator.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._carrier.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._carrier.phase = phase;\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._carrier.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._carrier.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.FMOscillator} this\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'modulationIndex',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.modulationIndex.dispose();\n\t\t        this.modulationIndex = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AMOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.AMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'modulationType'\n\t\t        ], Tone.AMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._carrier.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._carrier.detune;\n\t\t        this.detune.value = options.detune;\n\t\t        /**\n\t\t\t\t *  The modulating oscillator\n\t\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t\t        /**\n\t\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationScale = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //connections\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.detune.connect(this._modulator.detune);\n\t\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\t        this._carrier.chain(this._modulationNode, this.output);\n\t\t        this.phase = options.phase;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.AMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationType': 'square',\n\t\t        'harmonicity': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._carrier.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._carrier.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._carrier.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._carrier.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            return this._modulator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._modulator.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._carrier.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._carrier.phase = phase;\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._carrier.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._carrier.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.AMOscillator} this\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this._modulationScale.dispose();\n\t\t        this._modulationScale = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FatOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.FatOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'spread'\n\t\t        ], Tone.FatOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  The array of oscillators\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillators = [];\n\t\t        /**\n\t\t\t\t *  The total spread of the oscillators\n\t\t\t\t *  @type  {Cents}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._spread = options.spread;\n\t\t        /**\n\t\t\t\t *  The type of the oscillator\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  The phase of the oscillators\n\t\t\t\t *  @type {Degrees}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._phase = options.phase;\n\t\t        /**\n\t\t\t\t *  The partials array\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._partials = this.defaultArg(options.partials, []);\n\t\t        //set the count initially\n\t\t        this.count = options.count;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FatOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.FatOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'spread': 20,\n\t\t        'count': 3,\n\t\t        'type': 'sawtooth'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._forEach(function (osc) {\n\t\t            osc.start(time);\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._forEach(function (osc) {\n\t\t            osc.stop(time);\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over all of the oscillators\n\t\t\t *  @param  {Function}  iterator  The iterator function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._forEach = function (iterator) {\n\t\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t\t            iterator.call(this, this._oscillators[i], i);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._type = type;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.type = type;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t\t * for a total detune spread of 40 cents.\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Cents}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._spread;\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._spread = spread;\n\t\t            if (this._oscillators.length > 1) {\n\t\t                var start = -spread / 2;\n\t\t                var step = spread / (this._oscillators.length - 1);\n\t\t                this._forEach(function (osc, i) {\n\t\t                    osc.detune.value = start + step * i;\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of detuned oscillators\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name count\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {\n\t\t        get: function () {\n\t\t            return this._oscillators.length;\n\t\t        },\n\t\t        set: function (count) {\n\t\t            count = Math.max(count, 1);\n\t\t            if (this._oscillators.length !== count) {\n\t\t                // var partials = this.partials;\n\t\t                // var type = this.type;\n\t\t                //dispose the previous oscillators\n\t\t                this._forEach(function (osc) {\n\t\t                    osc.dispose();\n\t\t                });\n\t\t                this._oscillators = [];\n\t\t                for (var i = 0; i < count; i++) {\n\t\t                    var osc = new Tone.Oscillator();\n\t\t                    if (this.type === Tone.Oscillator.Type.Custom) {\n\t\t                        osc.partials = this._partials;\n\t\t                    } else {\n\t\t                        osc.type = this._type;\n\t\t                    }\n\t\t                    osc.phase = this._phase;\n\t\t                    osc.volume.value = -6 - count;\n\t\t                    this.frequency.connect(osc.frequency);\n\t\t                    this.detune.connect(osc.detune);\n\t\t                    osc.connect(this.output);\n\t\t                    this._oscillators[i] = osc;\n\t\t                }\n\t\t                //set the spread\n\t\t                this.spread = this._spread;\n\t\t                if (this.state === Tone.State.Started) {\n\t\t                    this._forEach(function (osc) {\n\t\t                        osc.start();\n\t\t                    });\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._phase = phase;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.phase = phase;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._partials = partials;\n\t\t            this._type = Tone.Oscillator.Type.Custom;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.partials = partials;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.FatOscillator} this\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this._forEach(function (osc) {\n\t\t            osc.dispose();\n\t\t        });\n\t\t        this._oscillators = null;\n\t\t        this._partials = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FatOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t\t\t *         into one class. The oscillator class can be changed by setting the `type`. \n\t\t\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t\t\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t\t\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively. \n\t\t\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t\t\t *         to a FatOscillator of type \"sawtooth\". \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t\t\t *  @param {String} type The type of the oscillator.\n\t\t\t *  @example\n\t\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t\t */\n\t\t    Tone.OmniOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type'\n\t\t        ], Tone.OmniOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  the type of the oscillator source\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sourceType = undefined;\n\t\t        /**\n\t\t\t\t *  the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = null;\n\t\t        //set the oscillator\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        //set the options\n\t\t        this.set(options);\n\t\t    };\n\t\t    Tone.extend(Tone.OmniOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.OmniOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'type': 'sine',\n\t\t        'phase': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  @enum {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var OmniOscType = {\n\t\t        Pulse: 'PulseOscillator',\n\t\t        PWM: 'PWMOscillator',\n\t\t        Osc: 'Oscillator',\n\t\t        FM: 'FMOscillator',\n\t\t        AM: 'AMOscillator',\n\t\t        Fat: 'FatOscillator'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._start = function (time) {\n\t\t        this._oscillator.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._stop = function (time) {\n\t\t        this._oscillator.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t\t\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t\t\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t\t\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error \n\t\t\t * when it's not.\n\t\t\t * \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * omniOsc.type = \"pwm\";\n\t\t\t * //modulationFrequency is parameter which is available\n\t\t\t * //only when the type is \"pwm\". \n\t\t\t * omniOsc.modulationFrequency.value = 0.5;\n\t\t\t * @example\n\t\t\t * //an square wave frequency modulated by a sawtooth\n\t\t\t * omniOsc.type = \"fmsquare\";\n\t\t\t * omniOsc.modulationType = \"sawtooth\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            var prefix = '';\n\t\t            if (this._sourceType === OmniOscType.FM) {\n\t\t                prefix = 'fm';\n\t\t            } else if (this._sourceType === OmniOscType.AM) {\n\t\t                prefix = 'am';\n\t\t            } else if (this._sourceType === OmniOscType.Fat) {\n\t\t                prefix = 'fat';\n\t\t            }\n\t\t            return prefix + this._oscillator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type.substr(0, 2) === 'fm') {\n\t\t                this._createNewOscillator(OmniOscType.FM);\n\t\t                this._oscillator.type = type.substr(2);\n\t\t            } else if (type.substr(0, 2) === 'am') {\n\t\t                this._createNewOscillator(OmniOscType.AM);\n\t\t                this._oscillator.type = type.substr(2);\n\t\t            } else if (type.substr(0, 3) === 'fat') {\n\t\t                this._createNewOscillator(OmniOscType.Fat);\n\t\t                this._oscillator.type = type.substr(3);\n\t\t            } else if (type === 'pwm') {\n\t\t                this._createNewOscillator(OmniOscType.PWM);\n\t\t            } else if (type === 'pulse') {\n\t\t                this._createNewOscillator(OmniOscType.Pulse);\n\t\t            } else {\n\t\t                this._createNewOscillator(OmniOscType.Osc);\n\t\t                this._oscillator.type = type;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._oscillator.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._oscillator.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set a member/attribute of the oscillator. \n\t\t\t *  @param {Object|String} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone.OmniOscillator} this\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype.set = function (params, value) {\n\t\t        //make sure the type is set first\n\t\t        if (params === 'type') {\n\t\t            this.type = value;\n\t\t        } else if (this.isObject(params) && params.hasOwnProperty('type')) {\n\t\t            this.type = params.type;\n\t\t        }\n\t\t        //then set the rest\n\t\t        Tone.prototype.set.apply(this, arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the oscillator to the frequency and detune signals\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {\n\t\t        if (oscType !== this._sourceType) {\n\t\t            this._sourceType = oscType;\n\t\t            var OscillatorConstructor = Tone[oscType];\n\t\t            //short delay to avoid clicks on the change\n\t\t            var now = this.now() + this.blockTime;\n\t\t            if (this._oscillator !== null) {\n\t\t                var oldOsc = this._oscillator;\n\t\t                oldOsc.stop(now);\n\t\t                //dispose the old one\n\t\t                setTimeout(function () {\n\t\t                    oldOsc.dispose();\n\t\t                    oldOsc = null;\n\t\t                }, this.blockTime * 1000);\n\t\t            }\n\t\t            this._oscillator = new OscillatorConstructor();\n\t\t            this.frequency.connect(this._oscillator.frequency);\n\t\t            this.detune.connect(this._oscillator.detune);\n\t\t            this._oscillator.connect(this.output);\n\t\t            if (this.state === Tone.State.Started) {\n\t\t                this._oscillator.start(now);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._oscillator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._oscillator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t * @name width\n\t\t\t * @example\n\t\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t\t * omniOsc.width.value = 0.2; \n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Pulse) {\n\t\t                return this._oscillator.width;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of detuned oscillators\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name count\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                return this._oscillator.count;\n\t\t            }\n\t\t        },\n\t\t        set: function (count) {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                this._oscillator.count = count;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t\t\t * for more info.\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Cents}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                return this._oscillator.spread;\n\t\t            }\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                this._oscillator.spread = spread;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator. Only if the oscillator\n\t\t\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t\t\t * for more info. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                return this._oscillator.modulationType;\n\t\t            }\n\t\t        },\n\t\t        set: function (mType) {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                this._oscillator.modulationType = mType;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t * modulating signal (ma) -- as in ma/mf. \n\t\t\t * See Tone.FMOscillator for more info. \n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t * @name modulationIndex\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM) {\n\t\t                return this._oscillator.modulationIndex;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t\t\t *  for more info. \n\t\t\t *  @memberOf Tone.OmniOscillator#\n\t\t\t *  @signal\n\t\t\t *  @type {Positive}\n\t\t\t *  @name harmonicity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                return this._oscillator.harmonicity;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The modulationFrequency Signal of the oscillator \n\t\t\t * (only if the oscillator type is set to pwm). See \n\t\t\t * Tone.PWMOscillator for more info. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t * @name modulationFrequency\n\t\t\t * @example\n\t\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.PWM) {\n\t\t                return this._oscillator.modulationFrequency;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.OmniOscillator} this\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._oscillator.dispose();\n\t\t        this._oscillator = null;\n\t\t        this._sourceType = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.OmniOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base-class for all instruments\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Instrument = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t\t        /**\n\t\t\t\t *  The output and volume triming node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t    };\n\t\t    Tone.extend(Tone.Instrument);\n\t\t    /**\n\t\t\t *  the default attributes\n\t\t\t *  @type {object}\n\t\t\t */\n\t\t    Tone.Instrument.defaults = {\n\t\t        /** the volume of the output in decibels */\n\t\t        'volume': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  @abstract\n\t\t\t *  @param {string|number} note the note to trigger\n\t\t\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerAttack = Tone.noOp;\n\t\t    /**\n\t\t\t *  @abstract\n\t\t\t *  @param {Time} [time=now] when to trigger the release\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerRelease = Tone.noOp;\n\t\t    /**\n\t\t\t *  Trigger the attack and then the release after the duration. \n\t\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t\t *                          triggering the release.\n\t\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t\t *  @returns {Tone.Instrument} this\n\t\t\t *  @example\n\t\t\t * //trigger \"C4\" for the duration of an 8th note\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(note, time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Instrument} this\n\t\t\t */\n\t\t    Tone.Instrument.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this._writable(['volume']);\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Instrument;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  This is an abstract base class for other monophonic instruments to \n\t\t\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t\t\t *          shouldn't be directly instantiated.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @abstract\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t */\n\t\t    Tone.Monophonic = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Monophonic.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The glide time between notes. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.portamento = options.portamento;\n\t\t    };\n\t\t    Tone.extend(Tone.Monophonic, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Monophonic.defaults = { 'portamento': 0 };\n\t\t    /**\n\t\t\t *  Trigger the attack of the note optionally with a given velocity. \n\t\t\t *  \n\t\t\t *  \n\t\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t\t *  @param  {Time} [time=now]     When the note should start.\n\t\t\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t\t\t *                                determines how \"loud\" the note \n\t\t\t *                                will be triggered.\n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t *  @example\n\t\t\t * synth.triggerAttack(\"C4\");\n\t\t\t *  @example\n\t\t\t * //trigger the note a half second from now at half velocity\n\t\t\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._triggerEnvelopeAttack(time, velocity);\n\t\t        this.setNote(note, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of the envelope\n\t\t\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t *  @example\n\t\t\t * synth.triggerRelease();\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.triggerRelease = function (time) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._triggerEnvelopeRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  override this method with the actual method\n\t\t\t *  @abstract\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  override this method with the actual method\n\t\t\t *  @abstract\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the note at the given time. If no time is given, the note\n\t\t\t *  will set immediately. \n\t\t\t *  @param {Frequency} note The note to change to.\n\t\t\t *  @param  {Time} [time=now] The time when the note should be set. \n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t * @example\n\t\t\t * //change to F#6 in one quarter note from now.\n\t\t\t * synth.setNote(\"F#6\", \"+4n\");\n\t\t\t * @example\n\t\t\t * //change to Bb4 right now\n\t\t\t * synth.setNote(\"Bb4\");\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.setNote = function (note, time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this.portamento > 0) {\n\t\t            var currentNote = this.frequency.value;\n\t\t            this.frequency.setValueAtTime(currentNote, time);\n\t\t            var portTime = this.toSeconds(this.portamento);\n\t\t            this.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t\t        } else {\n\t\t            this.frequency.setValueAtTime(note, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Monophonic;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t\t\t *          routed through a Tone.AmplitudeEnvelope. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.Synth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.Synth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Synth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this.oscillator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this.oscillator.detune;\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the oscillators to the output\n\t\t        this.oscillator.chain(this.envelope, this.output);\n\t\t        //start the oscillators\n\t\t        this.oscillator.start();\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Synth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Synth.defaults = {\n\t\t        'oscillator': { 'type': 'triangle' },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0.3,\n\t\t            'release': 1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t */\n\t\t    Tone.Synth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Synth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n\t\t\t *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n\t\t\t *          the two signals) affects the timbre of the output signal greatly.\n\t\t\t *          Read more about Amplitude Modulation Synthesis on \n\t\t\t *          [SoundOnSound](http://www.soundonsound.com/sos/mar00/articles/synthsecrets.htm).\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                            see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.AMSynth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"4n\");\n\t\t\t */\n\t\t    Tone.AMSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.AMSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier voice. \n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Synth();\n\t\t        this._carrier.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The carrier's oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.oscillator = this._carrier.oscillator;\n\t\t        /**\n\t\t\t\t *  The carrier's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t\t        /**\n\t\t\t\t *  The modulator voice. \n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Synth();\n\t\t        this._modulator.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The modulator's oscillator which is applied\n\t\t\t\t *  to the amplitude of the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t\t        /**\n\t\t\t\t *  The modulator's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t\t        /**\n\t\t\t\t *  The frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationScale = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain();\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\t        this._carrier.chain(this._modulationNode, this.output);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AMSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AMSynth.defaults = {\n\t\t        'harmonicity': 3,\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.01,\n\t\t            'decay': 0.01,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        },\n\t\t        'moduation': { 'type': 'square' },\n\t\t        'modulationEnvelope': {\n\t\t            'attack': 0.5,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the attack portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the port glide\n\t\t        time = this.toSeconds(time);\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.modulationEnvelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the release portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.modulationEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._modulationScale.dispose();\n\t\t        this._modulationScale = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.oscillator = null;\n\t\t        this.envelope = null;\n\t\t        this.modulationEnvelope = null;\n\t\t        this.modulation = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AMSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n\t\t\t *          The amplitude of the Tone.Oscillator and the cutoff frequency of the \n\t\t\t *          Tone.Filter are controlled by Tone.Envelopes. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n\t\t\t *          \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.MonoSynth({\n\t\t\t * \t\"oscillator\" : {\n\t\t\t * \t\t\"type\" : \"square\"\n\t\t\t *  },\n\t\t\t *  \"envelope\" : {\n\t\t\t *  \t\"attack\" : 0.1\n\t\t\t *  }\n\t\t\t * }).toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.MonoSynth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.MonoSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this.oscillator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this.oscillator.detune;\n\t\t        /**\n\t\t\t\t *  The filter.\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.filter = new Tone.Filter(options.filter);\n\t\t        /**\n\t\t\t\t *  The filter envelope.\n\t\t\t\t *  @type {Tone.FrequencyEnvelope}\n\t\t\t\t */\n\t\t        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the oscillators to the output\n\t\t        this.oscillator.chain(this.filter, this.envelope, this.output);\n\t\t        //start the oscillators\n\t\t        this.oscillator.start();\n\t\t        //connect the filter envelope\n\t\t        this.filterEnvelope.connect(this.filter.frequency);\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'filter',\n\t\t            'filterEnvelope',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MonoSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MonoSynth.defaults = {\n\t\t        'frequency': 'C4',\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'square' },\n\t\t        'filter': {\n\t\t            'Q': 6,\n\t\t            'type': 'lowpass',\n\t\t            'rolloff': -24\n\t\t        },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0.9,\n\t\t            'release': 1\n\t\t        },\n\t\t        'filterEnvelope': {\n\t\t            'attack': 0.06,\n\t\t            'decay': 0.2,\n\t\t            'sustain': 0.5,\n\t\t            'release': 2,\n\t\t            'baseFrequency': 200,\n\t\t            'octaves': 7,\n\t\t            'exponent': 2\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.filterEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.filterEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'filter',\n\t\t            'filterEnvelope',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this.filterEnvelope.dispose();\n\t\t        this.filterEnvelope = null;\n\t\t        this.filter.dispose();\n\t\t        this.filter = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MonoSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.DuoSynth is a monophonic synth composed of two \n\t\t\t *          MonoSynths run in parallel with control over the \n\t\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var duoSynth = new Tone.DuoSynth().toMaster();\n\t\t\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t\t\t */\n\t\t    Tone.DuoSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.DuoSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  the first voice\n\t\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t\t */\n\t\t        this.voice0 = new Tone.MonoSynth(options.voice0);\n\t\t        this.voice0.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  the second voice\n\t\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t\t */\n\t\t        this.voice1 = new Tone.MonoSynth(options.voice1);\n\t\t        this.voice1.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The vibrato LFO. \n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t\t        this._vibrato.start();\n\t\t        /**\n\t\t\t\t * the vibrato frequency\n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.vibratoRate = this._vibrato.frequency;\n\t\t        /**\n\t\t\t\t *  the vibrato gain\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t * The amount of vibrato\n\t\t\t\t * @type {Positive}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.vibratoAmount = this._vibratoGain.gain;\n\t\t        /**\n\t\t\t\t *  the frequency control\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * duoSynth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this.voice0.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n\t\t        this._vibrato.connect(this._vibratoGain);\n\t\t        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t\t        this.voice0.connect(this.output);\n\t\t        this.voice1.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'voice0',\n\t\t            'voice1',\n\t\t            'frequency',\n\t\t            'vibratoAmount',\n\t\t            'vibratoRate'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.DuoSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.DuoSynth.defaults = {\n\t\t        'vibratoAmount': 0.5,\n\t\t        'vibratoRate': 5,\n\t\t        'harmonicity': 1.5,\n\t\t        'voice0': {\n\t\t            'volume': -10,\n\t\t            'portamento': 0,\n\t\t            'oscillator': { 'type': 'sine' },\n\t\t            'filterEnvelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            },\n\t\t            'envelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            }\n\t\t        },\n\t\t        'voice1': {\n\t\t            'volume': -10,\n\t\t            'portamento': 0,\n\t\t            'oscillator': { 'type': 'sine' },\n\t\t            'filterEnvelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            },\n\t\t            'envelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelopes\n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.voice0.envelope.triggerAttack(time, velocity);\n\t\t        this.voice1.envelope.triggerAttack(time, velocity);\n\t\t        this.voice0.filterEnvelope.triggerAttack(time);\n\t\t        this.voice1.filterEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelopes\n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.voice0.triggerRelease(time);\n\t\t        this.voice1.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'voice0',\n\t\t            'voice1',\n\t\t            'frequency',\n\t\t            'vibratoAmount',\n\t\t            'vibratoRate'\n\t\t        ]);\n\t\t        this.voice0.dispose();\n\t\t        this.voice0 = null;\n\t\t        this.voice1.dispose();\n\t\t        this.voice1 = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._vibratoGain.dispose();\n\t\t        this._vibratoGain = null;\n\t\t        this._vibrato = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this.vibratoAmount.dispose();\n\t\t        this.vibratoAmount = null;\n\t\t        this.vibratoRate = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.DuoSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n\t\t\t *          the frequency of a second Tone.Synth. A lot of spectral content \n\t\t\t *          can be explored using the modulationIndex parameter. Read more about\n\t\t\t *          frequency modulation synthesis on [SoundOnSound](http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm).\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var fmSynth = new Tone.FMSynth().toMaster();\n\t\t\t * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t\t\t */\n\t\t    Tone.FMSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.FMSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier voice.\n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Synth(options.carrier);\n\t\t        this._carrier.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The carrier's oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.oscillator = this._carrier.oscillator;\n\t\t        /**\n\t\t\t\t *  The carrier's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t\t        /**\n\t\t\t\t *  The modulator voice.\n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Synth(options.modulator);\n\t\t        this._modulator.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The modulator's oscillator which is applied\n\t\t\t\t *  to the amplitude of the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t\t        /**\n\t\t\t\t *  The modulator's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  The modulation index which essentially the depth or amount of the modulation. It is the \n\t\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t\t *\t@type {Positive}\n\t\t\t\t *\t@signal\n\t\t\t\t */\n\t\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t\t        this.modulationIndex.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\t        this._modulator.connect(this._modulationNode.gain);\n\t\t        this._modulationNode.connect(this._carrier.frequency);\n\t\t        this._carrier.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'modulationIndex',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FMSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FMSynth.defaults = {\n\t\t        'harmonicity': 3,\n\t\t        'modulationIndex': 10,\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.01,\n\t\t            'decay': 0.01,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        },\n\t\t        'moduation': { 'type': 'square' },\n\t\t        'modulationEnvelope': {\n\t\t            'attack': 0.5,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * \ttrigger the attack portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.modulationEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the release portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.modulationEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t */\n\t\t    Tone.FMSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'modulationIndex',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.modulationIndex.dispose();\n\t\t        this.modulationIndex = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.oscillator = null;\n\t\t        this.envelope = null;\n\t\t        this.modulationEnvelope = null;\n\t\t        this.modulation = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FMSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n\t\t\t *          with an amplitude envelope and frequency ramp. A Tone.Oscillator\n\t\t\t *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n\t\t\t *          quality of the sound comes from the frequency envelope applied\n\t\t\t *          during during Tone.MembraneSynth.triggerAttack(note). The frequency\n\t\t\t *          envelope starts at <code>note * .octaves</code> and ramps to \n\t\t\t *          <code>note</code> over the duration of <code>.pitchDecay</code>. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.MembraneSynth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C2\", \"8n\");\n\t\t\t */\n\t\t    Tone.MembraneSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MembraneSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.Oscillator(options.oscillator).start();\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        /**\n\t\t\t\t *  The number of octaves the pitch envelope ramps.\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this.octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  The amount of time the frequency envelope takes. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.pitchDecay = options.pitchDecay;\n\t\t        this.oscillator.chain(this.envelope, this.output);\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MembraneSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MembraneSynth.defaults = {\n\t\t        'pitchDecay': 0.05,\n\t\t        'octaves': 10,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.001,\n\t\t            'decay': 0.4,\n\t\t            'sustain': 0.01,\n\t\t            'release': 1.4,\n\t\t            'attackCurve': 'exponential'\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the note at the given time with the given velocity. \n\t\t\t *  \n\t\t\t *  @param  {Frequency} note     the note\n\t\t\t *  @param  {Time} [time=now]     the time, if not given is now\n\t\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t *  @example\n\t\t\t *  kick.triggerAttack(60);\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        note = this.toFrequency(note);\n\t\t        var maxNote = note * this.octaves;\n\t\t        this.oscillator.frequency.setValueAtTime(maxNote, time);\n\t\t        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of the note.\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.triggerRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MembraneSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  Inharmonic ratio of frequencies based on the Roland TR-808\n\t\t\t *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var inharmRatios = [\n\t\t        1,\n\t\t        1.483,\n\t\t        1.932,\n\t\t        2.546,\n\t\t        2.63,\n\t\t        3.897\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n\t\t\t *          and amplitude envelope which is good for making metalophone sounds. Based\n\t\t\t *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n\t\t\t *          Inspiration from [Sound on Sound](http://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] The options availble for the synth\n\t\t\t *                             see defaults below\n\t\t\t */\n\t\t    Tone.MetalSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MetalSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The frequency of the cymbal\n\t\t\t\t *  @type  {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The array of FMOscillators\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillators = [];\n\t\t        /**\n\t\t\t\t *  The frequency multipliers\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._freqMultipliers = [];\n\t\t        /**\n\t\t\t\t *  The amplitude for the body\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitue = new Tone.Gain(0).connect(this.output);\n\t\t        /**\n\t\t\t\t *  highpass the output\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._highpass = new Tone.Filter({\n\t\t            'type': 'highpass',\n\t\t            'Q': 0\n\t\t        }).connect(this._amplitue);\n\t\t        /**\n\t\t\t\t *  The number of octaves the highpass\n\t\t\t\t *  filter frequency ramps\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  Scale the body envelope\n\t\t\t\t *  for the bandpass\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\t\t        /**\n\t\t\t\t *  The envelope which is connected both to the \n\t\t\t\t *  amplitude and highpass filter's cutoff frequency\n\t\t\t\t *  @type  {Tone.Envelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.Envelope({\n\t\t            'attack': options.envelope.attack,\n\t\t            'attackCurve': 'exponential',\n\t\t            'decay': options.envelope.decay,\n\t\t            'sustain': 0,\n\t\t            'release': options.envelope.release\n\t\t        }).chain(this._filterFreqScaler, this._highpass.frequency);\n\t\t        this.envelope.connect(this._amplitue.gain);\n\t\t        for (var i = 0; i < inharmRatios.length; i++) {\n\t\t            var osc = new Tone.FMOscillator({\n\t\t                'type': 'square',\n\t\t                'modulationType': 'square',\n\t\t                'harmonicity': options.harmonicity,\n\t\t                'modulationIndex': options.modulationIndex\n\t\t            });\n\t\t            osc.connect(this._highpass).start(0);\n\t\t            this._oscillators[i] = osc;\n\t\t            var mult = new Tone.Multiply(inharmRatios[i]);\n\t\t            this._freqMultipliers[i] = mult;\n\t\t            this.frequency.chain(mult, osc.frequency);\n\t\t        }\n\t\t        //set the octaves\n\t\t        this.octaves = options.octaves;\n\t\t    };\n\t\t    Tone.extend(Tone.MetalSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MetalSynth.defaults = {\n\t\t        'frequency': 200,\n\t\t        'envelope': {\n\t\t            'attack': 0.0015,\n\t\t            'decay': 1.4,\n\t\t            'release': 0.2\n\t\t        },\n\t\t        'harmonicity': 5.1,\n\t\t        'modulationIndex': 32,\n\t\t        'resonance': 4000,\n\t\t        'octaves': 1.5\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack.\n\t\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {\n\t\t        time = this.toSeconds(time);\n\t\t        vel = this.defaultArg(vel, 1);\n\t\t        this.envelope.triggerAttack(time, vel);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release of the envelope.\n\t\t\t *  @param  {Time}  time      When the release should be triggered.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and release of the envelope after the given \n\t\t\t *  duration. \n\t\t\t *  @param  {Time}  duration  The duration before triggering the release\n\t\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The modulationIndex of the oscillators which make up the source.\n\t\t\t *  see Tone.FMOscillator.modulationIndex\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name  modulationIndex\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {\n\t\t        get: function () {\n\t\t            return this._oscillators[0].modulationIndex.value;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t\t                this._oscillators[i].modulationIndex.value = val;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The harmonicity of the oscillators which make up the source.\n\t\t\t *  see Tone.FMOscillator.harmonicity\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name  harmonicity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {\n\t\t        get: function () {\n\t\t            return this._oscillators[0].harmonicity.value;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t\t                this._oscillators[i].harmonicity.value = val;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The frequency of the highpass filter attached to the envelope\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Frequency}\n\t\t\t *  @name  resonance\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {\n\t\t        get: function () {\n\t\t            return this._filterFreqScaler.min;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._filterFreqScaler.min = val;\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The number of octaves above the \"resonance\" frequency\n\t\t\t *  that the filter ramps during the attack/decay envelope\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Number}\n\t\t\t *  @name  octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octs) {\n\t\t            this._octaves = octs;\n\t\t            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.MetalSynth} this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t\t            this._oscillators[i].dispose();\n\t\t            this._freqMultipliers[i].dispose();\n\t\t        }\n\t\t        this._oscillators = null;\n\t\t        this._freqMultipliers = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._filterFreqScaler.dispose();\n\t\t        this._filterFreqScaler = null;\n\t\t        this._amplitue.dispose();\n\t\t        this._amplitue = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this._highpass.dispose();\n\t\t        this._highpass = null;\n\t\t    };\n\t\t    return Tone.MetalSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n\t\t\t *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n\t\t\t *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source}\n\t\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t\t *  @example\n\t\t\t * //initialize the noise and start\n\t\t\t * var noise = new Tone.Noise(\"pink\").start();\n\t\t\t * \n\t\t\t * //make an autofilter to shape the noise\n\t\t\t * var autoFilter = new Tone.AutoFilter({\n\t\t\t * \t\"frequency\" : \"8m\", \n\t\t\t * \t\"min\" : 800, \n\t\t\t * \t\"max\" : 15000\n\t\t\t * }).connect(Tone.Master);\n\t\t\t * \n\t\t\t * //connect the noise\n\t\t\t * noise.connect(autoFilter);\n\t\t\t * //start the autofilter LFO\n\t\t\t * autoFilter.start()\n\t\t\t */\n\t\t    Tone.Noise = function () {\n\t\t        var options = this.optionsObject(arguments, ['type'], Tone.Noise.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t\t */\n\t\t        this._source = null;\n\t\t        /**\n\t\t\t\t *  the buffer\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBuffer}\n\t\t\t\t */\n\t\t        this._buffer = null;\n\t\t        /**\n\t\t\t\t *  The playback rate of the noise. Affects\n\t\t\t\t *  the \"frequency\" of the noise.\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        this.type = options.type;\n\t\t    };\n\t\t    Tone.extend(Tone.Noise, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Noise.defaults = {\n\t\t        'type': 'white',\n\t\t        'playbackRate': 1\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t\t * @memberOf Tone.Noise#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * noise.type = \"white\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Noise.prototype, 'type', {\n\t\t        get: function () {\n\t\t            if (this._buffer === _whiteNoise) {\n\t\t                return 'white';\n\t\t            } else if (this._buffer === _brownNoise) {\n\t\t                return 'brown';\n\t\t            } else if (this._buffer === _pinkNoise) {\n\t\t                return 'pink';\n\t\t            }\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (this.type !== type) {\n\t\t                switch (type) {\n\t\t                case 'white':\n\t\t                    this._buffer = _whiteNoise;\n\t\t                    break;\n\t\t                case 'pink':\n\t\t                    this._buffer = _pinkNoise;\n\t\t                    break;\n\t\t                case 'brown':\n\t\t                    this._buffer = _brownNoise;\n\t\t                    break;\n\t\t                default:\n\t\t                    throw new TypeError('Tone.Noise: invalid type: ' + type);\n\t\t                }\n\t\t                //if it's playing, stop and restart it\n\t\t                if (this.state === Tone.State.Started) {\n\t\t                    var now = this.now() + this.blockTime;\n\t\t                    //remove the listener\n\t\t                    this._stop(now);\n\t\t                    this._start(now);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The playback rate of the noise. Affects\n\t\t\t *  the \"frequency\" of the noise.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            if (this._source) {\n\t\t                this._source.playbackRate.value = rate;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  internal start method\n\t\t\t *\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Noise.prototype._start = function (time) {\n\t\t        this._source = this.context.createBufferSource();\n\t\t        this._source.buffer = this._buffer;\n\t\t        this._source.loop = true;\n\t\t        this._source.playbackRate.value = this._playbackRate;\n\t\t        this._source.connect(this.output);\n\t\t        this._source.start(this.toSeconds(time), Math.random() * (this._buffer.duration - 0.001));\n\t\t    };\n\t\t    /**\n\t\t\t *  internal stop method\n\t\t\t *\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Noise.prototype._stop = function (time) {\n\t\t        if (this._source) {\n\t\t            this._source.stop(this.toSeconds(time));\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Noise} this\n\t\t\t */\n\t\t    Tone.Noise.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._source !== null) {\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // THE BUFFERS\n\t\t    // borrowed heavily from http://noisehack.com/generate-noise-web-audio-api/\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *\tstatic noise buffers\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @type {AudioBuffer}\n\t\t\t */\n\t\t    var _pinkNoise = null, _brownNoise = null, _whiteNoise = null;\n\t\t    Tone._initAudioContext(function (audioContext) {\n\t\t        var sampleRate = audioContext.sampleRate;\n\t\t        //four seconds per buffer\n\t\t        var bufferLength = sampleRate * 4;\n\t\t        //fill the buffers\n\t\t        _pinkNoise = function () {\n\t\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t\t                var channel = buffer.getChannelData(channelNum);\n\t\t                var b0, b1, b2, b3, b4, b5, b6;\n\t\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    var white = Math.random() * 2 - 1;\n\t\t                    b0 = 0.99886 * b0 + white * 0.0555179;\n\t\t                    b1 = 0.99332 * b1 + white * 0.0750759;\n\t\t                    b2 = 0.969 * b2 + white * 0.153852;\n\t\t                    b3 = 0.8665 * b3 + white * 0.3104856;\n\t\t                    b4 = 0.55 * b4 + white * 0.5329522;\n\t\t                    b5 = -0.7616 * b5 - white * 0.016898;\n\t\t                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t                    channel[i] *= 0.11;\n\t\t                    // (roughly) compensate for gain\n\t\t                    b6 = white * 0.115926;\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }();\n\t\t        _brownNoise = function () {\n\t\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t\t                var channel = buffer.getChannelData(channelNum);\n\t\t                var lastOut = 0;\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    var white = Math.random() * 2 - 1;\n\t\t                    channel[i] = (lastOut + 0.02 * white) / 1.02;\n\t\t                    lastOut = channel[i];\n\t\t                    channel[i] *= 3.5;    // (roughly) compensate for gain\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }();\n\t\t        _whiteNoise = function () {\n\t\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t\t                var channel = buffer.getChannelData(channelNum);\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    channel[i] = Math.random() * 2 - 1;\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }();\n\t\t    });\n\t\t    return Tone.Noise;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter), \n\t\t\t *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n\t\t\t *          of the noise and the other is controls the cutoff frequency of the filter. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t * @example\n\t\t\t * var noiseSynth = new Tone.NoiseSynth().toMaster();\n\t\t\t * noiseSynth.triggerAttackRelease(\"8n\");\n\t\t\t */\n\t\t    Tone.NoiseSynth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.NoiseSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The noise source.\n\t\t\t\t *  @type {Tone.Noise}\n\t\t\t\t *  @example\n\t\t\t\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t\t\t\t */\n\t\t        this.noise = new Tone.Noise();\n\t\t        /**\n\t\t\t\t *  The amplitude envelope. \n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the noise to the output\n\t\t        this.noise.chain(this.envelope, this.output);\n\t\t        //start the noise\n\t\t        this.noise.start();\n\t\t        this._readOnly([\n\t\t            'noise',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.NoiseSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.NoiseSynth.defaults = {\n\t\t        'noise': { 'type': 'white' },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the attack portion of the envelopes. Unlike other \n\t\t\t *  instruments, Tone.NoiseSynth doesn't have a note. \n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t *  @example\n\t\t\t * noiseSynth.triggerAttack();\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the release portion of the envelopes.\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and then the release. \n\t\t\t *  @param  {Time} duration the duration of the note\n\t\t\t *  @param  {Time} [time=now]     the time of the attack\n\t\t\t *  @param  {number} [velocity=1] the velocity\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'noise',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.noise.dispose();\n\t\t        this.noise = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.NoiseSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Karplus-String string synthesis. Often out of tune. \n\t\t\t *         Will change when the AudioWorkerNode is available across\n\t\t\t *         browsers. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] see the defaults\n\t\t\t *  @example\n\t\t\t * var plucky = new Tone.PluckSynth().toMaster();\n\t\t\t * plucky.triggerAttack(\"C4\");\n\t\t\t */\n\t\t    Tone.PluckSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.PluckSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Noise}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._noise = new Tone.Noise('pink');\n\t\t        /**\n\t\t\t\t *  The amount of noise at the attack. \n\t\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this.attackNoise = 1;\n\t\t        /**\n\t\t\t\t *  the LFCF\n\t\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfcf = new Tone.LowpassCombFilter({\n\t\t            'resonance': options.resonance,\n\t\t            'dampening': options.dampening\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The resonance control. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._lfcf.resonance;\n\t\t        /**\n\t\t\t\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = this._lfcf.dampening;\n\t\t        //connections\n\t\t        this._noise.connect(this._lfcf);\n\t\t        this._lfcf.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PluckSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PluckSynth.defaults = {\n\t\t        'attackNoise': 1,\n\t\t        'dampening': 4000,\n\t\t        'resonance': 0.9\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the note. \n\t\t\t *  @param {Frequency} note The note to trigger.\n\t\t\t *  @param {Time} [time=now] When the note should be triggered.\n\t\t\t *  @returns {Tone.PluckSynth} this\n\t\t\t */\n\t\t    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {\n\t\t        note = this.toFrequency(note);\n\t\t        time = this.toSeconds(time);\n\t\t        var delayAmount = 1 / note;\n\t\t        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t\t        this._noise.start(time);\n\t\t        this._noise.stop(time + delayAmount * this.attackNoise);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.PluckSynth} this\n\t\t\t */\n\t\t    Tone.PluckSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._noise.dispose();\n\t\t        this._lfcf.dispose();\n\t\t        this._noise = null;\n\t\t        this._lfcf = null;\n\t\t        this._writable([\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ]);\n\t\t        this.dampening = null;\n\t\t        this.resonance = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PluckSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.PolySynth handles voice creation and allocation for any\n\t\t\t *          instruments passed in as the second paramter. PolySynth is \n\t\t\t *          not a synthesizer by itself, it merely manages voices of \n\t\t\t *          one of the other types of synths, allowing any of the \n\t\t\t *          monophonic synthesizers to be polyphonic. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {number|Object} [polyphony=4] The number of voices to create\n\t\t\t *  @param {function} [voice=Tone.Synth] The constructor of the voices\n\t\t\t *                                            uses Tone.Synth by default. \n\t\t\t *  @example\n\t\t\t * //a polysynth composed of 6 Voices of Synth\n\t\t\t * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\t\t\t * //set the attributes using the set interface\n\t\t\t * synth.set(\"detune\", -1200);\n\t\t\t * //play a chord\n\t\t\t * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n\t\t\t */\n\t\t    Tone.PolySynth = function () {\n\t\t        Tone.Instrument.call(this);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'polyphony',\n\t\t            'voice'\n\t\t        ], Tone.PolySynth.defaults);\n\t\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t\t        //max polyphony\n\t\t        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\t\t        /**\n\t\t\t\t *  the array of voices\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.voices = new Array(options.polyphony);\n\t\t        /**\n\t\t\t\t *  The queue of voices with data about last trigger\n\t\t\t\t *  and the triggered note\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this._triggers = new Array(options.polyphony);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        this._readOnly('detune');\n\t\t        //create the voices\n\t\t        for (var i = 0; i < options.polyphony; i++) {\n\t\t            var v = new options.voice(arguments[2], arguments[3]);\n\t\t            this.voices[i] = v;\n\t\t            v.connect(this.output);\n\t\t            if (v.hasOwnProperty('detune')) {\n\t\t                this.detune.connect(v.detune);\n\t\t            }\n\t\t            this._triggers[i] = {\n\t\t                release: -1,\n\t\t                note: null,\n\t\t                voice: v\n\t\t            };\n\t\t        }\n\t\t        //set the volume initially\n\t\t        this.volume.value = options.volume;\n\t\t    };\n\t\t    Tone.extend(Tone.PolySynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  the defaults\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PolySynth.defaults = {\n\t\t        'polyphony': 4,\n\t\t        'volume': 0,\n\t\t        'detune': 0,\n\t\t        'voice': Tone.Synth\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack portion of the note\n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} [time=now]  The start time of the note.\n\t\t\t *  @param {number} [velocity=1] The velocity of the note.\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * //trigger a chord immediately with a velocity of 0.2\n\t\t\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n\t\t        if (!Array.isArray(notes)) {\n\t\t            notes = [notes];\n\t\t        }\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < notes.length; i++) {\n\t\t            var val = notes[i];\n\t\t            //trigger the oldest voice\n\t\t            var oldest = this._triggers[0];\n\t\t            var oldestIndex = 0;\n\t\t            for (var j = 1; j < this._triggers.length; j++) {\n\t\t                if (this._triggers[j].release < oldest.release) {\n\t\t                    oldest = this._triggers[j];\n\t\t                    oldestIndex = j;\n\t\t                }\n\t\t            }\n\t\t            oldest.release = Infinity;\n\t\t            oldest.note = JSON.stringify(val);\n\t\t            oldest.voice.triggerAttack(val, time, velocity);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and release after the specified duration\n\t\t\t *  \n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} duration the duration of the note\n\t\t\t *  @param  {Time} [time=now]     if no time is given, defaults to now\n\t\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * //trigger a chord for a duration of a half note \n\t\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n\t\t\t *  @example\n\t\t\t * //can pass in an array of durations as well\n\t\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.triggerAttack(notes, time, velocity);\n\t\t        if (this.isArray(duration) && this.isArray(notes)) {\n\t\t            for (var i = 0; i < notes.length; i++) {\n\t\t                var d = duration[Math.min(i, duration.length - 1)];\n\t\t                this.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t            }\n\t\t        } else {\n\t\t            this.triggerRelease(notes, time + this.toSeconds(duration));\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release of the note. Unlike monophonic instruments, \n\t\t\t *  a note (or array of notes) needs to be passed in as the first argument.\n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} [time=now]  When the release will be triggered. \n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {\n\t\t        if (!Array.isArray(notes)) {\n\t\t            notes = [notes];\n\t\t        }\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < notes.length; i++) {\n\t\t            //get the voice\n\t\t            var stringified = JSON.stringify(notes[i]);\n\t\t            for (var v = 0; v < this._triggers.length; v++) {\n\t\t                var desc = this._triggers[v];\n\t\t                if (desc.note === stringified && desc.release > time) {\n\t\t                    desc.voice.triggerRelease(time);\n\t\t                    desc.release = time;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set a member/attribute of the voices. \n\t\t\t *  @param {Object|string} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * poly.set({\n\t\t\t * \t\"filter\" : {\n\t\t\t * \t\t\"type\" : \"highpass\"\n\t\t\t * \t},\n\t\t\t * \t\"envelope\" : {\n\t\t\t * \t\t\"attack\" : 0.25\n\t\t\t * \t}\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.set = function (params, value, rampTime) {\n\t\t        for (var i = 0; i < this.voices.length; i++) {\n\t\t            this.voices[i].set(params, value, rampTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the synth's attributes. Given no arguments get\n\t\t\t *  will return all available object properties and their corresponding\n\t\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t\t *  to access deeper properties.\n\t\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t\t *  \t\t\t\t\t   all available.\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.get = function (params) {\n\t\t        return this.voices[0].get(params);\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of all the currently active voices.\n\t\t\t *  @param {Time} [time=now] When the notes should be released.\n\t\t\t *  @return {Tone.PolySynth} this\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.releaseAll = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < this._triggers.length; i++) {\n\t\t            var desc = this._triggers[i];\n\t\t            if (desc.release > time) {\n\t\t                desc.release = time;\n\t\t                desc.voice.triggerRelease(time);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this.voices.length; i++) {\n\t\t            this.voices[i].dispose();\n\t\t            this.voices[i] = null;\n\t\t        }\n\t\t        this._writable('detune');\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.voices = null;\n\t\t        this._triggers = null;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The maximum number of notes that can be allocated \n\t\t\t *  to a polysynth. \n\t\t\t *  @type  {Number}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.PolySynth.MAX_POLYPHONY = 20;\n\t\t    return Tone.PolySynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source} \n\t\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t\t *                                  which to load the AudioBuffer\n\t\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t\t *                            Recommended to use Tone.Buffer.on('load') instead.\n\t\t\t *  @example\n\t\t\t * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n\t\t\t * //play as soon as the buffer is loaded\n\t\t\t * player.autostart = true;\n\t\t\t */\n\t\t    Tone.Player = function (url) {\n\t\t        var options;\n\t\t        if (url instanceof Tone.Buffer) {\n\t\t            url = url.get();\n\t\t            options = Tone.Player.defaults;\n\t\t        } else {\n\t\t            options = this.optionsObject(arguments, [\n\t\t                'url',\n\t\t                'onload'\n\t\t            ], Tone.Player.defaults);\n\t\t        }\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t\t */\n\t\t        this._source = null;\n\t\t        /**\n\t\t\t\t *  If the file should play as soon\n\t\t\t\t *  as the buffer is loaded. \n\t\t\t\t *  @type {boolean}\n\t\t\t\t *  @example\n\t\t\t\t * //will play as soon as it's loaded\n\t\t\t\t * var player = new Tone.Player({\n\t\t\t\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t\t\t\t * \t\"autostart\" : true,\n\t\t\t\t * }).toMaster();\n\t\t\t\t */\n\t\t        this.autostart = options.autostart;\n\t\t        /**\n\t\t\t\t *  the buffer\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Buffer}\n\t\t\t\t */\n\t\t        this._buffer = new Tone.Buffer({\n\t\t            'url': options.url,\n\t\t            'onload': this._onload.bind(this, options.onload),\n\t\t            'reverse': options.reverse\n\t\t        });\n\t\t        if (url instanceof AudioBuffer) {\n\t\t            this._buffer.set(url);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  if the buffer should loop once it's over\n\t\t\t\t *  @type {boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = options.loopStart;\n\t\t        /**\n\t\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = options.loopEnd;\n\t\t        /**\n\t\t\t\t *  the playback rate\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t\t *  before the the previous 'start' is done playing. Otherwise, \n\t\t\t\t *  successive calls to Tone.Player.start will only start\n\t\t\t\t *  the sample if it had played all the way through. \n\t\t\t\t *  @type {boolean}\n\t\t\t\t */\n\t\t        this.retrigger = options.retrigger;\n\t\t    };\n\t\t    Tone.extend(Tone.Player, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Player.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'playbackRate': 1,\n\t\t        'loop': false,\n\t\t        'autostart': false,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': 0,\n\t\t        'retrigger': false,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Load the audio file as an audio buffer.\n\t\t\t *  Decodes the audio asynchronously and invokes\n\t\t\t *  the callback once the audio buffer loads. \n\t\t\t *  Note: this does not need to be called if a url\n\t\t\t *  was passed in to the constructor. Only use this\n\t\t\t *  if you want to manually load a new url. \n\t\t\t * @param {string} url The url of the buffer to load.\n\t\t\t *                     Filetype support depends on the\n\t\t\t *                     browser.\n\t\t\t *  @param  {function=} callback The function to invoke once\n\t\t\t *                               the sample is loaded.\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t */\n\t\t    Tone.Player.prototype.load = function (url, callback) {\n\t\t        this._buffer.load(url, this._onload.bind(this, callback));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Internal callback when the buffer is loaded.\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.Player.prototype._onload = function (callback) {\n\t\t        callback(this);\n\t\t        if (this.autostart) {\n\t\t            this.start();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t\t *  and/or duration which will play the buffer from a position\n\t\t\t *  within the buffer for the given duration. \n\t\t\t *  \n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t\t *                                is given, it will default to the full length \n\t\t\t *                                of the sample (minus any offset)\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t *  @memberOf Tone.Player#\n\t\t\t *  @method start\n\t\t\t *  @name start\n\t\t\t */\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Player.prototype._start = function (startTime, offset, duration) {\n\t\t        if (this._buffer.loaded) {\n\t\t            //if it's a loop the default offset is the loopstart point\n\t\t            if (this._loop) {\n\t\t                offset = this.defaultArg(offset, this._loopStart);\n\t\t            } else {\n\t\t                //otherwise the default offset is 0\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toSeconds(offset);\n\t\t            //make sure it has a positive duration\n\t\t            duration = this.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\t\t            duration = this.toSeconds(duration);\n\t\t            //the values in seconds\n\t\t            startTime = this.toSeconds(startTime);\n\t\t            //make the source\n\t\t            this._source = this.context.createBufferSource();\n\t\t            this._source.buffer = this._buffer.get();\n\t\t            //set the looping properties\n\t\t            if (this._loop) {\n\t\t                this._source.loop = this._loop;\n\t\t                this._source.loopStart = this.toSeconds(this._loopStart);\n\t\t                this._source.loopEnd = this.toSeconds(this._loopEnd);\n\t\t            } else {\n\t\t                //if it's not looping, set the state change at the end of the sample\n\t\t                this._state.setStateAtTime(Tone.State.Stopped, startTime + duration);\n\t\t            }\n\t\t            //and other properties\n\t\t            this._source.playbackRate.value = this._playbackRate;\n\t\t            this._source.connect(this.output);\n\t\t            //start it\n\t\t            if (this._loop) {\n\t\t                //modify the offset if it's greater than the loop time\n\t\t                var loopEnd = this._source.loopEnd || this._buffer.duration;\n\t\t                var loopStart = this._source.loopStart;\n\t\t                var loopDuration = loopEnd - loopStart;\n\t\t                if (offset > loopDuration) {\n\t\t                    offset = loopStart + offset % loopDuration;\n\t\t                    if (offset > loopEnd) {\n\t\t                        offset -= loopDuration;\n\t\t                    }\n\t\t                }\n\t\t                this._source.start(startTime, offset);\n\t\t            } else {\n\t\t                this._source.start(startTime, offset, duration);\n\t\t            }\n\t\t        } else {\n\t\t            throw Error('Tone.Player: tried to start Player before the buffer was loaded');\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop playback.\n\t\t\t *  @private\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t */\n\t\t    Tone.Player.prototype._stop = function (time) {\n\t\t        if (this._source) {\n\t\t            this._source.stop(this.toSeconds(time));\n\t\t            this._source = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Seek to a specific time in the player's buffer. If the \n\t\t\t *  source is no longer playing at that time, it will stop.\n\t\t\t *  If you seek to a time that \n\t\t\t *  @param {Time} offset The time to seek to.\n\t\t\t *  @param {Time=} time The time for the seek event to occur.\n\t\t\t *  @return {Tone.Player} this\n\t\t\t *  @example\n\t\t\t * source.start(0.2);\n\t\t\t * source.stop(0.4);\n\t\t\t */\n\t\t    Tone.Player.prototype.seek = function (offset, time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t\t            offset = this.toSeconds(offset);\n\t\t            // if it's currently playing, stop it\n\t\t            this._stop(time);\n\t\t            //restart it at the given time\n\t\t            this._start(time, offset);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the loop start and end. Will only loop if loop is \n\t\t\t *  set to true. \n\t\t\t *  @param {Time} loopStart The loop end time\n\t\t\t *  @param {Time} loopEnd The loop end time\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t *  @example\n\t\t\t * //loop 0.1 seconds of the file. \n\t\t\t * player.setLoopPoints(0.2, 0.3);\n\t\t\t * player.loop = true;\n\t\t\t */\n\t\t    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n\t\t        this.loopStart = loopStart;\n\t\t        this.loopEnd = loopEnd;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * If loop is true, the loop will start at this position. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._loopStart;\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = loopStart;\n\t\t            if (this._source) {\n\t\t                this._source.loopStart = this.toSeconds(loopStart);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If loop is true, the loop will end at this position.\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._loopEnd;\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = loopEnd;\n\t\t            if (this._source) {\n\t\t                this._source.loopEnd = this.toSeconds(loopEnd);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The audio buffer belonging to the player. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Tone.Buffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this._buffer;\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            this._buffer.set(buffer);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If the buffer should loop once it's over. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {boolean}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            if (this._source) {\n\t\t                this._source.loop = loop;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The playback speed. 1 is normal speed. This is not a signal because\n\t\t\t * Safari and iOS currently don't support playbackRate as a signal.\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {number}\n\t\t\t * @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            if (this._source) {\n\t\t                this._source.playbackRate.value = rate;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this._buffer.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this._buffer.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Dispose and disconnect.\n\t\t\t *  @return {Tone.Player} this\n\t\t\t */\n\t\t    Tone.Player.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._source !== null) {\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        this._buffer.dispose();\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Player;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Sampler wraps Tone.Player in an AmplitudeEnvelope.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {String} url the url of the audio file\n\t\t\t *  @param {Function=} onload The callback to invoke when the sample is loaded.\n\t\t\t *  @example\n\t\t\t * var sampler = new Sampler(\"./audio/casio/A1.mp3\", function(){\n\t\t\t * \t//repitch the sample down a half step\n\t\t\t * \tsampler.triggerAttack(-1);\n\t\t\t * }).toMaster();\n\t\t\t */\n\t\t    Tone.Sampler = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.Sampler.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The sample player.\n\t\t\t\t *  @type {Tone.Player}\n\t\t\t\t */\n\t\t        this.player = new Tone.Player(options.url, options.onload);\n\t\t        this.player.retrigger = true;\n\t\t        /**\n\t\t\t\t *  The amplitude envelope. \n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        this.player.chain(this.envelope, this.output);\n\t\t        this._readOnly([\n\t\t            'player',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.loop = options.loop;\n\t\t        this.reverse = options.reverse;\n\t\t    };\n\t\t    Tone.extend(Tone.Sampler, Tone.Instrument);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Sampler.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'reverse': false,\n\t\t        'envelope': {\n\t\t            'attack': 0.001,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the start of the sample. \n\t\t\t *  @param {Interval} [pitch=0] The amount the sample should\n\t\t\t *                              be repitched. \n\t\t\t *  @param {Time} [time=now] The time when the sample should start\n\t\t\t *  @param {NormalRange} [velocity=1] The velocity of the note\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t *  @example\n\t\t\t * sampler.triggerAttack(0, \"+0.1\", 0.5);\n\t\t\t */\n\t\t    Tone.Sampler.prototype.triggerAttack = function (pitch, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        this.player.playbackRate = this.intervalToFrequencyRatio(pitch);\n\t\t        this.player.start(time);\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the release portion of the sample. Will stop the sample once the \n\t\t\t *  envelope has fully released. \n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] The time when the note should release\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t *  @example\n\t\t\t * sampler.triggerRelease();\n\t\t\t */\n\t\t    Tone.Sampler.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.player.stop(this.toSeconds(this.envelope.release) + time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * If the output sample should loop or not.\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {number|string}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this.player.loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this.player.loop = loop;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this.player.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this.player.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The buffer to play.\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {Tone.Buffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this.player.buffer;\n\t\t        },\n\t\t        set: function (buff) {\n\t\t            this.player.buffer = buff;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t */\n\t\t    Tone.Sampler.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'player',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.player.dispose();\n\t\t        this.player = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Sampler;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Now called Tone.Synth\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t */\n\t\t    Tone.SimpleSynth = function (options) {\n\t\t        console.warn('Tone.SimpleSynth is now called Tone.Synth');\n\t\t        Tone.Synth.call(this, options);\n\t\t    };\n\t\t    Tone.extend(Tone.SimpleSynth, Tone.Synth);\n\t\t    return Tone.SimpleSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n\t\t\t *         See also Tone.AudioToGain. \n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t * var g2a = new Tone.GainToAudio();\n\t\t\t */\n\t\t    Tone.GainToAudio = function () {\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t\t            return Math.abs(x) * 2 - 1;\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.GainToAudio, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.GainToAudio} this\n\t\t\t */\n\t\t    Tone.GainToAudio.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._norm.dispose();\n\t\t        this._norm = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GainToAudio;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {number} inputMin the min input value\n\t\t\t *  @param {number} inputMax the max input value\n\t\t\t *  @example\n\t\t\t * var norm = new Tone.Normalize(2, 4);\n\t\t\t * var sig = new Tone.Signal(3).connect(norm);\n\t\t\t * //output of norm is 0.5. \n\t\t\t */\n\t\t    Tone.Normalize = function (inputMin, inputMax) {\n\t\t        /**\n\t\t\t\t *  the min input value\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputMin = this.defaultArg(inputMin, 0);\n\t\t        /**\n\t\t\t\t *  the max input value\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputMax = this.defaultArg(inputMax, 1);\n\t\t        /**\n\t\t\t\t *  subtract the min from the input\n\t\t\t\t *  @type {Tone.Add}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sub = this.input = new Tone.Add(0);\n\t\t        /**\n\t\t\t\t *  divide by the difference between the input and output\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._div = this.output = new Tone.Multiply(1);\n\t\t        this._sub.connect(this._div);\n\t\t        this._setRange();\n\t\t    };\n\t\t    Tone.extend(Tone.Normalize, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The minimum value the input signal will reach.\n\t\t\t * @memberOf Tone.Normalize#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Normalize.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._inputMin;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._inputMin = min;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum value the input signal will reach.\n\t\t\t * @memberOf Tone.Normalize#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Normalize.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._inputMax;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._inputMax = max;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  set the values\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Normalize.prototype._setRange = function () {\n\t\t        this._sub.value = -this._inputMin;\n\t\t        this._div.value = 1 / (this._inputMax - this._inputMin);\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Normalize} this\n\t\t\t */\n\t\t    Tone.Normalize.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sub.dispose();\n\t\t        this._sub = null;\n\t\t        this._div.dispose();\n\t\t        this._div = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Normalize;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Wrapper around the native BufferSourceNode.\n\t\t\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t\t\t *  @param  {Function}  onended  The callback to invoke when the \n\t\t\t *                               buffer is done playing.\n\t\t\t */\n\t\t    Tone.BufferSource = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'buffer',\n\t\t            'onended'\n\t\t        ], Tone.BufferSource.defaults);\n\t\t        /**\n\t\t\t\t *  The callback to invoke after the \n\t\t\t\t *  buffer source is done playing. \n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.onended = options.onended;\n\t\t        /**\n\t\t\t\t *  The time that the buffer was started.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startTime = -1;\n\t\t        /**\n\t\t\t\t *  The gain node which envelopes the BufferSource\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gainNode = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The buffer source\n\t\t\t\t *  @type  {AudioBufferSourceNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._source = this.context.createBufferSource();\n\t\t        this._source.connect(this._gainNode);\n\t\t        this._source.onended = this._onended.bind(this);\n\t\t        /**\n\t\t\t\t *  The playbackRate of the buffer\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.fadeIn = options.fadeIn;\n\t\t        /**\n\t\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.fadeOut = options.fadeOut;\n\t\t        /**\n\t\t\t\t *  The value that the buffer ramps to\n\t\t\t\t *  @type {Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gain = 1;\n\t\t        //set the buffer initially\n\t\t        if (!this.isUndef(options.buffer)) {\n\t\t            this.buffer = options.buffer;\n\t\t        }\n\t\t        this.loop = options.loop;\n\t\t    };\n\t\t    Tone.extend(Tone.BufferSource);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.BufferSource.defaults = {\n\t\t        'onended': Tone.noOp,\n\t\t        'fadeIn': 0,\n\t\t        'fadeOut': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.BufferSource#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'state', {\n\t\t        get: function () {\n\t\t            var now = this.now();\n\t\t            if (this._startTime !== -1 && now > this._startTime) {\n\t\t                return Tone.State.Started;\n\t\t            } else {\n\t\t                return Tone.State.Stopped;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the buffer\n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t\t *                                is given, it will default to the full length \n\t\t\t *                                of the sample (minus any offset)\n\t\t\t *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n\t\t\t *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {\n\t\t        if (this._startTime !== -1) {\n\t\t            throw new Error('Tone.BufferSource: can only be started once.');\n\t\t        }\n\t\t        if (this.buffer) {\n\t\t            time = this.toSeconds(time);\n\t\t            //if it's a loop the default offset is the loopstart point\n\t\t            if (this.loop) {\n\t\t                offset = this.defaultArg(offset, this.loopStart);\n\t\t            } else {\n\t\t                //otherwise the default offset is 0\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toSeconds(offset);\n\t\t            //the values in seconds\n\t\t            time = this.toSeconds(time);\n\t\t            this._source.start(time, offset);\n\t\t            gain = this.defaultArg(gain, 1);\n\t\t            this._gain = gain;\n\t\t            //the fadeIn time\n\t\t            if (this.isUndef(fadeInTime)) {\n\t\t                fadeInTime = this.toSeconds(this.fadeIn);\n\t\t            } else {\n\t\t                fadeInTime = this.toSeconds(fadeInTime);\n\t\t            }\n\t\t            if (fadeInTime > 0) {\n\t\t                this._gainNode.gain.setValueAtTime(0, time);\n\t\t                this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);\n\t\t            } else {\n\t\t                this._gainNode.gain.setValueAtTime(gain, time);\n\t\t            }\n\t\t            this._startTime = time + fadeInTime;\n\t\t            if (!this.isUndef(duration)) {\n\t\t                duration = this.defaultArg(duration, this.buffer.duration - offset);\n\t\t                duration = this.toSeconds(duration);\n\t\t                this.stop(time + duration + fadeInTime, fadeInTime);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the buffer. Optionally add a ramp time to fade the \n\t\t\t *  buffer out. \n\t\t\t *  @param  {Time=}  time         The time the buffer should stop.\n\t\t\t *  @param  {Time=}  fadeOutTime  How long the gain should fade out for\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {\n\t\t        if (this.buffer) {\n\t\t            time = this.toSeconds(time);\n\t\t            //the fadeOut time\n\t\t            if (this.isUndef(fadeOutTime)) {\n\t\t                fadeOutTime = this.toSeconds(this.fadeOut);\n\t\t            } else {\n\t\t                fadeOutTime = this.toSeconds(fadeOutTime);\n\t\t            }\n\t\t            //cancel the end curve\n\t\t            this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n\t\t            //set a new one\n\t\t            if (fadeOutTime > 0) {\n\t\t                this._gainNode.gain.setValueAtTime(this._gain, time);\n\t\t                this._gainNode.gain.linearRampToValueAtTime(0, time + fadeOutTime);\n\t\t                time += fadeOutTime;\n\t\t            } else {\n\t\t                this._gainNode.gain.setValueAtTime(0, time);\n\t\t            }\n\t\t            // fix for safari bug and old FF\n\t\t            if (!this.isNumber(this._source.playbackState) || this._source.playbackState === 2) {\n\t\t                this._source.stop(time);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal callback when the buffer is ended. \n\t\t\t *  Invokes `onended` and disposes the node.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.BufferSource.prototype._onended = function () {\n\t\t        this.onended(this);\n\t\t        this.dispose();\n\t\t    };\n\t\t    /**\n\t\t\t * If loop is true, the loop will start at this position. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._source.loopStart;\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._source.loopStart = this.toSeconds(loopStart);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If loop is true, the loop will end at this position.\n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._source.loopEnd;\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._source.loopEnd = this.toSeconds(loopEnd);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The audio buffer belonging to the player. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {AudioBuffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            if (this._source) {\n\t\t                return this._source.buffer;\n\t\t            } else {\n\t\t                return null;\n\t\t            }\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            if (buffer instanceof Tone.Buffer) {\n\t\t                this._source.buffer = buffer.get();\n\t\t            } else {\n\t\t                this._source.buffer = buffer;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If the buffer should loop once it's over. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {boolean}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._source.loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._source.loop = loop;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.dispose = function () {\n\t\t        this.onended = null;\n\t\t        if (this._source) {\n\t\t            this._source.onended = null;\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        if (this._gainNode) {\n\t\t            this._gainNode.dispose();\n\t\t            this._gainNode = null;\n\t\t        }\n\t\t        this._startTime = -1;\n\t\t        this.playbackRate = null;\n\t\t        this.output = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.BufferSource;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    //polyfill for getUserMedia\n\t\t    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\t\t    /**\n\t\t\t *  @class  Tone.ExternalInput is a WebRTC Audio Input. Check \n\t\t\t *          [Media Stream API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n\t\t\t *          to see which browsers are supported. As of\n\t\t\t *          writing this, Chrome, Firefox, and Opera \n\t\t\t *          support Media Stream. Chrome allows enumeration \n\t\t\t *          of the sources, and access to device name over a \n\t\t\t *          secure (HTTPS) connection. See [https://simpl.info](https://simpl.info/getusermedia/sources/index.html) \n\t\t\t *          vs [http://simple.info](https://simpl.info/getusermedia/sources/index.html) \n\t\t\t *          on a Chrome browser for the difference.\n\t\t\t *         \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source}\n\t\t\t *  @param {number} [inputNum=0] If multiple inputs are present, select the input number. Chrome only.\n\t\t\t *  @example\n\t\t\t * //select the third input\n\t\t\t * var motu = new Tone.ExternalInput(3);\n\t\t\t * \n\t\t\t * //opening the input asks the user to activate their mic\n\t\t\t * motu.open(function(){\n\t\t\t * \t//opening is activates the microphone\n\t\t\t * \t//starting lets audio through\n\t\t\t * \tmotu.start(10);\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.ExternalInput = function () {\n\t\t        var options = this.optionsObject(arguments, ['inputNum'], Tone.ExternalInput.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The MediaStreamNode \n\t\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mediaStream = null;\n\t\t        /**\n\t\t\t\t *  The media stream created by getUserMedia.\n\t\t\t\t *  @type {LocalMediaStream}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stream = null;\n\t\t        /**\n\t\t\t\t *  The constraints argument for getUserMedia\n\t\t\t\t *  @type {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._constraints = { 'audio': true };\n\t\t        /**\n\t\t\t\t *  The input source position in Tone.ExternalInput.sources. \n\t\t\t\t *  Set before ExternalInput.open().\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputNum = options.inputNum;\n\t\t        /**\n\t\t\t\t *  Gates the input signal for start/stop. \n\t\t\t\t *  Initially closed.\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gate = new Tone.Gain(0).connect(this.output);\n\t\t    };\n\t\t    Tone.extend(Tone.ExternalInput, Tone.Source);\n\t\t    /**\n\t\t\t * the default parameters\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t    Tone.ExternalInput.defaults = { 'inputNum': 0 };\n\t\t    /**\n\t\t\t * wrapper for getUserMedia function\n\t\t\t * @param {function} callback\n\t\t\t * @param {function} error\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype._getUserMedia = function (callback, error) {\n\t\t        if (!Tone.ExternalInput.supported) {\n\t\t            error('browser does not support \\'getUserMedia\\'');\n\t\t        }\n\t\t        if (Tone.ExternalInput.sources[this._inputNum]) {\n\t\t            this._constraints = { audio: { optional: [{ sourceId: Tone.ExternalInput.sources[this._inputNum].id }] } };\n\t\t        }\n\t\t        navigator.getUserMedia(this._constraints, function (stream) {\n\t\t            this._onStream(stream);\n\t\t            callback();\n\t\t        }.bind(this), function (err) {\n\t\t            error(err);\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t * called when the stream is successfully setup\n\t\t\t * @param  {LocalMediaStream} stream\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype._onStream = function (stream) {\n\t\t        if (!this.isFunction(this.context.createMediaStreamSource)) {\n\t\t            throw new Error('Tone.ExternalInput: browser does not support the \\'MediaStreamSourceNode\\'');\n\t\t        }\n\t\t        //can only start a new source if the previous one is closed\n\t\t        if (!this._stream) {\n\t\t            this._stream = stream;\n\t\t            //Wrap a MediaStreamSourceNode around the live input stream.\n\t\t            this._mediaStream = this.context.createMediaStreamSource(stream);\n\t\t            //Connect the MediaStreamSourceNode to a gate gain node\n\t\t            this._mediaStream.connect(this._gate);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Open the media stream \n\t\t\t *  @param  {function=} callback The callback function to \n\t\t\t *                       execute when the stream is open\n\t\t\t *  @param  {function=} error The callback function to execute\n\t\t\t *                            when the media stream can't open. \n\t\t\t *                            This is fired either because the browser\n\t\t\t *                            doesn't support the media stream,\n\t\t\t *                            or the user blocked opening the microphone. \n\t\t\t *  @return {Tone.ExternalInput} this\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype.open = function (callback, error) {\n\t\t        callback = this.defaultArg(callback, Tone.noOp);\n\t\t        error = this.defaultArg(error, Tone.noOp);\n\t\t        Tone.ExternalInput.getSources(function () {\n\t\t            this._getUserMedia(callback, error);\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Close the media stream\n\t\t\t *  @return {Tone.ExternalInput} this\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype.close = function () {\n\t\t        if (this._stream) {\n\t\t            var track = this._stream.getTracks()[this._inputNum];\n\t\t            if (!this.isUndef(track)) {\n\t\t                track.stop();\n\t\t            }\n\t\t            this._stream = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the stream\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._gate.gain.setValueAtTime(1, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stops the stream.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._gate.gain.setValueAtTime(0, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Clean up.\n\t\t\t * @return {Tone.ExternalInput} this\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this.close();\n\t\t        if (this._mediaStream) {\n\t\t            this._mediaStream.disconnect();\n\t\t            this._mediaStream = null;\n\t\t        }\n\t\t        this._constraints = null;\n\t\t        this._gate.dispose();\n\t\t        this._gate = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // STATIC METHODS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t * The array of available sources, different depending on whether connection is secure\n\t\t\t * @type {Array}\n\t\t\t * @static\n\t\t\t */\n\t\t    Tone.ExternalInput.sources = [];\n\t\t    /**\n\t\t\t * indicates whether browser supports MediaStreamTrack.getSources (i.e. Chrome vs Firefox)\n\t\t\t * @type {Boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.ExternalInput._canGetSources = !Tone.prototype.isUndef(window.MediaStreamTrack) && Tone.prototype.isFunction(MediaStreamTrack.getSources);\n\t\t    /**\n\t\t\t *  If getUserMedia is supported by the browser.\n\t\t\t *  @type  {Boolean}\n\t\t\t *  @memberOf Tone.ExternalInput#\n\t\t\t *  @name supported\n\t\t\t *  @static\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ExternalInput, 'supported', {\n\t\t        get: function () {\n\t\t            return Tone.prototype.isFunction(navigator.getUserMedia);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Populates the source list. Invokes the callback with an array of \n\t\t\t *  possible audio sources.\n\t\t\t *  @param  {function=} callback Callback to be executed after populating list \n\t\t\t *  @return {Tone.ExternalInput} this\n\t\t\t *  @static\n\t\t\t *  @example\n\t\t\t * var soundflower = new Tone.ExternalInput();\n\t\t\t * Tone.ExternalInput.getSources(selectSoundflower);\n\t\t\t *\n\t\t\t * function selectSoundflower(sources){\n\t\t\t * \tfor(var i = 0; i < sources.length; i++){\n\t\t\t * \t\tif(sources[i].label === \"soundflower\"){\n\t\t\t * \t\t\tsoundflower.inputNum = i;\n\t\t\t * \t\t\tsoundflower.open(function(){\n\t\t\t * \t\t\t\tsoundflower.start();\n\t\t\t * \t\t\t});\n\t\t\t * \t\t\tbreak;\n\t\t\t * \t\t}\n\t\t\t * \t}\n\t\t\t * };\n\t\t\t */\n\t\t    Tone.ExternalInput.getSources = function (callback) {\n\t\t        if (Tone.ExternalInput.sources.length === 0 && Tone.ExternalInput._canGetSources) {\n\t\t            MediaStreamTrack.getSources(function (media_sources) {\n\t\t                for (var i = 0; i < media_sources.length; i++) {\n\t\t                    if (media_sources[i].kind === 'audio') {\n\t\t                        Tone.ExternalInput.sources[i] = media_sources[i];\n\t\t                    }\n\t\t                }\n\t\t                callback(Tone.ExternalInput.sources);\n\t\t            });\n\t\t        } else {\n\t\t            callback(Tone.ExternalInput.sources);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.ExternalInput;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.MultiPlayer is well suited for one-shots, multi-sampled istruments\n\t\t\t *         or any time you need to play a bunch of audio buffers. \n\t\t\t *  @param  {Object|Array|Tone.Buffers}  buffers  The buffers which are available\n\t\t\t *                                                to the MultiPlayer\n\t\t\t *  @param {Function} onload The callback to invoke when all of the buffers are loaded.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var multiPlayer = new MultiPlayer({\n\t\t\t * \t\"kick\" : \"path/to/kick.mp3\",\n\t\t\t * \t\"snare\" : \"path/to/snare.mp3\",\n\t\t\t * }, function(){\n\t\t\t * \tmultiPlayer.start(\"kick\");\n\t\t\t * });\n\t\t\t *  @example\n\t\t\t * //can also store the values in an array\n\t\t\t * var multiPlayer = new MultiPlayer([\"path/to/kick.mp3\", \"path/to/snare.mp3\"], \n\t\t\t * function(){\n\t\t\t * \t//if an array is passed in, the samples are referenced to by index\n\t\t\t * \tmultiPlayer.start(1);\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.MultiPlayer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'urls',\n\t\t            'onload'\n\t\t        ], Tone.MultiPlayer.defaults);\n\t\t        if (options.urls instanceof Tone.Buffers) {\n\t\t            /**\n\t\t\t\t\t *  All the buffers belonging to the player.\n\t\t\t\t\t *  @type  {Tone.Buffers}\n\t\t\t\t\t */\n\t\t            this.buffers = options.urls;\n\t\t        } else {\n\t\t            this.buffers = new Tone.Buffers(options.urls, options.onload);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  Keeps track of the currently playing sources.\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._activeSources = [];\n\t\t        /**\n\t\t\t\t *  The fade in envelope which is applied\n\t\t\t\t *  to the beginning of the BufferSource\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.fadeIn = options.fadeIn;\n\t\t        /**\n\t\t\t\t *  The fade out envelope which is applied\n\t\t\t\t *  to the end of the BufferSource\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.fadeOut = options.fadeOut;\n\t\t        /**\n\t\t\t\t *  The output volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        //make the output explicitly stereo\n\t\t        this._volume.output.output.channelCount = 2;\n\t\t        this._volume.output.output.channelCountMode = 'explicit';\n\t\t        //mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.MultiPlayer, Tone.Source);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.MultiPlayer.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'fadeIn': 0,\n\t\t        'fadeOut': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the given buffer.\n\t\t\t *  @param  {String|Number|AudioBuffer|Tone.Buffer}  buffer\n\t\t\t *  @return  {AudioBuffer}  The requested buffer.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype._getBuffer = function (buffer) {\n\t\t        if (this.isNumber(buffer) || this.isString(buffer)) {\n\t\t            return this.buffers.get(buffer).get();\n\t\t        } else if (buffer instanceof Tone.Buffer) {\n\t\t            return buffer.get();\n\t\t        } else {\n\t\t            return buffer;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Start a buffer by name. The `start` method allows a number of options\n\t\t\t *  to be passed in such as offset, interval, and gain. This is good for multi-sampled \n\t\t\t *  instruments and sound sprites where samples are repitched played back at different velocities.\n\t\t\t *  @param  {String|AudioBuffer}  buffer    The name of the buffer to start.\n\t\t\t *                                          Or pass in a buffer which will be started.\n\t\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t\t *  @param  {Time=}  duration   How long to play the buffer for.\n\t\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.start = function (buffer, time, offset, duration, pitch, gain) {\n\t\t        buffer = this._getBuffer(buffer);\n\t\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t\t        this._activeSources.push(source);\n\t\t        time = this.toSeconds(time);\n\t\t        source.start(time, offset, duration, this.defaultArg(gain, 1), this.fadeIn);\n\t\t        if (duration) {\n\t\t            source.stop(time + this.toSeconds(duration), this.fadeOut);\n\t\t        }\n\t\t        source.onended = this._onended.bind(this);\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start a looping buffer by name. Similar to `start`, but the buffer\n\t\t\t *  is looped instead of played straight through. Can still be stopped with `stop`. \n\t\t\t *  @param  {String|AudioBuffer}  buffer    The name of the buffer to start.\n\t\t\t *                                          Or pass in a buffer which will be started.\n\t\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t\t *  @param  {Time=}  loopStart   The start of the loop.\n\t\t\t *  @param  {Time=}  loopEnd\tThe end of the loop.\n\t\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.startLoop = function (buffer, time, offset, loopStart, loopEnd, pitch, gain) {\n\t\t        buffer = this._getBuffer(buffer);\n\t\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t\t        this._activeSources.push(source);\n\t\t        time = this.toSeconds(time);\n\t\t        source.loop = true;\n\t\t        source.loopStart = this.toSeconds(this.defaultArg(loopStart, 0));\n\t\t        source.loopEnd = this.toSeconds(this.defaultArg(loopEnd, 0));\n\t\t        source.start(time, offset, undefined, this.defaultArg(gain, 1), this.fadeIn);\n\t\t        source.onended = this._onended.bind(this);\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal callback when a buffer is done playing.\n\t\t\t *  @param  {Tone.BufferSource}  source  The stopped source\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype._onended = function (source) {\n\t\t        var index = this._activeSources.indexOf(source);\n\t\t        this._activeSources.splice(index, 1);\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop all instances of the currently playing buffer at the given time.\n\t\t\t *  @param  {String|AudioBuffer}  buffer  The buffer to stop.\n\t\t\t *  @param  {Time=}  time    When to stop the buffer\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.stop = function (buffer, time) {\n\t\t        buffer = this._getBuffer(buffer);\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t\t            if (this._activeSources[i].buffer === buffer) {\n\t\t                this._activeSources[i].stop(time, this.fadeOut);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop all currently playing buffers at the given time.\n\t\t\t *  @param  {Time=}  time  When to stop the buffers.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.stopAll = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t\t            this._activeSources[i].stop(time, this.fadeOut);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add another buffer to the available buffers.\n\t\t\t *  @param {String} name The name to that the buffer is refered\n\t\t\t *                       to in start/stop methods. \n\t\t\t *  @param {String|Tone.Buffer} url The url of the buffer to load\n\t\t\t *                                  or the buffer.\n\t\t\t *  @param {Function} callback The function to invoke after the buffer is loaded.\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.add = function (name, url, callback) {\n\t\t        this.buffers.add(name, url, callback);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source. \"started\"\n\t\t\t *  if there are any buffers playing. \"stopped\" otherwise.\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.MultiPlayer#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._activeSources.length > 0 ? Tone.State.Started : Tone.State.Stopped;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.MultiPlayer#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * source.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this._writable('volume');\n\t\t        this.volume = null;\n\t\t        this.buffers.dispose();\n\t\t        this.buffers = null;\n\t\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t\t            this._activeSources[i].dispose();\n\t\t        }\n\t\t        this._activeSources = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultiPlayer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n\t\t\t *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the \n\t\t\t *        amount of time each small chunk of audio is played for and the overlap is the \n\t\t\t *        amount of crossfading transition time between successive grains.\n\t\t\t * @extends {Tone}\n\t\t\t * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n\t\t\t * @param {Function=} callback The callback to invoke after the url is loaded.\n\t\t\t */\n\t\t    Tone.GrainPlayer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.GrainPlayer.defaults);\n\t\t        Tone.Source.call(this);\n\t\t        /**\n\t\t\t\t *  The audio buffer belonging to the player.\n\t\t\t\t *  @type  {Tone.Buffer}\n\t\t\t\t */\n\t\t        this.buffer = new Tone.Buffer(options.url, options.onload);\n\t\t        /**\n\t\t\t\t *  Plays the buffer with a small envelope\n\t\t\t\t *  @type  {Tone.MultiPlayer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._player = this.output = new Tone.MultiPlayer();\n\t\t        /**\n\t\t\t\t *  Create a repeating tick to schedule\n\t\t\t\t *  the grains.\n\t\t\t\t *  @type  {Tone.Clock}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._clock = new Tone.Clock(this._tick.bind(this), 1);\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = 0;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = 0;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._grainSize = options.grainSize;\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Number}\n\t\t\t\t */\n\t\t        this._overlap = options.overlap;\n\t\t        /**\n\t\t\t\t *  Adjust the pitch independently of the playbackRate.\n\t\t\t\t *  @type  {Cents}\n\t\t\t\t */\n\t\t        this.detune = options.detune;\n\t\t        /**\n\t\t\t\t *  The amount of time randomly added\n\t\t\t\t *  or subtracted from the grain's offset\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.drift = options.drift;\n\t\t        //setup\n\t\t        this.overlap = options.overlap;\n\t\t        this.loop = options.loop;\n\t\t        this.playbackRate = options.playbackRate;\n\t\t        this.grainSize = options.grainSize;\n\t\t        this.loopStart = options.loopStart;\n\t\t        this.loopEnd = options.loopEnd;\n\t\t        this.reverse = options.reverse;\n\t\t    };\n\t\t    Tone.extend(Tone.GrainPlayer, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.GrainPlayer.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'overlap': 0.1,\n\t\t        'grainSize': 0.2,\n\t\t        'drift': 0,\n\t\t        'playbackRate': 1,\n\t\t        'detune': 0,\n\t\t        'loop': false,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': 0,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t\t *  from the start of the buffer to play from.\n\t\t\t *  \n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t * @return {Tone.GrainPlayer} this\n\t\t\t */\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @param {Time} time\n\t\t\t *  @param {Time} offset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._start = function (time, offset) {\n\t\t        offset = this.defaultArg(offset, 0);\n\t\t        offset = this.toSeconds(offset);\n\t\t        time = this.toSeconds(time);\n\t\t        this._offset = offset;\n\t\t        this._clock.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._stop = function (time) {\n\t\t        this._clock.stop(time);\n\t\t        this._player.stop(this.buffer, time);\n\t\t        this._offset = 0;\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoked on each clock tick. scheduled a new\n\t\t\t *  grain at this time.\n\t\t\t *  @param  {Time}  time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._tick = function (time) {\n\t\t        var bufferDuration = this.buffer.duration;\n\t\t        if (this.loop && this._loopEnd > 0) {\n\t\t            bufferDuration = this._loopEnd;\n\t\t        }\n\t\t        var drift = (Math.random() * 2 - 1) * this.drift;\n\t\t        var offset = this._offset - this._overlap + drift;\n\t\t        var detune = this.detune / 100;\n\t\t        var originalFadeIn = this._player.fadeIn;\n\t\t        if (this.loop && this._offset > bufferDuration) {\n\t\t            //play the end\n\t\t            var endSegmentDuration = this._offset - bufferDuration;\n\t\t            this._player.start(this.buffer, time, offset, endSegmentDuration + this._overlap, detune);\n\t\t            //and play the beginning \n\t\t            offset = this._offset % bufferDuration;\n\t\t            this._offset = this._loopStart;\n\t\t            this._player.fadeIn = 0;\n\t\t            this._player.start(this.buffer, time + endSegmentDuration, this._offset, offset + this._overlap, detune);\n\t\t        } else if (this._offset > bufferDuration) {\n\t\t            //set the state to stopped. \n\t\t            this.stop(time);\n\t\t        } else {\n\t\t            if (offset < 0) {\n\t\t                this._player.fadeIn = Math.max(this._player.fadeIn + offset, 0);\n\t\t                offset = 0;\n\t\t            }\n\t\t            this._player.start(this.buffer, time, offset, this.grainSize + this._overlap, detune);\n\t\t        }\n\t\t        this._player.fadeIn = originalFadeIn;\n\t\t        //increment the offset\n\t\t        var duration = this._clock._nextTick - time;\n\t\t        this._offset += duration * this._playbackRate;\n\t\t    };\n\t\t    /**\n\t\t\t *  Jump to a specific time and play it.\n\t\t\t *  @param  {Time}  offset  The offset to jump to.\n\t\t\t *  @param {Time=} time When to make the jump.\n\t\t\t *  @return  {[type]}  [description]\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype.scrub = function (offset, time) {\n\t\t        this._offset = this.toSeconds(offset);\n\t\t        this._tick(this.toSeconds(time));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The playback rate of the sample\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Positive}\n\t\t\t * @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this.grainSize = this._grainSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The loop start time. \n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._loopStart;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            this._loopStart = this.toSeconds(time);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The loop end time. \n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._loopEnd;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            this._loopEnd = this.toSeconds(time);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this.buffer.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this.buffer.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The size of each chunk of audio that the \n\t\t\t * buffer is chopped into and played back at.\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name grainSize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {\n\t\t        get: function () {\n\t\t            return this._grainSize;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._grainSize = this.toSeconds(size);\n\t\t            this._clock.frequency.value = this._playbackRate / this._grainSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * This is the duration of the cross-fade between \n\t\t\t * sucessive grains.\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name overlap\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {\n\t\t        get: function () {\n\t\t            return this._overlap;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            time = this.toSeconds(time);\n\t\t            this._overlap = time;\n\t\t            if (this._overlap < 0) {\n\t\t                this._player.fadeIn = 0.01;\n\t\t                this._player.fadeOut = 0.01;\n\t\t            } else {\n\t\t                this._player.fadeIn = time;\n\t\t                this._player.fadeOut = time;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Clean up\n\t\t\t * @return {Tone.GrainPlayer} this\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this.buffer.dispose();\n\t\t        this.buffer = null;\n\t\t        this._player.dispose();\n\t\t        this._player = null;\n\t\t        this._clock.dispose();\n\t\t        this._clock = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GrainPlayer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Opens up the default source (typically the microphone).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.ExternalInput}\n\t\t\t *  @example\n\t\t\t *  //mic will feedback if played through master\n\t\t\t *  var mic = new Tone.Microphone();\n\t\t\t *  mic.open(function(){\n\t\t\t *  \t//start the mic at ten seconds\n\t\t\t *  \tmic.start(10);\n\t\t\t *  });\n\t\t\t *  //stop the mic\n\t\t\t *  mic.stop(20);\n\t\t\t */\n\t\t    Tone.Microphone = function () {\n\t\t        Tone.ExternalInput.call(this, 0);\n\t\t    };\n\t\t    Tone.extend(Tone.Microphone, Tone.ExternalInput);\n\t\t    /**\n\t\t\t *  If getUserMedia is supported by the browser.\n\t\t\t *  @type  {Boolean}\n\t\t\t *  @memberOf Tone.Microphone#\n\t\t\t *  @name supported\n\t\t\t *  @static\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Microphone, 'supported', {\n\t\t        get: function () {\n\t\t            return Tone.ExternalInput.supported;\n\t\t        }\n\t\t    });\n\t\t    return Tone.Microphone;\n\t\t});\n\t\t\n\t\treturn Tone;\n\t}));\n\n/***/ },\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-resource v1.0.3\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$1(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$1.reject = function (r) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$1.resolve = function (x) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$1.all = function all(iterable) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$1.race = function race(iterable) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$1.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$1.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$1(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\t/**\n\t * Promise adapter.\n\t */\n\t\n\tif (typeof Promise === 'undefined') {\n\t    window.Promise = Promise$1;\n\t}\n\t\n\tfunction PromiseObj(executor, context) {\n\t\n\t    if (executor instanceof Promise) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new Promise(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromiseObj.all = function (iterable, context) {\n\t    return new PromiseObj(Promise.all(iterable), context);\n\t};\n\t\n\tPromiseObj.resolve = function (value, context) {\n\t    return new PromiseObj(Promise.resolve(value), context);\n\t};\n\t\n\tPromiseObj.reject = function (reason, context) {\n\t    return new PromiseObj(Promise.reject(reason), context);\n\t};\n\t\n\tPromiseObj.race = function (iterable, context) {\n\t    return new PromiseObj(Promise.race(iterable), context);\n\t};\n\t\n\tvar p = PromiseObj.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new PromiseObj(this.promise.catch(rejected), this.context);\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return Promise.reject(reason);\n\t    });\n\t};\n\t\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar debug = false;var util = {};var slice = [].slice;\n\t\n\t\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    debug = Vue.config.debug || !Vue.config.silent;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (typeof console !== 'undefined' && debug) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (typeof console !== 'undefined') {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tfunction toLower(str) {\n\t    return str ? str.toLowerCase() : '';\n\t}\n\t\n\tfunction toUpper(str) {\n\t    return str ? str.toUpperCase() : '';\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isBoolean(val) {\n\t    return val === true || val === false;\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction isBlob(obj) {\n\t    return typeof Blob !== 'undefined' && obj instanceof Blob;\n\t}\n\t\n\tfunction isFormData(obj) {\n\t    return typeof FormData !== 'undefined' && obj instanceof FormData;\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = PromiseObj.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (obj && typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tvar assign = Object.assign || _assign;\n\t\n\tfunction merge(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction defaults(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t\n\t        for (var key in source) {\n\t            if (target[key] === undefined) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _assign(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * Root Prefix Transform.\n\t */\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Query Parameter Transform.\n\t */\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\t\n\tfunction xdrClient (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            handler = function (_ref) {\n\t            var type = _ref.type;\n\t\n\t\n\t            var status = 0;\n\t\n\t            if (type === 'load') {\n\t                status = 200;\n\t            } else if (type === 'error') {\n\t                status = 500;\n\t            }\n\t\n\t            resolve(request.respondWith(xdr.responseText, { status: status }));\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, request.getUrl());\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = handler;\n\t        xdr.onprogress = function () {};\n\t        xdr.send(request.getBody());\n\t    });\n\t}\n\t\n\t/**\n\t * CORS Interceptor.\n\t */\n\t\n\tvar ORIGIN_URL = Url.parse(location.href);\n\tvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\t\n\tfunction cors (request, next) {\n\t\n\t    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n\t        request.crossOrigin = true;\n\t    }\n\t\n\t    if (request.crossOrigin) {\n\t\n\t        if (!SUPPORTS_CORS) {\n\t            request.client = xdrClient;\n\t        }\n\t\n\t        delete request.emulateHTTP;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n\t}\n\t\n\t/**\n\t * Body Interceptor.\n\t */\n\t\n\tfunction body (request, next) {\n\t\n\t    if (isFormData(request.body)) {\n\t\n\t        request.headers.delete('Content-Type');\n\t    } else if (isObject(request.body) || isArray(request.body)) {\n\t\n\t        if (request.emulateJSON) {\n\t            request.body = Url.params(request.body);\n\t            request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n\t        } else {\n\t            request.body = JSON.stringify(request.body);\n\t        }\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        Object.defineProperty(response, 'data', {\n\t            get: function () {\n\t                return this.body;\n\t            },\n\t            set: function (body) {\n\t                this.body = body;\n\t            }\n\t        });\n\t\n\t        return response.bodyText ? when(response.text(), function (text) {\n\t\n\t            var type = response.headers.get('Content-Type');\n\t\n\t            if (isString(type) && type.indexOf('application/json') === 0) {\n\t\n\t                try {\n\t                    response.body = JSON.parse(text);\n\t                } catch (e) {\n\t                    response.body = null;\n\t                }\n\t            } else {\n\t                response.body = text;\n\t            }\n\t\n\t            return response;\n\t        }) : response;\n\t    });\n\t}\n\t\n\t/**\n\t * JSONP client.\n\t */\n\t\n\tfunction jsonpClient (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var name = request.jsonp || 'callback',\n\t            callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            body = null,\n\t            handler,\n\t            script;\n\t\n\t        handler = function (_ref) {\n\t            var type = _ref.type;\n\t\n\t\n\t            var status = 0;\n\t\n\t            if (type === 'load' && body !== null) {\n\t                status = 200;\n\t            } else if (type === 'error') {\n\t                status = 500;\n\t            }\n\t\n\t            resolve(request.respondWith(body, { status: status }));\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        request.params[name] = callback;\n\t\n\t        window[callback] = function (result) {\n\t            body = JSON.stringify(result);\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = request.getUrl();\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\t/**\n\t * JSONP Interceptor.\n\t */\n\t\n\tfunction jsonp (request, next) {\n\t\n\t    if (request.method == 'JSONP') {\n\t        request.client = jsonpClient;\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        if (request.method == 'JSONP') {\n\t\n\t            return when(response.json(), function (json) {\n\t\n\t                response.body = json;\n\t\n\t                return response;\n\t            });\n\t        }\n\t    });\n\t}\n\t\n\t/**\n\t * Before Interceptor.\n\t */\n\t\n\tfunction before (request, next) {\n\t\n\t    if (isFunction(request.before)) {\n\t        request.before.call(this, request);\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tfunction method (request, next) {\n\t\n\t    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t        request.headers.set('X-HTTP-Method-Override', request.method);\n\t        request.method = 'POST';\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Header Interceptor.\n\t */\n\t\n\tfunction header (request, next) {\n\t\n\t    var headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[toLower(request.method)]);\n\t\n\t    each(headers, function (value, name) {\n\t        if (!request.headers.has(name)) {\n\t            request.headers.set(name, value);\n\t        }\n\t    });\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tfunction timeout (request, next) {\n\t\n\t    var timeout;\n\t\n\t    if (request.timeout) {\n\t        timeout = setTimeout(function () {\n\t            request.abort();\n\t        }, request.timeout);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        clearTimeout(timeout);\n\t    });\n\t}\n\t\n\t/**\n\t * XMLHttp client.\n\t */\n\t\n\tfunction xhrClient (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n\t                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n\t                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n\t            });\n\t\n\t            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n\t                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xhr.abort();\n\t        };\n\t\n\t        if (request.progress) {\n\t            if (request.method === 'GET') {\n\t                xhr.addEventListener('progress', request.progress);\n\t            } else if (/^(POST|PUT)$/i.test(request.method)) {\n\t                xhr.upload.addEventListener('progress', request.progress);\n\t            }\n\t        }\n\t\n\t        xhr.open(request.method, request.getUrl(), true);\n\t\n\t        if ('responseType' in xhr) {\n\t            xhr.responseType = 'blob';\n\t        }\n\t\n\t        if (request.credentials === true) {\n\t            xhr.withCredentials = true;\n\t        }\n\t\n\t        request.headers.forEach(function (value, name) {\n\t            xhr.setRequestHeader(name, value);\n\t        });\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onerror = handler;\n\t        xhr.send(request.getBody());\n\t    });\n\t}\n\t\n\t/**\n\t * Base client.\n\t */\n\t\n\tfunction Client (context) {\n\t\n\t    var reqHandlers = [sendRequest],\n\t        resHandlers = [],\n\t        handler;\n\t\n\t    if (!isObject(context)) {\n\t        context = null;\n\t    }\n\t\n\t    function Client(request) {\n\t        return new PromiseObj(function (resolve) {\n\t\n\t            function exec() {\n\t\n\t                handler = reqHandlers.pop();\n\t\n\t                if (isFunction(handler)) {\n\t                    handler.call(context, request, next);\n\t                } else {\n\t                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n\t                    next();\n\t                }\n\t            }\n\t\n\t            function next(response) {\n\t\n\t                if (isFunction(response)) {\n\t\n\t                    resHandlers.unshift(response);\n\t                } else if (isObject(response)) {\n\t\n\t                    resHandlers.forEach(function (handler) {\n\t                        response = when(response, function (response) {\n\t                            return handler.call(context, response) || response;\n\t                        });\n\t                    });\n\t\n\t                    when(response, resolve);\n\t\n\t                    return;\n\t                }\n\t\n\t                exec();\n\t            }\n\t\n\t            exec();\n\t        }, context);\n\t    }\n\t\n\t    Client.use = function (handler) {\n\t        reqHandlers.push(handler);\n\t    };\n\t\n\t    return Client;\n\t}\n\t\n\tfunction sendRequest(request, resolve) {\n\t\n\t    var client = request.client || xhrClient;\n\t\n\t    resolve(client(request));\n\t}\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\t/**\n\t * HTTP Headers.\n\t */\n\t\n\tvar Headers = function () {\n\t    function Headers(headers) {\n\t        var _this = this;\n\t\n\t        classCallCheck(this, Headers);\n\t\n\t\n\t        this.map = {};\n\t\n\t        each(headers, function (value, name) {\n\t            return _this.append(name, value);\n\t        });\n\t    }\n\t\n\t    Headers.prototype.has = function has(name) {\n\t        return getName(this.map, name) !== null;\n\t    };\n\t\n\t    Headers.prototype.get = function get(name) {\n\t\n\t        var list = this.map[getName(this.map, name)];\n\t\n\t        return list ? list[0] : null;\n\t    };\n\t\n\t    Headers.prototype.getAll = function getAll(name) {\n\t        return this.map[getName(this.map, name)] || [];\n\t    };\n\t\n\t    Headers.prototype.set = function set(name, value) {\n\t        this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n\t    };\n\t\n\t    Headers.prototype.append = function append(name, value) {\n\t\n\t        var list = this.getAll(name);\n\t\n\t        if (list.length) {\n\t            list.push(trim(value));\n\t        } else {\n\t            this.set(name, value);\n\t        }\n\t    };\n\t\n\t    Headers.prototype.delete = function _delete(name) {\n\t        delete this.map[getName(this.map, name)];\n\t    };\n\t\n\t    Headers.prototype.forEach = function forEach(callback, thisArg) {\n\t        var _this2 = this;\n\t\n\t        each(this.map, function (list, name) {\n\t            each(list, function (value) {\n\t                return callback.call(thisArg, value, name, _this2);\n\t            });\n\t        });\n\t    };\n\t\n\t    return Headers;\n\t}();\n\t\n\tfunction getName(map, name) {\n\t    return Object.keys(map).reduce(function (prev, curr) {\n\t        return toLower(name) === toLower(curr) ? curr : prev;\n\t    }, null);\n\t}\n\t\n\tfunction normalizeName(name) {\n\t\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t        throw new TypeError('Invalid character in header field name');\n\t    }\n\t\n\t    return trim(name);\n\t}\n\t\n\t/**\n\t * HTTP Response.\n\t */\n\t\n\tvar Response = function () {\n\t    function Response(body, _ref) {\n\t        var url = _ref.url;\n\t        var headers = _ref.headers;\n\t        var status = _ref.status;\n\t        var statusText = _ref.statusText;\n\t        classCallCheck(this, Response);\n\t\n\t\n\t        this.url = url;\n\t        this.ok = status >= 200 && status < 300;\n\t        this.status = status || 0;\n\t        this.statusText = statusText || '';\n\t        this.headers = new Headers(headers);\n\t        this.body = body;\n\t\n\t        if (isString(body)) {\n\t\n\t            this.bodyText = body;\n\t        } else if (isBlob(body)) {\n\t\n\t            this.bodyBlob = body;\n\t\n\t            if (isBlobText(body)) {\n\t                this.bodyText = blobText(body);\n\t            }\n\t        }\n\t    }\n\t\n\t    Response.prototype.blob = function blob() {\n\t        return when(this.bodyBlob);\n\t    };\n\t\n\t    Response.prototype.text = function text() {\n\t        return when(this.bodyText);\n\t    };\n\t\n\t    Response.prototype.json = function json() {\n\t        return when(this.text(), function (text) {\n\t            return JSON.parse(text);\n\t        });\n\t    };\n\t\n\t    return Response;\n\t}();\n\t\n\tfunction blobText(body) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var reader = new FileReader();\n\t\n\t        reader.readAsText(body);\n\t        reader.onload = function () {\n\t            resolve(reader.result);\n\t        };\n\t    });\n\t}\n\t\n\tfunction isBlobText(body) {\n\t    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n\t}\n\t\n\t/**\n\t * HTTP Request.\n\t */\n\t\n\tvar Request = function () {\n\t    function Request(options) {\n\t        classCallCheck(this, Request);\n\t\n\t\n\t        this.body = null;\n\t        this.params = {};\n\t\n\t        assign(this, options, {\n\t            method: toUpper(options.method || 'GET')\n\t        });\n\t\n\t        if (!(this.headers instanceof Headers)) {\n\t            this.headers = new Headers(this.headers);\n\t        }\n\t    }\n\t\n\t    Request.prototype.getUrl = function getUrl() {\n\t        return Url(this);\n\t    };\n\t\n\t    Request.prototype.getBody = function getBody() {\n\t        return this.body;\n\t    };\n\t\n\t    Request.prototype.respondWith = function respondWith(body, options) {\n\t        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n\t    };\n\t\n\t    return Request;\n\t}();\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\n\tvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\n\tvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\t\n\tfunction Http(options) {\n\t\n\t    var self = this || {},\n\t        client = Client(self.$vm);\n\t\n\t    defaults(options || {}, self.$options, Http.options);\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client.use(handler);\n\t    });\n\t\n\t    return client(new Request(options)).then(function (response) {\n\t\n\t        return response.ok ? response : PromiseObj.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return PromiseObj.reject(response);\n\t    });\n\t}\n\t\n\tHttp.options = {};\n\t\n\tHttp.headers = {\n\t    put: JSON_CONTENT_TYPE,\n\t    post: JSON_CONTENT_TYPE,\n\t    patch: JSON_CONTENT_TYPE,\n\t    delete: JSON_CONTENT_TYPE,\n\t    custom: CUSTOM_HEADERS,\n\t    common: COMMON_HEADERS\n\t};\n\t\n\tHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\t\n\t['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, options) {\n\t        return this(assign(options || {}, { url: url, method: method }));\n\t    };\n\t});\n\t\n\t['post', 'put', 'patch'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, body, options) {\n\t        return this(assign(options || {}, { url: url, method: method, body: body }));\n\t    };\n\t});\n\t\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = assign({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: assign({}, params) }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = assign({}, action),\n\t        params = {},\n\t        body;\n\t\n\t    switch (args.length) {\n\t\n\t        case 2:\n\t\n\t            params = args[0];\n\t            body = args[1];\n\t\n\t            break;\n\t\n\t        case 1:\n\t\n\t            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                body = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.body = body;\n\t    options.params = assign({}, options.params, params);\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\t/**\n\t * Install plugin.\n\t */\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = PromiseObj;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vue.js v2.0.3\n\t * (c) 2014-2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\t/*  */\n\t\n\t/**\n\t * Convert a value to a string that is actually rendered.\n\t */\n\tfunction _toString (val) {\n\t  return val == null\n\t    ? ''\n\t    : typeof val === 'object'\n\t      ? JSON.stringify(val, null, 2)\n\t      : String(val)\n\t}\n\t\n\t/**\n\t * Convert a input value to a number for persistence.\n\t * If the conversion fails, return original string.\n\t */\n\tfunction toNumber (val) {\n\t  var n = parseFloat(val, 10);\n\t  return (n || n === 0) ? n : val\n\t}\n\t\n\t/**\n\t * Make a map and return a function for checking if a key\n\t * is in that map.\n\t */\n\tfunction makeMap (\n\t  str,\n\t  expectsLowerCase\n\t) {\n\t  var map = Object.create(null);\n\t  var list = str.split(',');\n\t  for (var i = 0; i < list.length; i++) {\n\t    map[list[i]] = true;\n\t  }\n\t  return expectsLowerCase\n\t    ? function (val) { return map[val.toLowerCase()]; }\n\t    : function (val) { return map[val]; }\n\t}\n\t\n\t/**\n\t * Check if a tag is a built-in tag.\n\t */\n\tvar isBuiltInTag = makeMap('slot,component', true);\n\t\n\t/**\n\t * Remove an item from an array\n\t */\n\tfunction remove$1 (arr, item) {\n\t  if (arr.length) {\n\t    var index = arr.indexOf(item);\n\t    if (index > -1) {\n\t      return arr.splice(index, 1)\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check whether the object has the property.\n\t */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tfunction hasOwn (obj, key) {\n\t  return hasOwnProperty.call(obj, key)\n\t}\n\t\n\t/**\n\t * Check if value is primitive\n\t */\n\tfunction isPrimitive (value) {\n\t  return typeof value === 'string' || typeof value === 'number'\n\t}\n\t\n\t/**\n\t * Create a cached version of a pure function.\n\t */\n\tfunction cached (fn) {\n\t  var cache = Object.create(null);\n\t  return function cachedFn (str) {\n\t    var hit = cache[str];\n\t    return hit || (cache[str] = fn(str))\n\t  }\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t */\n\tvar camelizeRE = /-(\\w)/g;\n\tvar camelize = cached(function (str) {\n\t  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n\t});\n\t\n\t/**\n\t * Capitalize a string.\n\t */\n\tvar capitalize = cached(function (str) {\n\t  return str.charAt(0).toUpperCase() + str.slice(1)\n\t});\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t */\n\tvar hyphenateRE = /([^-])([A-Z])/g;\n\tvar hyphenate = cached(function (str) {\n\t  return str\n\t    .replace(hyphenateRE, '$1-$2')\n\t    .replace(hyphenateRE, '$1-$2')\n\t    .toLowerCase()\n\t});\n\t\n\t/**\n\t * Simple bind, faster than native\n\t */\n\tfunction bind$1 (fn, ctx) {\n\t  function boundFn (a) {\n\t    var l = arguments.length;\n\t    return l\n\t      ? l > 1\n\t        ? fn.apply(ctx, arguments)\n\t        : fn.call(ctx, a)\n\t      : fn.call(ctx)\n\t  }\n\t  // record original fn length\n\t  boundFn._length = fn.length;\n\t  return boundFn\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t */\n\tfunction toArray (list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t */\n\tfunction extend (to, _from) {\n\t  for (var key in _from) {\n\t    to[key] = _from[key];\n\t  }\n\t  return to\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t */\n\tfunction isObject (obj) {\n\t  return obj !== null && typeof obj === 'object'\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t */\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\tfunction isPlainObject (obj) {\n\t  return toString.call(obj) === OBJECT_STRING\n\t}\n\t\n\t/**\n\t * Merge an Array of Objects into a single Object.\n\t */\n\tfunction toObject (arr) {\n\t  var res = {};\n\t  for (var i = 0; i < arr.length; i++) {\n\t    if (arr[i]) {\n\t      extend(res, arr[i]);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\t/**\n\t * Perform no operation.\n\t */\n\tfunction noop () {}\n\t\n\t/**\n\t * Always return false.\n\t */\n\tvar no = function () { return false; };\n\t\n\t/**\n\t * Generate a static keys string from compiler modules.\n\t */\n\tfunction genStaticKeys (modules) {\n\t  return modules.reduce(function (keys, m) {\n\t    return keys.concat(m.staticKeys || [])\n\t  }, []).join(',')\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t */\n\tfunction looseEqual (a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (\n\t    isObject(a) && isObject(b)\n\t      ? JSON.stringify(a) === JSON.stringify(b)\n\t      : false\n\t  )\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tfunction looseIndexOf (arr, val) {\n\t  for (var i = 0; i < arr.length; i++) {\n\t    if (looseEqual(arr[i], val)) { return i }\n\t  }\n\t  return -1\n\t}\n\t\n\t/*  */\n\t\n\tvar config = {\n\t  /**\n\t   * Option merge strategies (used in core/util/options)\n\t   */\n\t  optionMergeStrategies: Object.create(null),\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   */\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to enable devtools\n\t   */\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Error handler for watcher errors\n\t   */\n\t  errorHandler: null,\n\t\n\t  /**\n\t   * Ignore certain custom elements\n\t   */\n\t  ignoredElements: null,\n\t\n\t  /**\n\t   * Custom user key aliases for v-on\n\t   */\n\t  keyCodes: Object.create(null),\n\t\n\t  /**\n\t   * Check if a tag is reserved so that it cannot be registered as a\n\t   * component. This is platform-dependent and may be overwritten.\n\t   */\n\t  isReservedTag: no,\n\t\n\t  /**\n\t   * Check if a tag is an unknown element.\n\t   * Platform-dependent.\n\t   */\n\t  isUnknownElement: no,\n\t\n\t  /**\n\t   * Get the namespace of an element\n\t   */\n\t  getTagNamespace: noop,\n\t\n\t  /**\n\t   * Check if an attribute must be bound using property, e.g. value\n\t   * Platform-dependent.\n\t   */\n\t  mustUseProp: no,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   */\n\t  _assetTypes: [\n\t    'component',\n\t    'directive',\n\t    'filter'\n\t  ],\n\t\n\t  /**\n\t   * List of lifecycle hooks.\n\t   */\n\t  _lifecycleHooks: [\n\t    'beforeCreate',\n\t    'created',\n\t    'beforeMount',\n\t    'mounted',\n\t    'beforeUpdate',\n\t    'updated',\n\t    'beforeDestroy',\n\t    'destroyed',\n\t    'activated',\n\t    'deactivated'\n\t  ],\n\t\n\t  /**\n\t   * Max circular updates allowed in a scheduler flush cycle.\n\t   */\n\t  _maxUpdateCount: 100,\n\t\n\t  /**\n\t   * Server rendering?\n\t   */\n\t  _isServer: ({\"NODE_ENV\":\"production\"}).VUE_ENV === 'server'\n\t};\n\t\n\t/*  */\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t */\n\tfunction isReserved (str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F\n\t}\n\t\n\t/**\n\t * Define a property.\n\t */\n\tfunction def (obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Parse simple path.\n\t */\n\tvar bailRE = /[^\\w\\.\\$]/;\n\tfunction parsePath (path) {\n\t  if (bailRE.test(path)) {\n\t    return\n\t  } else {\n\t    var segments = path.split('.');\n\t    return function (obj) {\n\t      for (var i = 0; i < segments.length; i++) {\n\t        if (!obj) { return }\n\t        obj = obj[segments[i]];\n\t      }\n\t      return obj\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t/* globals MutationObserver */\n\t\n\t// can we use __proto__?\n\tvar hasProto = '__proto__' in {};\n\t\n\t// Browser environment sniffing\n\tvar inBrowser =\n\t  typeof window !== 'undefined' &&\n\t  Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && /msie|trident/.test(UA);\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isEdge = UA && UA.indexOf('edge/') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t/* istanbul ignore next */\n\tfunction isNative (Ctor) {\n\t  return /native code/.test(Ctor.toString())\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously.\n\t */\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t\n\t  function nextTickHandler () {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks.length = 0;\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  // the nextTick behavior leverages the microtask queue, which can be accessed\n\t  // via either native Promise.then or MutationObserver.\n\t  // MutationObserver has wider support, however it is seriously bugged in\n\t  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n\t  // completely stops working after triggering a few times... so, if native\n\t  // Promise is available, we will use it:\n\t  /* istanbul ignore if */\n\t  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n\t    var p = Promise.resolve();\n\t    timerFunc = function () {\n\t      p.then(nextTickHandler);\n\t      // in problematic UIWebViews, Promise.then doesn't completely break, but\n\t      // it can get stuck in a weird state where callbacks are pushed into the\n\t      // microtask queue but the queue isn't being flushed, until the browser\n\t      // needs to do some other work, e.g. handle a timer. Therefore we can\n\t      // \"force\" the microtask queue to be flushed by adding an empty timer.\n\t      if (isIOS) { setTimeout(noop); }\n\t    };\n\t  } else if (typeof MutationObserver !== 'undefined' && (\n\t    isNative(MutationObserver) ||\n\t    // PhantomJS and iOS 7.x\n\t    MutationObserver.toString() === '[object MutationObserverConstructor]'\n\t  )) {\n\t    // use MutationObserver where native Promise is not available,\n\t    // e.g. PhantomJS IE11, iOS7, Android 4.4\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(String(counter));\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = String(counter);\n\t    };\n\t  } else {\n\t    // fallback to setTimeout\n\t    /* istanbul ignore next */\n\t    timerFunc = function () {\n\t      setTimeout(nextTickHandler, 0);\n\t    };\n\t  }\n\t\n\t  return function queueNextTick (cb, ctx) {\n\t    var func = ctx\n\t      ? function () { cb.call(ctx); }\n\t      : cb;\n\t    callbacks.push(func);\n\t    if (!pending) {\n\t      pending = true;\n\t      timerFunc();\n\t    }\n\t  }\n\t})();\n\t\n\tvar _Set;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && isNative(Set)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = (function () {\n\t    function Set () {\n\t      this.set = Object.create(null);\n\t    }\n\t    Set.prototype.has = function has (key) {\n\t      return this.set[key] !== undefined\n\t    };\n\t    Set.prototype.add = function add (key) {\n\t      this.set[key] = 1;\n\t    };\n\t    Set.prototype.clear = function clear () {\n\t      this.set = Object.create(null);\n\t    };\n\t\n\t    return Set;\n\t  }());\n\t}\n\t\n\t/* not type checking this file because flow doesn't play well with Proxy */\n\t\n\tvar hasProxy;\n\tvar proxyHandlers;\n\tvar initProxy;\n\t\n\tif (false) {\n\t  var allowedGlobals = makeMap(\n\t    'Infinity,undefined,NaN,isFinite,isNaN,' +\n\t    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n\t    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n\t    'require' // for Webpack/Browserify\n\t  );\n\t\n\t  hasProxy =\n\t    typeof Proxy !== 'undefined' &&\n\t    Proxy.toString().match(/native code/);\n\t\n\t  proxyHandlers = {\n\t    has: function has (target, key) {\n\t      var has = key in target;\n\t      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n\t      if (!has && !isAllowed) {\n\t        warn(\n\t          \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n\t          \"referenced during render. Make sure to declare reactive data \" +\n\t          \"properties in the data option.\",\n\t          target\n\t        );\n\t      }\n\t      return has || !isAllowed\n\t    }\n\t  };\n\t\n\t  initProxy = function initProxy (vm) {\n\t    if (hasProxy) {\n\t      vm._renderProxy = new Proxy(vm, proxyHandlers);\n\t    } else {\n\t      vm._renderProxy = vm;\n\t    }\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t */\n\tvar Dep = function Dep () {\n\t  this.id = uid$2++;\n\t  this.subs = [];\n\t};\n\t\n\tDep.prototype.addSub = function addSub (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\tDep.prototype.removeSub = function removeSub (sub) {\n\t  remove$1(this.subs, sub);\n\t};\n\t\n\tDep.prototype.depend = function depend () {\n\t  if (Dep.target) {\n\t    Dep.target.addDep(this);\n\t  }\n\t};\n\t\n\tDep.prototype.notify = function notify () {\n\t  // stablize the subscriber list first\n\t  var subs = this.subs.slice();\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\tvar targetStack = [];\n\t\n\tfunction pushTarget (_target) {\n\t  if (Dep.target) { targetStack.push(Dep.target); }\n\t  Dep.target = _target;\n\t}\n\t\n\tfunction popTarget () {\n\t  Dep.target = targetStack.pop();\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar queue = [];\n\tvar has$1 = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar flushing = false;\n\tvar index = 0;\n\t\n\t/**\n\t * Reset the scheduler's state.\n\t */\n\tfunction resetSchedulerState () {\n\t  queue.length = 0;\n\t  has$1 = {};\n\t  if (false) {\n\t    circular = {};\n\t  }\n\t  waiting = flushing = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\tfunction flushSchedulerQueue () {\n\t  flushing = true;\n\t\n\t  // Sort queue before flush.\n\t  // This ensures that:\n\t  // 1. Components are updated from parent to child. (because parent is always\n\t  //    created before the child)\n\t  // 2. A component's user watchers are run before its render watcher (because\n\t  //    user watchers are created before the render watcher)\n\t  // 3. If a component is destroyed during a parent component's watcher run,\n\t  //    its watchers can be skipped.\n\t  queue.sort(function (a, b) { return a.id - b.id; });\n\t\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (index = 0; index < queue.length; index++) {\n\t    var watcher = queue[index];\n\t    var id = watcher.id;\n\t    has$1[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn(\n\t          'You may have an infinite update loop ' + (\n\t            watcher.user\n\t              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n\t              : \"in a component render function.\"\n\t          ),\n\t          watcher.vm\n\t        );\n\t        break\n\t      }\n\t    }\n\t  }\n\t\n\t  // devtool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t\n\t  resetSchedulerState();\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t */\n\tfunction queueWatcher (watcher) {\n\t  var id = watcher.id;\n\t  if (has$1[id] == null) {\n\t    has$1[id] = true;\n\t    if (!flushing) {\n\t      queue.push(watcher);\n\t    } else {\n\t      // if already flushing, splice the watcher based on its id\n\t      // if already past its id, it will be run next immediately.\n\t      var i = queue.length - 1;\n\t      while (i >= 0 && queue[i].id > watcher.id) {\n\t        i--;\n\t      }\n\t      queue.splice(Math.max(i, index) + 1, 0, watcher);\n\t    }\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushSchedulerQueue);\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t */\n\tvar Watcher = function Watcher (\n\t  vm,\n\t  expOrFn,\n\t  cb,\n\t  options\n\t) {\n\t  if ( options === void 0 ) options = {};\n\t\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  // options\n\t  this.deep = !!options.deep;\n\t  this.user = !!options.user;\n\t  this.lazy = !!options.lazy;\n\t  this.sync = !!options.sync;\n\t  this.expression = expOrFn.toString();\n\t  this.cb = cb;\n\t  this.id = ++uid$1; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  // parse expression for getter\n\t  if (typeof expOrFn === 'function') {\n\t    this.getter = expOrFn;\n\t  } else {\n\t    this.getter = parsePath(expOrFn);\n\t    if (!this.getter) {\n\t      this.getter = function () {};\n\t      (\"production\") !== 'production' && warn(\n\t        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n\t        'Watcher only accepts simple dot-delimited paths. ' +\n\t        'For full control, use a function instead.',\n\t        vm\n\t      );\n\t    }\n\t  }\n\t  this.value = this.lazy\n\t    ? undefined\n\t    : this.get();\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\tWatcher.prototype.get = function get () {\n\t  pushTarget(this);\n\t  var value = this.getter.call(this.vm, this.vm);\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  popTarget();\n\t  this.cleanupDeps();\n\t  return value\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t */\n\tWatcher.prototype.addDep = function addDep (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\tWatcher.prototype.cleanupDeps = function cleanupDeps () {\n\t    var this$1 = this;\n\t\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this$1.deps[i];\n\t    if (!this$1.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this$1);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t */\n\tWatcher.prototype.update = function update () {\n\t  /* istanbul ignore else */\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync) {\n\t    this.run();\n\t  } else {\n\t    queueWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Scheduler job interface.\n\t * Will be called by the scheduler.\n\t */\n\tWatcher.prototype.run = function run () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t      if (\n\t        value !== this.value ||\n\t      // Deep watchers and watchers on Object/Arrays should fire even\n\t      // when the value is the same, because the value may\n\t      // have mutated.\n\t      isObject(value) ||\n\t      this.deep\n\t    ) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      if (this.user) {\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          (\"production\") !== 'production' && warn(\n\t            (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n\t            this.vm\n\t          );\n\t          /* istanbul ignore else */\n\t          if (config.errorHandler) {\n\t            config.errorHandler.call(null, e, this.vm);\n\t          } else {\n\t            throw e\n\t          }\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\tWatcher.prototype.evaluate = function evaluate () {\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\tWatcher.prototype.depend = function depend () {\n\t    var this$1 = this;\n\t\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this$1.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\tWatcher.prototype.teardown = function teardown () {\n\t    var this$1 = this;\n\t\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      remove$1(this.vm._watchers, this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this$1.deps[i].removeSub(this$1);\n\t    }\n\t    this.active = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Recursively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t */\n\tvar seenObjects = new _Set();\n\tfunction traverse (val, seen) {\n\t  var i, keys;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = Array.isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) { traverse(val[i], seen); }\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) { traverse(val[keys[i]], seen); }\n\t    }\n\t  }\n\t}\n\t\n\t/*\n\t * not type checking this file because flow doesn't play well with\n\t * dynamically accessing methods on Array prototype\n\t */\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto);[\n\t  'push',\n\t  'pop',\n\t  'shift',\n\t  'unshift',\n\t  'splice',\n\t  'sort',\n\t  'reverse'\n\t]\n\t.forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator () {\n\t    var arguments$1 = arguments;\n\t\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments$1[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break\n\t      case 'unshift':\n\t        inserted = args;\n\t        break\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break\n\t    }\n\t    if (inserted) { ob.observeArray(inserted); }\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result\n\t  });\n\t});\n\t\n\t/*  */\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However when passing down props,\n\t * we don't want to force conversion because the value may be a nested value\n\t * under a frozen data structure. Converting it would defeat the optimization.\n\t */\n\tvar observerState = {\n\t  shouldConvert: true,\n\t  isSettingProps: false\n\t};\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t */\n\tvar Observer = function Observer (value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  this.vmCount = 0;\n\t  def(value, '__ob__', this);\n\t  if (Array.isArray(value)) {\n\t    var augment = hasProto\n\t      ? protoAugment\n\t      : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t};\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t */\n\tObserver.prototype.walk = function walk (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0; i < keys.length; i++) {\n\t    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t */\n\tObserver.prototype.observeArray = function observeArray (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t */\n\tfunction protoAugment (target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * istanbul ignore next\n\t */\n\tfunction copyAugment (target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t */\n\tfunction observe (value) {\n\t  if (!isObject(value)) {\n\t    return\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (\n\t    observerState.shouldConvert &&\n\t    !config._isServer &&\n\t    (Array.isArray(value) || isPlainObject(value)) &&\n\t    Object.isExtensible(value) &&\n\t    !value._isVue\n\t  ) {\n\t    ob = new Observer(value);\n\t  }\n\t  return ob\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t */\n\tfunction defineReactive$$1 (\n\t  obj,\n\t  key,\n\t  val,\n\t  customSetter\n\t) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter () {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (Array.isArray(value)) {\n\t          dependArray(value);\n\t        }\n\t      }\n\t      return value\n\t    },\n\t    set: function reactiveSetter (newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return\n\t      }\n\t      if (false) {\n\t        customSetter();\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Set a property on an object. Adds the new property and\n\t * triggers change notification if the property doesn't\n\t * already exist.\n\t */\n\tfunction set (obj, key, val) {\n\t  if (Array.isArray(obj)) {\n\t    obj.splice(key, 1, val);\n\t    return val\n\t  }\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (obj._isVue || (ob && ob.vmCount)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n\t      'at runtime - declare it upfront in the data option.'\n\t    );\n\t    return\n\t  }\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return\n\t  }\n\t  defineReactive$$1(ob.value, key, val);\n\t  ob.dep.notify();\n\t  return val\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t */\n\tfunction del (obj, key) {\n\t  var ob = obj.__ob__;\n\t  if (obj._isVue || (ob && ob.vmCount)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Avoid deleting properties on a Vue instance or its root $data ' +\n\t      '- just set it to null.'\n\t    );\n\t    return\n\t  }\n\t  if (!hasOwn(obj, key)) {\n\t    return\n\t  }\n\t  delete obj[key];\n\t  if (!ob) {\n\t    return\n\t  }\n\t  ob.dep.notify();\n\t}\n\t\n\t/**\n\t * Collect dependencies on array elements when the array is touched, since\n\t * we cannot intercept array element access like property getters.\n\t */\n\tfunction dependArray (value) {\n\t  for (var e = void 0, i = 0, l = value.length; i < l; i++) {\n\t    e = value[i];\n\t    e && e.__ob__ && e.__ob__.dep.depend();\n\t    if (Array.isArray(e)) {\n\t      dependArray(e);\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction initState (vm) {\n\t  vm._watchers = [];\n\t  initProps(vm);\n\t  initData(vm);\n\t  initComputed(vm);\n\t  initMethods(vm);\n\t  initWatch(vm);\n\t}\n\t\n\tfunction initProps (vm) {\n\t  var props = vm.$options.props;\n\t  if (props) {\n\t    var propsData = vm.$options.propsData || {};\n\t    var keys = vm.$options._propKeys = Object.keys(props);\n\t    var isRoot = !vm.$parent;\n\t    // root instance props should be converted\n\t    observerState.shouldConvert = isRoot;\n\t    var loop = function ( i ) {\n\t      var key = keys[i];\n\t      /* istanbul ignore else */\n\t      if (false) {\n\t        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n\t          if (vm.$parent && !observerState.isSettingProps) {\n\t            warn(\n\t              \"Avoid mutating a prop directly since the value will be \" +\n\t              \"overwritten whenever the parent component re-renders. \" +\n\t              \"Instead, use a data or computed property based on the prop's \" +\n\t              \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n\t              vm\n\t            );\n\t          }\n\t        });\n\t      } else {\n\t        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n\t      }\n\t    };\n\t\n\t    for (var i = 0; i < keys.length; i++) loop( i );\n\t    observerState.shouldConvert = true;\n\t  }\n\t}\n\t\n\tfunction initData (vm) {\n\t  var data = vm.$options.data;\n\t  data = vm._data = typeof data === 'function'\n\t    ? data.call(vm)\n\t    : data || {};\n\t  if (!isPlainObject(data)) {\n\t    data = {};\n\t    (\"production\") !== 'production' && warn(\n\t      'data functions should return an object.',\n\t      vm\n\t    );\n\t  }\n\t  // proxy data on instance\n\t  var keys = Object.keys(data);\n\t  var props = vm.$options.props;\n\t  var i = keys.length;\n\t  while (i--) {\n\t    if (props && hasOwn(props, keys[i])) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n\t        \"Use prop default value instead.\",\n\t        vm\n\t      );\n\t    } else {\n\t      proxy(vm, keys[i]);\n\t    }\n\t  }\n\t  // observe data\n\t  observe(data);\n\t  data.__ob__ && data.__ob__.vmCount++;\n\t}\n\t\n\tvar computedSharedDefinition = {\n\t  enumerable: true,\n\t  configurable: true,\n\t  get: noop,\n\t  set: noop\n\t};\n\t\n\tfunction initComputed (vm) {\n\t  var computed = vm.$options.computed;\n\t  if (computed) {\n\t    for (var key in computed) {\n\t      var userDef = computed[key];\n\t      if (typeof userDef === 'function') {\n\t        computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n\t        computedSharedDefinition.set = noop;\n\t      } else {\n\t        computedSharedDefinition.get = userDef.get\n\t          ? userDef.cache !== false\n\t            ? makeComputedGetter(userDef.get, vm)\n\t            : bind$1(userDef.get, vm)\n\t          : noop;\n\t        computedSharedDefinition.set = userDef.set\n\t          ? bind$1(userDef.set, vm)\n\t          : noop;\n\t      }\n\t      Object.defineProperty(vm, key, computedSharedDefinition);\n\t    }\n\t  }\n\t}\n\t\n\tfunction makeComputedGetter (getter, owner) {\n\t  var watcher = new Watcher(owner, getter, noop, {\n\t    lazy: true\n\t  });\n\t  return function computedGetter () {\n\t    if (watcher.dirty) {\n\t      watcher.evaluate();\n\t    }\n\t    if (Dep.target) {\n\t      watcher.depend();\n\t    }\n\t    return watcher.value\n\t  }\n\t}\n\t\n\tfunction initMethods (vm) {\n\t  var methods = vm.$options.methods;\n\t  if (methods) {\n\t    for (var key in methods) {\n\t      vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n\t      if (false) {\n\t        warn(\n\t          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n\t          \"Did you reference the function correctly?\",\n\t          vm\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction initWatch (vm) {\n\t  var watch = vm.$options.watch;\n\t  if (watch) {\n\t    for (var key in watch) {\n\t      var handler = watch[key];\n\t      if (Array.isArray(handler)) {\n\t        for (var i = 0; i < handler.length; i++) {\n\t          createWatcher(vm, key, handler[i]);\n\t        }\n\t      } else {\n\t        createWatcher(vm, key, handler);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction createWatcher (vm, key, handler) {\n\t  var options;\n\t  if (isPlainObject(handler)) {\n\t    options = handler;\n\t    handler = handler.handler;\n\t  }\n\t  if (typeof handler === 'string') {\n\t    handler = vm[handler];\n\t  }\n\t  vm.$watch(key, handler, options);\n\t}\n\t\n\tfunction stateMixin (Vue) {\n\t  // flow somehow has problems with directly declared definition object\n\t  // when using Object.defineProperty, so we have to procedurally build up\n\t  // the object here.\n\t  var dataDef = {};\n\t  dataDef.get = function () {\n\t    return this._data\n\t  };\n\t  if (false) {\n\t    dataDef.set = function (newData) {\n\t      warn(\n\t        'Avoid replacing instance root $data. ' +\n\t        'Use nested data properties instead.',\n\t        this\n\t      );\n\t    };\n\t  }\n\t  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\t\n\t  Vue.prototype.$set = set;\n\t  Vue.prototype.$delete = del;\n\t\n\t  Vue.prototype.$watch = function (\n\t    expOrFn,\n\t    cb,\n\t    options\n\t  ) {\n\t    var vm = this;\n\t    options = options || {};\n\t    options.user = true;\n\t    var watcher = new Watcher(vm, expOrFn, cb, options);\n\t    if (options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn () {\n\t      watcher.teardown();\n\t    }\n\t  };\n\t}\n\t\n\tfunction proxy (vm, key) {\n\t  if (!isReserved(key)) {\n\t    Object.defineProperty(vm, key, {\n\t      configurable: true,\n\t      enumerable: true,\n\t      get: function proxyGetter () {\n\t        return vm._data[key]\n\t      },\n\t      set: function proxySetter (val) {\n\t        vm._data[key] = val;\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar VNode = function VNode (\n\t  tag,\n\t  data,\n\t  children,\n\t  text,\n\t  elm,\n\t  ns,\n\t  context,\n\t  componentOptions\n\t) {\n\t  this.tag = tag;\n\t  this.data = data;\n\t  this.children = children;\n\t  this.text = text;\n\t  this.elm = elm;\n\t  this.ns = ns;\n\t  this.context = context;\n\t  this.functionalContext = undefined;\n\t  this.key = data && data.key;\n\t  this.componentOptions = componentOptions;\n\t  this.child = undefined;\n\t  this.parent = undefined;\n\t  this.raw = false;\n\t  this.isStatic = false;\n\t  this.isRootInsert = true;\n\t  this.isComment = false;\n\t  this.isCloned = false;\n\t};\n\t\n\tvar emptyVNode = function () {\n\t  var node = new VNode();\n\t  node.text = '';\n\t  node.isComment = true;\n\t  return node\n\t};\n\t\n\t// optimized shallow clone\n\t// used for static nodes and slot nodes because they may be reused across\n\t// multiple renders, cloning them avoids errors when DOM manipulations rely\n\t// on their elm reference.\n\tfunction cloneVNode (vnode) {\n\t  var cloned = new VNode(\n\t    vnode.tag,\n\t    vnode.data,\n\t    vnode.children,\n\t    vnode.text,\n\t    vnode.elm,\n\t    vnode.ns,\n\t    vnode.context,\n\t    vnode.componentOptions\n\t  );\n\t  cloned.isStatic = vnode.isStatic;\n\t  cloned.key = vnode.key;\n\t  cloned.isCloned = true;\n\t  return cloned\n\t}\n\t\n\tfunction cloneVNodes (vnodes) {\n\t  var res = new Array(vnodes.length);\n\t  for (var i = 0; i < vnodes.length; i++) {\n\t    res[i] = cloneVNode(vnodes[i]);\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tfunction mergeVNodeHook (def, hookKey, hook, key) {\n\t  key = key + hookKey;\n\t  var injectedHash = def.__injected || (def.__injected = {});\n\t  if (!injectedHash[key]) {\n\t    injectedHash[key] = true;\n\t    var oldHook = def[hookKey];\n\t    if (oldHook) {\n\t      def[hookKey] = function () {\n\t        oldHook.apply(this, arguments);\n\t        hook.apply(this, arguments);\n\t      };\n\t    } else {\n\t      def[hookKey] = hook;\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction updateListeners (\n\t  on,\n\t  oldOn,\n\t  add,\n\t  remove$$1,\n\t  vm\n\t) {\n\t  var name, cur, old, fn, event, capture;\n\t  for (name in on) {\n\t    cur = on[name];\n\t    old = oldOn[name];\n\t    if (!cur) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"Invalid handler for event \\\"\" + name + \"\\\": got \" + String(cur),\n\t        vm\n\t      );\n\t    } else if (!old) {\n\t      capture = name.charAt(0) === '!';\n\t      event = capture ? name.slice(1) : name;\n\t      if (Array.isArray(cur)) {\n\t        add(event, (cur.invoker = arrInvoker(cur)), capture);\n\t      } else {\n\t        if (!cur.invoker) {\n\t          fn = cur;\n\t          cur = on[name] = {};\n\t          cur.fn = fn;\n\t          cur.invoker = fnInvoker(cur);\n\t        }\n\t        add(event, cur.invoker, capture);\n\t      }\n\t    } else if (cur !== old) {\n\t      if (Array.isArray(old)) {\n\t        old.length = cur.length;\n\t        for (var i = 0; i < old.length; i++) { old[i] = cur[i]; }\n\t        on[name] = old;\n\t      } else {\n\t        old.fn = cur;\n\t        on[name] = old;\n\t      }\n\t    }\n\t  }\n\t  for (name in oldOn) {\n\t    if (!on[name]) {\n\t      event = name.charAt(0) === '!' ? name.slice(1) : name;\n\t      remove$$1(event, oldOn[name].invoker);\n\t    }\n\t  }\n\t}\n\t\n\tfunction arrInvoker (arr) {\n\t  return function (ev) {\n\t    var arguments$1 = arguments;\n\t\n\t    var single = arguments.length === 1;\n\t    for (var i = 0; i < arr.length; i++) {\n\t      single ? arr[i](ev) : arr[i].apply(null, arguments$1);\n\t    }\n\t  }\n\t}\n\t\n\tfunction fnInvoker (o) {\n\t  return function (ev) {\n\t    var single = arguments.length === 1;\n\t    single ? o.fn(ev) : o.fn.apply(null, arguments);\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction normalizeChildren (\n\t  children,\n\t  ns,\n\t  nestedIndex\n\t) {\n\t  if (isPrimitive(children)) {\n\t    return [createTextVNode(children)]\n\t  }\n\t  if (Array.isArray(children)) {\n\t    var res = [];\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var c = children[i];\n\t      var last = res[res.length - 1];\n\t      //  nested\n\t      if (Array.isArray(c)) {\n\t        res.push.apply(res, normalizeChildren(c, ns, ((nestedIndex || '') + \"_\" + i)));\n\t      } else if (isPrimitive(c)) {\n\t        if (last && last.text) {\n\t          last.text += String(c);\n\t        } else if (c !== '') {\n\t          // convert primitive to vnode\n\t          res.push(createTextVNode(c));\n\t        }\n\t      } else if (c instanceof VNode) {\n\t        if (c.text && last && last.text) {\n\t          last.text += c.text;\n\t        } else {\n\t          // inherit parent namespace\n\t          if (ns) {\n\t            applyNS(c, ns);\n\t          }\n\t          // default key for nested array children (likely generated by v-for)\n\t          if (c.tag && c.key == null && nestedIndex != null) {\n\t            c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n\t          }\n\t          res.push(c);\n\t        }\n\t      }\n\t    }\n\t    return res\n\t  }\n\t}\n\t\n\tfunction createTextVNode (val) {\n\t  return new VNode(undefined, undefined, undefined, String(val))\n\t}\n\t\n\tfunction applyNS (vnode, ns) {\n\t  if (vnode.tag && !vnode.ns) {\n\t    vnode.ns = ns;\n\t    if (vnode.children) {\n\t      for (var i = 0, l = vnode.children.length; i < l; i++) {\n\t        applyNS(vnode.children[i], ns);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction getFirstComponentChild (children) {\n\t  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n\t}\n\t\n\t/*  */\n\t\n\tvar activeInstance = null;\n\t\n\tfunction initLifecycle (vm) {\n\t  var options = vm.$options;\n\t\n\t  // locate first non-abstract parent\n\t  var parent = options.parent;\n\t  if (parent && !options.abstract) {\n\t    while (parent.$options.abstract && parent.$parent) {\n\t      parent = parent.$parent;\n\t    }\n\t    parent.$children.push(vm);\n\t  }\n\t\n\t  vm.$parent = parent;\n\t  vm.$root = parent ? parent.$root : vm;\n\t\n\t  vm.$children = [];\n\t  vm.$refs = {};\n\t\n\t  vm._watcher = null;\n\t  vm._inactive = false;\n\t  vm._isMounted = false;\n\t  vm._isDestroyed = false;\n\t  vm._isBeingDestroyed = false;\n\t}\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  Vue.prototype._mount = function (\n\t    el,\n\t    hydrating\n\t  ) {\n\t    var vm = this;\n\t    vm.$el = el;\n\t    if (!vm.$options.render) {\n\t      vm.$options.render = emptyVNode;\n\t      if (false) {\n\t        /* istanbul ignore if */\n\t        if (vm.$options.template) {\n\t          warn(\n\t            'You are using the runtime-only build of Vue where the template ' +\n\t            'option is not available. Either pre-compile the templates into ' +\n\t            'render functions, or use the compiler-included build.',\n\t            vm\n\t          );\n\t        } else {\n\t          warn(\n\t            'Failed to mount component: template or render function not defined.',\n\t            vm\n\t          );\n\t        }\n\t      }\n\t    }\n\t    callHook(vm, 'beforeMount');\n\t    vm._watcher = new Watcher(vm, function () {\n\t      vm._update(vm._render(), hydrating);\n\t    }, noop);\n\t    hydrating = false;\n\t    // manually mounted instance, call mounted on self\n\t    // mounted is called for render-created child components in its inserted hook\n\t    if (vm.$vnode == null) {\n\t      vm._isMounted = true;\n\t      callHook(vm, 'mounted');\n\t    }\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype._update = function (vnode, hydrating) {\n\t    var vm = this;\n\t    if (vm._isMounted) {\n\t      callHook(vm, 'beforeUpdate');\n\t    }\n\t    var prevEl = vm.$el;\n\t    var prevActiveInstance = activeInstance;\n\t    activeInstance = vm;\n\t    var prevVnode = vm._vnode;\n\t    vm._vnode = vnode;\n\t    if (!prevVnode) {\n\t      // Vue.prototype.__patch__ is injected in entry points\n\t      // based on the rendering backend used.\n\t      vm.$el = vm.__patch__(vm.$el, vnode, hydrating);\n\t    } else {\n\t      vm.$el = vm.__patch__(prevVnode, vnode);\n\t    }\n\t    activeInstance = prevActiveInstance;\n\t    // update __vue__ reference\n\t    if (prevEl) {\n\t      prevEl.__vue__ = null;\n\t    }\n\t    if (vm.$el) {\n\t      vm.$el.__vue__ = vm;\n\t    }\n\t    // if parent is an HOC, update its $el as well\n\t    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n\t      vm.$parent.$el = vm.$el;\n\t    }\n\t    if (vm._isMounted) {\n\t      callHook(vm, 'updated');\n\t    }\n\t  };\n\t\n\t  Vue.prototype._updateFromParent = function (\n\t    propsData,\n\t    listeners,\n\t    parentVnode,\n\t    renderChildren\n\t  ) {\n\t    var vm = this;\n\t    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n\t    vm.$options._parentVnode = parentVnode;\n\t    vm.$options._renderChildren = renderChildren;\n\t    // update props\n\t    if (propsData && vm.$options.props) {\n\t      observerState.shouldConvert = false;\n\t      if (false) {\n\t        observerState.isSettingProps = true;\n\t      }\n\t      var propKeys = vm.$options._propKeys || [];\n\t      for (var i = 0; i < propKeys.length; i++) {\n\t        var key = propKeys[i];\n\t        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n\t      }\n\t      observerState.shouldConvert = true;\n\t      if (false) {\n\t        observerState.isSettingProps = false;\n\t      }\n\t    }\n\t    // update listeners\n\t    if (listeners) {\n\t      var oldListeners = vm.$options._parentListeners;\n\t      vm.$options._parentListeners = listeners;\n\t      vm._updateListeners(listeners, oldListeners);\n\t    }\n\t    // resolve slots + force update if has children\n\t    if (hasChildren) {\n\t      vm.$slots = resolveSlots(renderChildren, vm._renderContext);\n\t      vm.$forceUpdate();\n\t    }\n\t  };\n\t\n\t  Vue.prototype.$forceUpdate = function () {\n\t    var vm = this;\n\t    if (vm._watcher) {\n\t      vm._watcher.update();\n\t    }\n\t  };\n\t\n\t  Vue.prototype.$destroy = function () {\n\t    var vm = this;\n\t    if (vm._isBeingDestroyed) {\n\t      return\n\t    }\n\t    callHook(vm, 'beforeDestroy');\n\t    vm._isBeingDestroyed = true;\n\t    // remove self from parent\n\t    var parent = vm.$parent;\n\t    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n\t      remove$1(parent.$children, vm);\n\t    }\n\t    // teardown watchers\n\t    if (vm._watcher) {\n\t      vm._watcher.teardown();\n\t    }\n\t    var i = vm._watchers.length;\n\t    while (i--) {\n\t      vm._watchers[i].teardown();\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (vm._data.__ob__) {\n\t      vm._data.__ob__.vmCount--;\n\t    }\n\t    // call the last hook...\n\t    vm._isDestroyed = true;\n\t    callHook(vm, 'destroyed');\n\t    // turn off all instance listeners.\n\t    vm.$off();\n\t    // remove __vue__ reference\n\t    if (vm.$el) {\n\t      vm.$el.__vue__ = null;\n\t    }\n\t    // invoke destroy hooks on current rendered tree\n\t    vm.__patch__(vm._vnode, null);\n\t  };\n\t}\n\t\n\tfunction callHook (vm, hook) {\n\t  var handlers = vm.$options[hook];\n\t  if (handlers) {\n\t    for (var i = 0, j = handlers.length; i < j; i++) {\n\t      handlers[i].call(vm);\n\t    }\n\t  }\n\t  vm.$emit('hook:' + hook);\n\t}\n\t\n\t/*  */\n\t\n\tvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\n\tvar hooksToMerge = Object.keys(hooks);\n\t\n\tfunction createComponent (\n\t  Ctor,\n\t  data,\n\t  context,\n\t  children,\n\t  tag\n\t) {\n\t  if (!Ctor) {\n\t    return\n\t  }\n\t\n\t  if (isObject(Ctor)) {\n\t    Ctor = Vue$2.extend(Ctor);\n\t  }\n\t\n\t  if (typeof Ctor !== 'function') {\n\t    if (false) {\n\t      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n\t    }\n\t    return\n\t  }\n\t\n\t  // async component\n\t  if (!Ctor.cid) {\n\t    if (Ctor.resolved) {\n\t      Ctor = Ctor.resolved;\n\t    } else {\n\t      Ctor = resolveAsyncComponent(Ctor, function () {\n\t        // it's ok to queue this on every render because\n\t        // $forceUpdate is buffered by the scheduler.\n\t        context.$forceUpdate();\n\t      });\n\t      if (!Ctor) {\n\t        // return nothing if this is indeed an async component\n\t        // wait for the callback to trigger parent update.\n\t        return\n\t      }\n\t    }\n\t  }\n\t\n\t  data = data || {};\n\t\n\t  // extract props\n\t  var propsData = extractProps(data, Ctor);\n\t\n\t  // functional component\n\t  if (Ctor.options.functional) {\n\t    return createFunctionalComponent(Ctor, propsData, data, context, children)\n\t  }\n\t\n\t  // extract listeners, since these needs to be treated as\n\t  // child component listeners instead of DOM listeners\n\t  var listeners = data.on;\n\t  // replace with listeners with .native modifier\n\t  data.on = data.nativeOn;\n\t\n\t  if (Ctor.options.abstract) {\n\t    // abstract components do not keep anything\n\t    // other than props & listeners\n\t    data = {};\n\t  }\n\t\n\t  // merge component management hooks onto the placeholder node\n\t  mergeHooks(data);\n\t\n\t  // return a placeholder vnode\n\t  var name = Ctor.options.name || tag;\n\t  var vnode = new VNode(\n\t    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n\t    data, undefined, undefined, undefined, undefined, context,\n\t    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n\t  );\n\t  return vnode\n\t}\n\t\n\tfunction createFunctionalComponent (\n\t  Ctor,\n\t  propsData,\n\t  data,\n\t  context,\n\t  children\n\t) {\n\t  var props = {};\n\t  var propOptions = Ctor.options.props;\n\t  if (propOptions) {\n\t    for (var key in propOptions) {\n\t      props[key] = validateProp(key, propOptions, propsData);\n\t    }\n\t  }\n\t  var vnode = Ctor.options.render.call(\n\t    null,\n\t    // ensure the createElement function in functional components\n\t    // gets a unique context - this is necessary for correct named slot check\n\t    bind$1(createElement, { _self: Object.create(context) }),\n\t    {\n\t      props: props,\n\t      data: data,\n\t      parent: context,\n\t      children: normalizeChildren(children),\n\t      slots: function () { return resolveSlots(children, context); }\n\t    }\n\t  );\n\t  if (vnode instanceof VNode) {\n\t    vnode.functionalContext = context;\n\t    if (data.slot) {\n\t      (vnode.data || (vnode.data = {})).slot = data.slot;\n\t    }\n\t  }\n\t  return vnode\n\t}\n\t\n\tfunction createComponentInstanceForVnode (\n\t  vnode, // we know it's MountedComponentVNode but flow doesn't\n\t  parent // activeInstance in lifecycle state\n\t) {\n\t  var vnodeComponentOptions = vnode.componentOptions;\n\t  var options = {\n\t    _isComponent: true,\n\t    parent: parent,\n\t    propsData: vnodeComponentOptions.propsData,\n\t    _componentTag: vnodeComponentOptions.tag,\n\t    _parentVnode: vnode,\n\t    _parentListeners: vnodeComponentOptions.listeners,\n\t    _renderChildren: vnodeComponentOptions.children\n\t  };\n\t  // check inline-template render functions\n\t  var inlineTemplate = vnode.data.inlineTemplate;\n\t  if (inlineTemplate) {\n\t    options.render = inlineTemplate.render;\n\t    options.staticRenderFns = inlineTemplate.staticRenderFns;\n\t  }\n\t  return new vnodeComponentOptions.Ctor(options)\n\t}\n\t\n\tfunction init (vnode, hydrating) {\n\t  if (!vnode.child || vnode.child._isDestroyed) {\n\t    var child = vnode.child = createComponentInstanceForVnode(vnode, activeInstance);\n\t    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n\t  }\n\t}\n\t\n\tfunction prepatch (\n\t  oldVnode,\n\t  vnode\n\t) {\n\t  var options = vnode.componentOptions;\n\t  var child = vnode.child = oldVnode.child;\n\t  child._updateFromParent(\n\t    options.propsData, // updated props\n\t    options.listeners, // updated listeners\n\t    vnode, // new parent vnode\n\t    options.children // new children\n\t  );\n\t}\n\t\n\tfunction insert (vnode) {\n\t  if (!vnode.child._isMounted) {\n\t    vnode.child._isMounted = true;\n\t    callHook(vnode.child, 'mounted');\n\t  }\n\t  if (vnode.data.keepAlive) {\n\t    vnode.child._inactive = false;\n\t    callHook(vnode.child, 'activated');\n\t  }\n\t}\n\t\n\tfunction destroy$1 (vnode) {\n\t  if (!vnode.child._isDestroyed) {\n\t    if (!vnode.data.keepAlive) {\n\t      vnode.child.$destroy();\n\t    } else {\n\t      vnode.child._inactive = true;\n\t      callHook(vnode.child, 'deactivated');\n\t    }\n\t  }\n\t}\n\t\n\tfunction resolveAsyncComponent (\n\t  factory,\n\t  cb\n\t) {\n\t  if (factory.requested) {\n\t    // pool callbacks\n\t    factory.pendingCallbacks.push(cb);\n\t  } else {\n\t    factory.requested = true;\n\t    var cbs = factory.pendingCallbacks = [cb];\n\t    var sync = true;\n\t\n\t    var resolve = function (res) {\n\t      if (isObject(res)) {\n\t        res = Vue$2.extend(res);\n\t      }\n\t      // cache resolved\n\t      factory.resolved = res;\n\t      // invoke callbacks only if this is not a synchronous resolve\n\t      // (async resolves are shimmed as synchronous during SSR)\n\t      if (!sync) {\n\t        for (var i = 0, l = cbs.length; i < l; i++) {\n\t          cbs[i](res);\n\t        }\n\t      }\n\t    };\n\t\n\t    var reject = function (reason) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"Failed to resolve async component: \" + (String(factory)) +\n\t        (reason ? (\"\\nReason: \" + reason) : '')\n\t      );\n\t    };\n\t\n\t    var res = factory(resolve, reject);\n\t\n\t    // handle promise\n\t    if (res && typeof res.then === 'function' && !factory.resolved) {\n\t      res.then(resolve, reject);\n\t    }\n\t\n\t    sync = false;\n\t    // return in case resolved synchronously\n\t    return factory.resolved\n\t  }\n\t}\n\t\n\tfunction extractProps (data, Ctor) {\n\t  // we are only extrating raw values here.\n\t  // validation and default values are handled in the child\n\t  // component itself.\n\t  var propOptions = Ctor.options.props;\n\t  if (!propOptions) {\n\t    return\n\t  }\n\t  var res = {};\n\t  var attrs = data.attrs;\n\t  var props = data.props;\n\t  var domProps = data.domProps;\n\t  if (attrs || props || domProps) {\n\t    for (var key in propOptions) {\n\t      var altKey = hyphenate(key);\n\t      checkProp(res, props, key, altKey, true) ||\n\t      checkProp(res, attrs, key, altKey) ||\n\t      checkProp(res, domProps, key, altKey);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\tfunction checkProp (\n\t  res,\n\t  hash,\n\t  key,\n\t  altKey,\n\t  preserve\n\t) {\n\t  if (hash) {\n\t    if (hasOwn(hash, key)) {\n\t      res[key] = hash[key];\n\t      if (!preserve) {\n\t        delete hash[key];\n\t      }\n\t      return true\n\t    } else if (hasOwn(hash, altKey)) {\n\t      res[key] = hash[altKey];\n\t      if (!preserve) {\n\t        delete hash[altKey];\n\t      }\n\t      return true\n\t    }\n\t  }\n\t  return false\n\t}\n\t\n\tfunction mergeHooks (data) {\n\t  if (!data.hook) {\n\t    data.hook = {};\n\t  }\n\t  for (var i = 0; i < hooksToMerge.length; i++) {\n\t    var key = hooksToMerge[i];\n\t    var fromParent = data.hook[key];\n\t    var ours = hooks[key];\n\t    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n\t  }\n\t}\n\t\n\tfunction mergeHook$1 (a, b) {\n\t  // since all hooks have at most two args, use fixed args\n\t  // to avoid having to use fn.apply().\n\t  return function (_, __) {\n\t    a(_, __);\n\t    b(_, __);\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t// wrapper function for providing a more flexible interface\n\t// without getting yelled at by flow\n\tfunction createElement (\n\t  tag,\n\t  data,\n\t  children\n\t) {\n\t  if (data && (Array.isArray(data) || typeof data !== 'object')) {\n\t    children = data;\n\t    data = undefined;\n\t  }\n\t  // make sure to use real instance instead of proxy as context\n\t  return _createElement(this._self, tag, data, children)\n\t}\n\t\n\tfunction _createElement (\n\t  context,\n\t  tag,\n\t  data,\n\t  children\n\t) {\n\t  if (data && data.__ob__) {\n\t    (\"production\") !== 'production' && warn(\n\t      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n\t      'Always create fresh vnode data objects in each render!',\n\t      context\n\t    );\n\t    return\n\t  }\n\t  if (!tag) {\n\t    // in case of component :is set to falsy value\n\t    return emptyVNode()\n\t  }\n\t  if (typeof tag === 'string') {\n\t    var Ctor;\n\t    var ns = config.getTagNamespace(tag);\n\t    if (config.isReservedTag(tag)) {\n\t      // platform built-in elements\n\t      return new VNode(\n\t        tag, data, normalizeChildren(children, ns),\n\t        undefined, undefined, ns, context\n\t      )\n\t    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n\t      // component\n\t      return createComponent(Ctor, data, context, children, tag)\n\t    } else {\n\t      // unknown or unlisted namespaced elements\n\t      // check at runtime because it may get assigned a namespace when its\n\t      // parent normalizes children\n\t      return new VNode(\n\t        tag, data, normalizeChildren(children, ns),\n\t        undefined, undefined, ns, context\n\t      )\n\t    }\n\t  } else {\n\t    // direct component options / constructor\n\t    return createComponent(tag, data, context, children)\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction initRender (vm) {\n\t  vm.$vnode = null; // the placeholder node in parent tree\n\t  vm._vnode = null; // the root of the child tree\n\t  vm._staticTrees = null;\n\t  vm._renderContext = vm.$options._parentVnode && vm.$options._parentVnode.context;\n\t  vm.$slots = resolveSlots(vm.$options._renderChildren, vm._renderContext);\n\t  // bind the public createElement fn to this instance\n\t  // so that we get proper render context inside it.\n\t  vm.$createElement = bind$1(createElement, vm);\n\t  if (vm.$options.el) {\n\t    vm.$mount(vm.$options.el);\n\t  }\n\t}\n\t\n\tfunction renderMixin (Vue) {\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  Vue.prototype._render = function () {\n\t    var vm = this;\n\t    var ref = vm.$options;\n\t    var render = ref.render;\n\t    var staticRenderFns = ref.staticRenderFns;\n\t    var _parentVnode = ref._parentVnode;\n\t\n\t    if (vm._isMounted) {\n\t      // clone slot nodes on re-renders\n\t      for (var key in vm.$slots) {\n\t        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n\t      }\n\t    }\n\t\n\t    if (staticRenderFns && !vm._staticTrees) {\n\t      vm._staticTrees = [];\n\t    }\n\t    // set parent vnode. this allows render functions to have access\n\t    // to the data on the placeholder node.\n\t    vm.$vnode = _parentVnode;\n\t    // render self\n\t    var vnode;\n\t    try {\n\t      vnode = render.call(vm._renderProxy, vm.$createElement);\n\t    } catch (e) {\n\t      if (false) {\n\t        warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n\t      }\n\t      /* istanbul ignore else */\n\t      if (config.errorHandler) {\n\t        config.errorHandler.call(null, e, vm);\n\t      } else {\n\t        if (config._isServer) {\n\t          throw e\n\t        } else {\n\t          setTimeout(function () { throw e }, 0);\n\t        }\n\t      }\n\t      // return previous vnode to prevent render error causing blank component\n\t      vnode = vm._vnode;\n\t    }\n\t    // return empty vnode in case the render function errored out\n\t    if (!(vnode instanceof VNode)) {\n\t      if (false) {\n\t        warn(\n\t          'Multiple root nodes returned from render function. Render function ' +\n\t          'should return a single root node.',\n\t          vm\n\t        );\n\t      }\n\t      vnode = emptyVNode();\n\t    }\n\t    // set parent\n\t    vnode.parent = _parentVnode;\n\t    return vnode\n\t  };\n\t\n\t  // shorthands used in render functions\n\t  Vue.prototype._h = createElement;\n\t  // toString for mustaches\n\t  Vue.prototype._s = _toString;\n\t  // number conversion\n\t  Vue.prototype._n = toNumber;\n\t  // empty vnode\n\t  Vue.prototype._e = emptyVNode;\n\t  // loose equal\n\t  Vue.prototype._q = looseEqual;\n\t  // loose indexOf\n\t  Vue.prototype._i = looseIndexOf;\n\t\n\t  // render static tree by index\n\t  Vue.prototype._m = function renderStatic (\n\t    index,\n\t    isInFor\n\t  ) {\n\t    var tree = this._staticTrees[index];\n\t    // if has already-rendered static tree and not inside v-for,\n\t    // we can reuse the same tree by doing a shallow clone.\n\t    if (tree && !isInFor) {\n\t      return Array.isArray(tree)\n\t        ? cloneVNodes(tree)\n\t        : cloneVNode(tree)\n\t    }\n\t    // otherwise, render a fresh tree.\n\t    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n\t    if (Array.isArray(tree)) {\n\t      for (var i = 0; i < tree.length; i++) {\n\t        if (typeof tree[i] !== 'string') {\n\t          tree[i].isStatic = true;\n\t          tree[i].key = \"__static__\" + index + \"_\" + i;\n\t        }\n\t      }\n\t    } else {\n\t      tree.isStatic = true;\n\t      tree.key = \"__static__\" + index;\n\t    }\n\t    return tree\n\t  };\n\t\n\t  // filter resolution helper\n\t  var identity = function (_) { return _; };\n\t  Vue.prototype._f = function resolveFilter (id) {\n\t    return resolveAsset(this.$options, 'filters', id, true) || identity\n\t  };\n\t\n\t  // render v-for\n\t  Vue.prototype._l = function renderList (\n\t    val,\n\t    render\n\t  ) {\n\t    var ret, i, l, keys, key;\n\t    if (Array.isArray(val)) {\n\t      ret = new Array(val.length);\n\t      for (i = 0, l = val.length; i < l; i++) {\n\t        ret[i] = render(val[i], i);\n\t      }\n\t    } else if (typeof val === 'number') {\n\t      ret = new Array(val);\n\t      for (i = 0; i < val; i++) {\n\t        ret[i] = render(i + 1, i);\n\t      }\n\t    } else if (isObject(val)) {\n\t      keys = Object.keys(val);\n\t      ret = new Array(keys.length);\n\t      for (i = 0, l = keys.length; i < l; i++) {\n\t        key = keys[i];\n\t        ret[i] = render(val[key], key, i);\n\t      }\n\t    }\n\t    return ret\n\t  };\n\t\n\t  // renderSlot\n\t  Vue.prototype._t = function (\n\t    name,\n\t    fallback\n\t  ) {\n\t    var slotNodes = this.$slots[name];\n\t    // warn duplicate slot usage\n\t    if (slotNodes && (\"production\") !== 'production') {\n\t      slotNodes._rendered && warn(\n\t        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n\t        \"- this will likely cause render errors.\",\n\t        this\n\t      );\n\t      slotNodes._rendered = true;\n\t    }\n\t    return slotNodes || fallback\n\t  };\n\t\n\t  // apply v-bind object\n\t  Vue.prototype._b = function bindProps (\n\t    data,\n\t    value,\n\t    asProp\n\t  ) {\n\t    if (value) {\n\t      if (!isObject(value)) {\n\t        (\"production\") !== 'production' && warn(\n\t          'v-bind without argument expects an Object or Array value',\n\t          this\n\t        );\n\t      } else {\n\t        if (Array.isArray(value)) {\n\t          value = toObject(value);\n\t        }\n\t        for (var key in value) {\n\t          if (key === 'class' || key === 'style') {\n\t            data[key] = value[key];\n\t          } else {\n\t            var hash = asProp || config.mustUseProp(key)\n\t              ? data.domProps || (data.domProps = {})\n\t              : data.attrs || (data.attrs = {});\n\t            hash[key] = value[key];\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return data\n\t  };\n\t\n\t  // expose v-on keyCodes\n\t  Vue.prototype._k = function getKeyCodes (key) {\n\t    return config.keyCodes[key]\n\t  };\n\t}\n\t\n\tfunction resolveSlots (\n\t  renderChildren,\n\t  context\n\t) {\n\t  var slots = {};\n\t  if (!renderChildren) {\n\t    return slots\n\t  }\n\t  var children = normalizeChildren(renderChildren) || [];\n\t  var defaultSlot = [];\n\t  var name, child;\n\t  for (var i = 0, l = children.length; i < l; i++) {\n\t    child = children[i];\n\t    // named slots should only be respected if the vnode was rendered in the\n\t    // same context.\n\t    if ((child.context === context || child.functionalContext === context) &&\n\t        child.data && (name = child.data.slot)) {\n\t      var slot = (slots[name] || (slots[name] = []));\n\t      if (child.tag === 'template') {\n\t        slot.push.apply(slot, child.children);\n\t      } else {\n\t        slot.push(child);\n\t      }\n\t    } else {\n\t      defaultSlot.push(child);\n\t    }\n\t  }\n\t  // ignore single whitespace\n\t  if (defaultSlot.length && !(\n\t    defaultSlot.length === 1 &&\n\t    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n\t  )) {\n\t    slots.default = defaultSlot;\n\t  }\n\t  return slots\n\t}\n\t\n\t/*  */\n\t\n\tfunction initEvents (vm) {\n\t  vm._events = Object.create(null);\n\t  // init parent attached events\n\t  var listeners = vm.$options._parentListeners;\n\t  var on = bind$1(vm.$on, vm);\n\t  var off = bind$1(vm.$off, vm);\n\t  vm._updateListeners = function (listeners, oldListeners) {\n\t    updateListeners(listeners, oldListeners || {}, on, off, vm);\n\t  };\n\t  if (listeners) {\n\t    vm._updateListeners(listeners);\n\t  }\n\t}\n\t\n\tfunction eventsMixin (Vue) {\n\t  Vue.prototype.$on = function (event, fn) {\n\t    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var vm = this;\n\t    function on () {\n\t      vm.$off(event, on);\n\t      fn.apply(vm, arguments);\n\t    }\n\t    on.fn = fn;\n\t    vm.$on(event, on);\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var vm = this;\n\t    // all\n\t    if (!arguments.length) {\n\t      vm._events = Object.create(null);\n\t      return vm\n\t    }\n\t    // specific event\n\t    var cbs = vm._events[event];\n\t    if (!cbs) {\n\t      return vm\n\t    }\n\t    if (arguments.length === 1) {\n\t      vm._events[event] = null;\n\t      return vm\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        cbs.splice(i, 1);\n\t        break\n\t      }\n\t    }\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var vm = this;\n\t    var cbs = vm._events[event];\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        cbs[i].apply(vm, args);\n\t      }\n\t    }\n\t    return vm\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  Vue.prototype._init = function (options) {\n\t    var vm = this;\n\t    // a uid\n\t    vm._uid = uid++;\n\t    // a flag to avoid this being observed\n\t    vm._isVue = true;\n\t    // merge options\n\t    if (options && options._isComponent) {\n\t      // optimize internal component instantiation\n\t      // since dynamic options merging is pretty slow, and none of the\n\t      // internal component options needs special treatment.\n\t      initInternalComponent(vm, options);\n\t    } else {\n\t      vm.$options = mergeOptions(\n\t        resolveConstructorOptions(vm),\n\t        options || {},\n\t        vm\n\t      );\n\t    }\n\t    /* istanbul ignore else */\n\t    if (false) {\n\t      initProxy(vm);\n\t    } else {\n\t      vm._renderProxy = vm;\n\t    }\n\t    // expose real self\n\t    vm._self = vm;\n\t    initLifecycle(vm);\n\t    initEvents(vm);\n\t    callHook(vm, 'beforeCreate');\n\t    initState(vm);\n\t    callHook(vm, 'created');\n\t    initRender(vm);\n\t  };\n\t\n\t  function initInternalComponent (vm, options) {\n\t    var opts = vm.$options = Object.create(resolveConstructorOptions(vm));\n\t    // doing this because it's faster than dynamic enumeration.\n\t    opts.parent = options.parent;\n\t    opts.propsData = options.propsData;\n\t    opts._parentVnode = options._parentVnode;\n\t    opts._parentListeners = options._parentListeners;\n\t    opts._renderChildren = options._renderChildren;\n\t    opts._componentTag = options._componentTag;\n\t    if (options.render) {\n\t      opts.render = options.render;\n\t      opts.staticRenderFns = options.staticRenderFns;\n\t    }\n\t  }\n\t\n\t  function resolveConstructorOptions (vm) {\n\t    var Ctor = vm.constructor;\n\t    var options = Ctor.options;\n\t    if (Ctor.super) {\n\t      var superOptions = Ctor.super.options;\n\t      var cachedSuperOptions = Ctor.superOptions;\n\t      if (superOptions !== cachedSuperOptions) {\n\t        // super option changed\n\t        Ctor.superOptions = superOptions;\n\t        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n\t        if (options.name) {\n\t          options.components[options.name] = Ctor;\n\t        }\n\t      }\n\t    }\n\t    return options\n\t  }\n\t}\n\t\n\tfunction Vue$2 (options) {\n\t  if (false) {\n\t    warn('Vue is a constructor and should be called with the `new` keyword');\n\t  }\n\t  this._init(options);\n\t}\n\t\n\tinitMixin(Vue$2);\n\tstateMixin(Vue$2);\n\teventsMixin(Vue$2);\n\tlifecycleMixin(Vue$2);\n\trenderMixin(Vue$2);\n\t\n\tvar warn = noop;\n\tvar formatComponentName;\n\t\n\tif (false) {\n\t  var hasConsole = typeof console !== 'undefined';\n\t\n\t  warn = function (msg, vm) {\n\t    if (hasConsole && (!config.silent)) {\n\t      console.error(\"[Vue warn]: \" + msg + \" \" + (\n\t        vm ? formatLocation(formatComponentName(vm)) : ''\n\t      ));\n\t    }\n\t  };\n\t\n\t  formatComponentName = function (vm) {\n\t    if (vm.$root === vm) {\n\t      return 'root instance'\n\t    }\n\t    var name = vm._isVue\n\t      ? vm.$options.name || vm.$options._componentTag\n\t      : vm.name;\n\t    return (\n\t      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n\t      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n\t    )\n\t  };\n\t\n\t  var formatLocation = function (str) {\n\t    if (str === 'anonymous component') {\n\t      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n\t    }\n\t    return (\"\\n(found in \" + str + \")\")\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t */\n\tvar strats = config.optionMergeStrategies;\n\t\n\t/**\n\t * Options with restrictions\n\t */\n\tif (false) {\n\t  strats.el = strats.propsData = function (parent, child, vm, key) {\n\t    if (!vm) {\n\t      warn(\n\t        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n\t        'creation with the `new` keyword.'\n\t      );\n\t    }\n\t    return defaultStrat(parent, child)\n\t  };\n\t}\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\tfunction mergeData (to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\tstrats.data = function (\n\t  parentVal,\n\t  childVal,\n\t  vm\n\t) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn(\n\t        'The \"data\" option should be a function ' +\n\t        'that returns a per-instance value in component ' +\n\t        'definitions.',\n\t        vm\n\t      );\n\t      return parentVal\n\t    }\n\t    if (!parentVal) {\n\t      return childVal\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn () {\n\t      return mergeData(\n\t        childVal.call(this),\n\t        parentVal.call(this)\n\t      )\n\t    }\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn () {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function'\n\t        ? childVal.call(vm)\n\t        : childVal;\n\t      var defaultData = typeof parentVal === 'function'\n\t        ? parentVal.call(vm)\n\t        : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData)\n\t      } else {\n\t        return defaultData\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\tfunction mergeHook (\n\t  parentVal,\n\t  childVal\n\t) {\n\t  return childVal\n\t    ? parentVal\n\t      ? parentVal.concat(childVal)\n\t      : Array.isArray(childVal)\n\t        ? childVal\n\t        : [childVal]\n\t    : parentVal\n\t}\n\t\n\tconfig._lifecycleHooks.forEach(function (hook) {\n\t  strats[hook] = mergeHook;\n\t});\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\tfunction mergeAssets (parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal\n\t    ? extend(res, childVal)\n\t    : res\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Watchers.\n\t *\n\t * Watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\tstrats.watch = function (parentVal, childVal) {\n\t  /* istanbul ignore if */\n\t  if (!childVal) { return parentVal }\n\t  if (!parentVal) { return childVal }\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !Array.isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent\n\t      ? parent.concat(child)\n\t      : [child];\n\t  }\n\t  return ret\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\tstrats.props =\n\tstrats.methods =\n\tstrats.computed = function (parentVal, childVal) {\n\t  if (!childVal) { return parentVal }\n\t  if (!parentVal) { return childVal }\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\tvar defaultStrat = function (parentVal, childVal) {\n\t  return childVal === undefined\n\t    ? parentVal\n\t    : childVal\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t */\n\tfunction normalizeComponents (options) {\n\t  if (options.components) {\n\t    var components = options.components;\n\t    var def;\n\t    for (var key in components) {\n\t      var lower = key.toLowerCase();\n\t      if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n\t        (\"production\") !== 'production' && warn(\n\t          'Do not use built-in or reserved HTML elements as component ' +\n\t          'id: ' + key\n\t        );\n\t        continue\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue$2.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t */\n\tfunction normalizeProps (options) {\n\t  var props = options.props;\n\t  if (!props) { return }\n\t  var res = {};\n\t  var i, val, name;\n\t  if (Array.isArray(props)) {\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        name = camelize(val);\n\t        res[name] = { type: null };\n\t      } else if (false) {\n\t        warn('props must be strings when using array syntax.');\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    for (var key in props) {\n\t      val = props[key];\n\t      name = camelize(key);\n\t      res[name] = isPlainObject(val)\n\t        ? val\n\t        : { type: val };\n\t    }\n\t  }\n\t  options.props = res;\n\t}\n\t\n\t/**\n\t * Normalize raw function directives into object format.\n\t */\n\tfunction normalizeDirectives (options) {\n\t  var dirs = options.directives;\n\t  if (dirs) {\n\t    for (var key in dirs) {\n\t      var def = dirs[key];\n\t      if (typeof def === 'function') {\n\t        dirs[key] = { bind: def, update: def };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t */\n\tfunction mergeOptions (\n\t  parent,\n\t  child,\n\t  vm\n\t) {\n\t  normalizeComponents(child);\n\t  normalizeProps(child);\n\t  normalizeDirectives(child);\n\t  var extendsFrom = child.extends;\n\t  if (extendsFrom) {\n\t    parent = typeof extendsFrom === 'function'\n\t      ? mergeOptions(parent, extendsFrom.options, vm)\n\t      : mergeOptions(parent, extendsFrom, vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      if (mixin.prototype instanceof Vue$2) {\n\t        mixin = mixin.options;\n\t      }\n\t      parent = mergeOptions(parent, mixin, vm);\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField (key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t */\n\tfunction resolveAsset (\n\t  options,\n\t  type,\n\t  id,\n\t  warnMissing\n\t) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return\n\t  }\n\t  var assets = options[type];\n\t  var res = assets[id] ||\n\t    // camelCase ID\n\t    assets[camelize(id)] ||\n\t    // Pascal Case ID\n\t    assets[capitalize(camelize(id))];\n\t  if (false) {\n\t    warn(\n\t      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n\t      options\n\t    );\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tfunction validateProp (\n\t  key,\n\t  propOptions,\n\t  propsData,\n\t  vm\n\t) {\n\t  var prop = propOptions[key];\n\t  var absent = !hasOwn(propsData, key);\n\t  var value = propsData[key];\n\t  // handle boolean props\n\t  if (isBooleanType(prop.type)) {\n\t    if (absent && !hasOwn(prop, 'default')) {\n\t      value = false;\n\t    } else if (value === '' || value === hyphenate(key)) {\n\t      value = true;\n\t    }\n\t  }\n\t  // check default value\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop, key);\n\t    // since the default value is a fresh copy,\n\t    // make sure to observe it.\n\t    var prevShouldConvert = observerState.shouldConvert;\n\t    observerState.shouldConvert = true;\n\t    observe(value);\n\t    observerState.shouldConvert = prevShouldConvert;\n\t  }\n\t  if (false) {\n\t    assertProp(prop, key, value, vm, absent);\n\t  }\n\t  return value\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t */\n\tfunction getPropDefaultValue (vm, prop, name) {\n\t  // no default, return undefined\n\t  if (!hasOwn(prop, 'default')) {\n\t    return undefined\n\t  }\n\t  var def = prop.default;\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Invalid default value for prop \"' + name + '\": ' +\n\t      'Props with type Object/Array must use a factory function ' +\n\t      'to return the default value.',\n\t      vm\n\t    );\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && prop.type !== Function\n\t    ? def.call(vm)\n\t    : def\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t */\n\tfunction assertProp (\n\t  prop,\n\t  name,\n\t  value,\n\t  vm,\n\t  absent\n\t) {\n\t  if (prop.required && absent) {\n\t    warn(\n\t      'Missing required prop: \"' + name + '\"',\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  if (value == null && !prop.required) {\n\t    return\n\t  }\n\t  var type = prop.type;\n\t  var valid = !type || type === true;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!Array.isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    warn(\n\t      'Invalid prop: type check failed for prop \"' + name + '\".' +\n\t      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n\t      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  var validator = prop.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      warn(\n\t        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n\t        vm\n\t      );\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t */\n\tfunction assertType (value, type) {\n\t  var valid;\n\t  var expectedType = getType(type);\n\t  if (expectedType === 'String') {\n\t    valid = typeof value === (expectedType = 'string');\n\t  } else if (expectedType === 'Number') {\n\t    valid = typeof value === (expectedType = 'number');\n\t  } else if (expectedType === 'Boolean') {\n\t    valid = typeof value === (expectedType = 'boolean');\n\t  } else if (expectedType === 'Function') {\n\t    valid = typeof value === (expectedType = 'function');\n\t  } else if (expectedType === 'Object') {\n\t    valid = isPlainObject(value);\n\t  } else if (expectedType === 'Array') {\n\t    valid = Array.isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  }\n\t}\n\t\n\t/**\n\t * Use function string name to check built-in types,\n\t * because a simple equality check will fail when running\n\t * across different vms / iframes.\n\t */\n\tfunction getType (fn) {\n\t  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n\t  return match && match[1]\n\t}\n\t\n\tfunction isBooleanType (fn) {\n\t  if (!Array.isArray(fn)) {\n\t    return getType(fn) === 'Boolean'\n\t  }\n\t  for (var i = 0, len = fn.length; i < len; i++) {\n\t    if (getType(fn[i]) === 'Boolean') {\n\t      return true\n\t    }\n\t  }\n\t  /* istanbul ignore next */\n\t  return false\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive$$1,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\tmakeMap: makeMap,\n\t\tisBuiltInTag: isBuiltInTag,\n\t\tremove: remove$1,\n\t\thasOwn: hasOwn,\n\t\tisPrimitive: isPrimitive,\n\t\tcached: cached,\n\t\tcamelize: camelize,\n\t\tcapitalize: capitalize,\n\t\thyphenate: hyphenate,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\ttoObject: toObject,\n\t\tnoop: noop,\n\t\tno: no,\n\t\tgenStaticKeys: genStaticKeys,\n\t\tlooseEqual: looseEqual,\n\t\tlooseIndexOf: looseIndexOf,\n\t\tisReserved: isReserved,\n\t\tdef: def,\n\t\tparsePath: parsePath,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tUA: UA,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisEdge: isEdge,\n\t\tisAndroid: isAndroid,\n\t\tisIOS: isIOS,\n\t\tdevtools: devtools,\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tget warn () { return warn; },\n\t\tget formatComponentName () { return formatComponentName; },\n\t\tvalidateProp: validateProp\n\t});\n\t\n\t/*  */\n\t\n\tfunction initUse (Vue) {\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initMixin$1 (Vue) {\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initExtend (Vue) {\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   */\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn(\n\t          'Invalid component name: \"' + name + '\". Component names ' +\n\t          'can only contain alphanumeric characaters and the hyphen.'\n\t        );\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = function VueComponent (options) {\n\t      this._init(options);\n\t    };\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(\n\t      Super.options,\n\t      extendOptions\n\t    );\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // keep a reference to the super options at extension time.\n\t    // later at instantiation we can check if Super's options have\n\t    // been updated.\n\t    Sub.superOptions = Super.options;\n\t    Sub.extendOptions = extendOptions;\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initAssetRegisters (Vue) {\n\t  /**\n\t   * Create asset registration methods.\n\t   */\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (\n\t      id,\n\t      definition\n\t    ) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id]\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && config.isReservedTag(id)) {\n\t            warn(\n\t              'Do not use built-in or reserved HTML elements as component ' +\n\t              'id: ' + id\n\t            );\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = definition.name || id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        if (type === 'directive' && typeof definition === 'function') {\n\t          definition = { bind: definition, update: definition };\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\tvar KeepAlive = {\n\t  name: 'keep-alive',\n\t  abstract: true,\n\t  created: function created () {\n\t    this.cache = Object.create(null);\n\t  },\n\t  render: function render () {\n\t    var vnode = getFirstComponentChild(this.$slots.default);\n\t    if (vnode && vnode.componentOptions) {\n\t      var opts = vnode.componentOptions;\n\t      var key = vnode.key == null\n\t        // same constructor may get registered as different local components\n\t        // so cid alone is not enough (#3269)\n\t        ? opts.Ctor.cid + '::' + opts.tag\n\t        : vnode.key;\n\t      if (this.cache[key]) {\n\t        vnode.child = this.cache[key].child;\n\t      } else {\n\t        this.cache[key] = vnode;\n\t      }\n\t      vnode.data.keepAlive = true;\n\t    }\n\t    return vnode\n\t  },\n\t  destroyed: function destroyed () {\n\t    var this$1 = this;\n\t\n\t    for (var key in this.cache) {\n\t      var vnode = this$1.cache[key];\n\t      callHook(vnode.child, 'deactivated');\n\t      vnode.child.$destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar builtInComponents = {\n\t  KeepAlive: KeepAlive\n\t};\n\t\n\t/*  */\n\t\n\tfunction initGlobalAPI (Vue) {\n\t  // config\n\t  var configDef = {};\n\t  configDef.get = function () { return config; };\n\t  if (false) {\n\t    configDef.set = function () {\n\t      warn(\n\t        'Do not replace the Vue.config object, set individual fields instead.'\n\t      );\n\t    };\n\t  }\n\t  Object.defineProperty(Vue, 'config', configDef);\n\t  Vue.util = util;\n\t  Vue.set = set;\n\t  Vue.delete = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  Vue.options = Object.create(null);\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue.options[type + 's'] = Object.create(null);\n\t  });\n\t\n\t  extend(Vue.options.components, builtInComponents);\n\t\n\t  initUse(Vue);\n\t  initMixin$1(Vue);\n\t  initExtend(Vue);\n\t  initAssetRegisters(Vue);\n\t}\n\t\n\tinitGlobalAPI(Vue$2);\n\t\n\tObject.defineProperty(Vue$2.prototype, '$isServer', {\n\t  get: function () { return config._isServer; }\n\t});\n\t\n\tVue$2.version = '2.0.3';\n\t\n\t/*  */\n\t\n\t// attributes that should be using props for binding\n\tvar mustUseProp = makeMap('value,selected,checked,muted');\n\t\n\tvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\t\n\tvar isBooleanAttr = makeMap(\n\t  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n\t  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n\t  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n\t  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n\t  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n\t  'truespeed,typemustmatch,visible'\n\t);\n\t\n\tvar isAttr = makeMap(\n\t  'accept,accept-charset,accesskey,action,align,alt,async,autocomplete,' +\n\t  'autofocus,autoplay,autosave,bgcolor,border,buffered,challenge,charset,' +\n\t  'checked,cite,class,code,codebase,color,cols,colspan,content,http-equiv,' +\n\t  'name,contenteditable,contextmenu,controls,coords,data,datetime,default,' +\n\t  'defer,dir,dirname,disabled,download,draggable,dropzone,enctype,method,for,' +\n\t  'form,formaction,headers,<th>,height,hidden,high,href,hreflang,http-equiv,' +\n\t  'icon,id,ismap,itemprop,keytype,kind,label,lang,language,list,loop,low,' +\n\t  'manifest,max,maxlength,media,method,GET,POST,min,multiple,email,file,' +\n\t  'muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,' +\n\t  'preload,radiogroup,readonly,rel,required,reversed,rows,rowspan,sandbox,' +\n\t  'scope,scoped,seamless,selected,shape,size,type,text,password,sizes,span,' +\n\t  'spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,' +\n\t  'target,title,type,usemap,value,width,wrap'\n\t);\n\t\n\t\n\t\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\t\n\tvar isXlink = function (name) {\n\t  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n\t};\n\t\n\tvar getXlinkProp = function (name) {\n\t  return isXlink(name) ? name.slice(6, name.length) : ''\n\t};\n\t\n\tvar isFalsyAttrValue = function (val) {\n\t  return val == null || val === false\n\t};\n\t\n\t/*  */\n\t\n\tfunction genClassForVnode (vnode) {\n\t  var data = vnode.data;\n\t  var parentNode = vnode;\n\t  var childNode = vnode;\n\t  while (childNode.child) {\n\t    childNode = childNode.child._vnode;\n\t    if (childNode.data) {\n\t      data = mergeClassData(childNode.data, data);\n\t    }\n\t  }\n\t  while ((parentNode = parentNode.parent)) {\n\t    if (parentNode.data) {\n\t      data = mergeClassData(data, parentNode.data);\n\t    }\n\t  }\n\t  return genClassFromData(data)\n\t}\n\t\n\tfunction mergeClassData (child, parent) {\n\t  return {\n\t    staticClass: concat(child.staticClass, parent.staticClass),\n\t    class: child.class\n\t      ? [child.class, parent.class]\n\t      : parent.class\n\t  }\n\t}\n\t\n\tfunction genClassFromData (data) {\n\t  var dynamicClass = data.class;\n\t  var staticClass = data.staticClass;\n\t  if (staticClass || dynamicClass) {\n\t    return concat(staticClass, stringifyClass(dynamicClass))\n\t  }\n\t  /* istanbul ignore next */\n\t  return ''\n\t}\n\t\n\tfunction concat (a, b) {\n\t  return a ? b ? (a + ' ' + b) : a : (b || '')\n\t}\n\t\n\tfunction stringifyClass (value) {\n\t  var res = '';\n\t  if (!value) {\n\t    return res\n\t  }\n\t  if (typeof value === 'string') {\n\t    return value\n\t  }\n\t  if (Array.isArray(value)) {\n\t    var stringified;\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        if ((stringified = stringifyClass(value[i]))) {\n\t          res += stringified + ' ';\n\t        }\n\t      }\n\t    }\n\t    return res.slice(0, -1)\n\t  }\n\t  if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) { res += key + ' '; }\n\t    }\n\t    return res.slice(0, -1)\n\t  }\n\t  /* istanbul ignore next */\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tvar namespaceMap = {\n\t  svg: 'http://www.w3.org/2000/svg',\n\t  math: 'http://www.w3.org/1998/Math/MathML'\n\t};\n\t\n\tvar isHTMLTag = makeMap(\n\t  'html,body,base,head,link,meta,style,title,' +\n\t  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n\t  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n\t  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n\t  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n\t  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n\t  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n\t  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n\t  'output,progress,select,textarea,' +\n\t  'details,dialog,menu,menuitem,summary,' +\n\t  'content,element,shadow,template'\n\t);\n\t\n\tvar isUnaryTag = makeMap(\n\t  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n\t  'link,meta,param,source,track,wbr',\n\t  true\n\t);\n\t\n\t// Elements that you can, intentionally, leave open\n\t// (and which close themselves)\n\tvar canBeLeftOpenTag = makeMap(\n\t  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source',\n\t  true\n\t);\n\t\n\t// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n\t// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n\tvar isNonPhrasingTag = makeMap(\n\t  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n\t  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n\t  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n\t  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n\t  'title,tr,track',\n\t  true\n\t);\n\t\n\t// this map is intentionally selective, only covering SVG elements that may\n\t// contain child elements.\n\tvar isSVG = makeMap(\n\t  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font,' +\n\t  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n\t  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n\t  true\n\t);\n\t\n\t\n\t\n\tvar isReservedTag = function (tag) {\n\t  return isHTMLTag(tag) || isSVG(tag)\n\t};\n\t\n\tfunction getTagNamespace (tag) {\n\t  if (isSVG(tag)) {\n\t    return 'svg'\n\t  }\n\t  // basic support for MathML\n\t  // note it doesn't support other MathML elements being component roots\n\t  if (tag === 'math') {\n\t    return 'math'\n\t  }\n\t}\n\t\n\tvar unknownElementCache = Object.create(null);\n\tfunction isUnknownElement (tag) {\n\t  /* istanbul ignore if */\n\t  if (!inBrowser) {\n\t    return true\n\t  }\n\t  if (isReservedTag(tag)) {\n\t    return false\n\t  }\n\t  tag = tag.toLowerCase();\n\t  /* istanbul ignore if */\n\t  if (unknownElementCache[tag] != null) {\n\t    return unknownElementCache[tag]\n\t  }\n\t  var el = document.createElement(tag);\n\t  if (tag.indexOf('-') > -1) {\n\t    // http://stackoverflow.com/a/28210364/1070244\n\t    return (unknownElementCache[tag] = (\n\t      el.constructor === window.HTMLUnknownElement ||\n\t      el.constructor === window.HTMLElement\n\t    ))\n\t  } else {\n\t    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t */\n\tfunction query (el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn(\n\t        'Cannot find element: ' + selector\n\t      );\n\t      return document.createElement('div')\n\t    }\n\t  }\n\t  return el\n\t}\n\t\n\t/*  */\n\t\n\tfunction createElement$1 (tagName, vnode) {\n\t  var elm = document.createElement(tagName);\n\t  if (tagName !== 'select') {\n\t    return elm\n\t  }\n\t  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n\t    elm.setAttribute('multiple', 'multiple');\n\t  }\n\t  return elm\n\t}\n\t\n\tfunction createElementNS (namespace, tagName) {\n\t  return document.createElementNS(namespaceMap[namespace], tagName)\n\t}\n\t\n\tfunction createTextNode (text) {\n\t  return document.createTextNode(text)\n\t}\n\t\n\tfunction createComment (text) {\n\t  return document.createComment(text)\n\t}\n\t\n\tfunction insertBefore (parentNode, newNode, referenceNode) {\n\t  parentNode.insertBefore(newNode, referenceNode);\n\t}\n\t\n\tfunction removeChild (node, child) {\n\t  node.removeChild(child);\n\t}\n\t\n\tfunction appendChild (node, child) {\n\t  node.appendChild(child);\n\t}\n\t\n\tfunction parentNode (node) {\n\t  return node.parentNode\n\t}\n\t\n\tfunction nextSibling (node) {\n\t  return node.nextSibling\n\t}\n\t\n\tfunction tagName (node) {\n\t  return node.tagName\n\t}\n\t\n\tfunction setTextContent (node, text) {\n\t  node.textContent = text;\n\t}\n\t\n\tfunction childNodes (node) {\n\t  return node.childNodes\n\t}\n\t\n\tfunction setAttribute (node, key, val) {\n\t  node.setAttribute(key, val);\n\t}\n\t\n\t\n\tvar nodeOps = Object.freeze({\n\t\tcreateElement: createElement$1,\n\t\tcreateElementNS: createElementNS,\n\t\tcreateTextNode: createTextNode,\n\t\tcreateComment: createComment,\n\t\tinsertBefore: insertBefore,\n\t\tremoveChild: removeChild,\n\t\tappendChild: appendChild,\n\t\tparentNode: parentNode,\n\t\tnextSibling: nextSibling,\n\t\ttagName: tagName,\n\t\tsetTextContent: setTextContent,\n\t\tchildNodes: childNodes,\n\t\tsetAttribute: setAttribute\n\t});\n\t\n\t/*  */\n\t\n\tvar ref = {\n\t  create: function create (_, vnode) {\n\t    registerRef(vnode);\n\t  },\n\t  update: function update (oldVnode, vnode) {\n\t    if (oldVnode.data.ref !== vnode.data.ref) {\n\t      registerRef(oldVnode, true);\n\t      registerRef(vnode);\n\t    }\n\t  },\n\t  destroy: function destroy (vnode) {\n\t    registerRef(vnode, true);\n\t  }\n\t};\n\t\n\tfunction registerRef (vnode, isRemoval) {\n\t  var key = vnode.data.ref;\n\t  if (!key) { return }\n\t\n\t  var vm = vnode.context;\n\t  var ref = vnode.child || vnode.elm;\n\t  var refs = vm.$refs;\n\t  if (isRemoval) {\n\t    if (Array.isArray(refs[key])) {\n\t      remove$1(refs[key], ref);\n\t    } else if (refs[key] === ref) {\n\t      refs[key] = undefined;\n\t    }\n\t  } else {\n\t    if (vnode.data.refInFor) {\n\t      if (Array.isArray(refs[key])) {\n\t        refs[key].push(ref);\n\t      } else {\n\t        refs[key] = [ref];\n\t      }\n\t    } else {\n\t      refs[key] = ref;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Virtual DOM patching algorithm based on Snabbdom by\n\t * Simon Friis Vindum (@paldepind)\n\t * Licensed under the MIT License\n\t * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n\t *\n\t * modified by Evan You (@yyx990803)\n\t *\n\t\n\t/*\n\t * Not type-checking this because this file is perf-critical and the cost\n\t * of making flow understand it is not worth it.\n\t */\n\t\n\tvar emptyNode = new VNode('', {}, []);\n\t\n\tvar hooks$1 = ['create', 'update', 'remove', 'destroy'];\n\t\n\tfunction isUndef (s) {\n\t  return s == null\n\t}\n\t\n\tfunction isDef (s) {\n\t  return s != null\n\t}\n\t\n\tfunction sameVnode (vnode1, vnode2) {\n\t  return (\n\t    vnode1.key === vnode2.key &&\n\t    vnode1.tag === vnode2.tag &&\n\t    vnode1.isComment === vnode2.isComment &&\n\t    !vnode1.data === !vnode2.data\n\t  )\n\t}\n\t\n\tfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n\t  var i, key;\n\t  var map = {};\n\t  for (i = beginIdx; i <= endIdx; ++i) {\n\t    key = children[i].key;\n\t    if (isDef(key)) { map[key] = i; }\n\t  }\n\t  return map\n\t}\n\t\n\tfunction createPatchFunction (backend) {\n\t  var i, j;\n\t  var cbs = {};\n\t\n\t  var modules = backend.modules;\n\t  var nodeOps = backend.nodeOps;\n\t\n\t  for (i = 0; i < hooks$1.length; ++i) {\n\t    cbs[hooks$1[i]] = [];\n\t    for (j = 0; j < modules.length; ++j) {\n\t      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n\t    }\n\t  }\n\t\n\t  function emptyNodeAt (elm) {\n\t    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n\t  }\n\t\n\t  function createRmCb (childElm, listeners) {\n\t    function remove$$1 () {\n\t      if (--remove$$1.listeners === 0) {\n\t        removeElement(childElm);\n\t      }\n\t    }\n\t    remove$$1.listeners = listeners;\n\t    return remove$$1\n\t  }\n\t\n\t  function removeElement (el) {\n\t    var parent = nodeOps.parentNode(el);\n\t    nodeOps.removeChild(parent, el);\n\t  }\n\t\n\t  function createElm (vnode, insertedVnodeQueue, nested) {\n\t    var i;\n\t    var data = vnode.data;\n\t    vnode.isRootInsert = !nested;\n\t    if (isDef(data)) {\n\t      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode); }\n\t      // after calling the init hook, if the vnode is a child component\n\t      // it should've created a child instance and mounted it. the child\n\t      // component also has set the placeholder vnode's elm.\n\t      // in that case we can just return the element and be done.\n\t      if (isDef(i = vnode.child)) {\n\t        initComponent(vnode, insertedVnodeQueue);\n\t        return vnode.elm\n\t      }\n\t    }\n\t    var children = vnode.children;\n\t    var tag = vnode.tag;\n\t    if (isDef(tag)) {\n\t      if (false) {\n\t        if (\n\t          !vnode.ns &&\n\t          !(config.ignoredElements && config.ignoredElements.indexOf(tag) > -1) &&\n\t          config.isUnknownElement(tag)\n\t        ) {\n\t          warn(\n\t            'Unknown custom element: <' + tag + '> - did you ' +\n\t            'register the component correctly? For recursive components, ' +\n\t            'make sure to provide the \"name\" option.',\n\t            vnode.context\n\t          );\n\t        }\n\t      }\n\t      vnode.elm = vnode.ns\n\t        ? nodeOps.createElementNS(vnode.ns, tag)\n\t        : nodeOps.createElement(tag, vnode);\n\t      setScope(vnode);\n\t      createChildren(vnode, children, insertedVnodeQueue);\n\t      if (isDef(data)) {\n\t        invokeCreateHooks(vnode, insertedVnodeQueue);\n\t      }\n\t    } else if (vnode.isComment) {\n\t      vnode.elm = nodeOps.createComment(vnode.text);\n\t    } else {\n\t      vnode.elm = nodeOps.createTextNode(vnode.text);\n\t    }\n\t    return vnode.elm\n\t  }\n\t\n\t  function createChildren (vnode, children, insertedVnodeQueue) {\n\t    if (Array.isArray(children)) {\n\t      for (var i = 0; i < children.length; ++i) {\n\t        nodeOps.appendChild(vnode.elm, createElm(children[i], insertedVnodeQueue, true));\n\t      }\n\t    } else if (isPrimitive(vnode.text)) {\n\t      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n\t    }\n\t  }\n\t\n\t  function isPatchable (vnode) {\n\t    while (vnode.child) {\n\t      vnode = vnode.child._vnode;\n\t    }\n\t    return isDef(vnode.tag)\n\t  }\n\t\n\t  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n\t    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n\t      cbs.create[i$1](emptyNode, vnode);\n\t    }\n\t    i = vnode.data.hook; // Reuse variable\n\t    if (isDef(i)) {\n\t      if (i.create) { i.create(emptyNode, vnode); }\n\t      if (i.insert) { insertedVnodeQueue.push(vnode); }\n\t    }\n\t  }\n\t\n\t  function initComponent (vnode, insertedVnodeQueue) {\n\t    if (vnode.data.pendingInsert) {\n\t      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n\t    }\n\t    vnode.elm = vnode.child.$el;\n\t    if (isPatchable(vnode)) {\n\t      invokeCreateHooks(vnode, insertedVnodeQueue);\n\t      setScope(vnode);\n\t    } else {\n\t      // empty component root.\n\t      // skip all element-related modules except for ref (#3455)\n\t      registerRef(vnode);\n\t      // make sure to invoke the insert hook\n\t      insertedVnodeQueue.push(vnode);\n\t    }\n\t  }\n\t\n\t  // set scope id attribute for scoped CSS.\n\t  // this is implemented as a special case to avoid the overhead\n\t  // of going through the normal attribute patching process.\n\t  function setScope (vnode) {\n\t    var i;\n\t    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n\t      nodeOps.setAttribute(vnode.elm, i, '');\n\t    }\n\t    if (isDef(i = activeInstance) &&\n\t        i !== vnode.context &&\n\t        isDef(i = i.$options._scopeId)) {\n\t      nodeOps.setAttribute(vnode.elm, i, '');\n\t    }\n\t  }\n\t\n\t  function addVnodes (parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n\t    for (; startIdx <= endIdx; ++startIdx) {\n\t      nodeOps.insertBefore(parentElm, createElm(vnodes[startIdx], insertedVnodeQueue), before);\n\t    }\n\t  }\n\t\n\t  function invokeDestroyHook (vnode) {\n\t    var i, j;\n\t    var data = vnode.data;\n\t    if (isDef(data)) {\n\t      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n\t      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n\t    }\n\t    if (isDef(i = vnode.children)) {\n\t      for (j = 0; j < vnode.children.length; ++j) {\n\t        invokeDestroyHook(vnode.children[j]);\n\t      }\n\t    }\n\t  }\n\t\n\t  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n\t    for (; startIdx <= endIdx; ++startIdx) {\n\t      var ch = vnodes[startIdx];\n\t      if (isDef(ch)) {\n\t        if (isDef(ch.tag)) {\n\t          removeAndInvokeRemoveHook(ch);\n\t          invokeDestroyHook(ch);\n\t        } else { // Text node\n\t          nodeOps.removeChild(parentElm, ch.elm);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function removeAndInvokeRemoveHook (vnode, rm) {\n\t    if (rm || isDef(vnode.data)) {\n\t      var listeners = cbs.remove.length + 1;\n\t      if (!rm) {\n\t        // directly removing\n\t        rm = createRmCb(vnode.elm, listeners);\n\t      } else {\n\t        // we have a recursively passed down rm callback\n\t        // increase the listeners count\n\t        rm.listeners += listeners;\n\t      }\n\t      // recursively invoke hooks on child component root node\n\t      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n\t        removeAndInvokeRemoveHook(i, rm);\n\t      }\n\t      for (i = 0; i < cbs.remove.length; ++i) {\n\t        cbs.remove[i](vnode, rm);\n\t      }\n\t      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n\t        i(vnode, rm);\n\t      } else {\n\t        rm();\n\t      }\n\t    } else {\n\t      removeElement(vnode.elm);\n\t    }\n\t  }\n\t\n\t  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n\t    var oldStartIdx = 0;\n\t    var newStartIdx = 0;\n\t    var oldEndIdx = oldCh.length - 1;\n\t    var oldStartVnode = oldCh[0];\n\t    var oldEndVnode = oldCh[oldEndIdx];\n\t    var newEndIdx = newCh.length - 1;\n\t    var newStartVnode = newCh[0];\n\t    var newEndVnode = newCh[newEndIdx];\n\t    var oldKeyToIdx, idxInOld, elmToMove, before;\n\t\n\t    // removeOnly is a special flag used only by <transition-group>\n\t    // to ensure removed elements stay in correct relative positions\n\t    // during leaving transitions\n\t    var canMove = !removeOnly;\n\t\n\t    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n\t      if (isUndef(oldStartVnode)) {\n\t        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n\t      } else if (isUndef(oldEndVnode)) {\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n\t        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n\t        oldStartVnode = oldCh[++oldStartIdx];\n\t        newStartVnode = newCh[++newStartIdx];\n\t      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n\t        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t        newEndVnode = newCh[--newEndIdx];\n\t      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n\t        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n\t        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n\t        oldStartVnode = oldCh[++oldStartIdx];\n\t        newEndVnode = newCh[--newEndIdx];\n\t      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n\t        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n\t        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t        newStartVnode = newCh[++newStartIdx];\n\t      } else {\n\t        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n\t        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n\t        if (isUndef(idxInOld)) { // New element\n\t          nodeOps.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n\t          newStartVnode = newCh[++newStartIdx];\n\t        } else {\n\t          elmToMove = oldCh[idxInOld];\n\t          /* istanbul ignore if */\n\t          if (false) {\n\t            warn(\n\t              'It seems there are duplicate keys that is causing an update error. ' +\n\t              'Make sure each v-for item has a unique key.'\n\t            );\n\t          }\n\t          if (elmToMove.tag !== newStartVnode.tag) {\n\t            // same key but different element. treat as new element\n\t            nodeOps.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n\t            newStartVnode = newCh[++newStartIdx];\n\t          } else {\n\t            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n\t            oldCh[idxInOld] = undefined;\n\t            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n\t            newStartVnode = newCh[++newStartIdx];\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (oldStartIdx > oldEndIdx) {\n\t      before = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n\t      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n\t    } else if (newStartIdx > newEndIdx) {\n\t      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n\t    }\n\t  }\n\t\n\t  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n\t    if (oldVnode === vnode) {\n\t      return\n\t    }\n\t    // reuse element for static trees.\n\t    // note we only do this if the vnode is cloned -\n\t    // if the new node is not cloned it means the render functions have been\n\t    // reset by the hot-reload-api and we need to do a proper re-render.\n\t    if (vnode.isStatic &&\n\t        oldVnode.isStatic &&\n\t        vnode.key === oldVnode.key &&\n\t        vnode.isCloned) {\n\t      vnode.elm = oldVnode.elm;\n\t      return\n\t    }\n\t    var i;\n\t    var data = vnode.data;\n\t    var hasData = isDef(data);\n\t    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n\t      i(oldVnode, vnode);\n\t    }\n\t    var elm = vnode.elm = oldVnode.elm;\n\t    var oldCh = oldVnode.children;\n\t    var ch = vnode.children;\n\t    if (hasData && isPatchable(vnode)) {\n\t      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n\t      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n\t    }\n\t    if (isUndef(vnode.text)) {\n\t      if (isDef(oldCh) && isDef(ch)) {\n\t        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n\t      } else if (isDef(ch)) {\n\t        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n\t        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n\t      } else if (isDef(oldCh)) {\n\t        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n\t      } else if (isDef(oldVnode.text)) {\n\t        nodeOps.setTextContent(elm, '');\n\t      }\n\t    } else if (oldVnode.text !== vnode.text) {\n\t      nodeOps.setTextContent(elm, vnode.text);\n\t    }\n\t    if (hasData) {\n\t      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n\t    }\n\t  }\n\t\n\t  function invokeInsertHook (vnode, queue, initial) {\n\t    // delay insert hooks for component root nodes, invoke them after the\n\t    // element is really inserted\n\t    if (initial && vnode.parent) {\n\t      vnode.parent.data.pendingInsert = queue;\n\t    } else {\n\t      for (var i = 0; i < queue.length; ++i) {\n\t        queue[i].data.hook.insert(queue[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var bailed = false;\n\t  function hydrate (elm, vnode, insertedVnodeQueue) {\n\t    if (false) {\n\t      if (!assertNodeMatch(elm, vnode)) {\n\t        return false\n\t      }\n\t    }\n\t    vnode.elm = elm;\n\t    var tag = vnode.tag;\n\t    var data = vnode.data;\n\t    var children = vnode.children;\n\t    if (isDef(data)) {\n\t      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n\t      if (isDef(i = vnode.child)) {\n\t        // child component. it should have hydrated its own tree.\n\t        initComponent(vnode, insertedVnodeQueue);\n\t        return true\n\t      }\n\t    }\n\t    if (isDef(tag)) {\n\t      if (isDef(children)) {\n\t        var childNodes = nodeOps.childNodes(elm);\n\t        // empty element, allow client to pick up and populate children\n\t        if (!childNodes.length) {\n\t          createChildren(vnode, children, insertedVnodeQueue);\n\t        } else {\n\t          var childrenMatch = true;\n\t          if (childNodes.length !== children.length) {\n\t            childrenMatch = false;\n\t          } else {\n\t            for (var i$1 = 0; i$1 < children.length; i$1++) {\n\t              if (!hydrate(childNodes[i$1], children[i$1], insertedVnodeQueue)) {\n\t                childrenMatch = false;\n\t                break\n\t              }\n\t            }\n\t          }\n\t          if (!childrenMatch) {\n\t            if (false) {\n\t              bailed = true;\n\t              console.warn('Parent: ', elm);\n\t              console.warn('Mismatching childNodes vs. VNodes: ', childNodes, children);\n\t            }\n\t            return false\n\t          }\n\t        }\n\t      }\n\t      if (isDef(data)) {\n\t        invokeCreateHooks(vnode, insertedVnodeQueue);\n\t      }\n\t    }\n\t    return true\n\t  }\n\t\n\t  function assertNodeMatch (node, vnode) {\n\t    if (vnode.tag) {\n\t      return (\n\t        vnode.tag.indexOf('vue-component') === 0 ||\n\t        vnode.tag === nodeOps.tagName(node).toLowerCase()\n\t      )\n\t    } else {\n\t      return _toString(vnode.text) === node.data\n\t    }\n\t  }\n\t\n\t  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n\t    if (!vnode) {\n\t      if (oldVnode) { invokeDestroyHook(oldVnode); }\n\t      return\n\t    }\n\t\n\t    var elm, parent;\n\t    var isInitialPatch = false;\n\t    var insertedVnodeQueue = [];\n\t\n\t    if (!oldVnode) {\n\t      // empty mount, create new root element\n\t      isInitialPatch = true;\n\t      createElm(vnode, insertedVnodeQueue);\n\t    } else {\n\t      var isRealElement = isDef(oldVnode.nodeType);\n\t      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n\t        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n\t      } else {\n\t        if (isRealElement) {\n\t          // mounting to a real element\n\t          // check if this is server-rendered content and if we can perform\n\t          // a successful hydration.\n\t          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n\t            oldVnode.removeAttribute('server-rendered');\n\t            hydrating = true;\n\t          }\n\t          if (hydrating) {\n\t            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n\t              invokeInsertHook(vnode, insertedVnodeQueue, true);\n\t              return oldVnode\n\t            } else if (false) {\n\t              warn(\n\t                'The client-side rendered virtual DOM tree is not matching ' +\n\t                'server-rendered content. This is likely caused by incorrect ' +\n\t                'HTML markup, for example nesting block-level elements inside ' +\n\t                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n\t                'full client-side render.'\n\t              );\n\t            }\n\t          }\n\t          // either not server-rendered, or hydration failed.\n\t          // create an empty node and replace it\n\t          oldVnode = emptyNodeAt(oldVnode);\n\t        }\n\t        elm = oldVnode.elm;\n\t        parent = nodeOps.parentNode(elm);\n\t\n\t        createElm(vnode, insertedVnodeQueue);\n\t\n\t        // component root element replaced.\n\t        // update parent placeholder node element.\n\t        if (vnode.parent) {\n\t          vnode.parent.elm = vnode.elm;\n\t          if (isPatchable(vnode)) {\n\t            for (var i = 0; i < cbs.create.length; ++i) {\n\t              cbs.create[i](emptyNode, vnode.parent);\n\t            }\n\t          }\n\t        }\n\t\n\t        if (parent !== null) {\n\t          nodeOps.insertBefore(parent, vnode.elm, nodeOps.nextSibling(elm));\n\t          removeVnodes(parent, [oldVnode], 0, 0);\n\t        } else if (isDef(oldVnode.tag)) {\n\t          invokeDestroyHook(oldVnode);\n\t        }\n\t      }\n\t    }\n\t\n\t    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n\t    return vnode.elm\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar directives = {\n\t  create: updateDirectives,\n\t  update: updateDirectives,\n\t  destroy: function unbindDirectives (vnode) {\n\t    updateDirectives(vnode, emptyNode);\n\t  }\n\t};\n\t\n\tfunction updateDirectives (\n\t  oldVnode,\n\t  vnode\n\t) {\n\t  if (!oldVnode.data.directives && !vnode.data.directives) {\n\t    return\n\t  }\n\t  var isCreate = oldVnode === emptyNode;\n\t  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n\t  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\t\n\t  var dirsWithInsert = [];\n\t  var dirsWithPostpatch = [];\n\t\n\t  var key, oldDir, dir;\n\t  for (key in newDirs) {\n\t    oldDir = oldDirs[key];\n\t    dir = newDirs[key];\n\t    if (!oldDir) {\n\t      // new directive, bind\n\t      callHook$1(dir, 'bind', vnode, oldVnode);\n\t      if (dir.def && dir.def.inserted) {\n\t        dirsWithInsert.push(dir);\n\t      }\n\t    } else {\n\t      // existing directive, update\n\t      dir.oldValue = oldDir.value;\n\t      callHook$1(dir, 'update', vnode, oldVnode);\n\t      if (dir.def && dir.def.componentUpdated) {\n\t        dirsWithPostpatch.push(dir);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dirsWithInsert.length) {\n\t    var callInsert = function () {\n\t      dirsWithInsert.forEach(function (dir) {\n\t        callHook$1(dir, 'inserted', vnode, oldVnode);\n\t      });\n\t    };\n\t    if (isCreate) {\n\t      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n\t    } else {\n\t      callInsert();\n\t    }\n\t  }\n\t\n\t  if (dirsWithPostpatch.length) {\n\t    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n\t      dirsWithPostpatch.forEach(function (dir) {\n\t        callHook$1(dir, 'componentUpdated', vnode, oldVnode);\n\t      });\n\t    }, 'dir-postpatch');\n\t  }\n\t\n\t  if (!isCreate) {\n\t    for (key in oldDirs) {\n\t      if (!newDirs[key]) {\n\t        // no longer present, unbind\n\t        callHook$1(oldDirs[key], 'unbind', oldVnode);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar emptyModifiers = Object.create(null);\n\t\n\tfunction normalizeDirectives$1 (\n\t  dirs,\n\t  vm\n\t) {\n\t  var res = Object.create(null);\n\t  if (!dirs) {\n\t    return res\n\t  }\n\t  var i, dir;\n\t  for (i = 0; i < dirs.length; i++) {\n\t    dir = dirs[i];\n\t    if (!dir.modifiers) {\n\t      dir.modifiers = emptyModifiers;\n\t    }\n\t    res[getRawDirName(dir)] = dir;\n\t    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n\t  }\n\t  return res\n\t}\n\t\n\tfunction getRawDirName (dir) {\n\t  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n\t}\n\t\n\tfunction callHook$1 (dir, hook, vnode, oldVnode) {\n\t  var fn = dir.def && dir.def[hook];\n\t  if (fn) {\n\t    fn(vnode.elm, dir, vnode, oldVnode);\n\t  }\n\t}\n\t\n\tvar baseModules = [\n\t  ref,\n\t  directives\n\t];\n\t\n\t/*  */\n\t\n\tfunction updateAttrs (oldVnode, vnode) {\n\t  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n\t    return\n\t  }\n\t  var key, cur, old;\n\t  var elm = vnode.elm;\n\t  var oldAttrs = oldVnode.data.attrs || {};\n\t  var attrs = vnode.data.attrs || {};\n\t  // clone observed objects, as the user probably wants to mutate it\n\t  if (attrs.__ob__) {\n\t    attrs = vnode.data.attrs = extend({}, attrs);\n\t  }\n\t\n\t  for (key in attrs) {\n\t    cur = attrs[key];\n\t    old = oldAttrs[key];\n\t    if (old !== cur) {\n\t      setAttr(elm, key, cur);\n\t    }\n\t  }\n\t  for (key in oldAttrs) {\n\t    if (attrs[key] == null) {\n\t      if (isXlink(key)) {\n\t        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n\t      } else if (!isEnumeratedAttr(key)) {\n\t        elm.removeAttribute(key);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction setAttr (el, key, value) {\n\t  if (isBooleanAttr(key)) {\n\t    // set attribute for blank value\n\t    // e.g. <option disabled>Select one</option>\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttribute(key);\n\t    } else {\n\t      el.setAttribute(key, key);\n\t    }\n\t  } else if (isEnumeratedAttr(key)) {\n\t    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n\t  } else if (isXlink(key)) {\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n\t    } else {\n\t      el.setAttributeNS(xlinkNS, key, value);\n\t    }\n\t  } else {\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttribute(key);\n\t    } else {\n\t      el.setAttribute(key, value);\n\t    }\n\t  }\n\t}\n\t\n\tvar attrs = {\n\t  create: updateAttrs,\n\t  update: updateAttrs\n\t};\n\t\n\t/*  */\n\t\n\tfunction updateClass (oldVnode, vnode) {\n\t  var el = vnode.elm;\n\t  var data = vnode.data;\n\t  var oldData = oldVnode.data;\n\t  if (!data.staticClass && !data.class &&\n\t      (!oldData || (!oldData.staticClass && !oldData.class))) {\n\t    return\n\t  }\n\t\n\t  var cls = genClassForVnode(vnode);\n\t\n\t  // handle transition classes\n\t  var transitionClass = el._transitionClasses;\n\t  if (transitionClass) {\n\t    cls = concat(cls, stringifyClass(transitionClass));\n\t  }\n\t\n\t  // set the class\n\t  if (cls !== el._prevClass) {\n\t    el.setAttribute('class', cls);\n\t    el._prevClass = cls;\n\t  }\n\t}\n\t\n\tvar klass = {\n\t  create: updateClass,\n\t  update: updateClass\n\t};\n\t\n\t// skip type checking this file because we need to attach private properties\n\t// to elements\n\t\n\tfunction updateDOMListeners (oldVnode, vnode) {\n\t  if (!oldVnode.data.on && !vnode.data.on) {\n\t    return\n\t  }\n\t  var on = vnode.data.on || {};\n\t  var oldOn = oldVnode.data.on || {};\n\t  var add = vnode.elm._v_add || (vnode.elm._v_add = function (event, handler, capture) {\n\t    vnode.elm.addEventListener(event, handler, capture);\n\t  });\n\t  var remove = vnode.elm._v_remove || (vnode.elm._v_remove = function (event, handler) {\n\t    vnode.elm.removeEventListener(event, handler);\n\t  });\n\t  updateListeners(on, oldOn, add, remove, vnode.context);\n\t}\n\t\n\tvar events = {\n\t  create: updateDOMListeners,\n\t  update: updateDOMListeners\n\t};\n\t\n\t/*  */\n\t\n\tfunction updateDOMProps (oldVnode, vnode) {\n\t  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n\t    return\n\t  }\n\t  var key, cur;\n\t  var elm = vnode.elm;\n\t  var oldProps = oldVnode.data.domProps || {};\n\t  var props = vnode.data.domProps || {};\n\t  // clone observed objects, as the user probably wants to mutate it\n\t  if (props.__ob__) {\n\t    props = vnode.data.domProps = extend({}, props);\n\t  }\n\t\n\t  for (key in oldProps) {\n\t    if (props[key] == null) {\n\t      elm[key] = undefined;\n\t    }\n\t  }\n\t  for (key in props) {\n\t    // ignore children if the node has textContent or innerHTML,\n\t    // as these will throw away existing DOM nodes and cause removal errors\n\t    // on subsequent patches (#3360)\n\t    if ((key === 'textContent' || key === 'innerHTML') && vnode.children) {\n\t      vnode.children.length = 0;\n\t    }\n\t    cur = props[key];\n\t    if (key === 'value') {\n\t      // store value as _value as well since\n\t      // non-string values will be stringified\n\t      elm._value = cur;\n\t      // avoid resetting cursor position when value is the same\n\t      var strCur = cur == null ? '' : String(cur);\n\t      if (elm.value !== strCur && !elm.composing) {\n\t        elm.value = strCur;\n\t      }\n\t    } else {\n\t      elm[key] = cur;\n\t    }\n\t  }\n\t}\n\t\n\tvar domProps = {\n\t  create: updateDOMProps,\n\t  update: updateDOMProps\n\t};\n\t\n\t/*  */\n\t\n\tvar prefixes = ['Webkit', 'Moz', 'ms'];\n\t\n\tvar testEl;\n\tvar normalize = cached(function (prop) {\n\t  testEl = testEl || document.createElement('div');\n\t  prop = camelize(prop);\n\t  if (prop !== 'filter' && (prop in testEl.style)) {\n\t    return prop\n\t  }\n\t  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n\t  for (var i = 0; i < prefixes.length; i++) {\n\t    var prefixed = prefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixed\n\t    }\n\t  }\n\t});\n\t\n\tfunction updateStyle (oldVnode, vnode) {\n\t  if ((!oldVnode.data || !oldVnode.data.style) && !vnode.data.style) {\n\t    return\n\t  }\n\t  var cur, name;\n\t  var el = vnode.elm;\n\t  var oldStyle = oldVnode.data.style || {};\n\t  var style = vnode.data.style || {};\n\t\n\t  // handle string\n\t  if (typeof style === 'string') {\n\t    el.style.cssText = style;\n\t    return\n\t  }\n\t\n\t  var needClone = style.__ob__;\n\t\n\t  // handle array syntax\n\t  if (Array.isArray(style)) {\n\t    style = vnode.data.style = toObject(style);\n\t  }\n\t\n\t  // clone the style for future updates,\n\t  // in case the user mutates the style object in-place.\n\t  if (needClone) {\n\t    style = vnode.data.style = extend({}, style);\n\t  }\n\t\n\t  for (name in oldStyle) {\n\t    if (style[name] == null) {\n\t      el.style[normalize(name)] = '';\n\t    }\n\t  }\n\t  for (name in style) {\n\t    cur = style[name];\n\t    if (cur !== oldStyle[name]) {\n\t      // ie9 setting to null has no effect, must use empty string\n\t      el.style[normalize(name)] = cur == null ? '' : cur;\n\t    }\n\t  }\n\t}\n\t\n\tvar style = {\n\t  create: updateStyle,\n\t  update: updateStyle\n\t};\n\t\n\t/*  */\n\t\n\t/**\n\t * Add class with compatibility for SVG since classList is not supported on\n\t * SVG elements in IE\n\t */\n\tfunction addClass (el, cls) {\n\t  /* istanbul ignore else */\n\t  if (el.classList) {\n\t    if (cls.indexOf(' ') > -1) {\n\t      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n\t    } else {\n\t      el.classList.add(cls);\n\t    }\n\t  } else {\n\t    var cur = ' ' + el.getAttribute('class') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      el.setAttribute('class', (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for SVG since classList is not supported on\n\t * SVG elements in IE\n\t */\n\tfunction removeClass (el, cls) {\n\t  /* istanbul ignore else */\n\t  if (el.classList) {\n\t    if (cls.indexOf(' ') > -1) {\n\t      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n\t    } else {\n\t      el.classList.remove(cls);\n\t    }\n\t  } else {\n\t    var cur = ' ' + el.getAttribute('class') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    el.setAttribute('class', cur.trim());\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar hasTransition = inBrowser && !isIE9;\n\tvar TRANSITION = 'transition';\n\tvar ANIMATION = 'animation';\n\t\n\t// Transition property/event sniffing\n\tvar transitionProp = 'transition';\n\tvar transitionEndEvent = 'transitionend';\n\tvar animationProp = 'animation';\n\tvar animationEndEvent = 'animationend';\n\tif (hasTransition) {\n\t  /* istanbul ignore if */\n\t  if (window.ontransitionend === undefined &&\n\t    window.onwebkittransitionend !== undefined) {\n\t    transitionProp = 'WebkitTransition';\n\t    transitionEndEvent = 'webkitTransitionEnd';\n\t  }\n\t  if (window.onanimationend === undefined &&\n\t    window.onwebkitanimationend !== undefined) {\n\t    animationProp = 'WebkitAnimation';\n\t    animationEndEvent = 'webkitAnimationEnd';\n\t  }\n\t}\n\t\n\tvar raf = (inBrowser && window.requestAnimationFrame) || setTimeout;\n\tfunction nextFrame (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t}\n\t\n\tfunction addTransitionClass (el, cls) {\n\t  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n\t  addClass(el, cls);\n\t}\n\t\n\tfunction removeTransitionClass (el, cls) {\n\t  if (el._transitionClasses) {\n\t    remove$1(el._transitionClasses, cls);\n\t  }\n\t  removeClass(el, cls);\n\t}\n\t\n\tfunction whenTransitionEnds (\n\t  el,\n\t  expectedType,\n\t  cb\n\t) {\n\t  var ref = getTransitionInfo(el, expectedType);\n\t  var type = ref.type;\n\t  var timeout = ref.timeout;\n\t  var propCount = ref.propCount;\n\t  if (!type) { return cb() }\n\t  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n\t  var ended = 0;\n\t  var end = function () {\n\t    el.removeEventListener(event, onEnd);\n\t    cb();\n\t  };\n\t  var onEnd = function (e) {\n\t    if (e.target === el) {\n\t      if (++ended >= propCount) {\n\t        end();\n\t      }\n\t    }\n\t  };\n\t  setTimeout(function () {\n\t    if (ended < propCount) {\n\t      end();\n\t    }\n\t  }, timeout + 1);\n\t  el.addEventListener(event, onEnd);\n\t}\n\t\n\tvar transformRE = /\\b(transform|all)(,|$)/;\n\t\n\tfunction getTransitionInfo (el, expectedType) {\n\t  var styles = window.getComputedStyle(el);\n\t  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n\t  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n\t  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n\t  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n\t  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n\t  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\t\n\t  var type;\n\t  var timeout = 0;\n\t  var propCount = 0;\n\t  /* istanbul ignore if */\n\t  if (expectedType === TRANSITION) {\n\t    if (transitionTimeout > 0) {\n\t      type = TRANSITION;\n\t      timeout = transitionTimeout;\n\t      propCount = transitionDurations.length;\n\t    }\n\t  } else if (expectedType === ANIMATION) {\n\t    if (animationTimeout > 0) {\n\t      type = ANIMATION;\n\t      timeout = animationTimeout;\n\t      propCount = animationDurations.length;\n\t    }\n\t  } else {\n\t    timeout = Math.max(transitionTimeout, animationTimeout);\n\t    type = timeout > 0\n\t      ? transitionTimeout > animationTimeout\n\t        ? TRANSITION\n\t        : ANIMATION\n\t      : null;\n\t    propCount = type\n\t      ? type === TRANSITION\n\t        ? transitionDurations.length\n\t        : animationDurations.length\n\t      : 0;\n\t  }\n\t  var hasTransform =\n\t    type === TRANSITION &&\n\t    transformRE.test(styles[transitionProp + 'Property']);\n\t  return {\n\t    type: type,\n\t    timeout: timeout,\n\t    propCount: propCount,\n\t    hasTransform: hasTransform\n\t  }\n\t}\n\t\n\tfunction getTimeout (delays, durations) {\n\t  return Math.max.apply(null, durations.map(function (d, i) {\n\t    return toMs(d) + toMs(delays[i])\n\t  }))\n\t}\n\t\n\tfunction toMs (s) {\n\t  return Number(s.slice(0, -1)) * 1000\n\t}\n\t\n\t/*  */\n\t\n\tfunction enter (vnode) {\n\t  var el = vnode.elm;\n\t\n\t  // call leave callback now\n\t  if (el._leaveCb) {\n\t    el._leaveCb.cancelled = true;\n\t    el._leaveCb();\n\t  }\n\t\n\t  var data = resolveTransition(vnode.data.transition);\n\t  if (!data) {\n\t    return\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (el._enterCb || el.nodeType !== 1) {\n\t    return\n\t  }\n\t\n\t  var css = data.css;\n\t  var type = data.type;\n\t  var enterClass = data.enterClass;\n\t  var enterActiveClass = data.enterActiveClass;\n\t  var appearClass = data.appearClass;\n\t  var appearActiveClass = data.appearActiveClass;\n\t  var beforeEnter = data.beforeEnter;\n\t  var enter = data.enter;\n\t  var afterEnter = data.afterEnter;\n\t  var enterCancelled = data.enterCancelled;\n\t  var beforeAppear = data.beforeAppear;\n\t  var appear = data.appear;\n\t  var afterAppear = data.afterAppear;\n\t  var appearCancelled = data.appearCancelled;\n\t\n\t  // activeInstance will always be the <transition> component managing this\n\t  // transition. One edge case to check is when the <transition> is placed\n\t  // as the root node of a child component. In that case we need to check\n\t  // <transition>'s parent for appear check.\n\t  var transitionNode = activeInstance.$vnode;\n\t  var context = transitionNode && transitionNode.parent\n\t    ? transitionNode.parent.context\n\t    : activeInstance;\n\t\n\t  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\t\n\t  if (isAppear && !appear && appear !== '') {\n\t    return\n\t  }\n\t\n\t  var startClass = isAppear ? appearClass : enterClass;\n\t  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n\t  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n\t  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n\t  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n\t  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\t\n\t  var expectsCSS = css !== false && !isIE9;\n\t  var userWantsControl =\n\t    enterHook &&\n\t    // enterHook may be a bound method which exposes\n\t    // the length of original fn as _length\n\t    (enterHook._length || enterHook.length) > 1;\n\t\n\t  var cb = el._enterCb = once(function () {\n\t    if (expectsCSS) {\n\t      removeTransitionClass(el, activeClass);\n\t    }\n\t    if (cb.cancelled) {\n\t      if (expectsCSS) {\n\t        removeTransitionClass(el, startClass);\n\t      }\n\t      enterCancelledHook && enterCancelledHook(el);\n\t    } else {\n\t      afterEnterHook && afterEnterHook(el);\n\t    }\n\t    el._enterCb = null;\n\t  });\n\t\n\t  if (!vnode.data.show) {\n\t    // remove pending leave element on enter by injecting an insert hook\n\t    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n\t      var parent = el.parentNode;\n\t      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n\t      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {\n\t        pendingNode.elm._leaveCb();\n\t      }\n\t      enterHook && enterHook(el, cb);\n\t    }, 'transition-insert');\n\t  }\n\t\n\t  // start enter transition\n\t  beforeEnterHook && beforeEnterHook(el);\n\t  if (expectsCSS) {\n\t    addTransitionClass(el, startClass);\n\t    addTransitionClass(el, activeClass);\n\t    nextFrame(function () {\n\t      removeTransitionClass(el, startClass);\n\t      if (!cb.cancelled && !userWantsControl) {\n\t        whenTransitionEnds(el, type, cb);\n\t      }\n\t    });\n\t  }\n\t\n\t  if (vnode.data.show) {\n\t    enterHook && enterHook(el, cb);\n\t  }\n\t\n\t  if (!expectsCSS && !userWantsControl) {\n\t    cb();\n\t  }\n\t}\n\t\n\tfunction leave (vnode, rm) {\n\t  var el = vnode.elm;\n\t\n\t  // call enter callback now\n\t  if (el._enterCb) {\n\t    el._enterCb.cancelled = true;\n\t    el._enterCb();\n\t  }\n\t\n\t  var data = resolveTransition(vnode.data.transition);\n\t  if (!data) {\n\t    return rm()\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (el._leaveCb || el.nodeType !== 1) {\n\t    return\n\t  }\n\t\n\t  var css = data.css;\n\t  var type = data.type;\n\t  var leaveClass = data.leaveClass;\n\t  var leaveActiveClass = data.leaveActiveClass;\n\t  var beforeLeave = data.beforeLeave;\n\t  var leave = data.leave;\n\t  var afterLeave = data.afterLeave;\n\t  var leaveCancelled = data.leaveCancelled;\n\t  var delayLeave = data.delayLeave;\n\t\n\t  var expectsCSS = css !== false && !isIE9;\n\t  var userWantsControl =\n\t    leave &&\n\t    // leave hook may be a bound method which exposes\n\t    // the length of original fn as _length\n\t    (leave._length || leave.length) > 1;\n\t\n\t  var cb = el._leaveCb = once(function () {\n\t    if (el.parentNode && el.parentNode._pending) {\n\t      el.parentNode._pending[vnode.key] = null;\n\t    }\n\t    if (expectsCSS) {\n\t      removeTransitionClass(el, leaveActiveClass);\n\t    }\n\t    if (cb.cancelled) {\n\t      if (expectsCSS) {\n\t        removeTransitionClass(el, leaveClass);\n\t      }\n\t      leaveCancelled && leaveCancelled(el);\n\t    } else {\n\t      rm();\n\t      afterLeave && afterLeave(el);\n\t    }\n\t    el._leaveCb = null;\n\t  });\n\t\n\t  if (delayLeave) {\n\t    delayLeave(performLeave);\n\t  } else {\n\t    performLeave();\n\t  }\n\t\n\t  function performLeave () {\n\t    // the delayed leave may have already been cancelled\n\t    if (cb.cancelled) {\n\t      return\n\t    }\n\t    // record leaving element\n\t    if (!vnode.data.show) {\n\t      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n\t    }\n\t    beforeLeave && beforeLeave(el);\n\t    if (expectsCSS) {\n\t      addTransitionClass(el, leaveClass);\n\t      addTransitionClass(el, leaveActiveClass);\n\t      nextFrame(function () {\n\t        removeTransitionClass(el, leaveClass);\n\t        if (!cb.cancelled && !userWantsControl) {\n\t          whenTransitionEnds(el, type, cb);\n\t        }\n\t      });\n\t    }\n\t    leave && leave(el, cb);\n\t    if (!expectsCSS && !userWantsControl) {\n\t      cb();\n\t    }\n\t  }\n\t}\n\t\n\tfunction resolveTransition (def$$1) {\n\t  if (!def$$1) {\n\t    return\n\t  }\n\t  /* istanbul ignore else */\n\t  if (typeof def$$1 === 'object') {\n\t    var res = {};\n\t    if (def$$1.css !== false) {\n\t      extend(res, autoCssTransition(def$$1.name || 'v'));\n\t    }\n\t    extend(res, def$$1);\n\t    return res\n\t  } else if (typeof def$$1 === 'string') {\n\t    return autoCssTransition(def$$1)\n\t  }\n\t}\n\t\n\tvar autoCssTransition = cached(function (name) {\n\t  return {\n\t    enterClass: (name + \"-enter\"),\n\t    leaveClass: (name + \"-leave\"),\n\t    appearClass: (name + \"-enter\"),\n\t    enterActiveClass: (name + \"-enter-active\"),\n\t    leaveActiveClass: (name + \"-leave-active\"),\n\t    appearActiveClass: (name + \"-enter-active\")\n\t  }\n\t});\n\t\n\tfunction once (fn) {\n\t  var called = false;\n\t  return function () {\n\t    if (!called) {\n\t      called = true;\n\t      fn();\n\t    }\n\t  }\n\t}\n\t\n\tvar transition = inBrowser ? {\n\t  create: function create (_, vnode) {\n\t    if (!vnode.data.show) {\n\t      enter(vnode);\n\t    }\n\t  },\n\t  remove: function remove (vnode, rm) {\n\t    /* istanbul ignore else */\n\t    if (!vnode.data.show) {\n\t      leave(vnode, rm);\n\t    } else {\n\t      rm();\n\t    }\n\t  }\n\t} : {};\n\t\n\tvar platformModules = [\n\t  attrs,\n\t  klass,\n\t  events,\n\t  domProps,\n\t  style,\n\t  transition\n\t];\n\t\n\t/*  */\n\t\n\t// the directive module should be applied last, after all\n\t// built-in modules have been applied.\n\tvar modules = platformModules.concat(baseModules);\n\t\n\tvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\t\n\t/**\n\t * Not type checking this file because flow doesn't like attaching\n\t * properties to Elements.\n\t */\n\t\n\tvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_\\-]*)?$/;\n\t\n\t/* istanbul ignore if */\n\tif (isIE9) {\n\t  // http://www.matts411.com/post/internet-explorer-9-oninput/\n\t  document.addEventListener('selectionchange', function () {\n\t    var el = document.activeElement;\n\t    if (el && el.vmodel) {\n\t      trigger(el, 'input');\n\t    }\n\t  });\n\t}\n\t\n\tvar model = {\n\t  inserted: function inserted (el, binding, vnode) {\n\t    if (false) {\n\t      if (!modelableTagRE.test(vnode.tag)) {\n\t        warn(\n\t          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n\t          'If you are working with contenteditable, it\\'s recommended to ' +\n\t          'wrap a library dedicated for that purpose inside a custom component.',\n\t          vnode.context\n\t        );\n\t      }\n\t    }\n\t    if (vnode.tag === 'select') {\n\t      var cb = function () {\n\t        setSelected(el, binding, vnode.context);\n\t      };\n\t      cb();\n\t      /* istanbul ignore if */\n\t      if (isIE || isEdge) {\n\t        setTimeout(cb, 0);\n\t      }\n\t    } else if (\n\t      (vnode.tag === 'textarea' || el.type === 'text') &&\n\t      !binding.modifiers.lazy\n\t    ) {\n\t      if (!isAndroid) {\n\t        el.addEventListener('compositionstart', onCompositionStart);\n\t        el.addEventListener('compositionend', onCompositionEnd);\n\t      }\n\t      /* istanbul ignore if */\n\t      if (isIE9) {\n\t        el.vmodel = true;\n\t      }\n\t    }\n\t  },\n\t  componentUpdated: function componentUpdated (el, binding, vnode) {\n\t    if (vnode.tag === 'select') {\n\t      setSelected(el, binding, vnode.context);\n\t      // in case the options rendered by v-for have changed,\n\t      // it's possible that the value is out-of-sync with the rendered options.\n\t      // detect such cases and filter out values that no longer has a matchig\n\t      // option in the DOM.\n\t      var needReset = el.multiple\n\t        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n\t        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n\t      if (needReset) {\n\t        trigger(el, 'change');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setSelected (el, binding, vm) {\n\t  var value = binding.value;\n\t  var isMultiple = el.multiple;\n\t  if (isMultiple && !Array.isArray(value)) {\n\t    (\"production\") !== 'production' && warn(\n\t      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n\t      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  var selected, option;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    option = el.options[i];\n\t    if (isMultiple) {\n\t      selected = looseIndexOf(value, getValue(option)) > -1;\n\t      if (option.selected !== selected) {\n\t        option.selected = selected;\n\t      }\n\t    } else {\n\t      if (looseEqual(getValue(option), value)) {\n\t        if (el.selectedIndex !== i) {\n\t          el.selectedIndex = i;\n\t        }\n\t        return\n\t      }\n\t    }\n\t  }\n\t  if (!isMultiple) {\n\t    el.selectedIndex = -1;\n\t  }\n\t}\n\t\n\tfunction hasNoMatchingOption (value, options) {\n\t  for (var i = 0, l = options.length; i < l; i++) {\n\t    if (looseEqual(getValue(options[i]), value)) {\n\t      return false\n\t    }\n\t  }\n\t  return true\n\t}\n\t\n\tfunction getValue (option) {\n\t  return '_value' in option\n\t    ? option._value\n\t    : option.value\n\t}\n\t\n\tfunction onCompositionStart (e) {\n\t  e.target.composing = true;\n\t}\n\t\n\tfunction onCompositionEnd (e) {\n\t  e.target.composing = false;\n\t  trigger(e.target, 'input');\n\t}\n\t\n\tfunction trigger (el, type) {\n\t  var e = document.createEvent('HTMLEvents');\n\t  e.initEvent(type, true, true);\n\t  el.dispatchEvent(e);\n\t}\n\t\n\t/*  */\n\t\n\t// recursively search for possible transition defined inside the component root\n\tfunction locateNode (vnode) {\n\t  return vnode.child && (!vnode.data || !vnode.data.transition)\n\t    ? locateNode(vnode.child._vnode)\n\t    : vnode\n\t}\n\t\n\tvar show = {\n\t  bind: function bind (el, ref, vnode) {\n\t    var value = ref.value;\n\t\n\t    vnode = locateNode(vnode);\n\t    var transition = vnode.data && vnode.data.transition;\n\t    if (value && transition && !isIE9) {\n\t      enter(vnode);\n\t    }\n\t    var originalDisplay = el.style.display === 'none' ? '' : el.style.display;\n\t    el.style.display = value ? originalDisplay : 'none';\n\t    el.__vOriginalDisplay = originalDisplay;\n\t  },\n\t  update: function update (el, ref, vnode) {\n\t    var value = ref.value;\n\t    var oldValue = ref.oldValue;\n\t\n\t    /* istanbul ignore if */\n\t    if (value === oldValue) { return }\n\t    vnode = locateNode(vnode);\n\t    var transition = vnode.data && vnode.data.transition;\n\t    if (transition && !isIE9) {\n\t      if (value) {\n\t        enter(vnode);\n\t        el.style.display = el.__vOriginalDisplay;\n\t      } else {\n\t        leave(vnode, function () {\n\t          el.style.display = 'none';\n\t        });\n\t      }\n\t    } else {\n\t      el.style.display = value ? el.__vOriginalDisplay : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar platformDirectives = {\n\t  model: model,\n\t  show: show\n\t};\n\t\n\t/*  */\n\t\n\t// Provides transition support for a single element/component.\n\t// supports transition mode (out-in / in-out)\n\t\n\tvar transitionProps = {\n\t  name: String,\n\t  appear: Boolean,\n\t  css: Boolean,\n\t  mode: String,\n\t  type: String,\n\t  enterClass: String,\n\t  leaveClass: String,\n\t  enterActiveClass: String,\n\t  leaveActiveClass: String,\n\t  appearClass: String,\n\t  appearActiveClass: String\n\t};\n\t\n\t// in case the child is also an abstract component, e.g. <keep-alive>\n\t// we want to recrusively retrieve the real component to be rendered\n\tfunction getRealChild (vnode) {\n\t  var compOptions = vnode && vnode.componentOptions;\n\t  if (compOptions && compOptions.Ctor.options.abstract) {\n\t    return getRealChild(getFirstComponentChild(compOptions.children))\n\t  } else {\n\t    return vnode\n\t  }\n\t}\n\t\n\tfunction extractTransitionData (comp) {\n\t  var data = {};\n\t  var options = comp.$options;\n\t  // props\n\t  for (var key in options.propsData) {\n\t    data[key] = comp[key];\n\t  }\n\t  // events.\n\t  // extract listeners and pass them directly to the transition methods\n\t  var listeners = options._parentListeners;\n\t  for (var key$1 in listeners) {\n\t    data[camelize(key$1)] = listeners[key$1].fn;\n\t  }\n\t  return data\n\t}\n\t\n\tfunction placeholder (h, rawChild) {\n\t  return /\\d-keep-alive$/.test(rawChild.tag)\n\t    ? h('keep-alive')\n\t    : null\n\t}\n\t\n\tfunction hasParentTransition (vnode) {\n\t  while ((vnode = vnode.parent)) {\n\t    if (vnode.data.transition) {\n\t      return true\n\t    }\n\t  }\n\t}\n\t\n\tvar Transition = {\n\t  name: 'transition',\n\t  props: transitionProps,\n\t  abstract: true,\n\t  render: function render (h) {\n\t    var this$1 = this;\n\t\n\t    var children = this.$slots.default;\n\t    if (!children) {\n\t      return\n\t    }\n\t\n\t    // filter out text nodes (possible whitespaces)\n\t    children = children.filter(function (c) { return c.tag; });\n\t    /* istanbul ignore if */\n\t    if (!children.length) {\n\t      return\n\t    }\n\t\n\t    // warn multiple elements\n\t    if (false) {\n\t      warn(\n\t        '<transition> can only be used on a single element. Use ' +\n\t        '<transition-group> for lists.',\n\t        this.$parent\n\t      );\n\t    }\n\t\n\t    var mode = this.mode;\n\t\n\t    // warn invalid mode\n\t    if (false) {\n\t      warn(\n\t        'invalid <transition> mode: ' + mode,\n\t        this.$parent\n\t      );\n\t    }\n\t\n\t    var rawChild = children[0];\n\t\n\t    // if this is a component root node and the component's\n\t    // parent container node also has transition, skip.\n\t    if (hasParentTransition(this.$vnode)) {\n\t      return rawChild\n\t    }\n\t\n\t    // apply transition data to child\n\t    // use getRealChild() to ignore abstract components e.g. keep-alive\n\t    var child = getRealChild(rawChild);\n\t    /* istanbul ignore if */\n\t    if (!child) {\n\t      return rawChild\n\t    }\n\t\n\t    if (this._leaving) {\n\t      return placeholder(h, rawChild)\n\t    }\n\t\n\t    var key = child.key = child.key == null || child.isStatic\n\t      ? (\"__v\" + (child.tag + this._uid) + \"__\")\n\t      : child.key;\n\t    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n\t    var oldRawChild = this._vnode;\n\t    var oldChild = getRealChild(oldRawChild);\n\t\n\t    // mark v-show\n\t    // so that the transition module can hand over the control to the directive\n\t    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n\t      child.data.show = true;\n\t    }\n\t\n\t    if (oldChild && oldChild.data && oldChild.key !== key) {\n\t      // replace old child transition data with fresh one\n\t      // important for dynamic transitions!\n\t      var oldData = oldChild.data.transition = extend({}, data);\n\t\n\t      // handle transition mode\n\t      if (mode === 'out-in') {\n\t        // return placeholder node and queue update when leave finishes\n\t        this._leaving = true;\n\t        mergeVNodeHook(oldData, 'afterLeave', function () {\n\t          this$1._leaving = false;\n\t          this$1.$forceUpdate();\n\t        }, key);\n\t        return placeholder(h, rawChild)\n\t      } else if (mode === 'in-out') {\n\t        var delayedLeave;\n\t        var performLeave = function () { delayedLeave(); };\n\t        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n\t        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n\t        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n\t          delayedLeave = leave;\n\t        }, key);\n\t      }\n\t    }\n\t\n\t    return rawChild\n\t  }\n\t};\n\t\n\t/*  */\n\t\n\t// Provides transition support for list items.\n\t// supports move transitions using the FLIP technique.\n\t\n\t// Because the vdom's children update algorithm is \"unstable\" - i.e.\n\t// it doesn't guarantee the relative positioning of removed elements,\n\t// we force transition-group to update its children into two passes:\n\t// in the first pass, we remove all nodes that need to be removed,\n\t// triggering their leaving transition; in the second pass, we insert/move\n\t// into the final disired state. This way in the second pass removed\n\t// nodes will remain where they should be.\n\t\n\tvar props = extend({\n\t  tag: String,\n\t  moveClass: String\n\t}, transitionProps);\n\t\n\tdelete props.mode;\n\t\n\tvar TransitionGroup = {\n\t  props: props,\n\t\n\t  render: function render (h) {\n\t    var tag = this.tag || this.$vnode.data.tag || 'span';\n\t    var map = Object.create(null);\n\t    var prevChildren = this.prevChildren = this.children;\n\t    var rawChildren = this.$slots.default || [];\n\t    var children = this.children = [];\n\t    var transitionData = extractTransitionData(this);\n\t\n\t    for (var i = 0; i < rawChildren.length; i++) {\n\t      var c = rawChildren[i];\n\t      if (c.tag) {\n\t        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n\t          children.push(c);\n\t          map[c.key] = c\n\t          ;(c.data || (c.data = {})).transition = transitionData;\n\t        } else if (false) {\n\t          var opts = c.componentOptions;\n\t          var name = opts\n\t            ? (opts.Ctor.options.name || opts.tag)\n\t            : c.tag;\n\t          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n\t        }\n\t      }\n\t    }\n\t\n\t    if (prevChildren) {\n\t      var kept = [];\n\t      var removed = [];\n\t      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n\t        var c$1 = prevChildren[i$1];\n\t        c$1.data.transition = transitionData;\n\t        c$1.data.pos = c$1.elm.getBoundingClientRect();\n\t        if (map[c$1.key]) {\n\t          kept.push(c$1);\n\t        } else {\n\t          removed.push(c$1);\n\t        }\n\t      }\n\t      this.kept = h(tag, null, kept);\n\t      this.removed = removed;\n\t    }\n\t\n\t    return h(tag, null, children)\n\t  },\n\t\n\t  beforeUpdate: function beforeUpdate () {\n\t    // force removing pass\n\t    this.__patch__(\n\t      this._vnode,\n\t      this.kept,\n\t      false, // hydrating\n\t      true // removeOnly (!important, avoids unnecessary moves)\n\t    );\n\t    this._vnode = this.kept;\n\t  },\n\t\n\t  updated: function updated () {\n\t    var children = this.prevChildren;\n\t    var moveClass = this.moveClass || (this.name + '-move');\n\t    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n\t      return\n\t    }\n\t\n\t    // we divide the work into three loops to avoid mixing DOM reads and writes\n\t    // in each iteration - which helps prevent layout thrashing.\n\t    children.forEach(callPendingCbs);\n\t    children.forEach(recordPosition);\n\t    children.forEach(applyTranslation);\n\t\n\t    // force reflow to put everything in position\n\t    var f = document.body.offsetHeight; // eslint-disable-line\n\t\n\t    children.forEach(function (c) {\n\t      if (c.data.moved) {\n\t        var el = c.elm;\n\t        var s = el.style;\n\t        addTransitionClass(el, moveClass);\n\t        s.transform = s.WebkitTransform = s.transitionDuration = '';\n\t        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n\t          if (!e || /transform$/.test(e.propertyName)) {\n\t            el.removeEventListener(transitionEndEvent, cb);\n\t            el._moveCb = null;\n\t            removeTransitionClass(el, moveClass);\n\t          }\n\t        });\n\t      }\n\t    });\n\t  },\n\t\n\t  methods: {\n\t    hasMove: function hasMove (el, moveClass) {\n\t      /* istanbul ignore if */\n\t      if (!hasTransition) {\n\t        return false\n\t      }\n\t      if (this._hasMove != null) {\n\t        return this._hasMove\n\t      }\n\t      addTransitionClass(el, moveClass);\n\t      var info = getTransitionInfo(el);\n\t      removeTransitionClass(el, moveClass);\n\t      return (this._hasMove = info.hasTransform)\n\t    }\n\t  }\n\t};\n\t\n\tfunction callPendingCbs (c) {\n\t  /* istanbul ignore if */\n\t  if (c.elm._moveCb) {\n\t    c.elm._moveCb();\n\t  }\n\t  /* istanbul ignore if */\n\t  if (c.elm._enterCb) {\n\t    c.elm._enterCb();\n\t  }\n\t}\n\t\n\tfunction recordPosition (c) {\n\t  c.data.newPos = c.elm.getBoundingClientRect();\n\t}\n\t\n\tfunction applyTranslation (c) {\n\t  var oldPos = c.data.pos;\n\t  var newPos = c.data.newPos;\n\t  var dx = oldPos.left - newPos.left;\n\t  var dy = oldPos.top - newPos.top;\n\t  if (dx || dy) {\n\t    c.data.moved = true;\n\t    var s = c.elm.style;\n\t    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n\t    s.transitionDuration = '0s';\n\t  }\n\t}\n\t\n\tvar platformComponents = {\n\t  Transition: Transition,\n\t  TransitionGroup: TransitionGroup\n\t};\n\t\n\t/*  */\n\t\n\t// install platform specific utils\n\tVue$2.config.isUnknownElement = isUnknownElement;\n\tVue$2.config.isReservedTag = isReservedTag;\n\tVue$2.config.getTagNamespace = getTagNamespace;\n\tVue$2.config.mustUseProp = mustUseProp;\n\t\n\t// install platform runtime directives & components\n\textend(Vue$2.options.directives, platformDirectives);\n\textend(Vue$2.options.components, platformComponents);\n\t\n\t// install platform patch function\n\tVue$2.prototype.__patch__ = config._isServer ? noop : patch$1;\n\t\n\t// wrap mount\n\tVue$2.prototype.$mount = function (\n\t  el,\n\t  hydrating\n\t) {\n\t  el = el && !config._isServer ? query(el) : undefined;\n\t  return this._mount(el, hydrating)\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue$2);\n\t    } else if (\n\t      false\n\t    ) {\n\t      console.log(\n\t        'Download the Vue Devtools for a better development experience:\\n' +\n\t        'https://github.com/vuejs/vue-devtools'\n\t      );\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue$2;\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/vendor.7d4fc20036b1c7d02123.js\n **/","/*!\n * jQuery JavaScript Library v3.1.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2016-09-22T22:30Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\n\n\n\tfunction DOMEval( code, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar script = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.1.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// As of jQuery 3.0, isNumeric is limited to\n\t\t// strings and numbers (primitives or objects)\n\t\t// that can be coerced to finite numbers (gh-2662)\n\t\tvar type = jQuery.type( obj );\n\t\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t\t// subtraction forces infinities to NaN\n\t\t\t!isNaN( obj - parseFloat( obj ) );\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android <=2.3 only (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE <=9 - 11, Edge 12 - 13\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Simple selector that can be filtered directly, removing non-Elements\n\tif ( risSimple.test( qualifier ) ) {\n\t\treturn jQuery.filter( qualifier, elements, not );\n\t}\n\n\t// Complex selector, compare the two sets, removing non-Elements\n\tqualifier = jQuery.filter( qualifier, elements );\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && jQuery.isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Support: Android 4.0 only\n\t\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\t\tresolve.call( undefined, value );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.call( undefined, value );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( jQuery.isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tjQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ jQuery.camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( jQuery.camelCase );\n\t\t\t} else {\n\t\t\t\tkey = jQuery.camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: jQuery.isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\nfunction manipulationTarget( elem, content ) {\n\tif ( jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn elem.getElementsByTagName( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdiv.style.cssText =\n\t\t\t\"box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE <=9 only\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i,\n\t\tval = 0;\n\n\t// If we already have the right measurement, avoid augmentation\n\tif ( extra === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\ti = 4;\n\n\t// Otherwise initialize for horizontal or vertical properties\n\t} else {\n\t\ti = name === \"width\" ? 1 : 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar val,\n\t\tvalueIsBorderBox = true,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Support: IE <=11 only\n\t// Running getBoundingClientRect on a disconnected node\n\t// in IE throws an error.\n\tif ( elem.getClientRects().length ) {\n\t\tval = elem.getBoundingClientRect()[ name ];\n\t}\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction raf() {\n\tif ( timerId ) {\n\t\twindow.requestAnimationFrame( raf );\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 13\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off or if document is hidden\n\tif ( jQuery.fx.off || document.hidden ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.requestAnimationFrame ?\n\t\t\twindow.requestAnimationFrame( raf ) :\n\t\t\twindow.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tif ( window.cancelAnimationFrame ) {\n\t\twindow.cancelAnimationFrame( timerId );\n\t} else {\n\t\twindow.clearInterval( timerId );\n\t}\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnothtmlwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = jQuery.isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( jQuery.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 13\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win, rect, doc,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\trect = elem.getBoundingClientRect();\n\n\t\t// Make sure element is not hidden (display: none)\n\t\tif ( rect.width || rect.height ) {\n\t\t\tdoc = elem.ownerDocument;\n\t\t\twin = getWindow( doc );\n\t\t\tdocElem = doc.documentElement;\n\n\t\t\treturn {\n\t\t\t\ttop: rect.top + win.pageYOffset - docElem.clientTop,\n\t\t\t\tleft: rect.left + win.pageXOffset - docElem.clientLeft\n\t\t\t};\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden elements (gh-2310)\n\t\treturn rect;\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset = {\n\t\t\t\ttop: parentOffset.top + jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true ),\n\t\t\t\tleft: parentOffset.left + jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true )\n\t\t\t};\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\njQuery.parseJSON = JSON.parse;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\n\nreturn jQuery;\n} );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jquery/dist/jquery.js\n ** module id = 1\n ** module chunks = 1\n **/","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n'use strict';\n\nvar Util = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Private TransitionEnd Helpers\n   * ------------------------------------------------------------------------\n   */\n\n  var transition = false;\n\n  var MAX_UID = 1000000;\n\n  var TransitionEndEvent = {\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'transitionend',\n    OTransition: 'oTransitionEnd otransitionend',\n    transition: 'transitionend'\n  };\n\n  // shoutout AngusCroll (https://goo.gl/pxwQGp)\n  function toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n  }\n\n  function isElement(obj) {\n    return (obj[0] || obj).nodeType;\n  }\n\n  function getSpecialTransitionEndEvent() {\n    return {\n      bindType: transition.end,\n      delegateType: transition.end,\n      handle: function handle(event) {\n        if ($(event.target).is(this)) {\n          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n        }\n        return undefined;\n      }\n    };\n  }\n\n  function transitionEndTest() {\n    if (window.QUnit) {\n      return false;\n    }\n\n    var el = document.createElement('bootstrap');\n\n    for (var _name in TransitionEndEvent) {\n      if (el.style[_name] !== undefined) {\n        return { end: TransitionEndEvent[_name] };\n      }\n    }\n\n    return false;\n  }\n\n  function transitionEndEmulator(duration) {\n    var _this = this;\n\n    var called = false;\n\n    $(this).one(Util.TRANSITION_END, function () {\n      called = true;\n    });\n\n    setTimeout(function () {\n      if (!called) {\n        Util.triggerTransitionEnd(_this);\n      }\n    }, duration);\n\n    return this;\n  }\n\n  function setTransitionEndSupport() {\n    transition = transitionEndTest();\n\n    $.fn.emulateTransitionEnd = transitionEndEmulator;\n\n    if (Util.supportsTransitionEnd()) {\n      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------------------\n   * Public Util Api\n   * --------------------------------------------------------------------------\n   */\n\n  var Util = {\n\n    TRANSITION_END: 'bsTransitionEnd',\n\n    getUID: function getUID(prefix) {\n      do {\n        /* eslint-disable no-bitwise */\n        prefix += ~ ~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n        /* eslint-enable no-bitwise */\n      } while (document.getElementById(prefix));\n      return prefix;\n    },\n\n    getSelectorFromElement: function getSelectorFromElement(element) {\n      var selector = element.getAttribute('data-target');\n\n      if (!selector) {\n        selector = element.getAttribute('href') || '';\n        selector = /^#[a-z]/i.test(selector) ? selector : null;\n      }\n\n      return selector;\n    },\n\n    reflow: function reflow(element) {\n      new Function('bs', 'return bs')(element.offsetHeight);\n    },\n\n    triggerTransitionEnd: function triggerTransitionEnd(element) {\n      $(element).trigger(transition.end);\n    },\n\n    supportsTransitionEnd: function supportsTransitionEnd() {\n      return Boolean(transition);\n    },\n\n    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n      for (var property in configTypes) {\n        if (configTypes.hasOwnProperty(property)) {\n          var expectedTypes = configTypes[property];\n          var value = config[property];\n          var valueType = undefined;\n\n          if (value && isElement(value)) {\n            valueType = 'element';\n          } else {\n            valueType = toType(value);\n          }\n\n          if (!new RegExp(expectedTypes).test(valueType)) {\n            throw new Error(componentName.toUpperCase() + ': ' + ('Option \"' + property + '\" provided type \"' + valueType + '\" ') + ('but expected type \"' + expectedTypes + '\".'));\n          }\n        }\n      }\n    }\n  };\n\n  setTransitionEndSupport();\n\n  return Util;\n})(jQuery);\n//# sourceMappingURL=util.js.map\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = Util;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?Util!./~/bootstrap/js/dist/util.js\n ** module id = 2\n ** module chunks = 1\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_global.js\n ** module id = 3\n ** module chunks = 1\n **/","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_wks.js\n ** module id = 4\n ** module chunks = 1\n **/","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_hide.js\n ** module id = 5\n ** module chunks = 1\n **/","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_an-object.js\n ** module id = 6\n ** module chunks = 1\n **/","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_descriptors.js\n ** module id = 7\n ** module chunks = 1\n **/","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_has.js\n ** module id = 8\n ** module chunks = 1\n **/","module.exports = {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_iterators.js\n ** module id = 9\n ** module chunks = 1\n **/","/*! tether 1.3.7 */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require, exports, module);\n  } else {\n    root.Tether = factory();\n  }\n}(this, function(require, exports, module) {\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar TetherBase = undefined;\nif (typeof TetherBase === 'undefined') {\n  TetherBase = { modules: [] };\n}\n\nvar zeroElement = null;\n\n// Same as native getBoundingClientRect, except it takes into account parent <frame> offsets\n// if the element lies within a nested document (<frame> or <iframe>-like).\nfunction getActualBoundingClientRect(node) {\n  var boundingRect = node.getBoundingClientRect();\n\n  // The original object returned by getBoundingClientRect is immutable, so we clone it\n  // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9\n  var rect = {};\n  for (var k in boundingRect) {\n    rect[k] = boundingRect[k];\n  }\n\n  if (node.ownerDocument !== document) {\n    var _frameElement = node.ownerDocument.defaultView.frameElement;\n    if (_frameElement) {\n      var frameRect = getActualBoundingClientRect(_frameElement);\n      rect.top += frameRect.top;\n      rect.bottom += frameRect.top;\n      rect.left += frameRect.left;\n      rect.right += frameRect.left;\n    }\n  }\n\n  return rect;\n}\n\nfunction getScrollParents(el) {\n  // In firefox if the el is inside an iframe with display: none; window.getComputedStyle() will return null;\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  var computedStyle = getComputedStyle(el) || {};\n  var position = computedStyle.position;\n  var parents = [];\n\n  if (position === 'fixed') {\n    return [el];\n  }\n\n  var parent = el;\n  while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {\n    var style = undefined;\n    try {\n      style = getComputedStyle(parent);\n    } catch (err) {}\n\n    if (typeof style === 'undefined' || style === null) {\n      parents.push(parent);\n      return parents;\n    }\n\n    var _style = style;\n    var overflow = _style.overflow;\n    var overflowX = _style.overflowX;\n    var overflowY = _style.overflowY;\n\n    if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n      if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {\n        parents.push(parent);\n      }\n    }\n  }\n\n  parents.push(el.ownerDocument.body);\n\n  // If the node is within a frame, account for the parent window scroll\n  if (el.ownerDocument !== document) {\n    parents.push(el.ownerDocument.defaultView);\n  }\n\n  return parents;\n}\n\nvar uniqueId = (function () {\n  var id = 0;\n  return function () {\n    return ++id;\n  };\n})();\n\nvar zeroPosCache = {};\nvar getOrigin = function getOrigin() {\n  // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of\n  // jitter as the user scrolls that messes with our ability to detect if two positions\n  // are equivilant or not.  We place an element at the top left of the page that will\n  // get the same jitter, so we can cancel the two out.\n  var node = zeroElement;\n  if (!node) {\n    node = document.createElement('div');\n    node.setAttribute('data-tether-id', uniqueId());\n    extend(node.style, {\n      top: 0,\n      left: 0,\n      position: 'absolute'\n    });\n\n    document.body.appendChild(node);\n\n    zeroElement = node;\n  }\n\n  var id = node.getAttribute('data-tether-id');\n  if (typeof zeroPosCache[id] === 'undefined') {\n    zeroPosCache[id] = getActualBoundingClientRect(node);\n\n    // Clear the cache when this position call is done\n    defer(function () {\n      delete zeroPosCache[id];\n    });\n  }\n\n  return zeroPosCache[id];\n};\n\nfunction removeUtilElements() {\n  if (zeroElement) {\n    document.body.removeChild(zeroElement);\n  }\n  zeroElement = null;\n};\n\nfunction getBounds(el) {\n  var doc = undefined;\n  if (el === document) {\n    doc = document;\n    el = document.documentElement;\n  } else {\n    doc = el.ownerDocument;\n  }\n\n  var docEl = doc.documentElement;\n\n  var box = getActualBoundingClientRect(el);\n\n  var origin = getOrigin();\n\n  box.top -= origin.top;\n  box.left -= origin.left;\n\n  if (typeof box.width === 'undefined') {\n    box.width = document.body.scrollWidth - box.left - box.right;\n  }\n  if (typeof box.height === 'undefined') {\n    box.height = document.body.scrollHeight - box.top - box.bottom;\n  }\n\n  box.top = box.top - docEl.clientTop;\n  box.left = box.left - docEl.clientLeft;\n  box.right = doc.body.clientWidth - box.width - box.left;\n  box.bottom = doc.body.clientHeight - box.height - box.top;\n\n  return box;\n}\n\nfunction getOffsetParent(el) {\n  return el.offsetParent || document.documentElement;\n}\n\nvar _scrollBarSize = null;\nfunction getScrollBarSize() {\n  if (_scrollBarSize) {\n    return _scrollBarSize;\n  }\n  var inner = document.createElement('div');\n  inner.style.width = '100%';\n  inner.style.height = '200px';\n\n  var outer = document.createElement('div');\n  extend(outer.style, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    pointerEvents: 'none',\n    visibility: 'hidden',\n    width: '200px',\n    height: '150px',\n    overflow: 'hidden'\n  });\n\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n\n  var widthContained = inner.offsetWidth;\n  outer.style.overflow = 'scroll';\n  var widthScroll = inner.offsetWidth;\n\n  if (widthContained === widthScroll) {\n    widthScroll = outer.clientWidth;\n  }\n\n  document.body.removeChild(outer);\n\n  var width = widthContained - widthScroll;\n\n  _scrollBarSize = { width: width, height: width };\n  return _scrollBarSize;\n}\n\nfunction extend() {\n  var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  var args = [];\n\n  Array.prototype.push.apply(args, arguments);\n\n  args.slice(1).forEach(function (obj) {\n    if (obj) {\n      for (var key in obj) {\n        if (({}).hasOwnProperty.call(obj, key)) {\n          out[key] = obj[key];\n        }\n      }\n    }\n  });\n\n  return out;\n}\n\nfunction removeClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    name.split(' ').forEach(function (cls) {\n      if (cls.trim()) {\n        el.classList.remove(cls);\n      }\n    });\n  } else {\n    var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');\n    var className = getClassName(el).replace(regex, ' ');\n    setClassName(el, className);\n  }\n}\n\nfunction addClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    name.split(' ').forEach(function (cls) {\n      if (cls.trim()) {\n        el.classList.add(cls);\n      }\n    });\n  } else {\n    removeClass(el, name);\n    var cls = getClassName(el) + (' ' + name);\n    setClassName(el, cls);\n  }\n}\n\nfunction hasClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    return el.classList.contains(name);\n  }\n  var className = getClassName(el);\n  return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);\n}\n\nfunction getClassName(el) {\n  // Can't use just SVGAnimatedString here since nodes within a Frame in IE have\n  // completely separately SVGAnimatedString base classes\n  if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {\n    return el.className.baseVal;\n  }\n  return el.className;\n}\n\nfunction setClassName(el, className) {\n  el.setAttribute('class', className);\n}\n\nfunction updateClasses(el, add, all) {\n  // Of the set of 'all' classes, we need the 'add' classes, and only the\n  // 'add' classes to be set.\n  all.forEach(function (cls) {\n    if (add.indexOf(cls) === -1 && hasClass(el, cls)) {\n      removeClass(el, cls);\n    }\n  });\n\n  add.forEach(function (cls) {\n    if (!hasClass(el, cls)) {\n      addClass(el, cls);\n    }\n  });\n}\n\nvar deferred = [];\n\nvar defer = function defer(fn) {\n  deferred.push(fn);\n};\n\nvar flush = function flush() {\n  var fn = undefined;\n  while (fn = deferred.pop()) {\n    fn();\n  }\n};\n\nvar Evented = (function () {\n  function Evented() {\n    _classCallCheck(this, Evented);\n  }\n\n  _createClass(Evented, [{\n    key: 'on',\n    value: function on(event, handler, ctx) {\n      var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n      if (typeof this.bindings === 'undefined') {\n        this.bindings = {};\n      }\n      if (typeof this.bindings[event] === 'undefined') {\n        this.bindings[event] = [];\n      }\n      this.bindings[event].push({ handler: handler, ctx: ctx, once: once });\n    }\n  }, {\n    key: 'once',\n    value: function once(event, handler, ctx) {\n      this.on(event, handler, ctx, true);\n    }\n  }, {\n    key: 'off',\n    value: function off(event, handler) {\n      if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {\n        return;\n      }\n\n      if (typeof handler === 'undefined') {\n        delete this.bindings[event];\n      } else {\n        var i = 0;\n        while (i < this.bindings[event].length) {\n          if (this.bindings[event][i].handler === handler) {\n            this.bindings[event].splice(i, 1);\n          } else {\n            ++i;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'trigger',\n    value: function trigger(event) {\n      if (typeof this.bindings !== 'undefined' && this.bindings[event]) {\n        var i = 0;\n\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        while (i < this.bindings[event].length) {\n          var _bindings$event$i = this.bindings[event][i];\n          var handler = _bindings$event$i.handler;\n          var ctx = _bindings$event$i.ctx;\n          var once = _bindings$event$i.once;\n\n          var context = ctx;\n          if (typeof context === 'undefined') {\n            context = this;\n          }\n\n          handler.apply(context, args);\n\n          if (once) {\n            this.bindings[event].splice(i, 1);\n          } else {\n            ++i;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Evented;\n})();\n\nTetherBase.Utils = {\n  getActualBoundingClientRect: getActualBoundingClientRect,\n  getScrollParents: getScrollParents,\n  getBounds: getBounds,\n  getOffsetParent: getOffsetParent,\n  extend: extend,\n  addClass: addClass,\n  removeClass: removeClass,\n  hasClass: hasClass,\n  updateClasses: updateClasses,\n  defer: defer,\n  flush: flush,\n  uniqueId: uniqueId,\n  Evented: Evented,\n  getScrollBarSize: getScrollBarSize,\n  removeUtilElements: removeUtilElements\n};\n/* globals TetherBase, performance */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x6, _x7, _x8) { var _again = true; _function: while (_again) { var object = _x6, property = _x7, receiver = _x8; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x6 = parent; _x7 = property; _x8 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nif (typeof TetherBase === 'undefined') {\n  throw new Error('You must include the utils.js file before tether.js');\n}\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getScrollParents = _TetherBase$Utils.getScrollParents;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar getOffsetParent = _TetherBase$Utils.getOffsetParent;\nvar extend = _TetherBase$Utils.extend;\nvar addClass = _TetherBase$Utils.addClass;\nvar removeClass = _TetherBase$Utils.removeClass;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\nvar flush = _TetherBase$Utils.flush;\nvar getScrollBarSize = _TetherBase$Utils.getScrollBarSize;\nvar removeUtilElements = _TetherBase$Utils.removeUtilElements;\n\nfunction within(a, b) {\n  var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n\n  return a + diff >= b && b >= a - diff;\n}\n\nvar transformKey = (function () {\n  if (typeof document === 'undefined') {\n    return '';\n  }\n  var el = document.createElement('div');\n\n  var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];\n  for (var i = 0; i < transforms.length; ++i) {\n    var key = transforms[i];\n    if (el.style[key] !== undefined) {\n      return key;\n    }\n  }\n})();\n\nvar tethers = [];\n\nvar position = function position() {\n  tethers.forEach(function (tether) {\n    tether.position(false);\n  });\n  flush();\n};\n\nfunction now() {\n  if (typeof performance !== 'undefined' && typeof performance.now !== 'undefined') {\n    return performance.now();\n  }\n  return +new Date();\n}\n\n(function () {\n  var lastCall = null;\n  var lastDuration = null;\n  var pendingTimeout = null;\n\n  var tick = function tick() {\n    if (typeof lastDuration !== 'undefined' && lastDuration > 16) {\n      // We voluntarily throttle ourselves if we can't manage 60fps\n      lastDuration = Math.min(lastDuration - 16, 250);\n\n      // Just in case this is the last event, remember to position just once more\n      pendingTimeout = setTimeout(tick, 250);\n      return;\n    }\n\n    if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {\n      // Some browsers call events a little too frequently, refuse to run more than is reasonable\n      return;\n    }\n\n    if (pendingTimeout != null) {\n      clearTimeout(pendingTimeout);\n      pendingTimeout = null;\n    }\n\n    lastCall = now();\n    position();\n    lastDuration = now() - lastCall;\n  };\n\n  if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {\n    ['resize', 'scroll', 'touchmove'].forEach(function (event) {\n      window.addEventListener(event, tick);\n    });\n  }\n})();\n\nvar MIRROR_LR = {\n  center: 'center',\n  left: 'right',\n  right: 'left'\n};\n\nvar MIRROR_TB = {\n  middle: 'middle',\n  top: 'bottom',\n  bottom: 'top'\n};\n\nvar OFFSET_MAP = {\n  top: 0,\n  left: 0,\n  middle: '50%',\n  center: '50%',\n  bottom: '100%',\n  right: '100%'\n};\n\nvar autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {\n  var left = attachment.left;\n  var top = attachment.top;\n\n  if (left === 'auto') {\n    left = MIRROR_LR[relativeToAttachment.left];\n  }\n\n  if (top === 'auto') {\n    top = MIRROR_TB[relativeToAttachment.top];\n  }\n\n  return { left: left, top: top };\n};\n\nvar attachmentToOffset = function attachmentToOffset(attachment) {\n  var left = attachment.left;\n  var top = attachment.top;\n\n  if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {\n    left = OFFSET_MAP[attachment.left];\n  }\n\n  if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {\n    top = OFFSET_MAP[attachment.top];\n  }\n\n  return { left: left, top: top };\n};\n\nfunction addOffset() {\n  var out = { top: 0, left: 0 };\n\n  for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {\n    offsets[_key] = arguments[_key];\n  }\n\n  offsets.forEach(function (_ref) {\n    var top = _ref.top;\n    var left = _ref.left;\n\n    if (typeof top === 'string') {\n      top = parseFloat(top, 10);\n    }\n    if (typeof left === 'string') {\n      left = parseFloat(left, 10);\n    }\n\n    out.top += top;\n    out.left += left;\n  });\n\n  return out;\n}\n\nfunction offsetToPx(offset, size) {\n  if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {\n    offset.left = parseFloat(offset.left, 10) / 100 * size.width;\n  }\n  if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {\n    offset.top = parseFloat(offset.top, 10) / 100 * size.height;\n  }\n\n  return offset;\n}\n\nvar parseOffset = function parseOffset(value) {\n  var _value$split = value.split(' ');\n\n  var _value$split2 = _slicedToArray(_value$split, 2);\n\n  var top = _value$split2[0];\n  var left = _value$split2[1];\n\n  return { top: top, left: left };\n};\nvar parseAttachment = parseOffset;\n\nvar TetherClass = (function (_Evented) {\n  _inherits(TetherClass, _Evented);\n\n  function TetherClass(options) {\n    var _this = this;\n\n    _classCallCheck(this, TetherClass);\n\n    _get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);\n    this.position = this.position.bind(this);\n\n    tethers.push(this);\n\n    this.history = [];\n\n    this.setOptions(options, false);\n\n    TetherBase.modules.forEach(function (module) {\n      if (typeof module.initialize !== 'undefined') {\n        module.initialize.call(_this);\n      }\n    });\n\n    this.position();\n  }\n\n  _createClass(TetherClass, [{\n    key: 'getClass',\n    value: function getClass() {\n      var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n      var classes = this.options.classes;\n\n      if (typeof classes !== 'undefined' && classes[key]) {\n        return this.options.classes[key];\n      } else if (this.options.classPrefix) {\n        return this.options.classPrefix + '-' + key;\n      } else {\n        return key;\n      }\n    }\n  }, {\n    key: 'setOptions',\n    value: function setOptions(options) {\n      var _this2 = this;\n\n      var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n      var defaults = {\n        offset: '0 0',\n        targetOffset: '0 0',\n        targetAttachment: 'auto auto',\n        classPrefix: 'tether'\n      };\n\n      this.options = extend(defaults, options);\n\n      var _options = this.options;\n      var element = _options.element;\n      var target = _options.target;\n      var targetModifier = _options.targetModifier;\n\n      this.element = element;\n      this.target = target;\n      this.targetModifier = targetModifier;\n\n      if (this.target === 'viewport') {\n        this.target = document.body;\n        this.targetModifier = 'visible';\n      } else if (this.target === 'scroll-handle') {\n        this.target = document.body;\n        this.targetModifier = 'scroll-handle';\n      }\n\n      ['element', 'target'].forEach(function (key) {\n        if (typeof _this2[key] === 'undefined') {\n          throw new Error('Tether Error: Both element and target must be defined');\n        }\n\n        if (typeof _this2[key].jquery !== 'undefined') {\n          _this2[key] = _this2[key][0];\n        } else if (typeof _this2[key] === 'string') {\n          _this2[key] = document.querySelector(_this2[key]);\n        }\n      });\n\n      addClass(this.element, this.getClass('element'));\n      if (!(this.options.addTargetClasses === false)) {\n        addClass(this.target, this.getClass('target'));\n      }\n\n      if (!this.options.attachment) {\n        throw new Error('Tether Error: You must provide an attachment');\n      }\n\n      this.targetAttachment = parseAttachment(this.options.targetAttachment);\n      this.attachment = parseAttachment(this.options.attachment);\n      this.offset = parseOffset(this.options.offset);\n      this.targetOffset = parseOffset(this.options.targetOffset);\n\n      if (typeof this.scrollParents !== 'undefined') {\n        this.disable();\n      }\n\n      if (this.targetModifier === 'scroll-handle') {\n        this.scrollParents = [this.target];\n      } else {\n        this.scrollParents = getScrollParents(this.target);\n      }\n\n      if (!(this.options.enabled === false)) {\n        this.enable(pos);\n      }\n    }\n  }, {\n    key: 'getTargetBounds',\n    value: function getTargetBounds() {\n      if (typeof this.targetModifier !== 'undefined') {\n        if (this.targetModifier === 'visible') {\n          if (this.target === document.body) {\n            return { top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth };\n          } else {\n            var bounds = getBounds(this.target);\n\n            var out = {\n              height: bounds.height,\n              width: bounds.width,\n              top: bounds.top,\n              left: bounds.left\n            };\n\n            out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));\n            out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));\n            out.height = Math.min(innerHeight, out.height);\n            out.height -= 2;\n\n            out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));\n            out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));\n            out.width = Math.min(innerWidth, out.width);\n            out.width -= 2;\n\n            if (out.top < pageYOffset) {\n              out.top = pageYOffset;\n            }\n            if (out.left < pageXOffset) {\n              out.left = pageXOffset;\n            }\n\n            return out;\n          }\n        } else if (this.targetModifier === 'scroll-handle') {\n          var bounds = undefined;\n          var target = this.target;\n          if (target === document.body) {\n            target = document.documentElement;\n\n            bounds = {\n              left: pageXOffset,\n              top: pageYOffset,\n              height: innerHeight,\n              width: innerWidth\n            };\n          } else {\n            bounds = getBounds(target);\n          }\n\n          var style = getComputedStyle(target);\n\n          var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;\n\n          var scrollBottom = 0;\n          if (hasBottomScroll) {\n            scrollBottom = 15;\n          }\n\n          var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;\n\n          var out = {\n            width: 15,\n            height: height * 0.975 * (height / target.scrollHeight),\n            left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15\n          };\n\n          var fitAdj = 0;\n          if (height < 408 && this.target === document.body) {\n            fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;\n          }\n\n          if (this.target !== document.body) {\n            out.height = Math.max(out.height, 24);\n          }\n\n          var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);\n          out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);\n\n          if (this.target === document.body) {\n            out.height = Math.max(out.height, 24);\n          }\n\n          return out;\n        }\n      } else {\n        return getBounds(this.target);\n      }\n    }\n  }, {\n    key: 'clearCache',\n    value: function clearCache() {\n      this._cache = {};\n    }\n  }, {\n    key: 'cache',\n    value: function cache(k, getter) {\n      // More than one module will often need the same DOM info, so\n      // we keep a cache which is cleared on each position call\n      if (typeof this._cache === 'undefined') {\n        this._cache = {};\n      }\n\n      if (typeof this._cache[k] === 'undefined') {\n        this._cache[k] = getter.call(this);\n      }\n\n      return this._cache[k];\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      var _this3 = this;\n\n      var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n      if (!(this.options.addTargetClasses === false)) {\n        addClass(this.target, this.getClass('enabled'));\n      }\n      addClass(this.element, this.getClass('enabled'));\n      this.enabled = true;\n\n      this.scrollParents.forEach(function (parent) {\n        if (parent !== _this3.target.ownerDocument) {\n          parent.addEventListener('scroll', _this3.position);\n        }\n      });\n\n      if (pos) {\n        this.position();\n      }\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      var _this4 = this;\n\n      removeClass(this.target, this.getClass('enabled'));\n      removeClass(this.element, this.getClass('enabled'));\n      this.enabled = false;\n\n      if (typeof this.scrollParents !== 'undefined') {\n        this.scrollParents.forEach(function (parent) {\n          parent.removeEventListener('scroll', _this4.position);\n        });\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this5 = this;\n\n      this.disable();\n\n      tethers.forEach(function (tether, i) {\n        if (tether === _this5) {\n          tethers.splice(i, 1);\n        }\n      });\n\n      // Remove any elements we were using for convenience from the DOM\n      if (tethers.length === 0) {\n        removeUtilElements();\n      }\n    }\n  }, {\n    key: 'updateAttachClasses',\n    value: function updateAttachClasses(elementAttach, targetAttach) {\n      var _this6 = this;\n\n      elementAttach = elementAttach || this.attachment;\n      targetAttach = targetAttach || this.targetAttachment;\n      var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];\n\n      if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {\n        // updateAttachClasses can be called more than once in a position call, so\n        // we need to clean up after ourselves such that when the last defer gets\n        // ran it doesn't add any extra classes from previous calls.\n        this._addAttachClasses.splice(0, this._addAttachClasses.length);\n      }\n\n      if (typeof this._addAttachClasses === 'undefined') {\n        this._addAttachClasses = [];\n      }\n      var add = this._addAttachClasses;\n\n      if (elementAttach.top) {\n        add.push(this.getClass('element-attached') + '-' + elementAttach.top);\n      }\n      if (elementAttach.left) {\n        add.push(this.getClass('element-attached') + '-' + elementAttach.left);\n      }\n      if (targetAttach.top) {\n        add.push(this.getClass('target-attached') + '-' + targetAttach.top);\n      }\n      if (targetAttach.left) {\n        add.push(this.getClass('target-attached') + '-' + targetAttach.left);\n      }\n\n      var all = [];\n      sides.forEach(function (side) {\n        all.push(_this6.getClass('element-attached') + '-' + side);\n        all.push(_this6.getClass('target-attached') + '-' + side);\n      });\n\n      defer(function () {\n        if (!(typeof _this6._addAttachClasses !== 'undefined')) {\n          return;\n        }\n\n        updateClasses(_this6.element, _this6._addAttachClasses, all);\n        if (!(_this6.options.addTargetClasses === false)) {\n          updateClasses(_this6.target, _this6._addAttachClasses, all);\n        }\n\n        delete _this6._addAttachClasses;\n      });\n    }\n  }, {\n    key: 'position',\n    value: function position() {\n      var _this7 = this;\n\n      var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n      // flushChanges commits the changes immediately, leave true unless you are positioning multiple\n      // tethers (in which case call Tether.Utils.flush yourself when you're done)\n\n      if (!this.enabled) {\n        return;\n      }\n\n      this.clearCache();\n\n      // Turn 'auto' attachments into the appropriate corner or edge\n      var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);\n\n      this.updateAttachClasses(this.attachment, targetAttachment);\n\n      var elementPos = this.cache('element-bounds', function () {\n        return getBounds(_this7.element);\n      });\n\n      var width = elementPos.width;\n      var height = elementPos.height;\n\n      if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n        var _lastSize = this.lastSize;\n\n        // We cache the height and width to make it possible to position elements that are\n        // getting hidden.\n        width = _lastSize.width;\n        height = _lastSize.height;\n      } else {\n        this.lastSize = { width: width, height: height };\n      }\n\n      var targetPos = this.cache('target-bounds', function () {\n        return _this7.getTargetBounds();\n      });\n      var targetSize = targetPos;\n\n      // Get an actual px offset from the attachment\n      var offset = offsetToPx(attachmentToOffset(this.attachment), { width: width, height: height });\n      var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);\n\n      var manualOffset = offsetToPx(this.offset, { width: width, height: height });\n      var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);\n\n      // Add the manually provided offset\n      offset = addOffset(offset, manualOffset);\n      targetOffset = addOffset(targetOffset, manualTargetOffset);\n\n      // It's now our goal to make (element position + offset) == (target position + target offset)\n      var left = targetPos.left + targetOffset.left - offset.left;\n      var top = targetPos.top + targetOffset.top - offset.top;\n\n      for (var i = 0; i < TetherBase.modules.length; ++i) {\n        var _module2 = TetherBase.modules[i];\n        var ret = _module2.position.call(this, {\n          left: left,\n          top: top,\n          targetAttachment: targetAttachment,\n          targetPos: targetPos,\n          elementPos: elementPos,\n          offset: offset,\n          targetOffset: targetOffset,\n          manualOffset: manualOffset,\n          manualTargetOffset: manualTargetOffset,\n          scrollbarSize: scrollbarSize,\n          attachment: this.attachment\n        });\n\n        if (ret === false) {\n          return false;\n        } else if (typeof ret === 'undefined' || typeof ret !== 'object') {\n          continue;\n        } else {\n          top = ret.top;\n          left = ret.left;\n        }\n      }\n\n      // We describe the position three different ways to give the optimizer\n      // a chance to decide the best possible way to position the element\n      // with the fewest repaints.\n      var next = {\n        // It's position relative to the page (absolute positioning when\n        // the element is a child of the body)\n        page: {\n          top: top,\n          left: left\n        },\n\n        // It's position relative to the viewport (fixed positioning)\n        viewport: {\n          top: top - pageYOffset,\n          bottom: pageYOffset - top - height + innerHeight,\n          left: left - pageXOffset,\n          right: pageXOffset - left - width + innerWidth\n        }\n      };\n\n      var doc = this.target.ownerDocument;\n      var win = doc.defaultView;\n\n      var scrollbarSize = undefined;\n      if (win.innerHeight > doc.documentElement.clientHeight) {\n        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\n        next.viewport.bottom -= scrollbarSize.height;\n      }\n\n      if (win.innerWidth > doc.documentElement.clientWidth) {\n        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\n        next.viewport.right -= scrollbarSize.width;\n      }\n\n      if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {\n        // Absolute positioning in the body will be relative to the page, not the 'initial containing block'\n        next.page.bottom = doc.body.scrollHeight - top - height;\n        next.page.right = doc.body.scrollWidth - left - width;\n      }\n\n      if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {\n        (function () {\n          var offsetParent = _this7.cache('target-offsetparent', function () {\n            return getOffsetParent(_this7.target);\n          });\n          var offsetPosition = _this7.cache('target-offsetparent-bounds', function () {\n            return getBounds(offsetParent);\n          });\n          var offsetParentStyle = getComputedStyle(offsetParent);\n          var offsetParentSize = offsetPosition;\n\n          var offsetBorder = {};\n          ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {\n            offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);\n          });\n\n          offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;\n          offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;\n\n          if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {\n            if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {\n              // We're within the visible part of the target's scroll parent\n              var scrollTop = offsetParent.scrollTop;\n              var scrollLeft = offsetParent.scrollLeft;\n\n              // It's position relative to the target's offset parent (absolute positioning when\n              // the element is moved to be a child of the target's offset parent).\n              next.offset = {\n                top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,\n                left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left\n              };\n            }\n          }\n        })();\n      }\n\n      // We could also travel up the DOM and try each containing context, rather than only\n      // looking at the body, but we're gonna get diminishing returns.\n\n      this.move(next);\n\n      this.history.unshift(next);\n\n      if (this.history.length > 3) {\n        this.history.pop();\n      }\n\n      if (flushChanges) {\n        flush();\n      }\n\n      return true;\n    }\n\n    // THE ISSUE\n  }, {\n    key: 'move',\n    value: function move(pos) {\n      var _this8 = this;\n\n      if (!(typeof this.element.parentNode !== 'undefined')) {\n        return;\n      }\n\n      var same = {};\n\n      for (var type in pos) {\n        same[type] = {};\n\n        for (var key in pos[type]) {\n          var found = false;\n\n          for (var i = 0; i < this.history.length; ++i) {\n            var point = this.history[i];\n            if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            same[type][key] = true;\n          }\n        }\n      }\n\n      var css = { top: '', left: '', right: '', bottom: '' };\n\n      var transcribe = function transcribe(_same, _pos) {\n        var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';\n        var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;\n        if (gpu !== false) {\n          var yPos = undefined,\n              xPos = undefined;\n          if (_same.top) {\n            css.top = 0;\n            yPos = _pos.top;\n          } else {\n            css.bottom = 0;\n            yPos = -_pos.bottom;\n          }\n\n          if (_same.left) {\n            css.left = 0;\n            xPos = _pos.left;\n          } else {\n            css.right = 0;\n            xPos = -_pos.right;\n          }\n\n          if (window.matchMedia) {\n            // HubSpot/tether#207\n            var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;\n            if (!retina) {\n              xPos = Math.round(xPos);\n              yPos = Math.round(yPos);\n            }\n          }\n\n          css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';\n\n          if (transformKey !== 'msTransform') {\n            // The Z transform will keep this in the GPU (faster, and prevents artifacts),\n            // but IE9 doesn't support 3d transforms and will choke.\n            css[transformKey] += \" translateZ(0)\";\n          }\n        } else {\n          if (_same.top) {\n            css.top = _pos.top + 'px';\n          } else {\n            css.bottom = _pos.bottom + 'px';\n          }\n\n          if (_same.left) {\n            css.left = _pos.left + 'px';\n          } else {\n            css.right = _pos.right + 'px';\n          }\n        }\n      };\n\n      var moved = false;\n      if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {\n        css.position = 'absolute';\n        transcribe(same.page, pos.page);\n      } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {\n        css.position = 'fixed';\n        transcribe(same.viewport, pos.viewport);\n      } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {\n        (function () {\n          css.position = 'absolute';\n          var offsetParent = _this8.cache('target-offsetparent', function () {\n            return getOffsetParent(_this8.target);\n          });\n\n          if (getOffsetParent(_this8.element) !== offsetParent) {\n            defer(function () {\n              _this8.element.parentNode.removeChild(_this8.element);\n              offsetParent.appendChild(_this8.element);\n            });\n          }\n\n          transcribe(same.offset, pos.offset);\n          moved = true;\n        })();\n      } else {\n        css.position = 'absolute';\n        transcribe({ top: true, left: true }, pos.page);\n      }\n\n      if (!moved) {\n        var offsetParentIsBody = true;\n        var currentNode = this.element.parentNode;\n        while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {\n          if (getComputedStyle(currentNode).position !== 'static') {\n            offsetParentIsBody = false;\n            break;\n          }\n\n          currentNode = currentNode.parentNode;\n        }\n\n        if (!offsetParentIsBody) {\n          this.element.parentNode.removeChild(this.element);\n          this.element.ownerDocument.body.appendChild(this.element);\n        }\n      }\n\n      // Any css change will trigger a repaint, so let's avoid one if nothing changed\n      var writeCSS = {};\n      var write = false;\n      for (var key in css) {\n        var val = css[key];\n        var elVal = this.element.style[key];\n\n        if (elVal !== val) {\n          write = true;\n          writeCSS[key] = val;\n        }\n      }\n\n      if (write) {\n        defer(function () {\n          extend(_this8.element.style, writeCSS);\n          _this8.trigger('repositioned');\n        });\n      }\n    }\n  }]);\n\n  return TetherClass;\n})(Evented);\n\nTetherClass.modules = [];\n\nTetherBase.position = position;\n\nvar Tether = extend(TetherClass, TetherBase);\n/* globals TetherBase */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar extend = _TetherBase$Utils.extend;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\n\nvar BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];\n\nfunction getBoundingRect(tether, to) {\n  if (to === 'scrollParent') {\n    to = tether.scrollParents[0];\n  } else if (to === 'window') {\n    to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];\n  }\n\n  if (to === document) {\n    to = to.documentElement;\n  }\n\n  if (typeof to.nodeType !== 'undefined') {\n    (function () {\n      var node = to;\n      var size = getBounds(to);\n      var pos = size;\n      var style = getComputedStyle(to);\n\n      to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];\n\n      // Account any parent Frames scroll offset\n      if (node.ownerDocument !== document) {\n        var win = node.ownerDocument.defaultView;\n        to[0] += win.pageXOffset;\n        to[1] += win.pageYOffset;\n        to[2] += win.pageXOffset;\n        to[3] += win.pageYOffset;\n      }\n\n      BOUNDS_FORMAT.forEach(function (side, i) {\n        side = side[0].toUpperCase() + side.substr(1);\n        if (side === 'Top' || side === 'Left') {\n          to[i] += parseFloat(style['border' + side + 'Width']);\n        } else {\n          to[i] -= parseFloat(style['border' + side + 'Width']);\n        }\n      });\n    })();\n  }\n\n  return to;\n}\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var _this = this;\n\n    var top = _ref.top;\n    var left = _ref.left;\n    var targetAttachment = _ref.targetAttachment;\n\n    if (!this.options.constraints) {\n      return true;\n    }\n\n    var _cache = this.cache('element-bounds', function () {\n      return getBounds(_this.element);\n    });\n\n    var height = _cache.height;\n    var width = _cache.width;\n\n    if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n      var _lastSize = this.lastSize;\n\n      // Handle the item getting hidden as a result of our positioning without glitching\n      // the classes in and out\n      width = _lastSize.width;\n      height = _lastSize.height;\n    }\n\n    var targetSize = this.cache('target-bounds', function () {\n      return _this.getTargetBounds();\n    });\n\n    var targetHeight = targetSize.height;\n    var targetWidth = targetSize.width;\n\n    var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];\n\n    this.options.constraints.forEach(function (constraint) {\n      var outOfBoundsClass = constraint.outOfBoundsClass;\n      var pinnedClass = constraint.pinnedClass;\n\n      if (outOfBoundsClass) {\n        allClasses.push(outOfBoundsClass);\n      }\n      if (pinnedClass) {\n        allClasses.push(pinnedClass);\n      }\n    });\n\n    allClasses.forEach(function (cls) {\n      ['left', 'top', 'right', 'bottom'].forEach(function (side) {\n        allClasses.push(cls + '-' + side);\n      });\n    });\n\n    var addClasses = [];\n\n    var tAttachment = extend({}, targetAttachment);\n    var eAttachment = extend({}, this.attachment);\n\n    this.options.constraints.forEach(function (constraint) {\n      var to = constraint.to;\n      var attachment = constraint.attachment;\n      var pin = constraint.pin;\n\n      if (typeof attachment === 'undefined') {\n        attachment = '';\n      }\n\n      var changeAttachX = undefined,\n          changeAttachY = undefined;\n      if (attachment.indexOf(' ') >= 0) {\n        var _attachment$split = attachment.split(' ');\n\n        var _attachment$split2 = _slicedToArray(_attachment$split, 2);\n\n        changeAttachY = _attachment$split2[0];\n        changeAttachX = _attachment$split2[1];\n      } else {\n        changeAttachX = changeAttachY = attachment;\n      }\n\n      var bounds = getBoundingRect(_this, to);\n\n      if (changeAttachY === 'target' || changeAttachY === 'both') {\n        if (top < bounds[1] && tAttachment.top === 'top') {\n          top += targetHeight;\n          tAttachment.top = 'bottom';\n        }\n\n        if (top + height > bounds[3] && tAttachment.top === 'bottom') {\n          top -= targetHeight;\n          tAttachment.top = 'top';\n        }\n      }\n\n      if (changeAttachY === 'together') {\n        if (tAttachment.top === 'top') {\n          if (eAttachment.top === 'bottom' && top < bounds[1]) {\n            top += targetHeight;\n            tAttachment.top = 'bottom';\n\n            top += height;\n            eAttachment.top = 'top';\n          } else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {\n            top -= height - targetHeight;\n            tAttachment.top = 'bottom';\n\n            eAttachment.top = 'bottom';\n          }\n        }\n\n        if (tAttachment.top === 'bottom') {\n          if (eAttachment.top === 'top' && top + height > bounds[3]) {\n            top -= targetHeight;\n            tAttachment.top = 'top';\n\n            top -= height;\n            eAttachment.top = 'bottom';\n          } else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {\n            top += height - targetHeight;\n            tAttachment.top = 'top';\n\n            eAttachment.top = 'top';\n          }\n        }\n\n        if (tAttachment.top === 'middle') {\n          if (top + height > bounds[3] && eAttachment.top === 'top') {\n            top -= height;\n            eAttachment.top = 'bottom';\n          } else if (top < bounds[1] && eAttachment.top === 'bottom') {\n            top += height;\n            eAttachment.top = 'top';\n          }\n        }\n      }\n\n      if (changeAttachX === 'target' || changeAttachX === 'both') {\n        if (left < bounds[0] && tAttachment.left === 'left') {\n          left += targetWidth;\n          tAttachment.left = 'right';\n        }\n\n        if (left + width > bounds[2] && tAttachment.left === 'right') {\n          left -= targetWidth;\n          tAttachment.left = 'left';\n        }\n      }\n\n      if (changeAttachX === 'together') {\n        if (left < bounds[0] && tAttachment.left === 'left') {\n          if (eAttachment.left === 'right') {\n            left += targetWidth;\n            tAttachment.left = 'right';\n\n            left += width;\n            eAttachment.left = 'left';\n          } else if (eAttachment.left === 'left') {\n            left += targetWidth;\n            tAttachment.left = 'right';\n\n            left -= width;\n            eAttachment.left = 'right';\n          }\n        } else if (left + width > bounds[2] && tAttachment.left === 'right') {\n          if (eAttachment.left === 'left') {\n            left -= targetWidth;\n            tAttachment.left = 'left';\n\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (eAttachment.left === 'right') {\n            left -= targetWidth;\n            tAttachment.left = 'left';\n\n            left += width;\n            eAttachment.left = 'left';\n          }\n        } else if (tAttachment.left === 'center') {\n          if (left + width > bounds[2] && eAttachment.left === 'left') {\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (left < bounds[0] && eAttachment.left === 'right') {\n            left += width;\n            eAttachment.left = 'left';\n          }\n        }\n      }\n\n      if (changeAttachY === 'element' || changeAttachY === 'both') {\n        if (top < bounds[1] && eAttachment.top === 'bottom') {\n          top += height;\n          eAttachment.top = 'top';\n        }\n\n        if (top + height > bounds[3] && eAttachment.top === 'top') {\n          top -= height;\n          eAttachment.top = 'bottom';\n        }\n      }\n\n      if (changeAttachX === 'element' || changeAttachX === 'both') {\n        if (left < bounds[0]) {\n          if (eAttachment.left === 'right') {\n            left += width;\n            eAttachment.left = 'left';\n          } else if (eAttachment.left === 'center') {\n            left += width / 2;\n            eAttachment.left = 'left';\n          }\n        }\n\n        if (left + width > bounds[2]) {\n          if (eAttachment.left === 'left') {\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (eAttachment.left === 'center') {\n            left -= width / 2;\n            eAttachment.left = 'right';\n          }\n        }\n      }\n\n      if (typeof pin === 'string') {\n        pin = pin.split(',').map(function (p) {\n          return p.trim();\n        });\n      } else if (pin === true) {\n        pin = ['top', 'left', 'right', 'bottom'];\n      }\n\n      pin = pin || [];\n\n      var pinned = [];\n      var oob = [];\n\n      if (top < bounds[1]) {\n        if (pin.indexOf('top') >= 0) {\n          top = bounds[1];\n          pinned.push('top');\n        } else {\n          oob.push('top');\n        }\n      }\n\n      if (top + height > bounds[3]) {\n        if (pin.indexOf('bottom') >= 0) {\n          top = bounds[3] - height;\n          pinned.push('bottom');\n        } else {\n          oob.push('bottom');\n        }\n      }\n\n      if (left < bounds[0]) {\n        if (pin.indexOf('left') >= 0) {\n          left = bounds[0];\n          pinned.push('left');\n        } else {\n          oob.push('left');\n        }\n      }\n\n      if (left + width > bounds[2]) {\n        if (pin.indexOf('right') >= 0) {\n          left = bounds[2] - width;\n          pinned.push('right');\n        } else {\n          oob.push('right');\n        }\n      }\n\n      if (pinned.length) {\n        (function () {\n          var pinnedClass = undefined;\n          if (typeof _this.options.pinnedClass !== 'undefined') {\n            pinnedClass = _this.options.pinnedClass;\n          } else {\n            pinnedClass = _this.getClass('pinned');\n          }\n\n          addClasses.push(pinnedClass);\n          pinned.forEach(function (side) {\n            addClasses.push(pinnedClass + '-' + side);\n          });\n        })();\n      }\n\n      if (oob.length) {\n        (function () {\n          var oobClass = undefined;\n          if (typeof _this.options.outOfBoundsClass !== 'undefined') {\n            oobClass = _this.options.outOfBoundsClass;\n          } else {\n            oobClass = _this.getClass('out-of-bounds');\n          }\n\n          addClasses.push(oobClass);\n          oob.forEach(function (side) {\n            addClasses.push(oobClass + '-' + side);\n          });\n        })();\n      }\n\n      if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {\n        eAttachment.left = tAttachment.left = false;\n      }\n      if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {\n        eAttachment.top = tAttachment.top = false;\n      }\n\n      if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {\n        _this.updateAttachClasses(eAttachment, tAttachment);\n        _this.trigger('update', {\n          attachment: eAttachment,\n          targetAttachment: tAttachment\n        });\n      }\n    });\n\n    defer(function () {\n      if (!(_this.options.addTargetClasses === false)) {\n        updateClasses(_this.target, addClasses, allClasses);\n      }\n      updateClasses(_this.element, addClasses, allClasses);\n    });\n\n    return { top: top, left: left };\n  }\n});\n/* globals TetherBase */\n\n'use strict';\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var _this = this;\n\n    var top = _ref.top;\n    var left = _ref.left;\n\n    var _cache = this.cache('element-bounds', function () {\n      return getBounds(_this.element);\n    });\n\n    var height = _cache.height;\n    var width = _cache.width;\n\n    var targetPos = this.getTargetBounds();\n\n    var bottom = top + height;\n    var right = left + width;\n\n    var abutted = [];\n    if (top <= targetPos.bottom && bottom >= targetPos.top) {\n      ['left', 'right'].forEach(function (side) {\n        var targetPosSide = targetPos[side];\n        if (targetPosSide === left || targetPosSide === right) {\n          abutted.push(side);\n        }\n      });\n    }\n\n    if (left <= targetPos.right && right >= targetPos.left) {\n      ['top', 'bottom'].forEach(function (side) {\n        var targetPosSide = targetPos[side];\n        if (targetPosSide === top || targetPosSide === bottom) {\n          abutted.push(side);\n        }\n      });\n    }\n\n    var allClasses = [];\n    var addClasses = [];\n\n    var sides = ['left', 'top', 'right', 'bottom'];\n    allClasses.push(this.getClass('abutted'));\n    sides.forEach(function (side) {\n      allClasses.push(_this.getClass('abutted') + '-' + side);\n    });\n\n    if (abutted.length) {\n      addClasses.push(this.getClass('abutted'));\n    }\n\n    abutted.forEach(function (side) {\n      addClasses.push(_this.getClass('abutted') + '-' + side);\n    });\n\n    defer(function () {\n      if (!(_this.options.addTargetClasses === false)) {\n        updateClasses(_this.target, addClasses, allClasses);\n      }\n      updateClasses(_this.element, addClasses, allClasses);\n    });\n\n    return true;\n  }\n});\n/* globals TetherBase */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var top = _ref.top;\n    var left = _ref.left;\n\n    if (!this.options.shift) {\n      return;\n    }\n\n    var shift = this.options.shift;\n    if (typeof this.options.shift === 'function') {\n      shift = this.options.shift.call(this, { top: top, left: left });\n    }\n\n    var shiftTop = undefined,\n        shiftLeft = undefined;\n    if (typeof shift === 'string') {\n      shift = shift.split(' ');\n      shift[1] = shift[1] || shift[0];\n\n      var _shift = shift;\n\n      var _shift2 = _slicedToArray(_shift, 2);\n\n      shiftTop = _shift2[0];\n      shiftLeft = _shift2[1];\n\n      shiftTop = parseFloat(shiftTop, 10);\n      shiftLeft = parseFloat(shiftLeft, 10);\n    } else {\n      shiftTop = shift.top;\n      shiftLeft = shift.left;\n    }\n\n    top += shiftTop;\n    left += shiftLeft;\n\n    return { top: top, left: left };\n  }\n});\nreturn Tether;\n\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tether/dist/js/tether.js\n ** module id = 10\n ** module chunks = 1\n **/","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_core.js\n ** module id = 11\n ** module chunks = 1\n **/","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_defined.js\n ** module id = 12\n ** module chunks = 1\n **/","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_is-object.js\n ** module id = 13\n ** module chunks = 1\n **/","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-dp.js\n ** module id = 14\n ** module chunks = 1\n **/","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_shared-key.js\n ** module id = 15\n ** module chunks = 1\n **/","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-integer.js\n ** module id = 16\n ** module chunks = 1\n **/","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-iobject.js\n ** module id = 17\n ** module chunks = 1\n **/","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_cof.js\n ** module id = 18\n ** module chunks = 1\n **/","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_dom-create.js\n ** module id = 19\n ** module chunks = 1\n **/","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_enum-bug-keys.js\n ** module id = 20\n ** module chunks = 1\n **/","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_fails.js\n ** module id = 21\n ** module chunks = 1\n **/","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_iter-define.js\n ** module id = 22\n ** module chunks = 1\n **/","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_property-desc.js\n ** module id = 23\n ** module chunks = 1\n **/","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_set-to-string-tag.js\n ** module id = 24\n ** module chunks = 1\n **/","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_shared.js\n ** module id = 25\n ** module chunks = 1\n **/","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_uid.js\n ** module id = 26\n ** module chunks = 1\n **/","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/get-iterator.js\n ** module id = 30\n ** module chunks = 1\n **/","module.exports.css = require (\"style!css!postcss!resolve-url!sass?sourceMap!./lib/bootstrap.styles.loader.js!./no-op.js\");\nmodule.exports.js = require (\"./lib/bootstrap.scripts.loader.js!./no-op.js\");\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap-loader/lib/bootstrap.loader.js!./~/bootstrap-loader/no-op.js\n ** module id = 31\n ** module chunks = 1\n **/","require (\"../bootstrap/js/dist/alert\");\nrequire (\"../bootstrap/js/dist/button\");\nrequire (\"../bootstrap/js/dist/carousel\");\nrequire (\"../bootstrap/js/dist/collapse\");\nrequire (\"../bootstrap/js/dist/dropdown\");\nrequire (\"../bootstrap/js/dist/modal\");\nrequire (\"../bootstrap/js/dist/popover\");\nrequire (\"../bootstrap/js/dist/scrollspy\");\nrequire (\"../bootstrap/js/dist/tab\");\nrequire (\"../bootstrap/js/dist/tooltip\");\nrequire (\"../bootstrap/js/dist/util\");\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap-loader/lib/bootstrap.scripts.loader.js!./~/bootstrap-loader/no-op.js\n ** module id = 32\n ** module chunks = 1\n **/","module.exports = require('./lib/bootstrap.loader!./no-op.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap-loader/loader.js\n ** module id = 33\n ** module chunks = 1\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Alert = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'alert';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.alert';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var TRANSITION_DURATION = 150;\n\n  var Selector = {\n    DISMISS: '[data-dismiss=\"alert\"]'\n  };\n\n  var Event = {\n    CLOSE: 'close' + EVENT_KEY,\n    CLOSED: 'closed' + EVENT_KEY,\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n  };\n\n  var ClassName = {\n    ALERT: 'alert',\n    FADE: 'fade',\n    IN: 'in'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Alert = (function () {\n    function Alert(element) {\n      _classCallCheck(this, Alert);\n\n      this._element = element;\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Alert, [{\n      key: 'close',\n\n      // public\n\n      value: function close(element) {\n        element = element || this._element;\n\n        var rootElement = this._getRootElement(element);\n        var customEvent = this._triggerCloseEvent(rootElement);\n\n        if (customEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._removeElement(rootElement);\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        $.removeData(this._element, DATA_KEY);\n        this._element = null;\n      }\n\n      // private\n\n    }, {\n      key: '_getRootElement',\n      value: function _getRootElement(element) {\n        var selector = Util.getSelectorFromElement(element);\n        var parent = false;\n\n        if (selector) {\n          parent = $(selector)[0];\n        }\n\n        if (!parent) {\n          parent = $(element).closest('.' + ClassName.ALERT)[0];\n        }\n\n        return parent;\n      }\n    }, {\n      key: '_triggerCloseEvent',\n      value: function _triggerCloseEvent(element) {\n        var closeEvent = $.Event(Event.CLOSE);\n\n        $(element).trigger(closeEvent);\n        return closeEvent;\n      }\n    }, {\n      key: '_removeElement',\n      value: function _removeElement(element) {\n        $(element).removeClass(ClassName.IN);\n\n        if (!Util.supportsTransitionEnd() || !$(element).hasClass(ClassName.FADE)) {\n          this._destroyElement(element);\n          return;\n        }\n\n        $(element).one(Util.TRANSITION_END, $.proxy(this._destroyElement, this, element)).emulateTransitionEnd(TRANSITION_DURATION);\n      }\n    }, {\n      key: '_destroyElement',\n      value: function _destroyElement(element) {\n        $(element).detach().trigger(Event.CLOSED).remove();\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var $element = $(this);\n          var data = $element.data(DATA_KEY);\n\n          if (!data) {\n            data = new Alert(this);\n            $element.data(DATA_KEY, data);\n          }\n\n          if (config === 'close') {\n            data[config](this);\n          }\n        });\n      }\n    }, {\n      key: '_handleDismiss',\n      value: function _handleDismiss(alertInstance) {\n        return function (event) {\n          if (event) {\n            event.preventDefault();\n          }\n\n          alertInstance.close(this);\n        };\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }]);\n\n    return Alert;\n  })();\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Alert._jQueryInterface;\n  $.fn[NAME].Constructor = Alert;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Alert._jQueryInterface;\n  };\n\n  return Alert;\n})(jQuery);\n//# sourceMappingURL=alert.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/alert.js\n ** module id = 34\n ** module chunks = 1\n **/","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Button = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'button';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.button';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\n  var ClassName = {\n    ACTIVE: 'active',\n    BUTTON: 'btn',\n    FOCUS: 'focus'\n  };\n\n  var Selector = {\n    DATA_TOGGLE_CARROT: '[data-toggle^=\"button\"]',\n    DATA_TOGGLE: '[data-toggle=\"buttons\"]',\n    INPUT: 'input',\n    ACTIVE: '.active',\n    BUTTON: '.btn'\n  };\n\n  var Event = {\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\n    FOCUS_BLUR_DATA_API: 'focus' + EVENT_KEY + DATA_API_KEY + ' ' + ('blur' + EVENT_KEY + DATA_API_KEY)\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Button = (function () {\n    function Button(element) {\n      _classCallCheck(this, Button);\n\n      this._element = element;\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Button, [{\n      key: 'toggle',\n\n      // public\n\n      value: function toggle() {\n        var triggerChangeEvent = true;\n        var rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];\n\n        if (rootElement) {\n          var input = $(this._element).find(Selector.INPUT)[0];\n\n          if (input) {\n            if (input.type === 'radio') {\n              if (input.checked && $(this._element).hasClass(ClassName.ACTIVE)) {\n                triggerChangeEvent = false;\n              } else {\n                var activeElement = $(rootElement).find(Selector.ACTIVE)[0];\n\n                if (activeElement) {\n                  $(activeElement).removeClass(ClassName.ACTIVE);\n                }\n              }\n            }\n\n            if (triggerChangeEvent) {\n              input.checked = !$(this._element).hasClass(ClassName.ACTIVE);\n              $(this._element).trigger('change');\n            }\n\n            input.focus();\n          }\n        } else {\n          this._element.setAttribute('aria-pressed', !$(this._element).hasClass(ClassName.ACTIVE));\n        }\n\n        if (triggerChangeEvent) {\n          $(this._element).toggleClass(ClassName.ACTIVE);\n        }\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        $.removeData(this._element, DATA_KEY);\n        this._element = null;\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $(this).data(DATA_KEY);\n\n          if (!data) {\n            data = new Button(this);\n            $(this).data(DATA_KEY, data);\n          }\n\n          if (config === 'toggle') {\n            data[config]();\n          }\n        });\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }]);\n\n    return Button;\n  })();\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n    event.preventDefault();\n\n    var button = event.target;\n\n    if (!$(button).hasClass(ClassName.BUTTON)) {\n      button = $(button).closest(Selector.BUTTON);\n    }\n\n    Button._jQueryInterface.call($(button), 'toggle');\n  }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n    var button = $(event.target).closest(Selector.BUTTON)[0];\n    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\n  });\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Button._jQueryInterface;\n  $.fn[NAME].Constructor = Button;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Button._jQueryInterface;\n  };\n\n  return Button;\n})(jQuery);\n//# sourceMappingURL=button.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/button.js\n ** module id = 35\n ** module chunks = 1\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Carousel = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'carousel';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.carousel';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var TRANSITION_DURATION = 600;\n  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\n  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\n\n  var Default = {\n    interval: 5000,\n    keyboard: true,\n    slide: false,\n    pause: 'hover',\n    wrap: true\n  };\n\n  var DefaultType = {\n    interval: '(number|boolean)',\n    keyboard: 'boolean',\n    slide: '(boolean|string)',\n    pause: '(string|boolean)',\n    wrap: 'boolean'\n  };\n\n  var Direction = {\n    NEXT: 'next',\n    PREVIOUS: 'prev'\n  };\n\n  var Event = {\n    SLIDE: 'slide' + EVENT_KEY,\n    SLID: 'slid' + EVENT_KEY,\n    KEYDOWN: 'keydown' + EVENT_KEY,\n    MOUSEENTER: 'mouseenter' + EVENT_KEY,\n    MOUSELEAVE: 'mouseleave' + EVENT_KEY,\n    LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY,\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n  };\n\n  var ClassName = {\n    CAROUSEL: 'carousel',\n    ACTIVE: 'active',\n    SLIDE: 'slide',\n    RIGHT: 'right',\n    LEFT: 'left',\n    ITEM: 'carousel-item'\n  };\n\n  var Selector = {\n    ACTIVE: '.active',\n    ACTIVE_ITEM: '.active.carousel-item',\n    ITEM: '.carousel-item',\n    NEXT_PREV: '.next, .prev',\n    INDICATORS: '.carousel-indicators',\n    DATA_SLIDE: '[data-slide], [data-slide-to]',\n    DATA_RIDE: '[data-ride=\"carousel\"]'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Carousel = (function () {\n    function Carousel(element, config) {\n      _classCallCheck(this, Carousel);\n\n      this._items = null;\n      this._interval = null;\n      this._activeElement = null;\n\n      this._isPaused = false;\n      this._isSliding = false;\n\n      this._config = this._getConfig(config);\n      this._element = $(element)[0];\n      this._indicatorsElement = $(this._element).find(Selector.INDICATORS)[0];\n\n      this._addEventListeners();\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Carousel, [{\n      key: 'next',\n\n      // public\n\n      value: function next() {\n        if (!this._isSliding) {\n          this._slide(Direction.NEXT);\n        }\n      }\n    }, {\n      key: 'nextWhenVisible',\n      value: function nextWhenVisible() {\n        // Don't call next when the page isn't visible\n        if (!document.hidden) {\n          this.next();\n        }\n      }\n    }, {\n      key: 'prev',\n      value: function prev() {\n        if (!this._isSliding) {\n          this._slide(Direction.PREVIOUS);\n        }\n      }\n    }, {\n      key: 'pause',\n      value: function pause(event) {\n        if (!event) {\n          this._isPaused = true;\n        }\n\n        if ($(this._element).find(Selector.NEXT_PREV)[0] && Util.supportsTransitionEnd()) {\n          Util.triggerTransitionEnd(this._element);\n          this.cycle(true);\n        }\n\n        clearInterval(this._interval);\n        this._interval = null;\n      }\n    }, {\n      key: 'cycle',\n      value: function cycle(event) {\n        if (!event) {\n          this._isPaused = false;\n        }\n\n        if (this._interval) {\n          clearInterval(this._interval);\n          this._interval = null;\n        }\n\n        if (this._config.interval && !this._isPaused) {\n          this._interval = setInterval($.proxy(document.visibilityState ? this.nextWhenVisible : this.next, this), this._config.interval);\n        }\n      }\n    }, {\n      key: 'to',\n      value: function to(index) {\n        var _this = this;\n\n        this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\n\n        var activeIndex = this._getItemIndex(this._activeElement);\n\n        if (index > this._items.length - 1 || index < 0) {\n          return;\n        }\n\n        if (this._isSliding) {\n          $(this._element).one(Event.SLID, function () {\n            return _this.to(index);\n          });\n          return;\n        }\n\n        if (activeIndex === index) {\n          this.pause();\n          this.cycle();\n          return;\n        }\n\n        var direction = index > activeIndex ? Direction.NEXT : Direction.PREVIOUS;\n\n        this._slide(direction, this._items[index]);\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        $(this._element).off(EVENT_KEY);\n        $.removeData(this._element, DATA_KEY);\n\n        this._items = null;\n        this._config = null;\n        this._element = null;\n        this._interval = null;\n        this._isPaused = null;\n        this._isSliding = null;\n        this._activeElement = null;\n        this._indicatorsElement = null;\n      }\n\n      // private\n\n    }, {\n      key: '_getConfig',\n      value: function _getConfig(config) {\n        config = $.extend({}, Default, config);\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      }\n    }, {\n      key: '_addEventListeners',\n      value: function _addEventListeners() {\n        if (this._config.keyboard) {\n          $(this._element).on(Event.KEYDOWN, $.proxy(this._keydown, this));\n        }\n\n        if (this._config.pause === 'hover' && !('ontouchstart' in document.documentElement)) {\n          $(this._element).on(Event.MOUSEENTER, $.proxy(this.pause, this)).on(Event.MOUSELEAVE, $.proxy(this.cycle, this));\n        }\n      }\n    }, {\n      key: '_keydown',\n      value: function _keydown(event) {\n        event.preventDefault();\n\n        if (/input|textarea/i.test(event.target.tagName)) {\n          return;\n        }\n\n        switch (event.which) {\n          case ARROW_LEFT_KEYCODE:\n            this.prev();\n            break;\n          case ARROW_RIGHT_KEYCODE:\n            this.next();\n            break;\n          default:\n            return;\n        }\n      }\n    }, {\n      key: '_getItemIndex',\n      value: function _getItemIndex(element) {\n        this._items = $.makeArray($(element).parent().find(Selector.ITEM));\n        return this._items.indexOf(element);\n      }\n    }, {\n      key: '_getItemByDirection',\n      value: function _getItemByDirection(direction, activeElement) {\n        var isNextDirection = direction === Direction.NEXT;\n        var isPrevDirection = direction === Direction.PREVIOUS;\n        var activeIndex = this._getItemIndex(activeElement);\n        var lastItemIndex = this._items.length - 1;\n        var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n\n        if (isGoingToWrap && !this._config.wrap) {\n          return activeElement;\n        }\n\n        var delta = direction === Direction.PREVIOUS ? -1 : 1;\n        var itemIndex = (activeIndex + delta) % this._items.length;\n\n        return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n      }\n    }, {\n      key: '_triggerSlideEvent',\n      value: function _triggerSlideEvent(relatedTarget, directionalClassname) {\n        var slideEvent = $.Event(Event.SLIDE, {\n          relatedTarget: relatedTarget,\n          direction: directionalClassname\n        });\n\n        $(this._element).trigger(slideEvent);\n\n        return slideEvent;\n      }\n    }, {\n      key: '_setActiveIndicatorElement',\n      value: function _setActiveIndicatorElement(element) {\n        if (this._indicatorsElement) {\n          $(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\n\n          var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n\n          if (nextIndicator) {\n            $(nextIndicator).addClass(ClassName.ACTIVE);\n          }\n        }\n      }\n    }, {\n      key: '_slide',\n      value: function _slide(direction, element) {\n        var _this2 = this;\n\n        var activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\n        var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n\n        var isCycling = Boolean(this._interval);\n\n        var directionalClassName = direction === Direction.NEXT ? ClassName.LEFT : ClassName.RIGHT;\n\n        if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n          this._isSliding = false;\n          return;\n        }\n\n        var slideEvent = this._triggerSlideEvent(nextElement, directionalClassName);\n        if (slideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (!activeElement || !nextElement) {\n          // some weirdness is happening, so we bail\n          return;\n        }\n\n        this._isSliding = true;\n\n        if (isCycling) {\n          this.pause();\n        }\n\n        this._setActiveIndicatorElement(nextElement);\n\n        var slidEvent = $.Event(Event.SLID, {\n          relatedTarget: nextElement,\n          direction: directionalClassName\n        });\n\n        if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.SLIDE)) {\n\n          $(nextElement).addClass(direction);\n\n          Util.reflow(nextElement);\n\n          $(activeElement).addClass(directionalClassName);\n          $(nextElement).addClass(directionalClassName);\n\n          $(activeElement).one(Util.TRANSITION_END, function () {\n            $(nextElement).removeClass(directionalClassName).removeClass(direction);\n\n            $(nextElement).addClass(ClassName.ACTIVE);\n\n            $(activeElement).removeClass(ClassName.ACTIVE).removeClass(direction).removeClass(directionalClassName);\n\n            _this2._isSliding = false;\n\n            setTimeout(function () {\n              return $(_this2._element).trigger(slidEvent);\n            }, 0);\n          }).emulateTransitionEnd(TRANSITION_DURATION);\n        } else {\n          $(activeElement).removeClass(ClassName.ACTIVE);\n          $(nextElement).addClass(ClassName.ACTIVE);\n\n          this._isSliding = false;\n          $(this._element).trigger(slidEvent);\n        }\n\n        if (isCycling) {\n          this.cycle();\n        }\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $(this).data(DATA_KEY);\n          var _config = $.extend({}, Default, $(this).data());\n\n          if (typeof config === 'object') {\n            $.extend(_config, config);\n          }\n\n          var action = typeof config === 'string' ? config : _config.slide;\n\n          if (!data) {\n            data = new Carousel(this, _config);\n            $(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'number') {\n            data.to(config);\n          } else if (typeof action === 'string') {\n            if (data[action] === undefined) {\n              throw new Error('No method named \"' + action + '\"');\n            }\n            data[action]();\n          } else if (_config.interval) {\n            data.pause();\n            data.cycle();\n          }\n        });\n      }\n    }, {\n      key: '_dataApiClickHandler',\n      value: function _dataApiClickHandler(event) {\n        var selector = Util.getSelectorFromElement(this);\n\n        if (!selector) {\n          return;\n        }\n\n        var target = $(selector)[0];\n\n        if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\n          return;\n        }\n\n        var config = $.extend({}, $(target).data(), $(this).data());\n        var slideIndex = this.getAttribute('data-slide-to');\n\n        if (slideIndex) {\n          config.interval = false;\n        }\n\n        Carousel._jQueryInterface.call($(target), config);\n\n        if (slideIndex) {\n          $(target).data(DATA_KEY).to(slideIndex);\n        }\n\n        event.preventDefault();\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: 'Default',\n      get: function get() {\n        return Default;\n      }\n    }]);\n\n    return Carousel;\n  })();\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\n\n  $(window).on(Event.LOAD_DATA_API, function () {\n    $(Selector.DATA_RIDE).each(function () {\n      var $carousel = $(this);\n      Carousel._jQueryInterface.call($carousel, $carousel.data());\n    });\n  });\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Carousel._jQueryInterface;\n  $.fn[NAME].Constructor = Carousel;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Carousel._jQueryInterface;\n  };\n\n  return Carousel;\n})(jQuery);\n//# sourceMappingURL=carousel.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/carousel.js\n ** module id = 36\n ** module chunks = 1\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Collapse = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'collapse';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.collapse';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var TRANSITION_DURATION = 600;\n\n  var Default = {\n    toggle: true,\n    parent: ''\n  };\n\n  var DefaultType = {\n    toggle: 'boolean',\n    parent: 'string'\n  };\n\n  var Event = {\n    SHOW: 'show' + EVENT_KEY,\n    SHOWN: 'shown' + EVENT_KEY,\n    HIDE: 'hide' + EVENT_KEY,\n    HIDDEN: 'hidden' + EVENT_KEY,\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n  };\n\n  var ClassName = {\n    IN: 'in',\n    COLLAPSE: 'collapse',\n    COLLAPSING: 'collapsing',\n    COLLAPSED: 'collapsed'\n  };\n\n  var Dimension = {\n    WIDTH: 'width',\n    HEIGHT: 'height'\n  };\n\n  var Selector = {\n    ACTIVES: '.panel > .in, .panel > .collapsing',\n    DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Collapse = (function () {\n    function Collapse(element, config) {\n      _classCallCheck(this, Collapse);\n\n      this._isTransitioning = false;\n      this._element = element;\n      this._config = this._getConfig(config);\n      this._triggerArray = $.makeArray($('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' + ('[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')));\n\n      this._parent = this._config.parent ? this._getParent() : null;\n\n      if (!this._config.parent) {\n        this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n      }\n\n      if (this._config.toggle) {\n        this.toggle();\n      }\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Collapse, [{\n      key: 'toggle',\n\n      // public\n\n      value: function toggle() {\n        if ($(this._element).hasClass(ClassName.IN)) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    }, {\n      key: 'show',\n      value: function show() {\n        var _this = this;\n\n        if (this._isTransitioning || $(this._element).hasClass(ClassName.IN)) {\n          return;\n        }\n\n        var actives = undefined;\n        var activesData = undefined;\n\n        if (this._parent) {\n          actives = $.makeArray($(Selector.ACTIVES));\n          if (!actives.length) {\n            actives = null;\n          }\n        }\n\n        if (actives) {\n          activesData = $(actives).data(DATA_KEY);\n          if (activesData && activesData._isTransitioning) {\n            return;\n          }\n        }\n\n        var startEvent = $.Event(Event.SHOW);\n        $(this._element).trigger(startEvent);\n        if (startEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (actives) {\n          Collapse._jQueryInterface.call($(actives), 'hide');\n          if (!activesData) {\n            $(actives).data(DATA_KEY, null);\n          }\n        }\n\n        var dimension = this._getDimension();\n\n        $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n\n        this._element.style[dimension] = 0;\n        this._element.setAttribute('aria-expanded', true);\n\n        if (this._triggerArray.length) {\n          $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n        }\n\n        this.setTransitioning(true);\n\n        var complete = function complete() {\n          $(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.IN);\n\n          _this._element.style[dimension] = '';\n\n          _this.setTransitioning(false);\n\n          $(_this._element).trigger(Event.SHOWN);\n        };\n\n        if (!Util.supportsTransitionEnd()) {\n          complete();\n          return;\n        }\n\n        var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n        var scrollSize = 'scroll' + capitalizedDimension;\n\n        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n\n        this._element.style[dimension] = this._element[scrollSize] + 'px';\n      }\n    }, {\n      key: 'hide',\n      value: function hide() {\n        var _this2 = this;\n\n        if (this._isTransitioning || !$(this._element).hasClass(ClassName.IN)) {\n          return;\n        }\n\n        var startEvent = $.Event(Event.HIDE);\n        $(this._element).trigger(startEvent);\n        if (startEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        var dimension = this._getDimension();\n        var offsetDimension = dimension === Dimension.WIDTH ? 'offsetWidth' : 'offsetHeight';\n\n        this._element.style[dimension] = this._element[offsetDimension] + 'px';\n\n        Util.reflow(this._element);\n\n        $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.IN);\n\n        this._element.setAttribute('aria-expanded', false);\n\n        if (this._triggerArray.length) {\n          $(this._triggerArray).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n        }\n\n        this.setTransitioning(true);\n\n        var complete = function complete() {\n          _this2.setTransitioning(false);\n          $(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n        };\n\n        this._element.style[dimension] = 0;\n\n        if (!Util.supportsTransitionEnd()) {\n          complete();\n          return;\n        }\n\n        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n      }\n    }, {\n      key: 'setTransitioning',\n      value: function setTransitioning(isTransitioning) {\n        this._isTransitioning = isTransitioning;\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        $.removeData(this._element, DATA_KEY);\n\n        this._config = null;\n        this._parent = null;\n        this._element = null;\n        this._triggerArray = null;\n        this._isTransitioning = null;\n      }\n\n      // private\n\n    }, {\n      key: '_getConfig',\n      value: function _getConfig(config) {\n        config = $.extend({}, Default, config);\n        config.toggle = Boolean(config.toggle); // coerce string values\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      }\n    }, {\n      key: '_getDimension',\n      value: function _getDimension() {\n        var hasWidth = $(this._element).hasClass(Dimension.WIDTH);\n        return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n      }\n    }, {\n      key: '_getParent',\n      value: function _getParent() {\n        var _this3 = this;\n\n        var parent = $(this._config.parent)[0];\n        var selector = '[data-toggle=\"collapse\"][data-parent=\"' + this._config.parent + '\"]';\n\n        $(parent).find(selector).each(function (i, element) {\n          _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n        });\n\n        return parent;\n      }\n    }, {\n      key: '_addAriaAndCollapsedClass',\n      value: function _addAriaAndCollapsedClass(element, triggerArray) {\n        if (element) {\n          var isOpen = $(element).hasClass(ClassName.IN);\n          element.setAttribute('aria-expanded', isOpen);\n\n          if (triggerArray.length) {\n            $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n          }\n        }\n      }\n\n      // static\n\n    }], [{\n      key: '_getTargetFromElement',\n      value: function _getTargetFromElement(element) {\n        var selector = Util.getSelectorFromElement(element);\n        return selector ? $(selector)[0] : null;\n      }\n    }, {\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var $this = $(this);\n          var data = $this.data(DATA_KEY);\n          var _config = $.extend({}, Default, $this.data(), typeof config === 'object' && config);\n\n          if (!data && _config.toggle && /show|hide/.test(config)) {\n            _config.toggle = false;\n          }\n\n          if (!data) {\n            data = new Collapse(this, _config);\n            $this.data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error('No method named \"' + config + '\"');\n            }\n            data[config]();\n          }\n        });\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: 'Default',\n      get: function get() {\n        return Default;\n      }\n    }]);\n\n    return Collapse;\n  })();\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    event.preventDefault();\n\n    var target = Collapse._getTargetFromElement(this);\n    var data = $(target).data(DATA_KEY);\n    var config = data ? 'toggle' : $(this).data();\n\n    Collapse._jQueryInterface.call($(target), config);\n  });\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Collapse._jQueryInterface;\n  $.fn[NAME].Constructor = Collapse;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Collapse._jQueryInterface;\n  };\n\n  return Collapse;\n})(jQuery);\n//# sourceMappingURL=collapse.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/collapse.js\n ** module id = 37\n ** module chunks = 1\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Dropdown = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'dropdown';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.dropdown';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key\n  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key\n  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)\n\n  var Event = {\n    HIDE: 'hide' + EVENT_KEY,\n    HIDDEN: 'hidden' + EVENT_KEY,\n    SHOW: 'show' + EVENT_KEY,\n    SHOWN: 'shown' + EVENT_KEY,\n    CLICK: 'click' + EVENT_KEY,\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\n    KEYDOWN_DATA_API: 'keydown' + EVENT_KEY + DATA_API_KEY\n  };\n\n  var ClassName = {\n    BACKDROP: 'dropdown-backdrop',\n    DISABLED: 'disabled',\n    OPEN: 'open'\n  };\n\n  var Selector = {\n    BACKDROP: '.dropdown-backdrop',\n    DATA_TOGGLE: '[data-toggle=\"dropdown\"]',\n    FORM_CHILD: '.dropdown form',\n    ROLE_MENU: '[role=\"menu\"]',\n    ROLE_LISTBOX: '[role=\"listbox\"]',\n    NAVBAR_NAV: '.navbar-nav',\n    VISIBLE_ITEMS: '[role=\"menu\"] li:not(.disabled) a, ' + '[role=\"listbox\"] li:not(.disabled) a'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Dropdown = (function () {\n    function Dropdown(element) {\n      _classCallCheck(this, Dropdown);\n\n      this._element = element;\n\n      this._addEventListeners();\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Dropdown, [{\n      key: 'toggle',\n\n      // public\n\n      value: function toggle() {\n        if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n          return false;\n        }\n\n        var parent = Dropdown._getParentFromElement(this);\n        var isActive = $(parent).hasClass(ClassName.OPEN);\n\n        Dropdown._clearMenus();\n\n        if (isActive) {\n          return false;\n        }\n\n        if ('ontouchstart' in document.documentElement && !$(parent).closest(Selector.NAVBAR_NAV).length) {\n\n          // if mobile we use a backdrop because click events don't delegate\n          var dropdown = document.createElement('div');\n          dropdown.className = ClassName.BACKDROP;\n          $(dropdown).insertBefore(this);\n          $(dropdown).on('click', Dropdown._clearMenus);\n        }\n\n        var relatedTarget = { relatedTarget: this };\n        var showEvent = $.Event(Event.SHOW, relatedTarget);\n\n        $(parent).trigger(showEvent);\n\n        if (showEvent.isDefaultPrevented()) {\n          return false;\n        }\n\n        this.focus();\n        this.setAttribute('aria-expanded', 'true');\n\n        $(parent).toggleClass(ClassName.OPEN);\n        $(parent).trigger($.Event(Event.SHOWN, relatedTarget));\n\n        return false;\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        $.removeData(this._element, DATA_KEY);\n        $(this._element).off(EVENT_KEY);\n        this._element = null;\n      }\n\n      // private\n\n    }, {\n      key: '_addEventListeners',\n      value: function _addEventListeners() {\n        $(this._element).on(Event.CLICK, this.toggle);\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $(this).data(DATA_KEY);\n\n          if (!data) {\n            $(this).data(DATA_KEY, data = new Dropdown(this));\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error('No method named \"' + config + '\"');\n            }\n            data[config].call(this);\n          }\n        });\n      }\n    }, {\n      key: '_clearMenus',\n      value: function _clearMenus(event) {\n        if (event && event.which === RIGHT_MOUSE_BUTTON_WHICH) {\n          return;\n        }\n\n        var backdrop = $(Selector.BACKDROP)[0];\n        if (backdrop) {\n          backdrop.parentNode.removeChild(backdrop);\n        }\n\n        var toggles = $.makeArray($(Selector.DATA_TOGGLE));\n\n        for (var i = 0; i < toggles.length; i++) {\n          var _parent = Dropdown._getParentFromElement(toggles[i]);\n          var relatedTarget = { relatedTarget: toggles[i] };\n\n          if (!$(_parent).hasClass(ClassName.OPEN)) {\n            continue;\n          }\n\n          if (event && event.type === 'click' && /input|textarea/i.test(event.target.tagName) && $.contains(_parent, event.target)) {\n            continue;\n          }\n\n          var hideEvent = $.Event(Event.HIDE, relatedTarget);\n          $(_parent).trigger(hideEvent);\n          if (hideEvent.isDefaultPrevented()) {\n            continue;\n          }\n\n          toggles[i].setAttribute('aria-expanded', 'false');\n\n          $(_parent).removeClass(ClassName.OPEN).trigger($.Event(Event.HIDDEN, relatedTarget));\n        }\n      }\n    }, {\n      key: '_getParentFromElement',\n      value: function _getParentFromElement(element) {\n        var parent = undefined;\n        var selector = Util.getSelectorFromElement(element);\n\n        if (selector) {\n          parent = $(selector)[0];\n        }\n\n        return parent || element.parentNode;\n      }\n    }, {\n      key: '_dataApiKeydownHandler',\n      value: function _dataApiKeydownHandler(event) {\n        if (!/(38|40|27|32)/.test(event.which) || /input|textarea/i.test(event.target.tagName)) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n          return;\n        }\n\n        var parent = Dropdown._getParentFromElement(this);\n        var isActive = $(parent).hasClass(ClassName.OPEN);\n\n        if (!isActive && event.which !== ESCAPE_KEYCODE || isActive && event.which === ESCAPE_KEYCODE) {\n\n          if (event.which === ESCAPE_KEYCODE) {\n            var toggle = $(parent).find(Selector.DATA_TOGGLE)[0];\n            $(toggle).trigger('focus');\n          }\n\n          $(this).trigger('click');\n          return;\n        }\n\n        var items = $.makeArray($(Selector.VISIBLE_ITEMS));\n\n        items = items.filter(function (item) {\n          return item.offsetWidth || item.offsetHeight;\n        });\n\n        if (!items.length) {\n          return;\n        }\n\n        var index = items.indexOf(event.target);\n\n        if (event.which === ARROW_UP_KEYCODE && index > 0) {\n          // up\n          index--;\n        }\n\n        if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\n          // down\n          index++;\n        }\n\n        if (index < 0) {\n          index = 0;\n        }\n\n        items[index].focus();\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }]);\n\n    return Dropdown;\n  })();\n\n  $(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_MENU, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_LISTBOX, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, Dropdown.prototype.toggle).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {\n    e.stopPropagation();\n  });\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Dropdown._jQueryInterface;\n  $.fn[NAME].Constructor = Dropdown;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Dropdown._jQueryInterface;\n  };\n\n  return Dropdown;\n})(jQuery);\n//# sourceMappingURL=dropdown.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/dropdown.js\n ** module id = 38\n ** module chunks = 1\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Modal = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'modal';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.modal';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var TRANSITION_DURATION = 300;\n  var BACKDROP_TRANSITION_DURATION = 150;\n  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n\n  var Default = {\n    backdrop: true,\n    keyboard: true,\n    focus: true,\n    show: true\n  };\n\n  var DefaultType = {\n    backdrop: '(boolean|string)',\n    keyboard: 'boolean',\n    focus: 'boolean',\n    show: 'boolean'\n  };\n\n  var Event = {\n    HIDE: 'hide' + EVENT_KEY,\n    HIDDEN: 'hidden' + EVENT_KEY,\n    SHOW: 'show' + EVENT_KEY,\n    SHOWN: 'shown' + EVENT_KEY,\n    FOCUSIN: 'focusin' + EVENT_KEY,\n    RESIZE: 'resize' + EVENT_KEY,\n    CLICK_DISMISS: 'click.dismiss' + EVENT_KEY,\n    KEYDOWN_DISMISS: 'keydown.dismiss' + EVENT_KEY,\n    MOUSEUP_DISMISS: 'mouseup.dismiss' + EVENT_KEY,\n    MOUSEDOWN_DISMISS: 'mousedown.dismiss' + EVENT_KEY,\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n  };\n\n  var ClassName = {\n    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n    BACKDROP: 'modal-backdrop',\n    OPEN: 'modal-open',\n    FADE: 'fade',\n    IN: 'in'\n  };\n\n  var Selector = {\n    DIALOG: '.modal-dialog',\n    DATA_TOGGLE: '[data-toggle=\"modal\"]',\n    DATA_DISMISS: '[data-dismiss=\"modal\"]',\n    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Modal = (function () {\n    function Modal(element, config) {\n      _classCallCheck(this, Modal);\n\n      this._config = this._getConfig(config);\n      this._element = element;\n      this._dialog = $(element).find(Selector.DIALOG)[0];\n      this._backdrop = null;\n      this._isShown = false;\n      this._isBodyOverflowing = false;\n      this._ignoreBackdropClick = false;\n      this._originalBodyPadding = 0;\n      this._scrollbarWidth = 0;\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Modal, [{\n      key: 'toggle',\n\n      // public\n\n      value: function toggle(relatedTarget) {\n        return this._isShown ? this.hide() : this.show(relatedTarget);\n      }\n    }, {\n      key: 'show',\n      value: function show(relatedTarget) {\n        var _this = this;\n\n        var showEvent = $.Event(Event.SHOW, {\n          relatedTarget: relatedTarget\n        });\n\n        $(this._element).trigger(showEvent);\n\n        if (this._isShown || showEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._isShown = true;\n\n        this._checkScrollbar();\n        this._setScrollbar();\n\n        $(document.body).addClass(ClassName.OPEN);\n\n        this._setEscapeEvent();\n        this._setResizeEvent();\n\n        $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, $.proxy(this.hide, this));\n\n        $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {\n          $(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {\n            if ($(event.target).is(_this._element)) {\n              _this._ignoreBackdropClick = true;\n            }\n          });\n        });\n\n        this._showBackdrop($.proxy(this._showElement, this, relatedTarget));\n      }\n    }, {\n      key: 'hide',\n      value: function hide(event) {\n        if (event) {\n          event.preventDefault();\n        }\n\n        var hideEvent = $.Event(Event.HIDE);\n\n        $(this._element).trigger(hideEvent);\n\n        if (!this._isShown || hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._isShown = false;\n\n        this._setEscapeEvent();\n        this._setResizeEvent();\n\n        $(document).off(Event.FOCUSIN);\n\n        $(this._element).removeClass(ClassName.IN);\n\n        $(this._element).off(Event.CLICK_DISMISS);\n        $(this._dialog).off(Event.MOUSEDOWN_DISMISS);\n\n        if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\n\n          $(this._element).one(Util.TRANSITION_END, $.proxy(this._hideModal, this)).emulateTransitionEnd(TRANSITION_DURATION);\n        } else {\n          this._hideModal();\n        }\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        $.removeData(this._element, DATA_KEY);\n\n        $(window).off(EVENT_KEY);\n        $(document).off(EVENT_KEY);\n        $(this._element).off(EVENT_KEY);\n        $(this._backdrop).off(EVENT_KEY);\n\n        this._config = null;\n        this._element = null;\n        this._dialog = null;\n        this._backdrop = null;\n        this._isShown = null;\n        this._isBodyOverflowing = null;\n        this._ignoreBackdropClick = null;\n        this._originalBodyPadding = null;\n        this._scrollbarWidth = null;\n      }\n\n      // private\n\n    }, {\n      key: '_getConfig',\n      value: function _getConfig(config) {\n        config = $.extend({}, Default, config);\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      }\n    }, {\n      key: '_showElement',\n      value: function _showElement(relatedTarget) {\n        var _this2 = this;\n\n        var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);\n\n        if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n          // don't move modals dom position\n          document.body.appendChild(this._element);\n        }\n\n        this._element.style.display = 'block';\n        this._element.removeAttribute('aria-hidden');\n        this._element.scrollTop = 0;\n\n        if (transition) {\n          Util.reflow(this._element);\n        }\n\n        $(this._element).addClass(ClassName.IN);\n\n        if (this._config.focus) {\n          this._enforceFocus();\n        }\n\n        var shownEvent = $.Event(Event.SHOWN, {\n          relatedTarget: relatedTarget\n        });\n\n        var transitionComplete = function transitionComplete() {\n          if (_this2._config.focus) {\n            _this2._element.focus();\n          }\n          $(_this2._element).trigger(shownEvent);\n        };\n\n        if (transition) {\n          $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);\n        } else {\n          transitionComplete();\n        }\n      }\n    }, {\n      key: '_enforceFocus',\n      value: function _enforceFocus() {\n        var _this3 = this;\n\n        $(document).off(Event.FOCUSIN) // guard against infinite focus loop\n        .on(Event.FOCUSIN, function (event) {\n          if (document !== event.target && _this3._element !== event.target && !$(_this3._element).has(event.target).length) {\n            _this3._element.focus();\n          }\n        });\n      }\n    }, {\n      key: '_setEscapeEvent',\n      value: function _setEscapeEvent() {\n        var _this4 = this;\n\n        if (this._isShown && this._config.keyboard) {\n          $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {\n            if (event.which === ESCAPE_KEYCODE) {\n              _this4.hide();\n            }\n          });\n        } else if (!this._isShown) {\n          $(this._element).off(Event.KEYDOWN_DISMISS);\n        }\n      }\n    }, {\n      key: '_setResizeEvent',\n      value: function _setResizeEvent() {\n        if (this._isShown) {\n          $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this));\n        } else {\n          $(window).off(Event.RESIZE);\n        }\n      }\n    }, {\n      key: '_hideModal',\n      value: function _hideModal() {\n        var _this5 = this;\n\n        this._element.style.display = 'none';\n        this._element.setAttribute('aria-hidden', 'true');\n        this._showBackdrop(function () {\n          $(document.body).removeClass(ClassName.OPEN);\n          _this5._resetAdjustments();\n          _this5._resetScrollbar();\n          $(_this5._element).trigger(Event.HIDDEN);\n        });\n      }\n    }, {\n      key: '_removeBackdrop',\n      value: function _removeBackdrop() {\n        if (this._backdrop) {\n          $(this._backdrop).remove();\n          this._backdrop = null;\n        }\n      }\n    }, {\n      key: '_showBackdrop',\n      value: function _showBackdrop(callback) {\n        var _this6 = this;\n\n        var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';\n\n        if (this._isShown && this._config.backdrop) {\n          var doAnimate = Util.supportsTransitionEnd() && animate;\n\n          this._backdrop = document.createElement('div');\n          this._backdrop.className = ClassName.BACKDROP;\n\n          if (animate) {\n            $(this._backdrop).addClass(animate);\n          }\n\n          $(this._backdrop).appendTo(document.body);\n\n          $(this._element).on(Event.CLICK_DISMISS, function (event) {\n            if (_this6._ignoreBackdropClick) {\n              _this6._ignoreBackdropClick = false;\n              return;\n            }\n            if (event.target !== event.currentTarget) {\n              return;\n            }\n            if (_this6._config.backdrop === 'static') {\n              _this6._element.focus();\n            } else {\n              _this6.hide();\n            }\n          });\n\n          if (doAnimate) {\n            Util.reflow(this._backdrop);\n          }\n\n          $(this._backdrop).addClass(ClassName.IN);\n\n          if (!callback) {\n            return;\n          }\n\n          if (!doAnimate) {\n            callback();\n            return;\n          }\n\n          $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\n        } else if (!this._isShown && this._backdrop) {\n          $(this._backdrop).removeClass(ClassName.IN);\n\n          var callbackRemove = function callbackRemove() {\n            _this6._removeBackdrop();\n            if (callback) {\n              callback();\n            }\n          };\n\n          if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\n            $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\n          } else {\n            callbackRemove();\n          }\n        } else if (callback) {\n          callback();\n        }\n      }\n\n      // ----------------------------------------------------------------------\n      // the following methods are used to handle overflowing modals\n      // todo (fat): these should probably be refactored out of modal.js\n      // ----------------------------------------------------------------------\n\n    }, {\n      key: '_handleUpdate',\n      value: function _handleUpdate() {\n        this._adjustDialog();\n      }\n    }, {\n      key: '_adjustDialog',\n      value: function _adjustDialog() {\n        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n        if (!this._isBodyOverflowing && isModalOverflowing) {\n          this._element.style.paddingLeft = this._scrollbarWidth + 'px';\n        }\n\n        if (this._isBodyOverflowing && !isModalOverflowing) {\n          this._element.style.paddingRight = this._scrollbarWidth + 'px';\n        }\n      }\n    }, {\n      key: '_resetAdjustments',\n      value: function _resetAdjustments() {\n        this._element.style.paddingLeft = '';\n        this._element.style.paddingRight = '';\n      }\n    }, {\n      key: '_checkScrollbar',\n      value: function _checkScrollbar() {\n        this._isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n        this._scrollbarWidth = this._getScrollbarWidth();\n      }\n    }, {\n      key: '_setScrollbar',\n      value: function _setScrollbar() {\n        var bodyPadding = parseInt($(Selector.FIXED_CONTENT).css('padding-right') || 0, 10);\n\n        this._originalBodyPadding = document.body.style.paddingRight || '';\n\n        if (this._isBodyOverflowing) {\n          document.body.style.paddingRight = bodyPadding + this._scrollbarWidth + 'px';\n        }\n      }\n    }, {\n      key: '_resetScrollbar',\n      value: function _resetScrollbar() {\n        document.body.style.paddingRight = this._originalBodyPadding;\n      }\n    }, {\n      key: '_getScrollbarWidth',\n      value: function _getScrollbarWidth() {\n        // thx d.walsh\n        var scrollDiv = document.createElement('div');\n        scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n        document.body.appendChild(scrollDiv);\n        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n          var data = $(this).data(DATA_KEY);\n          var _config = $.extend({}, Modal.Default, $(this).data(), typeof config === 'object' && config);\n\n          if (!data) {\n            data = new Modal(this, _config);\n            $(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error('No method named \"' + config + '\"');\n            }\n            data[config](relatedTarget);\n          } else if (_config.show) {\n            data.show(relatedTarget);\n          }\n        });\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: 'Default',\n      get: function get() {\n        return Default;\n      }\n    }]);\n\n    return Modal;\n  })();\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    var _this7 = this;\n\n    var target = undefined;\n    var selector = Util.getSelectorFromElement(this);\n\n    if (selector) {\n      target = $(selector)[0];\n    }\n\n    var config = $(target).data(DATA_KEY) ? 'toggle' : $.extend({}, $(target).data(), $(this).data());\n\n    if (this.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    var $target = $(target).one(Event.SHOW, function (showEvent) {\n      if (showEvent.isDefaultPrevented()) {\n        // only register focus restorer if modal will actually get shown\n        return;\n      }\n\n      $target.one(Event.HIDDEN, function () {\n        if ($(_this7).is(':visible')) {\n          _this7.focus();\n        }\n      });\n    });\n\n    Modal._jQueryInterface.call($(target), config, this);\n  });\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Modal._jQueryInterface;\n  $.fn[NAME].Constructor = Modal;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Modal._jQueryInterface;\n  };\n\n  return Modal;\n})(jQuery);\n//# sourceMappingURL=modal.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/modal.js\n ** module id = 39\n ** module chunks = 1\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Popover = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'popover';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.popover';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\n  var Default = $.extend({}, Tooltip.Default, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"popover-arrow\"></div>' + '<h3 class=\"popover-title\"></h3>' + '<div class=\"popover-content\"></div></div>'\n  });\n\n  var DefaultType = $.extend({}, Tooltip.DefaultType, {\n    content: '(string|element|function)'\n  });\n\n  var ClassName = {\n    FADE: 'fade',\n    IN: 'in'\n  };\n\n  var Selector = {\n    TITLE: '.popover-title',\n    CONTENT: '.popover-content',\n    ARROW: '.popover-arrow'\n  };\n\n  var Event = {\n    HIDE: 'hide' + EVENT_KEY,\n    HIDDEN: 'hidden' + EVENT_KEY,\n    SHOW: 'show' + EVENT_KEY,\n    SHOWN: 'shown' + EVENT_KEY,\n    INSERTED: 'inserted' + EVENT_KEY,\n    CLICK: 'click' + EVENT_KEY,\n    FOCUSIN: 'focusin' + EVENT_KEY,\n    FOCUSOUT: 'focusout' + EVENT_KEY,\n    MOUSEENTER: 'mouseenter' + EVENT_KEY,\n    MOUSELEAVE: 'mouseleave' + EVENT_KEY\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Popover = (function (_Tooltip) {\n    _inherits(Popover, _Tooltip);\n\n    function Popover() {\n      _classCallCheck(this, Popover);\n\n      _get(Object.getPrototypeOf(Popover.prototype), 'constructor', this).apply(this, arguments);\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    _createClass(Popover, [{\n      key: 'isWithContent',\n\n      // overrides\n\n      value: function isWithContent() {\n        return this.getTitle() || this._getContent();\n      }\n    }, {\n      key: 'getTipElement',\n      value: function getTipElement() {\n        return this.tip = this.tip || $(this.config.template)[0];\n      }\n    }, {\n      key: 'setContent',\n      value: function setContent() {\n        var $tip = $(this.getTipElement());\n\n        // we use append for html objects to maintain js events\n        this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\n        this.setElementContent($tip.find(Selector.CONTENT), this._getContent());\n\n        $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\n\n        this.cleanupTether();\n      }\n\n      // private\n\n    }, {\n      key: '_getContent',\n      value: function _getContent() {\n        return this.element.getAttribute('data-content') || (typeof this.config.content === 'function' ? this.config.content.call(this.element) : this.config.content);\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $(this).data(DATA_KEY);\n          var _config = typeof config === 'object' ? config : null;\n\n          if (!data && /destroy|hide/.test(config)) {\n            return;\n          }\n\n          if (!data) {\n            data = new Popover(this, _config);\n            $(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error('No method named \"' + config + '\"');\n            }\n            data[config]();\n          }\n        });\n      }\n    }, {\n      key: 'VERSION',\n\n      // getters\n\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: 'Default',\n      get: function get() {\n        return Default;\n      }\n    }, {\n      key: 'NAME',\n      get: function get() {\n        return NAME;\n      }\n    }, {\n      key: 'DATA_KEY',\n      get: function get() {\n        return DATA_KEY;\n      }\n    }, {\n      key: 'Event',\n      get: function get() {\n        return Event;\n      }\n    }, {\n      key: 'EVENT_KEY',\n      get: function get() {\n        return EVENT_KEY;\n      }\n    }, {\n      key: 'DefaultType',\n      get: function get() {\n        return DefaultType;\n      }\n    }]);\n\n    return Popover;\n  })(Tooltip);\n\n  $.fn[NAME] = Popover._jQueryInterface;\n  $.fn[NAME].Constructor = Popover;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Popover._jQueryInterface;\n  };\n\n  return Popover;\n})(jQuery);\n//# sourceMappingURL=popover.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/popover.js\n ** module id = 40\n ** module chunks = 1\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar ScrollSpy = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'scrollspy';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.scrollspy';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n\n  var Default = {\n    offset: 10,\n    method: 'auto',\n    target: ''\n  };\n\n  var DefaultType = {\n    offset: 'number',\n    method: 'string',\n    target: '(string|element)'\n  };\n\n  var Event = {\n    ACTIVATE: 'activate' + EVENT_KEY,\n    SCROLL: 'scroll' + EVENT_KEY,\n    LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY\n  };\n\n  var ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    DROPDOWN_MENU: 'dropdown-menu',\n    NAV_LINK: 'nav-link',\n    NAV: 'nav',\n    ACTIVE: 'active'\n  };\n\n  var Selector = {\n    DATA_SPY: '[data-spy=\"scroll\"]',\n    ACTIVE: '.active',\n    LIST_ITEM: '.list-item',\n    LI: 'li',\n    LI_DROPDOWN: 'li.dropdown',\n    NAV_LINKS: '.nav-link',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_ITEMS: '.dropdown-item',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n  };\n\n  var OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var ScrollSpy = (function () {\n    function ScrollSpy(element, config) {\n      _classCallCheck(this, ScrollSpy);\n\n      this._element = element;\n      this._scrollElement = element.tagName === 'BODY' ? window : element;\n      this._config = this._getConfig(config);\n      this._selector = this._config.target + ' ' + Selector.NAV_LINKS + ',' + (this._config.target + ' ' + Selector.DROPDOWN_ITEMS);\n      this._offsets = [];\n      this._targets = [];\n      this._activeTarget = null;\n      this._scrollHeight = 0;\n\n      $(this._scrollElement).on(Event.SCROLL, $.proxy(this._process, this));\n\n      this.refresh();\n      this._process();\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(ScrollSpy, [{\n      key: 'refresh',\n\n      // public\n\n      value: function refresh() {\n        var _this = this;\n\n        var autoMethod = this._scrollElement !== this._scrollElement.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\n\n        var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n\n        var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;\n\n        this._offsets = [];\n        this._targets = [];\n\n        this._scrollHeight = this._getScrollHeight();\n\n        var targets = $.makeArray($(this._selector));\n\n        targets.map(function (element) {\n          var target = undefined;\n          var targetSelector = Util.getSelectorFromElement(element);\n\n          if (targetSelector) {\n            target = $(targetSelector)[0];\n          }\n\n          if (target && (target.offsetWidth || target.offsetHeight)) {\n            // todo (fat): remove sketch reliance on jQuery position/offset\n            return [$(target)[offsetMethod]().top + offsetBase, targetSelector];\n          }\n          return null;\n        }).filter(function (item) {\n          return item;\n        }).sort(function (a, b) {\n          return a[0] - b[0];\n        }).forEach(function (item) {\n          _this._offsets.push(item[0]);\n          _this._targets.push(item[1]);\n        });\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        $.removeData(this._element, DATA_KEY);\n        $(this._scrollElement).off(EVENT_KEY);\n\n        this._element = null;\n        this._scrollElement = null;\n        this._config = null;\n        this._selector = null;\n        this._offsets = null;\n        this._targets = null;\n        this._activeTarget = null;\n        this._scrollHeight = null;\n      }\n\n      // private\n\n    }, {\n      key: '_getConfig',\n      value: function _getConfig(config) {\n        config = $.extend({}, Default, config);\n\n        if (typeof config.target !== 'string') {\n          var id = $(config.target).attr('id');\n          if (!id) {\n            id = Util.getUID(NAME);\n            $(config.target).attr('id', id);\n          }\n          config.target = '#' + id;\n        }\n\n        Util.typeCheckConfig(NAME, config, DefaultType);\n\n        return config;\n      }\n    }, {\n      key: '_getScrollTop',\n      value: function _getScrollTop() {\n        return this._scrollElement === window ? this._scrollElement.scrollY : this._scrollElement.scrollTop;\n      }\n    }, {\n      key: '_getScrollHeight',\n      value: function _getScrollHeight() {\n        return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n      }\n    }, {\n      key: '_process',\n      value: function _process() {\n        var scrollTop = this._getScrollTop() + this._config.offset;\n        var scrollHeight = this._getScrollHeight();\n        var maxScroll = this._config.offset + scrollHeight - this._scrollElement.offsetHeight;\n\n        if (this._scrollHeight !== scrollHeight) {\n          this.refresh();\n        }\n\n        if (scrollTop >= maxScroll) {\n          var target = this._targets[this._targets.length - 1];\n\n          if (this._activeTarget !== target) {\n            this._activate(target);\n          }\n        }\n\n        if (this._activeTarget && scrollTop < this._offsets[0]) {\n          this._activeTarget = null;\n          this._clear();\n          return;\n        }\n\n        for (var i = this._offsets.length; i--;) {\n          var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (this._offsets[i + 1] === undefined || scrollTop < this._offsets[i + 1]);\n\n          if (isActiveTarget) {\n            this._activate(this._targets[i]);\n          }\n        }\n      }\n    }, {\n      key: '_activate',\n      value: function _activate(target) {\n        this._activeTarget = target;\n\n        this._clear();\n\n        var queries = this._selector.split(',');\n        queries = queries.map(function (selector) {\n          return selector + '[data-target=\"' + target + '\"],' + (selector + '[href=\"' + target + '\"]');\n        });\n\n        var $link = $(queries.join(','));\n\n        if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n          $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\n          $link.addClass(ClassName.ACTIVE);\n        } else {\n          // todo (fat) this is kinda sus...\n          // recursively add actives to tested nav-links\n          $link.parents(Selector.LI).find(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\n        }\n\n        $(this._scrollElement).trigger(Event.ACTIVATE, {\n          relatedTarget: target\n        });\n      }\n    }, {\n      key: '_clear',\n      value: function _clear() {\n        $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $(this).data(DATA_KEY);\n          var _config = typeof config === 'object' && config || null;\n\n          if (!data) {\n            data = new ScrollSpy(this, _config);\n            $(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error('No method named \"' + config + '\"');\n            }\n            data[config]();\n          }\n        });\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: 'Default',\n      get: function get() {\n        return Default;\n      }\n    }]);\n\n    return ScrollSpy;\n  })();\n\n  $(window).on(Event.LOAD_DATA_API, function () {\n    var scrollSpys = $.makeArray($(Selector.DATA_SPY));\n\n    for (var i = scrollSpys.length; i--;) {\n      var $spy = $(scrollSpys[i]);\n      ScrollSpy._jQueryInterface.call($spy, $spy.data());\n    }\n  });\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = ScrollSpy._jQueryInterface;\n  $.fn[NAME].Constructor = ScrollSpy;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return ScrollSpy._jQueryInterface;\n  };\n\n  return ScrollSpy;\n})(jQuery);\n//# sourceMappingURL=scrollspy.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/scrollspy.js\n ** module id = 41\n ** module chunks = 1\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Tab = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'tab';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.tab';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var TRANSITION_DURATION = 150;\n\n  var Event = {\n    HIDE: 'hide' + EVENT_KEY,\n    HIDDEN: 'hidden' + EVENT_KEY,\n    SHOW: 'show' + EVENT_KEY,\n    SHOWN: 'shown' + EVENT_KEY,\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n  };\n\n  var ClassName = {\n    DROPDOWN_MENU: 'dropdown-menu',\n    ACTIVE: 'active',\n    FADE: 'fade',\n    IN: 'in'\n  };\n\n  var Selector = {\n    A: 'a',\n    LI: 'li',\n    DROPDOWN: '.dropdown',\n    UL: 'ul:not(.dropdown-menu)',\n    FADE_CHILD: '> .nav-item .fade, > .fade',\n    ACTIVE: '.active',\n    ACTIVE_CHILD: '> .nav-item > .active, > .active',\n    DATA_TOGGLE: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]',\n    DROPDOWN_TOGGLE: '.dropdown-toggle',\n    DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Tab = (function () {\n    function Tab(element) {\n      _classCallCheck(this, Tab);\n\n      this._element = element;\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Data Api implementation\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Tab, [{\n      key: 'show',\n\n      // public\n\n      value: function show() {\n        var _this = this;\n\n        if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName.ACTIVE)) {\n          return;\n        }\n\n        var target = undefined;\n        var previous = undefined;\n        var ulElement = $(this._element).closest(Selector.UL)[0];\n        var selector = Util.getSelectorFromElement(this._element);\n\n        if (ulElement) {\n          previous = $.makeArray($(ulElement).find(Selector.ACTIVE));\n          previous = previous[previous.length - 1];\n        }\n\n        var hideEvent = $.Event(Event.HIDE, {\n          relatedTarget: this._element\n        });\n\n        var showEvent = $.Event(Event.SHOW, {\n          relatedTarget: previous\n        });\n\n        if (previous) {\n          $(previous).trigger(hideEvent);\n        }\n\n        $(this._element).trigger(showEvent);\n\n        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (selector) {\n          target = $(selector)[0];\n        }\n\n        this._activate(this._element, ulElement);\n\n        var complete = function complete() {\n          var hiddenEvent = $.Event(Event.HIDDEN, {\n            relatedTarget: _this._element\n          });\n\n          var shownEvent = $.Event(Event.SHOWN, {\n            relatedTarget: previous\n          });\n\n          $(previous).trigger(hiddenEvent);\n          $(_this._element).trigger(shownEvent);\n        };\n\n        if (target) {\n          this._activate(target, target.parentNode, complete);\n        } else {\n          complete();\n        }\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        $.removeClass(this._element, DATA_KEY);\n        this._element = null;\n      }\n\n      // private\n\n    }, {\n      key: '_activate',\n      value: function _activate(element, container, callback) {\n        var active = $(container).find(Selector.ACTIVE_CHILD)[0];\n        var isTransitioning = callback && Util.supportsTransitionEnd() && (active && $(active).hasClass(ClassName.FADE) || Boolean($(container).find(Selector.FADE_CHILD)[0]));\n\n        var complete = $.proxy(this._transitionComplete, this, element, active, isTransitioning, callback);\n\n        if (active && isTransitioning) {\n          $(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n        } else {\n          complete();\n        }\n\n        if (active) {\n          $(active).removeClass(ClassName.IN);\n        }\n      }\n    }, {\n      key: '_transitionComplete',\n      value: function _transitionComplete(element, active, isTransitioning, callback) {\n        if (active) {\n          $(active).removeClass(ClassName.ACTIVE);\n\n          var dropdownChild = $(active).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];\n\n          if (dropdownChild) {\n            $(dropdownChild).removeClass(ClassName.ACTIVE);\n          }\n\n          active.setAttribute('aria-expanded', false);\n        }\n\n        $(element).addClass(ClassName.ACTIVE);\n        element.setAttribute('aria-expanded', true);\n\n        if (isTransitioning) {\n          Util.reflow(element);\n          $(element).addClass(ClassName.IN);\n        } else {\n          $(element).removeClass(ClassName.FADE);\n        }\n\n        if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {\n\n          var dropdownElement = $(element).closest(Selector.DROPDOWN)[0];\n          if (dropdownElement) {\n            $(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\n          }\n\n          element.setAttribute('aria-expanded', true);\n        }\n\n        if (callback) {\n          callback();\n        }\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var $this = $(this);\n          var data = $this.data(DATA_KEY);\n\n          if (!data) {\n            data = data = new Tab(this);\n            $this.data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error('No method named \"' + config + '\"');\n            }\n            data[config]();\n          }\n        });\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }]);\n\n    return Tab;\n  })();\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    event.preventDefault();\n    Tab._jQueryInterface.call($(this), 'show');\n  });\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Tab._jQueryInterface;\n  $.fn[NAME].Constructor = Tab;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Tab._jQueryInterface;\n  };\n\n  return Tab;\n})(jQuery);\n//# sourceMappingURL=tab.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/tab.js\n ** module id = 42\n ** module chunks = 1\n **/","/* global Tether */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Tooltip = (function ($) {\n\n  /**\n   * Check for Tether dependency\n   * Tether - http://github.hubspot.com/tether/\n   */\n  if (window.Tether === undefined) {\n    throw new Error('Bootstrap tooltips require Tether (http://github.hubspot.com/tether/)');\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'tooltip';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.tooltip';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var TRANSITION_DURATION = 150;\n  var CLASS_PREFIX = 'bs-tether';\n\n  var Default = {\n    animation: true,\n    template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"tooltip-arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    selector: false,\n    placement: 'top',\n    offset: '0 0',\n    constraints: []\n  };\n\n  var DefaultType = {\n    animation: 'boolean',\n    template: 'string',\n    title: '(string|element|function)',\n    trigger: 'string',\n    delay: '(number|object)',\n    html: 'boolean',\n    selector: '(string|boolean)',\n    placement: '(string|function)',\n    offset: 'string',\n    constraints: 'array'\n  };\n\n  var AttachmentMap = {\n    TOP: 'bottom center',\n    RIGHT: 'middle left',\n    BOTTOM: 'top center',\n    LEFT: 'middle right'\n  };\n\n  var HoverState = {\n    IN: 'in',\n    OUT: 'out'\n  };\n\n  var Event = {\n    HIDE: 'hide' + EVENT_KEY,\n    HIDDEN: 'hidden' + EVENT_KEY,\n    SHOW: 'show' + EVENT_KEY,\n    SHOWN: 'shown' + EVENT_KEY,\n    INSERTED: 'inserted' + EVENT_KEY,\n    CLICK: 'click' + EVENT_KEY,\n    FOCUSIN: 'focusin' + EVENT_KEY,\n    FOCUSOUT: 'focusout' + EVENT_KEY,\n    MOUSEENTER: 'mouseenter' + EVENT_KEY,\n    MOUSELEAVE: 'mouseleave' + EVENT_KEY\n  };\n\n  var ClassName = {\n    FADE: 'fade',\n    IN: 'in'\n  };\n\n  var Selector = {\n    TOOLTIP: '.tooltip',\n    TOOLTIP_INNER: '.tooltip-inner'\n  };\n\n  var TetherClass = {\n    element: false,\n    enabled: false\n  };\n\n  var Trigger = {\n    HOVER: 'hover',\n    FOCUS: 'focus',\n    CLICK: 'click',\n    MANUAL: 'manual'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Tooltip = (function () {\n    function Tooltip(element, config) {\n      _classCallCheck(this, Tooltip);\n\n      // private\n      this._isEnabled = true;\n      this._timeout = 0;\n      this._hoverState = '';\n      this._activeTrigger = {};\n      this._tether = null;\n\n      // protected\n      this.element = element;\n      this.config = this._getConfig(config);\n      this.tip = null;\n\n      this._setListeners();\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Tooltip, [{\n      key: 'enable',\n\n      // public\n\n      value: function enable() {\n        this._isEnabled = true;\n      }\n    }, {\n      key: 'disable',\n      value: function disable() {\n        this._isEnabled = false;\n      }\n    }, {\n      key: 'toggleEnabled',\n      value: function toggleEnabled() {\n        this._isEnabled = !this._isEnabled;\n      }\n    }, {\n      key: 'toggle',\n      value: function toggle(event) {\n        if (event) {\n          var dataKey = this.constructor.DATA_KEY;\n          var context = $(event.currentTarget).data(dataKey);\n\n          if (!context) {\n            context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n            $(event.currentTarget).data(dataKey, context);\n          }\n\n          context._activeTrigger.click = !context._activeTrigger.click;\n\n          if (context._isWithActiveTrigger()) {\n            context._enter(null, context);\n          } else {\n            context._leave(null, context);\n          }\n        } else {\n\n          if ($(this.getTipElement()).hasClass(ClassName.IN)) {\n            this._leave(null, this);\n            return;\n          }\n\n          this._enter(null, this);\n        }\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        clearTimeout(this._timeout);\n\n        this.cleanupTether();\n\n        $.removeData(this.element, this.constructor.DATA_KEY);\n\n        $(this.element).off(this.constructor.EVENT_KEY);\n\n        if (this.tip) {\n          $(this.tip).remove();\n        }\n\n        this._isEnabled = null;\n        this._timeout = null;\n        this._hoverState = null;\n        this._activeTrigger = null;\n        this._tether = null;\n\n        this.element = null;\n        this.config = null;\n        this.tip = null;\n      }\n    }, {\n      key: 'show',\n      value: function show() {\n        var _this = this;\n\n        var showEvent = $.Event(this.constructor.Event.SHOW);\n\n        if (this.isWithContent() && this._isEnabled) {\n          $(this.element).trigger(showEvent);\n\n          var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);\n\n          if (showEvent.isDefaultPrevented() || !isInTheDom) {\n            return;\n          }\n\n          var tip = this.getTipElement();\n          var tipId = Util.getUID(this.constructor.NAME);\n\n          tip.setAttribute('id', tipId);\n          this.element.setAttribute('aria-describedby', tipId);\n\n          this.setContent();\n\n          if (this.config.animation) {\n            $(tip).addClass(ClassName.FADE);\n          }\n\n          var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n\n          var attachment = this._getAttachment(placement);\n\n          $(tip).data(this.constructor.DATA_KEY, this).appendTo(document.body);\n\n          $(this.element).trigger(this.constructor.Event.INSERTED);\n\n          this._tether = new Tether({\n            attachment: attachment,\n            element: tip,\n            target: this.element,\n            classes: TetherClass,\n            classPrefix: CLASS_PREFIX,\n            offset: this.config.offset,\n            constraints: this.config.constraints,\n            addTargetClasses: false\n          });\n\n          Util.reflow(tip);\n          this._tether.position();\n\n          $(tip).addClass(ClassName.IN);\n\n          var complete = function complete() {\n            var prevHoverState = _this._hoverState;\n            _this._hoverState = null;\n\n            $(_this.element).trigger(_this.constructor.Event.SHOWN);\n\n            if (prevHoverState === HoverState.OUT) {\n              _this._leave(null, _this);\n            }\n          };\n\n          if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n            $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);\n            return;\n          }\n\n          complete();\n        }\n      }\n    }, {\n      key: 'hide',\n      value: function hide(callback) {\n        var _this2 = this;\n\n        var tip = this.getTipElement();\n        var hideEvent = $.Event(this.constructor.Event.HIDE);\n        var complete = function complete() {\n          if (_this2._hoverState !== HoverState.IN && tip.parentNode) {\n            tip.parentNode.removeChild(tip);\n          }\n\n          _this2.element.removeAttribute('aria-describedby');\n          $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\n          _this2.cleanupTether();\n\n          if (callback) {\n            callback();\n          }\n        };\n\n        $(this.element).trigger(hideEvent);\n\n        if (hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        $(tip).removeClass(ClassName.IN);\n\n        if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n\n          $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n        } else {\n          complete();\n        }\n\n        this._hoverState = '';\n      }\n\n      // protected\n\n    }, {\n      key: 'isWithContent',\n      value: function isWithContent() {\n        return Boolean(this.getTitle());\n      }\n    }, {\n      key: 'getTipElement',\n      value: function getTipElement() {\n        return this.tip = this.tip || $(this.config.template)[0];\n      }\n    }, {\n      key: 'setContent',\n      value: function setContent() {\n        var $tip = $(this.getTipElement());\n\n        this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());\n\n        $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\n\n        this.cleanupTether();\n      }\n    }, {\n      key: 'setElementContent',\n      value: function setElementContent($element, content) {\n        var html = this.config.html;\n        if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n          // content is a DOM node or a jQuery\n          if (html) {\n            if (!$(content).parent().is($element)) {\n              $element.empty().append(content);\n            }\n          } else {\n            $element.text($(content).text());\n          }\n        } else {\n          $element[html ? 'html' : 'text'](content);\n        }\n      }\n    }, {\n      key: 'getTitle',\n      value: function getTitle() {\n        var title = this.element.getAttribute('data-original-title');\n\n        if (!title) {\n          title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n        }\n\n        return title;\n      }\n    }, {\n      key: 'cleanupTether',\n      value: function cleanupTether() {\n        if (this._tether) {\n          this._tether.destroy();\n        }\n      }\n\n      // private\n\n    }, {\n      key: '_getAttachment',\n      value: function _getAttachment(placement) {\n        return AttachmentMap[placement.toUpperCase()];\n      }\n    }, {\n      key: '_setListeners',\n      value: function _setListeners() {\n        var _this3 = this;\n\n        var triggers = this.config.trigger.split(' ');\n\n        triggers.forEach(function (trigger) {\n          if (trigger === 'click') {\n            $(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, $.proxy(_this3.toggle, _this3));\n          } else if (trigger !== Trigger.MANUAL) {\n            var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;\n            var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;\n\n            $(_this3.element).on(eventIn, _this3.config.selector, $.proxy(_this3._enter, _this3)).on(eventOut, _this3.config.selector, $.proxy(_this3._leave, _this3));\n          }\n        });\n\n        if (this.config.selector) {\n          this.config = $.extend({}, this.config, {\n            trigger: 'manual',\n            selector: ''\n          });\n        } else {\n          this._fixTitle();\n        }\n      }\n    }, {\n      key: '_fixTitle',\n      value: function _fixTitle() {\n        var titleType = typeof this.element.getAttribute('data-original-title');\n        if (this.element.getAttribute('title') || titleType !== 'string') {\n          this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n          this.element.setAttribute('title', '');\n        }\n      }\n    }, {\n      key: '_enter',\n      value: function _enter(event, context) {\n        var dataKey = this.constructor.DATA_KEY;\n\n        context = context || $(event.currentTarget).data(dataKey);\n\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          $(event.currentTarget).data(dataKey, context);\n        }\n\n        if (event) {\n          context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n        }\n\n        if ($(context.getTipElement()).hasClass(ClassName.IN) || context._hoverState === HoverState.IN) {\n          context._hoverState = HoverState.IN;\n          return;\n        }\n\n        clearTimeout(context._timeout);\n\n        context._hoverState = HoverState.IN;\n\n        if (!context.config.delay || !context.config.delay.show) {\n          context.show();\n          return;\n        }\n\n        context._timeout = setTimeout(function () {\n          if (context._hoverState === HoverState.IN) {\n            context.show();\n          }\n        }, context.config.delay.show);\n      }\n    }, {\n      key: '_leave',\n      value: function _leave(event, context) {\n        var dataKey = this.constructor.DATA_KEY;\n\n        context = context || $(event.currentTarget).data(dataKey);\n\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          $(event.currentTarget).data(dataKey, context);\n        }\n\n        if (event) {\n          context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n        }\n\n        if (context._isWithActiveTrigger()) {\n          return;\n        }\n\n        clearTimeout(context._timeout);\n\n        context._hoverState = HoverState.OUT;\n\n        if (!context.config.delay || !context.config.delay.hide) {\n          context.hide();\n          return;\n        }\n\n        context._timeout = setTimeout(function () {\n          if (context._hoverState === HoverState.OUT) {\n            context.hide();\n          }\n        }, context.config.delay.hide);\n      }\n    }, {\n      key: '_isWithActiveTrigger',\n      value: function _isWithActiveTrigger() {\n        for (var trigger in this._activeTrigger) {\n          if (this._activeTrigger[trigger]) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: '_getConfig',\n      value: function _getConfig(config) {\n        config = $.extend({}, this.constructor.Default, $(this.element).data(), config);\n\n        if (config.delay && typeof config.delay === 'number') {\n          config.delay = {\n            show: config.delay,\n            hide: config.delay\n          };\n        }\n\n        Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n\n        return config;\n      }\n    }, {\n      key: '_getDelegateConfig',\n      value: function _getDelegateConfig() {\n        var config = {};\n\n        if (this.config) {\n          for (var key in this.config) {\n            if (this.constructor.Default[key] !== this.config[key]) {\n              config[key] = this.config[key];\n            }\n          }\n        }\n\n        return config;\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $(this).data(DATA_KEY);\n          var _config = typeof config === 'object' ? config : null;\n\n          if (!data && /destroy|hide/.test(config)) {\n            return;\n          }\n\n          if (!data) {\n            data = new Tooltip(this, _config);\n            $(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error('No method named \"' + config + '\"');\n            }\n            data[config]();\n          }\n        });\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: 'Default',\n      get: function get() {\n        return Default;\n      }\n    }, {\n      key: 'NAME',\n      get: function get() {\n        return NAME;\n      }\n    }, {\n      key: 'DATA_KEY',\n      get: function get() {\n        return DATA_KEY;\n      }\n    }, {\n      key: 'Event',\n      get: function get() {\n        return Event;\n      }\n    }, {\n      key: 'EVENT_KEY',\n      get: function get() {\n        return EVENT_KEY;\n      }\n    }, {\n      key: 'DefaultType',\n      get: function get() {\n        return DefaultType;\n      }\n    }]);\n\n    return Tooltip;\n  })();\n\n  $.fn[NAME] = Tooltip._jQueryInterface;\n  $.fn[NAME].Constructor = Tooltip;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Tooltip._jQueryInterface;\n  };\n\n  return Tooltip;\n})(jQuery);\n//# sourceMappingURL=tooltip.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/tooltip.js\n ** module id = 43\n ** module chunks = 1\n **/","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n'use strict';\n\nvar Util = (function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Private TransitionEnd Helpers\n   * ------------------------------------------------------------------------\n   */\n\n  var transition = false;\n\n  var MAX_UID = 1000000;\n\n  var TransitionEndEvent = {\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'transitionend',\n    OTransition: 'oTransitionEnd otransitionend',\n    transition: 'transitionend'\n  };\n\n  // shoutout AngusCroll (https://goo.gl/pxwQGp)\n  function toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n  }\n\n  function isElement(obj) {\n    return (obj[0] || obj).nodeType;\n  }\n\n  function getSpecialTransitionEndEvent() {\n    return {\n      bindType: transition.end,\n      delegateType: transition.end,\n      handle: function handle(event) {\n        if ($(event.target).is(this)) {\n          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n        }\n        return undefined;\n      }\n    };\n  }\n\n  function transitionEndTest() {\n    if (window.QUnit) {\n      return false;\n    }\n\n    var el = document.createElement('bootstrap');\n\n    for (var _name in TransitionEndEvent) {\n      if (el.style[_name] !== undefined) {\n        return { end: TransitionEndEvent[_name] };\n      }\n    }\n\n    return false;\n  }\n\n  function transitionEndEmulator(duration) {\n    var _this = this;\n\n    var called = false;\n\n    $(this).one(Util.TRANSITION_END, function () {\n      called = true;\n    });\n\n    setTimeout(function () {\n      if (!called) {\n        Util.triggerTransitionEnd(_this);\n      }\n    }, duration);\n\n    return this;\n  }\n\n  function setTransitionEndSupport() {\n    transition = transitionEndTest();\n\n    $.fn.emulateTransitionEnd = transitionEndEmulator;\n\n    if (Util.supportsTransitionEnd()) {\n      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------------------\n   * Public Util Api\n   * --------------------------------------------------------------------------\n   */\n\n  var Util = {\n\n    TRANSITION_END: 'bsTransitionEnd',\n\n    getUID: function getUID(prefix) {\n      do {\n        /* eslint-disable no-bitwise */\n        prefix += ~ ~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n        /* eslint-enable no-bitwise */\n      } while (document.getElementById(prefix));\n      return prefix;\n    },\n\n    getSelectorFromElement: function getSelectorFromElement(element) {\n      var selector = element.getAttribute('data-target');\n\n      if (!selector) {\n        selector = element.getAttribute('href') || '';\n        selector = /^#[a-z]/i.test(selector) ? selector : null;\n      }\n\n      return selector;\n    },\n\n    reflow: function reflow(element) {\n      new Function('bs', 'return bs')(element.offsetHeight);\n    },\n\n    triggerTransitionEnd: function triggerTransitionEnd(element) {\n      $(element).trigger(transition.end);\n    },\n\n    supportsTransitionEnd: function supportsTransitionEnd() {\n      return Boolean(transition);\n    },\n\n    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n      for (var property in configTypes) {\n        if (configTypes.hasOwnProperty(property)) {\n          var expectedTypes = configTypes[property];\n          var value = config[property];\n          var valueType = undefined;\n\n          if (value && isElement(value)) {\n            valueType = 'element';\n          } else {\n            valueType = toType(value);\n          }\n\n          if (!new RegExp(expectedTypes).test(valueType)) {\n            throw new Error(componentName.toUpperCase() + ': ' + ('Option \"' + property + '\" provided type \"' + valueType + '\" ') + ('but expected type \"' + expectedTypes + '\".'));\n          }\n        }\n      }\n    }\n  };\n\n  setTransitionEndSupport();\n\n  return Util;\n})(jQuery);\n//# sourceMappingURL=util.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bootstrap/js/dist/util.js\n ** module id = 44\n ** module chunks = 1\n **/","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/get-iterator.js\n ** module id = 45\n ** module chunks = 1\n **/","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_a-function.js\n ** module id = 46\n ** module chunks = 1\n **/","module.exports = function(){ /* empty */ };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_add-to-unscopables.js\n ** module id = 47\n ** module chunks = 1\n **/","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_array-includes.js\n ** module id = 48\n ** module chunks = 1\n **/","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_classof.js\n ** module id = 49\n ** module chunks = 1\n **/","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_ctx.js\n ** module id = 50\n ** module chunks = 1\n **/","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_export.js\n ** module id = 51\n ** module chunks = 1\n **/","module.exports = require('./_global').document && document.documentElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_html.js\n ** module id = 52\n ** module chunks = 1\n **/","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_ie8-dom-define.js\n ** module id = 53\n ** module chunks = 1\n **/","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_iobject.js\n ** module id = 54\n ** module chunks = 1\n **/","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_iter-create.js\n ** module id = 55\n ** module chunks = 1\n **/","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_iter-step.js\n ** module id = 56\n ** module chunks = 1\n **/","module.exports = true;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_library.js\n ** module id = 57\n ** module chunks = 1\n **/","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-create.js\n ** module id = 58\n ** module chunks = 1\n **/","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-dps.js\n ** module id = 59\n ** module chunks = 1\n **/","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-gpo.js\n ** module id = 60\n ** module chunks = 1\n **/","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-keys-internal.js\n ** module id = 61\n ** module chunks = 1\n **/","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_object-keys.js\n ** module id = 62\n ** module chunks = 1\n **/","module.exports = require('./_hide');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_redefine.js\n ** module id = 63\n ** module chunks = 1\n **/","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_string-at.js\n ** module id = 64\n ** module chunks = 1\n **/","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-index.js\n ** module id = 65\n ** module chunks = 1\n **/","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-length.js\n ** module id = 66\n ** module chunks = 1\n **/","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-object.js\n ** module id = 67\n ** module chunks = 1\n **/","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/_to-primitive.js\n ** module id = 68\n ** module chunks = 1\n **/","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/core.get-iterator-method.js\n ** module id = 69\n ** module chunks = 1\n **/","var anObject = require('./_an-object')\n  , get      = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/core.get-iterator.js\n ** module id = 70\n ** module chunks = 1\n **/","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/es6.array.iterator.js\n ** module id = 71\n ** module chunks = 1\n **/","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/es6.string.iterator.js\n ** module id = 72\n ** module chunks = 1\n **/","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/web.dom.iterable.js\n ** module id = 73\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*! normalize.css v4.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit}optgroup{font-weight:700}button,input,select{overflow:visible}button,input,select,textarea{margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{cursor:pointer}[disabled]{cursor:default}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}button:-moz-focusring,input:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}@media print{*,:after,:before,:first-letter,:first-line{text-shadow:none!important;box-shadow:none!important}a,a:visited{text-decoration:underline}abbr[title]:after{content:\\\" (\\\" attr(title) \\\")\\\"}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}.navbar{display:none}.btn>.caret,.dropup>.btn>.caret{border-top-color:#000!important}.tag{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #ddd!important}}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}@-ms-viewport{width:device-width}html{font-size:16px;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}body{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-size:1rem;line-height:1.5;color:#373a3c;background-color:#fff}[tabindex=\\\"-1\\\"]:focus{outline:none!important}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{cursor:help;border-bottom:1px dotted #818a91}address{font-style:normal;line-height:inherit}address,dl,ol,ul{margin-bottom:1rem}dl,ol,ul{margin-top:0}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}a{color:#0275d8;text-decoration:none}a:focus,a:hover{color:#014c8c;text-decoration:underline}a:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}a:not([href]):not([tabindex]),a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:none}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle}[role=button]{cursor:pointer}[role=button],a,area,button,input,label,select,summary,textarea{touch-action:manipulation}table{border-collapse:collapse;background-color:transparent}caption{padding-top:.75rem;padding-bottom:.75rem;color:#818a91;caption-side:bottom}caption,th{text-align:left}label{display:inline-block;margin-bottom:.5rem}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,select,textarea{margin:0;line-height:inherit;border-radius:0}input[type=checkbox]:disabled,input[type=radio]:disabled{cursor:not-allowed}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit}input[type=search]{-webkit-appearance:none}output{display:inline-block}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-family:inherit;font-weight:500;line-height:1.1;color:inherit}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300}.display-2{font-size:5.5rem;font-weight:300}.display-3{font-size:4.5rem;font-weight:300}.display-4{font-size:3.5rem;font-weight:300}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.list-inline,.list-unstyled{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:5px}.initialism{font-size:90%;text-transform:uppercase}.blockquote{padding:.5rem 1rem;margin-bottom:1rem;font-size:1.25rem;border-left:.25rem solid #eceeef}.blockquote-footer{display:block;font-size:80%;color:#818a91}.blockquote-footer:before{content:\\\"\\\\2014   \\\\A0\\\"}.blockquote-reverse{padding-right:1rem;padding-left:0;text-align:right;border-right:.25rem solid #eceeef;border-left:0}.blockquote-reverse .blockquote-footer:before{content:\\\"\\\"}.blockquote-reverse .blockquote-footer:after{content:\\\"\\\\A0   \\\\2014\\\"}.carousel-inner>.carousel-item>a>img,.carousel-inner>.carousel-item>img,.img-fluid{display:block;max-width:100%;height:auto}.img-rounded{border-radius:.3rem}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #ddd;border-radius:.25rem;transition:all .2s ease-in-out;display:inline-block;max-width:100%;height:auto}.img-circle{border-radius:50%}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#818a91}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}code{color:#bd4147;background-color:#f7f7f9;border-radius:.25rem}code,kbd{padding:.2rem .4rem;font-size:90%}kbd{color:#fff;background-color:#333;border-radius:.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;margin-top:0;margin-bottom:1rem;font-size:90%;color:#373a3c}pre code{padding:0;font-size:inherit;color:inherit;background-color:transparent;border-radius:0}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{margin-left:auto;margin-right:auto;padding-left:15px;padding-right:15px}@media (min-width:544px){.container{max-width:576px}}@media (min-width:768px){.container{max-width:720px}}@media (min-width:992px){.container{max-width:940px}}@media (min-width:1200px){.container{max-width:1140px}}.container-fluid{margin-left:auto;margin-right:auto;padding-left:15px;padding-right:15px}.row{display:flex;flex-wrap:wrap;margin-left:-15px;margin-right:-15px}.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{position:relative;min-height:1px;padding-right:15px;padding-left:15px;width:100%}.col-xs{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-xs-1{flex:0 0 8.33333%;max-width:8.33333%}.col-xs-2{flex:0 0 16.66667%;max-width:16.66667%}.col-xs-3{flex:0 0 25%;max-width:25%}.col-xs-4{flex:0 0 33.33333%;max-width:33.33333%}.col-xs-5{flex:0 0 41.66667%;max-width:41.66667%}.col-xs-6{flex:0 0 50%;max-width:50%}.col-xs-7{flex:0 0 58.33333%;max-width:58.33333%}.col-xs-8{flex:0 0 66.66667%;max-width:66.66667%}.col-xs-9{flex:0 0 75%;max-width:75%}.col-xs-10{flex:0 0 83.33333%;max-width:83.33333%}.col-xs-11{flex:0 0 91.66667%;max-width:91.66667%}.col-xs-12{flex:0 0 100%;max-width:100%}.pull-xs-0{right:auto}.pull-xs-1{right:8.33333%}.pull-xs-2{right:16.66667%}.pull-xs-3{right:25%}.pull-xs-4{right:33.33333%}.pull-xs-5{right:41.66667%}.pull-xs-6{right:50%}.pull-xs-7{right:58.33333%}.pull-xs-8{right:66.66667%}.pull-xs-9{right:75%}.pull-xs-10{right:83.33333%}.pull-xs-11{right:91.66667%}.pull-xs-12{right:100%}.push-xs-0{left:auto}.push-xs-1{left:8.33333%}.push-xs-2{left:16.66667%}.push-xs-3{left:25%}.push-xs-4{left:33.33333%}.push-xs-5{left:41.66667%}.push-xs-6{left:50%}.push-xs-7{left:58.33333%}.push-xs-8{left:66.66667%}.push-xs-9{left:75%}.push-xs-10{left:83.33333%}.push-xs-11{left:91.66667%}.push-xs-12{left:100%}.offset-xs-1{margin-left:8.33333%}.offset-xs-2{margin-left:16.66667%}.offset-xs-3{margin-left:25%}.offset-xs-4{margin-left:33.33333%}.offset-xs-5{margin-left:41.66667%}.offset-xs-6{margin-left:50%}.offset-xs-7{margin-left:58.33333%}.offset-xs-8{margin-left:66.66667%}.offset-xs-9{margin-left:75%}.offset-xs-10{margin-left:83.33333%}.offset-xs-11{margin-left:91.66667%}@media (min-width:544px){.col-sm{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-sm-1{flex:0 0 8.33333%;max-width:8.33333%}.col-sm-2{flex:0 0 16.66667%;max-width:16.66667%}.col-sm-3{flex:0 0 25%;max-width:25%}.col-sm-4{flex:0 0 33.33333%;max-width:33.33333%}.col-sm-5{flex:0 0 41.66667%;max-width:41.66667%}.col-sm-6{flex:0 0 50%;max-width:50%}.col-sm-7{flex:0 0 58.33333%;max-width:58.33333%}.col-sm-8{flex:0 0 66.66667%;max-width:66.66667%}.col-sm-9{flex:0 0 75%;max-width:75%}.col-sm-10{flex:0 0 83.33333%;max-width:83.33333%}.col-sm-11{flex:0 0 91.66667%;max-width:91.66667%}.col-sm-12{flex:0 0 100%;max-width:100%}.pull-sm-0{right:auto}.pull-sm-1{right:8.33333%}.pull-sm-2{right:16.66667%}.pull-sm-3{right:25%}.pull-sm-4{right:33.33333%}.pull-sm-5{right:41.66667%}.pull-sm-6{right:50%}.pull-sm-7{right:58.33333%}.pull-sm-8{right:66.66667%}.pull-sm-9{right:75%}.pull-sm-10{right:83.33333%}.pull-sm-11{right:91.66667%}.pull-sm-12{right:100%}.push-sm-0{left:auto}.push-sm-1{left:8.33333%}.push-sm-2{left:16.66667%}.push-sm-3{left:25%}.push-sm-4{left:33.33333%}.push-sm-5{left:41.66667%}.push-sm-6{left:50%}.push-sm-7{left:58.33333%}.push-sm-8{left:66.66667%}.push-sm-9{left:75%}.push-sm-10{left:83.33333%}.push-sm-11{left:91.66667%}.push-sm-12{left:100%}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.33333%}.offset-sm-2{margin-left:16.66667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.33333%}.offset-sm-5{margin-left:41.66667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.33333%}.offset-sm-8{margin-left:66.66667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.33333%}.offset-sm-11{margin-left:91.66667%}}@media (min-width:768px){.col-md{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-md-1{flex:0 0 8.33333%;max-width:8.33333%}.col-md-2{flex:0 0 16.66667%;max-width:16.66667%}.col-md-3{flex:0 0 25%;max-width:25%}.col-md-4{flex:0 0 33.33333%;max-width:33.33333%}.col-md-5{flex:0 0 41.66667%;max-width:41.66667%}.col-md-6{flex:0 0 50%;max-width:50%}.col-md-7{flex:0 0 58.33333%;max-width:58.33333%}.col-md-8{flex:0 0 66.66667%;max-width:66.66667%}.col-md-9{flex:0 0 75%;max-width:75%}.col-md-10{flex:0 0 83.33333%;max-width:83.33333%}.col-md-11{flex:0 0 91.66667%;max-width:91.66667%}.col-md-12{flex:0 0 100%;max-width:100%}.pull-md-0{right:auto}.pull-md-1{right:8.33333%}.pull-md-2{right:16.66667%}.pull-md-3{right:25%}.pull-md-4{right:33.33333%}.pull-md-5{right:41.66667%}.pull-md-6{right:50%}.pull-md-7{right:58.33333%}.pull-md-8{right:66.66667%}.pull-md-9{right:75%}.pull-md-10{right:83.33333%}.pull-md-11{right:91.66667%}.pull-md-12{right:100%}.push-md-0{left:auto}.push-md-1{left:8.33333%}.push-md-2{left:16.66667%}.push-md-3{left:25%}.push-md-4{left:33.33333%}.push-md-5{left:41.66667%}.push-md-6{left:50%}.push-md-7{left:58.33333%}.push-md-8{left:66.66667%}.push-md-9{left:75%}.push-md-10{left:83.33333%}.push-md-11{left:91.66667%}.push-md-12{left:100%}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.33333%}.offset-md-2{margin-left:16.66667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.33333%}.offset-md-5{margin-left:41.66667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.33333%}.offset-md-8{margin-left:66.66667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.33333%}.offset-md-11{margin-left:91.66667%}}@media (min-width:992px){.col-lg{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-lg-1{flex:0 0 8.33333%;max-width:8.33333%}.col-lg-2{flex:0 0 16.66667%;max-width:16.66667%}.col-lg-3{flex:0 0 25%;max-width:25%}.col-lg-4{flex:0 0 33.33333%;max-width:33.33333%}.col-lg-5{flex:0 0 41.66667%;max-width:41.66667%}.col-lg-6{flex:0 0 50%;max-width:50%}.col-lg-7{flex:0 0 58.33333%;max-width:58.33333%}.col-lg-8{flex:0 0 66.66667%;max-width:66.66667%}.col-lg-9{flex:0 0 75%;max-width:75%}.col-lg-10{flex:0 0 83.33333%;max-width:83.33333%}.col-lg-11{flex:0 0 91.66667%;max-width:91.66667%}.col-lg-12{flex:0 0 100%;max-width:100%}.pull-lg-0{right:auto}.pull-lg-1{right:8.33333%}.pull-lg-2{right:16.66667%}.pull-lg-3{right:25%}.pull-lg-4{right:33.33333%}.pull-lg-5{right:41.66667%}.pull-lg-6{right:50%}.pull-lg-7{right:58.33333%}.pull-lg-8{right:66.66667%}.pull-lg-9{right:75%}.pull-lg-10{right:83.33333%}.pull-lg-11{right:91.66667%}.pull-lg-12{right:100%}.push-lg-0{left:auto}.push-lg-1{left:8.33333%}.push-lg-2{left:16.66667%}.push-lg-3{left:25%}.push-lg-4{left:33.33333%}.push-lg-5{left:41.66667%}.push-lg-6{left:50%}.push-lg-7{left:58.33333%}.push-lg-8{left:66.66667%}.push-lg-9{left:75%}.push-lg-10{left:83.33333%}.push-lg-11{left:91.66667%}.push-lg-12{left:100%}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.33333%}.offset-lg-2{margin-left:16.66667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.33333%}.offset-lg-5{margin-left:41.66667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.33333%}.offset-lg-8{margin-left:66.66667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.33333%}.offset-lg-11{margin-left:91.66667%}}@media (min-width:1200px){.col-xl{position:relative;flex-basis:0;flex-grow:1;max-width:100%;min-height:1px;padding-right:15px;padding-left:15px}.col-xl-1{flex:0 0 8.33333%;max-width:8.33333%}.col-xl-2{flex:0 0 16.66667%;max-width:16.66667%}.col-xl-3{flex:0 0 25%;max-width:25%}.col-xl-4{flex:0 0 33.33333%;max-width:33.33333%}.col-xl-5{flex:0 0 41.66667%;max-width:41.66667%}.col-xl-6{flex:0 0 50%;max-width:50%}.col-xl-7{flex:0 0 58.33333%;max-width:58.33333%}.col-xl-8{flex:0 0 66.66667%;max-width:66.66667%}.col-xl-9{flex:0 0 75%;max-width:75%}.col-xl-10{flex:0 0 83.33333%;max-width:83.33333%}.col-xl-11{flex:0 0 91.66667%;max-width:91.66667%}.col-xl-12{flex:0 0 100%;max-width:100%}.pull-xl-0{right:auto}.pull-xl-1{right:8.33333%}.pull-xl-2{right:16.66667%}.pull-xl-3{right:25%}.pull-xl-4{right:33.33333%}.pull-xl-5{right:41.66667%}.pull-xl-6{right:50%}.pull-xl-7{right:58.33333%}.pull-xl-8{right:66.66667%}.pull-xl-9{right:75%}.pull-xl-10{right:83.33333%}.pull-xl-11{right:91.66667%}.pull-xl-12{right:100%}.push-xl-0{left:auto}.push-xl-1{left:8.33333%}.push-xl-2{left:16.66667%}.push-xl-3{left:25%}.push-xl-4{left:33.33333%}.push-xl-5{left:41.66667%}.push-xl-6{left:50%}.push-xl-7{left:58.33333%}.push-xl-8{left:66.66667%}.push-xl-9{left:75%}.push-xl-10{left:83.33333%}.push-xl-11{left:91.66667%}.push-xl-12{left:100%}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.33333%}.offset-xl-2{margin-left:16.66667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.33333%}.offset-xl-5{margin-left:41.66667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.33333%}.offset-xl-8{margin-left:66.66667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.33333%}.offset-xl-11{margin-left:91.66667%}}.table{width:100%;max-width:100%;margin-bottom:1rem}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #eceeef}.table thead th{vertical-align:bottom;border-bottom:2px solid #eceeef}.table tbody+tbody{border-top:2px solid #eceeef}.table .table{background-color:#fff}.table-sm td,.table-sm th{padding:.3rem}.table-bordered,.table-bordered td,.table-bordered th{border:1px solid #eceeef}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-active,.table-active>td,.table-active>th,.table-hover .table-active:hover,.table-hover .table-active:hover>td,.table-hover .table-active:hover>th,.table-hover tbody tr:hover{background-color:rgba(0,0,0,.075)}.table-success,.table-success>td,.table-success>th{background-color:#dff0d8}.table-hover .table-success:hover,.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#d0e9c6}.table-info,.table-info>td,.table-info>th{background-color:#d9edf7}.table-hover .table-info:hover,.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#c4e3f3}.table-warning,.table-warning>td,.table-warning>th{background-color:#fcf8e3}.table-hover .table-warning:hover,.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#faf2cc}.table-danger,.table-danger>td,.table-danger>th{background-color:#f2dede}.table-hover .table-danger:hover,.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#ebcccc}.thead-inverse th{color:#fff;background-color:#373a3c}.thead-default th{color:#55595c;background-color:#eceeef}.table-inverse{color:#eceeef;background-color:#373a3c}.table-inverse td,.table-inverse th,.table-inverse thead th{border-color:#55595c}.table-inverse.table-bordered{border:0}.table-responsive{display:block;width:100%;min-height:.01%;overflow-x:auto}.table-reflow thead{float:left}.table-reflow tbody{display:block;white-space:nowrap}.table-reflow td,.table-reflow th{border-top:1px solid #eceeef;border-left:1px solid #eceeef}.table-reflow td:last-child,.table-reflow th:last-child{border-right:1px solid #eceeef}.table-reflow tbody:last-child tr:last-child td,.table-reflow tbody:last-child tr:last-child th,.table-reflow tfoot:last-child tr:last-child td,.table-reflow tfoot:last-child tr:last-child th,.table-reflow thead:last-child tr:last-child td,.table-reflow thead:last-child tr:last-child th{border-bottom:1px solid #eceeef}.table-reflow tr{float:left}.table-reflow tr td,.table-reflow tr th{display:block!important;border:1px solid #eceeef}.form-control{display:block;width:100%;padding:.5rem .75rem;font-size:1rem;line-height:1.25;color:#55595c;background-color:#fff;background-image:none;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#55595c;background-color:#fff;border-color:#66afe9;outline:none}.form-control::placeholder{color:#999;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#eceeef;opacity:1}.form-control:disabled{cursor:not-allowed}select.form-control:not([size]):not([multiple]){height:2.5rem}select.form-control:focus::-ms-value{color:#55595c;background-color:#fff}.form-control-file,.form-control-range{display:block}.col-form-label{padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0}.col-form-label-lg{padding-top:.75rem;padding-bottom:.75rem;font-size:1.25rem}.col-form-label-sm{padding-top:.25rem;padding-bottom:.25rem;font-size:.875rem}.col-form-legend{font-size:1rem}.col-form-legend,.form-control-static{padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0}.form-control-static{min-height:2.5rem}.form-control-static.form-control-lg,.form-control-static.form-control-sm,.input-group-lg>.form-control-static.form-control,.input-group-lg>.form-control-static.input-group-addon,.input-group-lg>.input-group-btn>.form-control-static.btn,.input-group-sm>.form-control-static.form-control,.input-group-sm>.form-control-static.input-group-addon,.input-group-sm>.input-group-btn>.form-control-static.btn{padding-right:0;padding-left:0}.form-control-sm,.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.input-group-sm>.input-group-btn>select.btn:not([size]):not([multiple]),.input-group-sm>select.form-control:not([size]):not([multiple]),.input-group-sm>select.input-group-addon:not([size]):not([multiple]),select.form-control-sm:not([size]):not([multiple]){height:1.8125rem}.form-control-lg,.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.input-group-lg>.input-group-btn>select.btn:not([size]):not([multiple]),.input-group-lg>select.form-control:not([size]):not([multiple]),.input-group-lg>select.input-group-addon:not([size]):not([multiple]),select.form-control-lg:not([size]):not([multiple]){height:3.16667rem}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-check{position:relative;display:block;margin-bottom:.75rem}.form-check+.form-check{margin-top:-.25rem}.form-check.disabled .form-check-label{color:#818a91;cursor:not-allowed}.form-check-label{padding-left:1.25rem;margin-bottom:0;cursor:pointer}.form-check-input{position:absolute;margin-top:.25rem;margin-left:-1.25rem}.form-check-input:only-child{position:static}.form-check-inline{position:relative;display:inline-block;padding-left:1.25rem;margin-bottom:0;vertical-align:middle;cursor:pointer}.form-check-inline+.form-check-inline{margin-left:.75rem}.form-check-inline.disabled{cursor:not-allowed}.form-control-feedback{margin-top:.25rem}.form-control-danger,.form-control-success,.form-control-warning{padding-right:2.25rem;background-repeat:no-repeat;background-position:center right .625rem;background-size:1.25rem 1.25rem}.has-success .custom-control,.has-success .form-check-inline,.has-success .form-check-label,.has-success .form-control-feedback,.has-success .form-control-label{color:#5cb85c}.has-success .form-control{border-color:#5cb85c}.has-success .input-group-addon{color:#5cb85c;border-color:#5cb85c;background-color:#eaf6ea}.has-success .form-control-feedback{color:#5cb85c}.has-success .form-control-success{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%235cb85c' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E\\\")}.has-warning .custom-control,.has-warning .form-check-inline,.has-warning .form-check-label,.has-warning .form-control-feedback,.has-warning .form-control-label{color:#f0ad4e}.has-warning .form-control{border-color:#f0ad4e}.has-warning .input-group-addon{color:#f0ad4e;border-color:#f0ad4e;background-color:#fff}.has-warning .form-control-feedback{color:#f0ad4e}.has-warning .form-control-warning{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f0ad4e' d='M4.4 5.324h-.8v-2.46h.8zm0 1.42h-.8V5.89h.8zM3.76.63L.04 7.075c-.115.2.016.425.26.426h7.397c.242 0 .372-.226.258-.426C6.726 4.924 5.47 2.79 4.253.63c-.113-.174-.39-.174-.494 0z'/%3E%3C/svg%3E\\\")}.has-danger .custom-control,.has-danger .form-check-inline,.has-danger .form-check-label,.has-danger .form-control-feedback,.has-danger .form-control-label{color:#d9534f}.has-danger .form-control{border-color:#d9534f}.has-danger .input-group-addon{color:#d9534f;border-color:#d9534f;background-color:#fdf7f7}.has-danger .form-control-feedback{color:#d9534f}.has-danger .form-control-danger{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23d9534f' viewBox='-2 -2 7 7'%3E%3Cpath stroke='%23d9534f' d='M0 0l3 3m0-3L0 3'/%3E%3Ccircle r='.5'/%3E%3Ccircle cx='3' r='.5'/%3E%3Ccircle cy='3' r='.5'/%3E%3Ccircle cx='3' cy='3' r='.5'/%3E%3C/svg%3E\\\")}@media (min-width:544px){.form-inline .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-static{display:inline-block}.form-inline .input-group{display:inline-table;vertical-align:middle}.form-inline .input-group .form-control,.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn{width:auto}.form-inline .input-group>.form-control{width:100%}.form-inline .form-check,.form-inline .form-control-label{margin-bottom:0;vertical-align:middle}.form-inline .form-check{display:inline-block;margin-top:0}.form-inline .form-check-label{padding-left:0}.form-inline .form-check-input{position:relative;margin-left:0}.form-inline .has-feedback .form-control-feedback{top:0}}.btn{display:inline-block;font-weight:400;line-height:1.25;text-align:center;white-space:nowrap;vertical-align:middle;cursor:pointer;user-select:none;border:1px solid transparent;padding:.5rem 1rem;font-size:1rem;border-radius:.25rem}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{text-decoration:none}.btn.active,.btn:active{background-image:none;outline:0}.btn.disabled,.btn:disabled{cursor:not-allowed;opacity:.65}a.btn.disabled,fieldset[disabled] a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#0275d8;border-color:#0275d8}.btn-primary.focus,.btn-primary:focus,.btn-primary:hover{color:#fff;background-color:#025aa5;border-color:#01549b}.btn-primary.active,.btn-primary:active,.open>.btn-primary.dropdown-toggle{color:#fff;background-color:#025aa5;border-color:#01549b;background-image:none}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open>.btn-primary.dropdown-toggle.focus,.open>.btn-primary.dropdown-toggle:focus,.open>.btn-primary.dropdown-toggle:hover{color:#fff;background-color:#014682;border-color:#01315a}.btn-primary.disabled.focus,.btn-primary.disabled:focus,.btn-primary.disabled:hover,.btn-primary:disabled.focus,.btn-primary:disabled:focus,.btn-primary:disabled:hover{background-color:#0275d8;border-color:#0275d8}.btn-secondary{color:#373a3c;background-color:#fff;border-color:#ccc}.btn-secondary.focus,.btn-secondary:focus,.btn-secondary:hover{color:#373a3c;background-color:#e6e6e6;border-color:#adadad}.btn-secondary.active,.btn-secondary:active,.open>.btn-secondary.dropdown-toggle{color:#373a3c;background-color:#e6e6e6;border-color:#adadad;background-image:none}.btn-secondary.active.focus,.btn-secondary.active:focus,.btn-secondary.active:hover,.btn-secondary:active.focus,.btn-secondary:active:focus,.btn-secondary:active:hover,.open>.btn-secondary.dropdown-toggle.focus,.open>.btn-secondary.dropdown-toggle:focus,.open>.btn-secondary.dropdown-toggle:hover{color:#373a3c;background-color:#d4d4d4;border-color:#8c8c8c}.btn-secondary.disabled.focus,.btn-secondary.disabled:focus,.btn-secondary.disabled:hover,.btn-secondary:disabled.focus,.btn-secondary:disabled:focus,.btn-secondary:disabled:hover{background-color:#fff;border-color:#ccc}.btn-info{color:#fff;background-color:#5bc0de;border-color:#5bc0de}.btn-info.focus,.btn-info:focus,.btn-info:hover{color:#fff;background-color:#31b0d5;border-color:#2aabd2}.btn-info.active,.btn-info:active,.open>.btn-info.dropdown-toggle{color:#fff;background-color:#31b0d5;border-color:#2aabd2;background-image:none}.btn-info.active.focus,.btn-info.active:focus,.btn-info.active:hover,.btn-info:active.focus,.btn-info:active:focus,.btn-info:active:hover,.open>.btn-info.dropdown-toggle.focus,.open>.btn-info.dropdown-toggle:focus,.open>.btn-info.dropdown-toggle:hover{color:#fff;background-color:#269abc;border-color:#1f7e9a}.btn-info.disabled.focus,.btn-info.disabled:focus,.btn-info.disabled:hover,.btn-info:disabled.focus,.btn-info:disabled:focus,.btn-info:disabled:hover{background-color:#5bc0de;border-color:#5bc0de}.btn-success{color:#fff;background-color:#5cb85c;border-color:#5cb85c}.btn-success.focus,.btn-success:focus,.btn-success:hover{color:#fff;background-color:#449d44;border-color:#419641}.btn-success.active,.btn-success:active,.open>.btn-success.dropdown-toggle{color:#fff;background-color:#449d44;border-color:#419641;background-image:none}.btn-success.active.focus,.btn-success.active:focus,.btn-success.active:hover,.btn-success:active.focus,.btn-success:active:focus,.btn-success:active:hover,.open>.btn-success.dropdown-toggle.focus,.open>.btn-success.dropdown-toggle:focus,.open>.btn-success.dropdown-toggle:hover{color:#fff;background-color:#398439;border-color:#2d672d}.btn-success.disabled.focus,.btn-success.disabled:focus,.btn-success.disabled:hover,.btn-success:disabled.focus,.btn-success:disabled:focus,.btn-success:disabled:hover{background-color:#5cb85c;border-color:#5cb85c}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.btn-warning.focus,.btn-warning:focus,.btn-warning:hover{color:#fff;background-color:#ec971f;border-color:#eb9316}.btn-warning.active,.btn-warning:active,.open>.btn-warning.dropdown-toggle{color:#fff;background-color:#ec971f;border-color:#eb9316;background-image:none}.btn-warning.active.focus,.btn-warning.active:focus,.btn-warning.active:hover,.btn-warning:active.focus,.btn-warning:active:focus,.btn-warning:active:hover,.open>.btn-warning.dropdown-toggle.focus,.open>.btn-warning.dropdown-toggle:focus,.open>.btn-warning.dropdown-toggle:hover{color:#fff;background-color:#d58512;border-color:#b06d0f}.btn-warning.disabled.focus,.btn-warning.disabled:focus,.btn-warning.disabled:hover,.btn-warning:disabled.focus,.btn-warning:disabled:focus,.btn-warning:disabled:hover{background-color:#f0ad4e;border-color:#f0ad4e}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d9534f}.btn-danger.focus,.btn-danger:focus,.btn-danger:hover{color:#fff;background-color:#c9302c;border-color:#c12e2a}.btn-danger.active,.btn-danger:active,.open>.btn-danger.dropdown-toggle{color:#fff;background-color:#c9302c;border-color:#c12e2a;background-image:none}.btn-danger.active.focus,.btn-danger.active:focus,.btn-danger.active:hover,.btn-danger:active.focus,.btn-danger:active:focus,.btn-danger:active:hover,.open>.btn-danger.dropdown-toggle.focus,.open>.btn-danger.dropdown-toggle:focus,.open>.btn-danger.dropdown-toggle:hover{color:#fff;background-color:#ac2925;border-color:#8b211e}.btn-danger.disabled.focus,.btn-danger.disabled:focus,.btn-danger.disabled:hover,.btn-danger:disabled.focus,.btn-danger:disabled:focus,.btn-danger:disabled:hover{background-color:#d9534f;border-color:#d9534f}.btn-outline-primary{color:#0275d8;background-image:none;background-color:transparent;border-color:#0275d8}.btn-outline-primary.active,.btn-outline-primary.focus,.btn-outline-primary:active,.btn-outline-primary:focus,.btn-outline-primary:hover,.open>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#0275d8;border-color:#0275d8}.btn-outline-primary.active.focus,.btn-outline-primary.active:focus,.btn-outline-primary.active:hover,.btn-outline-primary:active.focus,.btn-outline-primary:active:focus,.btn-outline-primary:active:hover,.open>.btn-outline-primary.dropdown-toggle.focus,.open>.btn-outline-primary.dropdown-toggle:focus,.open>.btn-outline-primary.dropdown-toggle:hover{color:#fff;background-color:#014682;border-color:#01315a}.btn-outline-primary.disabled.focus,.btn-outline-primary.disabled:focus,.btn-outline-primary.disabled:hover,.btn-outline-primary:disabled.focus,.btn-outline-primary:disabled:focus,.btn-outline-primary:disabled:hover{border-color:#43a7fd}.btn-outline-secondary{color:#ccc;background-image:none;background-color:transparent;border-color:#ccc}.btn-outline-secondary.active,.btn-outline-secondary.focus,.btn-outline-secondary:active,.btn-outline-secondary:focus,.btn-outline-secondary:hover,.open>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#ccc;border-color:#ccc}.btn-outline-secondary.active.focus,.btn-outline-secondary.active:focus,.btn-outline-secondary.active:hover,.btn-outline-secondary:active.focus,.btn-outline-secondary:active:focus,.btn-outline-secondary:active:hover,.open>.btn-outline-secondary.dropdown-toggle.focus,.open>.btn-outline-secondary.dropdown-toggle:focus,.open>.btn-outline-secondary.dropdown-toggle:hover{color:#fff;background-color:#a1a1a1;border-color:#8c8c8c}.btn-outline-secondary.disabled.focus,.btn-outline-secondary.disabled:focus,.btn-outline-secondary.disabled:hover,.btn-outline-secondary:disabled.focus,.btn-outline-secondary:disabled:focus,.btn-outline-secondary:disabled:hover{border-color:#fff}.btn-outline-info{color:#5bc0de;background-image:none;background-color:transparent;border-color:#5bc0de}.btn-outline-info.active,.btn-outline-info.focus,.btn-outline-info:active,.btn-outline-info:focus,.btn-outline-info:hover,.open>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#5bc0de;border-color:#5bc0de}.btn-outline-info.active.focus,.btn-outline-info.active:focus,.btn-outline-info.active:hover,.btn-outline-info:active.focus,.btn-outline-info:active:focus,.btn-outline-info:active:hover,.open>.btn-outline-info.dropdown-toggle.focus,.open>.btn-outline-info.dropdown-toggle:focus,.open>.btn-outline-info.dropdown-toggle:hover{color:#fff;background-color:#269abc;border-color:#1f7e9a}.btn-outline-info.disabled.focus,.btn-outline-info.disabled:focus,.btn-outline-info.disabled:hover,.btn-outline-info:disabled.focus,.btn-outline-info:disabled:focus,.btn-outline-info:disabled:hover{border-color:#b0e1ef}.btn-outline-success{color:#5cb85c;background-image:none;background-color:transparent;border-color:#5cb85c}.btn-outline-success.active,.btn-outline-success.focus,.btn-outline-success:active,.btn-outline-success:focus,.btn-outline-success:hover,.open>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#5cb85c;border-color:#5cb85c}.btn-outline-success.active.focus,.btn-outline-success.active:focus,.btn-outline-success.active:hover,.btn-outline-success:active.focus,.btn-outline-success:active:focus,.btn-outline-success:active:hover,.open>.btn-outline-success.dropdown-toggle.focus,.open>.btn-outline-success.dropdown-toggle:focus,.open>.btn-outline-success.dropdown-toggle:hover{color:#fff;background-color:#398439;border-color:#2d672d}.btn-outline-success.disabled.focus,.btn-outline-success.disabled:focus,.btn-outline-success.disabled:hover,.btn-outline-success:disabled.focus,.btn-outline-success:disabled:focus,.btn-outline-success:disabled:hover{border-color:#a3d7a3}.btn-outline-warning{color:#f0ad4e;background-image:none;background-color:transparent;border-color:#f0ad4e}.btn-outline-warning.active,.btn-outline-warning.focus,.btn-outline-warning:active,.btn-outline-warning:focus,.btn-outline-warning:hover,.open>.btn-outline-warning.dropdown-toggle{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.btn-outline-warning.active.focus,.btn-outline-warning.active:focus,.btn-outline-warning.active:hover,.btn-outline-warning:active.focus,.btn-outline-warning:active:focus,.btn-outline-warning:active:hover,.open>.btn-outline-warning.dropdown-toggle.focus,.open>.btn-outline-warning.dropdown-toggle:focus,.open>.btn-outline-warning.dropdown-toggle:hover{color:#fff;background-color:#d58512;border-color:#b06d0f}.btn-outline-warning.disabled.focus,.btn-outline-warning.disabled:focus,.btn-outline-warning.disabled:hover,.btn-outline-warning:disabled.focus,.btn-outline-warning:disabled:focus,.btn-outline-warning:disabled:hover{border-color:#f8d9ac}.btn-outline-danger{color:#d9534f;background-image:none;background-color:transparent;border-color:#d9534f}.btn-outline-danger.active,.btn-outline-danger.focus,.btn-outline-danger:active,.btn-outline-danger:focus,.btn-outline-danger:hover,.open>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#d9534f;border-color:#d9534f}.btn-outline-danger.active.focus,.btn-outline-danger.active:focus,.btn-outline-danger.active:hover,.btn-outline-danger:active.focus,.btn-outline-danger:active:focus,.btn-outline-danger:active:hover,.open>.btn-outline-danger.dropdown-toggle.focus,.open>.btn-outline-danger.dropdown-toggle:focus,.open>.btn-outline-danger.dropdown-toggle:hover{color:#fff;background-color:#ac2925;border-color:#8b211e}.btn-outline-danger.disabled.focus,.btn-outline-danger.disabled:focus,.btn-outline-danger.disabled:hover,.btn-outline-danger:disabled.focus,.btn-outline-danger:disabled:focus,.btn-outline-danger:disabled:hover{border-color:#eba5a3}.btn-link{font-weight:400;color:#0275d8;border-radius:0}.btn-link,.btn-link.active,.btn-link:active,.btn-link:disabled{background-color:transparent}.btn-link,.btn-link:active,.btn-link:focus,.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#014c8c;text-decoration:underline;background-color:transparent}.btn-link:disabled:focus,.btn-link:disabled:hover{color:#818a91;text-decoration:none}.btn-group-lg>.btn,.btn-lg{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{opacity:0;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{display:none}.collapse.in{display:block}.collapsing{height:0;overflow:hidden;transition-timing-function:ease;transition-duration:.35s;transition-property:height}.collapsing,.dropdown,.dropup{position:relative}.dropdown-toggle:after{display:inline-block;width:0;height:0;margin-left:.3em;vertical-align:middle;content:\\\"\\\";border-top:.3em solid;border-right:.3em solid transparent;border-left:.3em solid transparent}.dropdown-toggle:focus{outline:0}.dropup .dropdown-toggle:after{border-top:0;border-bottom:.3em solid}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;font-size:1rem;color:#373a3c;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-divider{height:1px;margin:.5rem 0;overflow:hidden;background-color:#e5e5e5}.dropdown-item{display:block;width:100%;padding:3px 20px;clear:both;font-weight:400;color:#373a3c;text-align:inherit;white-space:nowrap;background:none;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#2b2d2f;text-decoration:none;background-color:#f5f5f5}.dropdown-item.active,.dropdown-item.active:focus,.dropdown-item.active:hover{color:#fff;text-decoration:none;background-color:#0275d8;outline:0}.dropdown-item.disabled,.dropdown-item.disabled:focus,.dropdown-item.disabled:hover{color:#818a91}.dropdown-item.disabled:focus,.dropdown-item.disabled:hover{text-decoration:none;cursor:not-allowed;background-color:transparent;background-image:none;filter:\\\"progid:DXImageTransform.Microsoft.gradient(enabled = false)\\\"}.open>.dropdown-menu{display:block}.open>a{outline:0}.dropdown-menu-right{right:0;left:auto}.dropdown-menu-left{right:auto;left:0}.dropdown-header{display:block;padding:5px 20px;font-size:.875rem;color:#818a91;white-space:nowrap}.dropdown-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:990}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{content:\\\"\\\";border-top:0;border-bottom:.3em solid}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:2px}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;float:left}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:2}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{margin-left:-.5rem}.btn-toolbar:after{content:\\\"\\\";display:table;clear:both}.btn-toolbar .btn-group,.btn-toolbar .input-group{float:left}.btn-toolbar>.btn,.btn-toolbar>.btn-group,.btn-toolbar>.input-group{margin-left:.5rem}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.btn-group>.btn-group{float:left}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-top-right-radius:0}.btn-group>.btn-group:last-child:not(:first-child)>.btn:first-child{border-bottom-left-radius:0;border-top-left-radius:0}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn+.dropdown-toggle-split:after{margin-left:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:1.125rem;padding-left:1.125rem}.btn .caret{margin-left:0}.btn-group-lg>.btn .caret,.btn-lg .caret{border-width:.3em .3em 0;border-bottom-width:0}.dropup .btn-group-lg>.btn .caret,.dropup .btn-lg .caret{border-width:0 .3em .3em}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn{display:block;float:none;width:100%;max-width:100%}.btn-group-vertical>.btn-group:after{content:\\\"\\\";display:table;clear:both}.btn-group-vertical>.btn-group>.btn{float:none}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical>.btn:first-child:not(:last-child){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:last-child:not(:first-child){border-top-right-radius:0;border-top-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-right-radius:0;border-top-left-radius:0}[data-toggle=buttons]>.btn-group>.btn input[type=checkbox],[data-toggle=buttons]>.btn-group>.btn input[type=radio],[data-toggle=buttons]>.btn input[type=checkbox],[data-toggle=buttons]>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;width:100%;display:flex}.input-group .form-control{position:relative;z-index:2;flex:1;margin-bottom:0}.input-group .form-control:active,.input-group .form-control:focus,.input-group .form-control:hover{z-index:3}.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child),.input-group .form-control:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{white-space:nowrap;vertical-align:middle}.input-group-addon{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.25;color:#55595c;text-align:center;background-color:#eceeef;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.input-group-addon.form-control-sm,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.input-group-addon.btn{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.input-group-addon.form-control-lg,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.input-group-addon.btn{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group-addon:not(:last-child),.input-group-btn:not(:first-child)>.btn-group:not(:last-child)>.btn,.input-group-btn:not(:first-child)>.btn:not(:last-child):not(.dropdown-toggle),.input-group-btn:not(:last-child)>.btn,.input-group-btn:not(:last-child)>.btn-group>.btn,.input-group-btn:not(:last-child)>.dropdown-toggle,.input-group .form-control:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0}.input-group-addon:not(:last-child){border-right:0}.input-group-addon:not(:first-child),.input-group-btn:not(:first-child)>.btn,.input-group-btn:not(:first-child)>.btn-group>.btn,.input-group-btn:not(:first-child)>.dropdown-toggle,.input-group-btn:not(:last-child)>.btn-group:not(:first-child)>.btn,.input-group-btn:not(:last-child)>.btn:not(:first-child),.input-group .form-control:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.form-control+.input-group-addon:not(:first-child){border-left:0}.input-group-btn{font-size:0;white-space:nowrap}.input-group-btn,.input-group-btn>.btn{position:relative}.input-group-btn>.btn+.btn{margin-left:-1px}.input-group-btn>.btn:active,.input-group-btn>.btn:focus,.input-group-btn>.btn:hover{z-index:3}.input-group-btn:not(:last-child)>.btn,.input-group-btn:not(:last-child)>.btn-group{margin-right:-1px}.input-group-btn:not(:first-child)>.btn,.input-group-btn:not(:first-child)>.btn-group{z-index:2;margin-left:-1px}.input-group-btn:not(:first-child)>.btn-group:active,.input-group-btn:not(:first-child)>.btn-group:focus,.input-group-btn:not(:first-child)>.btn-group:hover,.input-group-btn:not(:first-child)>.btn:active,.input-group-btn:not(:first-child)>.btn:focus,.input-group-btn:not(:first-child)>.btn:hover{z-index:3}.custom-control{position:relative;display:inline;padding-left:1.5rem;cursor:pointer}.custom-control+.custom-control{margin-left:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-indicator{color:#fff;background-color:#0074d9}.custom-control-input:focus~.custom-control-indicator{box-shadow:0 0 0 .075rem #fff,0 0 0 .2rem #0074d9}.custom-control-input:active~.custom-control-indicator{color:#fff;background-color:#84c6ff}.custom-control-input:disabled~.custom-control-indicator{cursor:not-allowed;background-color:#eee}.custom-control-input:disabled~.custom-control-description{color:#767676;cursor:not-allowed}.custom-control-indicator{position:absolute;top:.0625rem;left:0;display:block;width:1rem;height:1rem;pointer-events:none;user-select:none;background-color:#ddd;background-repeat:no-repeat;background-position:50%;background-size:50% 50%}.custom-checkbox .custom-control-indicator{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-indicator{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E\\\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-indicator{background-color:#0074d9;background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23fff' d='M0 2h4'/%3E%3C/svg%3E\\\")}.custom-radio .custom-control-indicator{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-indicator{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fff'/%3E%3C/svg%3E\\\")}.custom-controls-stacked .custom-control{display:inline}.custom-controls-stacked .custom-control:after{display:block;margin-bottom:.25rem;content:\\\"\\\"}.custom-controls-stacked .custom-control+.custom-control{margin-left:0}.custom-select{display:inline-block;max-width:100%;padding:.375rem 1.75rem .375rem .75rem;padding-right:.75rem\\\\9;color:#55595c;vertical-align:middle;background:#fff url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23333' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\\\") no-repeat right .75rem center;background-image:none\\\\9;background-size:8px 10px;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;-moz-appearance:none;-webkit-appearance:none}.custom-select:focus{border-color:#51a7e8;outline:none}.custom-select:focus::-ms-value{color:#55595c;background-color:#fff}.custom-select:disabled{color:#818a91;cursor:not-allowed;background-color:#eceeef}.custom-select::-ms-expand{opacity:0}.custom-select-sm{padding-top:.375rem;padding-bottom:.375rem;font-size:75%}.custom-file{position:relative;display:inline-block;max-width:100%;height:2.5rem;cursor:pointer}.custom-file-input{min-width:14rem;max-width:100%;margin:0;filter:alpha(opacity=0);opacity:0}.custom-file-control{position:absolute;top:0;right:0;left:0;z-index:5;height:2.5rem;padding:.5rem 1rem;line-height:1.5;color:#555;user-select:none;background-color:#fff;border:1px solid #ddd;border-radius:.25rem}.custom-file-control:lang(en):after{content:\\\"Choose file...\\\"}.custom-file-control:before{position:absolute;top:-1px;right:-1px;bottom:-1px;z-index:6;display:block;height:2.5rem;padding:.5rem 1rem;line-height:1.5;color:#555;background-color:#eee;border:1px solid #ddd;border-radius:0 .25rem .25rem 0}.custom-file-control:lang(en):before{content:\\\"Browse\\\"}.nav{padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:inline-block}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#818a91}.nav-link.disabled,.nav-link.disabled:focus,.nav-link.disabled:hover{color:#818a91;cursor:not-allowed;background-color:transparent}.nav-inline .nav-item{display:inline-block}.nav-inline .nav-item+.nav-item,.nav-inline .nav-link+.nav-link{margin-left:1rem}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs:after{content:\\\"\\\";display:table;clear:both}.nav-tabs .nav-item{float:left;margin-bottom:-1px}.nav-tabs .nav-item+.nav-item{margin-left:.2rem}.nav-tabs .nav-link{display:block;padding:.5em 1em;border:1px solid transparent;border-top-right-radius:.25rem;border-top-left-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#eceeef #eceeef #ddd}.nav-tabs .nav-link.disabled,.nav-tabs .nav-link.disabled:focus,.nav-tabs .nav-link.disabled:hover{color:#818a91;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.open .nav-link,.nav-tabs .nav-item.open .nav-link:focus,.nav-tabs .nav-item.open .nav-link:hover,.nav-tabs .nav-link.active,.nav-tabs .nav-link.active:focus,.nav-tabs .nav-link.active:hover{color:#55595c;background-color:#fff;border-color:#ddd #ddd transparent}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-right-radius:0;border-top-left-radius:0}.nav-pills:after{content:\\\"\\\";display:table;clear:both}.nav-pills .nav-item{float:left}.nav-pills .nav-item+.nav-item{margin-left:.2rem}.nav-pills .nav-link{display:block;padding:.5em 1em;border-radius:.25rem}.nav-pills .nav-item.open .nav-link,.nav-pills .nav-item.open .nav-link:focus,.nav-pills .nav-item.open .nav-link:hover,.nav-pills .nav-link.active,.nav-pills .nav-link.active:focus,.nav-pills .nav-link.active:hover{color:#fff;cursor:default;background-color:#0275d8}.nav-stacked .nav-item{display:block;float:none}.nav-stacked .nav-item+.nav-item{margin-top:.2rem;margin-left:0}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;padding:.5rem 1rem}.navbar:after{content:\\\"\\\";display:table;clear:both}@media (min-width:544px){.navbar{border-radius:.25rem}}.navbar-full{z-index:1000}@media (min-width:544px){.navbar-full{border-radius:0}}.navbar-fixed-bottom,.navbar-fixed-top{position:fixed;right:0;left:0;z-index:1030}@media (min-width:544px){.navbar-fixed-bottom,.navbar-fixed-top{border-radius:0}}.navbar-fixed-top{top:0}.navbar-fixed-bottom{bottom:0}.navbar-sticky-top{position:sticky;top:0;z-index:1030;width:100%}@media (min-width:544px){.navbar-sticky-top{border-radius:0}}.navbar-brand{float:left;padding-top:.25rem;padding-bottom:.25rem;margin-right:1rem;font-size:1.25rem}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-brand>img{display:block}.navbar-divider{float:left;width:1px;padding-top:.425rem;padding-bottom:.425rem;margin-right:1rem;margin-left:1rem;overflow:hidden}.navbar-divider:before{content:\\\"\\\\A0\\\"}.navbar-toggler{padding:.5rem .75rem;font-size:1.25rem;line-height:1;background:none;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-nav .nav-item{float:left}.navbar-nav .nav-link{display:block;padding-top:.425rem;padding-bottom:.425rem}.navbar-nav .nav-item+.nav-item,.navbar-nav .nav-link+.nav-link{margin-left:1rem}.navbar-light .navbar-brand,.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.8)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.6)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .active>.nav-link:focus,.navbar-light .navbar-nav .active>.nav-link:hover,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.active:focus,.navbar-light .navbar-nav .nav-link.active:hover,.navbar-light .navbar-nav .nav-link.open,.navbar-light .navbar-nav .nav-link.open:focus,.navbar-light .navbar-nav .nav-link.open:hover,.navbar-light .navbar-nav .open>.nav-link,.navbar-light .navbar-nav .open>.nav-link:focus,.navbar-light .navbar-nav .open>.nav-link:hover{color:rgba(0,0,0,.8)}.navbar-light .navbar-divider{background-color:rgba(0,0,0,.075)}.navbar-dark .navbar-brand,.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:hsla(0,0%,100%,.5)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:hsla(0,0%,100%,.75)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .active>.nav-link:focus,.navbar-dark .navbar-nav .active>.nav-link:hover,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.active:focus,.navbar-dark .navbar-nav .nav-link.active:hover,.navbar-dark .navbar-nav .nav-link.open,.navbar-dark .navbar-nav .nav-link.open:focus,.navbar-dark .navbar-nav .nav-link.open:hover,.navbar-dark .navbar-nav .open>.nav-link,.navbar-dark .navbar-nav .open>.nav-link:focus,.navbar-dark .navbar-nav .open>.nav-link:hover{color:#fff}.navbar-dark .navbar-divider{background-color:hsla(0,0%,100%,.075)}.navbar-toggleable-xs:after{content:\\\"\\\";display:table;clear:both}@media (max-width:543px){.navbar-toggleable-xs .navbar-nav .nav-item{float:none;margin-left:0}}@media (min-width:544px){.navbar-toggleable-xs{display:block!important}}.navbar-toggleable-sm:after{content:\\\"\\\";display:table;clear:both}@media (max-width:767px){.navbar-toggleable-sm .navbar-nav .nav-item{float:none;margin-left:0}}@media (min-width:768px){.navbar-toggleable-sm{display:block!important}}.navbar-toggleable-md:after{content:\\\"\\\";display:table;clear:both}@media (max-width:991px){.navbar-toggleable-md .navbar-nav .nav-item{float:none;margin-left:0}}@media (min-width:992px){.navbar-toggleable-md{display:block!important}}.card{position:relative;display:block;margin-bottom:.75rem;background-color:#fff;border-radius:.25rem;border:1px solid rgba(0,0,0,.125)}.card-block{padding:1.25rem}.card-block:after{content:\\\"\\\";display:table;clear:both}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem}.card-subtitle,.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card>.list-group:first-child .list-group-item:first-child{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-header{padding:.75rem 1.25rem;background-color:#f5f5f5;border-bottom:1px solid rgba(0,0,0,.125)}.card-header:after{content:\\\"\\\";display:table;clear:both}.card-header:first-child{border-radius:.25rem .25rem 0 0}.card-footer{padding:.75rem 1.25rem;background-color:#f5f5f5;border-top:1px solid rgba(0,0,0,.125)}.card-footer:after{content:\\\"\\\";display:table;clear:both}.card-footer:last-child{border-radius:0 0 .25rem .25rem}.card-header-tabs{margin-bottom:-.75rem;border-bottom:0}.card-header-pills,.card-header-tabs{margin-right:-.625rem;margin-left:-.625rem}.card-primary{background-color:#0275d8;border-color:#0275d8}.card-primary .card-footer,.card-primary .card-header{background-color:transparent}.card-success{background-color:#5cb85c;border-color:#5cb85c}.card-success .card-footer,.card-success .card-header{background-color:transparent}.card-info{background-color:#5bc0de;border-color:#5bc0de}.card-info .card-footer,.card-info .card-header{background-color:transparent}.card-warning{background-color:#f0ad4e;border-color:#f0ad4e}.card-warning .card-footer,.card-warning .card-header{background-color:transparent}.card-danger{background-color:#d9534f;border-color:#d9534f}.card-danger .card-footer,.card-danger .card-header,.card-outline-primary{background-color:transparent}.card-outline-primary{border-color:#0275d8}.card-outline-secondary{background-color:transparent;border-color:#ccc}.card-outline-info{background-color:transparent;border-color:#5bc0de}.card-outline-success{background-color:transparent;border-color:#5cb85c}.card-outline-warning{background-color:transparent;border-color:#f0ad4e}.card-outline-danger{background-color:transparent;border-color:#d9534f}.card-inverse .card-footer,.card-inverse .card-header{border-color:hsla(0,0%,100%,.2)}.card-inverse .card-blockquote,.card-inverse .card-footer,.card-inverse .card-header,.card-inverse .card-title{color:#fff}.card-inverse .card-blockquote .blockquote-footer,.card-inverse .card-link,.card-inverse .card-subtitle,.card-inverse .card-text{color:hsla(0,0%,100%,.65)}.card-inverse .card-link:focus,.card-inverse .card-link:hover{color:#fff}.card-blockquote{padding:0;margin-bottom:0;border-left:0}.card-img{border-radius:.25rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img-top{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.card-img-bottom{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}@media (min-width:544px){.card-deck{display:flex;flex-flow:row wrap;margin-right:-.625rem;margin-bottom:.75rem;margin-left:-.625rem}.card-deck .card{flex:1 0 0;margin-right:.625rem;margin-bottom:0;margin-left:.625rem}}@media (min-width:544px){.card-group{display:flex;flex-flow:row wrap}.card-group .card{flex:1 0 0}.card-group .card+.card{margin-left:0;border-left:0}.card-group .card:first-child{border-bottom-right-radius:0;border-top-right-radius:0}.card-group .card:first-child .card-img-top{border-top-right-radius:0}.card-group .card:first-child .card-img-bottom{border-bottom-right-radius:0}.card-group .card:last-child{border-bottom-left-radius:0;border-top-left-radius:0}.card-group .card:last-child .card-img-top{border-top-left-radius:0}.card-group .card:last-child .card-img-bottom{border-bottom-left-radius:0}.card-group .card:not(:first-child):not(:last-child),.card-group .card:not(:first-child):not(:last-child) .card-img-bottom,.card-group .card:not(:first-child):not(:last-child) .card-img-top{border-radius:0}}@media (min-width:544px){.card-columns{column-count:3;column-gap:1.25rem}.card-columns .card{width:100%}}.breadcrumb{padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#eceeef;border-radius:.25rem}.breadcrumb:after{content:\\\"\\\";display:table;clear:both}.breadcrumb-item{float:left}.breadcrumb-item+.breadcrumb-item:before{display:inline-block;padding-right:.5rem;padding-left:.5rem;color:#818a91;content:\\\"/\\\"}.breadcrumb-item+.breadcrumb-item:hover:before{text-decoration:underline;text-decoration:none}.breadcrumb-item.active{color:#818a91}.pagination{display:inline-block;padding-left:0;margin-top:1rem;margin-bottom:1rem;border-radius:.25rem}.page-item{display:inline}.page-item:first-child .page-link{margin-left:0;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.page-item:last-child .page-link{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}.page-item.active .page-link,.page-item.active .page-link:focus,.page-item.active .page-link:hover{z-index:2;color:#fff;cursor:default;background-color:#0275d8;border-color:#0275d8}.page-item.disabled .page-link,.page-item.disabled .page-link:focus,.page-item.disabled .page-link:hover{color:#818a91;pointer-events:none;cursor:not-allowed;background-color:#fff;border-color:#ddd}.page-link{position:relative;float:left;padding:.5rem .75rem;margin-left:-1px;color:#0275d8;text-decoration:none;background-color:#fff;border:1px solid #ddd}.page-link:focus,.page-link:hover{color:#014c8c;background-color:#eceeef;border-color:#ddd}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem}.pagination-lg .page-item:first-child .page-link{border-bottom-left-radius:.3rem;border-top-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-bottom-right-radius:.3rem;border-top-right-radius:.3rem}.pagination-sm .page-link{padding:.275rem .75rem;font-size:.875rem}.pagination-sm .page-item:first-child .page-link{border-bottom-left-radius:.2rem;border-top-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-bottom-right-radius:.2rem;border-top-right-radius:.2rem}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#eceeef;border-radius:.3rem}@media (min-width:544px){.jumbotron{padding:4rem 2rem}}.jumbotron-hr{border-top-color:#d0d5d8}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{padding:1rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:2rem}.alert-dismissible .close{position:relative;top:-.125rem;right:-1rem;color:inherit}.alert-success{background-color:#dff0d8;border-color:#d0e9c6;color:#3c763d}.alert-success hr{border-top-color:#c1e2b3}.alert-success .alert-link{color:#2b542c}.alert-info{background-color:#d9edf7;border-color:#bcdff1;color:#31708f}.alert-info hr{border-top-color:#a6d5ec}.alert-info .alert-link{color:#245269}.alert-warning{background-color:#fcf8e3;border-color:#faf2cc;color:#8a6d3b}.alert-warning hr{border-top-color:#f7ecb5}.alert-warning .alert-link{color:#66512c}.alert-danger{background-color:#f2dede;border-color:#ebcccc;color:#a94442}.alert-danger hr{border-top-color:#e4b9b9}.alert-danger .alert-link{color:#843534}@keyframes progress-bar-stripes{0%{background-position:1rem 0}to{background-position:0 0}}.progress{display:block;width:100%;height:1rem;margin-bottom:1rem}.progress[value]{background-color:#eee;border:0;appearance:none;border-radius:.25rem}.progress[value]::-ms-fill{background-color:#0074d9;border:0}.progress[value]::-moz-progress-bar{background-color:#0074d9;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.progress[value]::-webkit-progress-value{background-color:#0074d9;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.progress[value=\\\"100\\\"]::-moz-progress-bar{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}.progress[value=\\\"100\\\"]::-webkit-progress-value{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}.progress[value]::-webkit-progress-bar{background-color:#eee;border-radius:.25rem}.progress[value],base::-moz-progress-bar{background-color:#eee;border-radius:.25rem}@media screen and (min-width:0\\\\0){.progress{background-color:#eee;border-radius:.25rem}.progress-bar{display:inline-block;height:1rem;text-indent:-999rem;background-color:#0074d9;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.progress[width=\\\"100%\\\"]{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}}.progress-striped[value]::-webkit-progress-value{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1rem 1rem}.progress-striped[value]::-moz-progress-bar{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1rem 1rem}.progress-striped[value]::-ms-fill{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1rem 1rem}@media screen and (min-width:0\\\\0){.progress-bar-striped{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1rem 1rem}}.progress-animated[value]::-webkit-progress-value{animation:progress-bar-stripes 2s linear infinite}.progress-animated[value]::-moz-progress-bar{animation:progress-bar-stripes 2s linear infinite}@media screen and (min-width:0\\\\0){.progress-animated .progress-bar-striped{animation:progress-bar-stripes 2s linear infinite}}.progress-success[value]::-webkit-progress-value{background-color:#5cb85c}.progress-success[value]::-moz-progress-bar{background-color:#5cb85c}.progress-success[value]::-ms-fill{background-color:#5cb85c}@media screen and (min-width:0\\\\0){.progress-success .progress-bar{background-color:#5cb85c}}.progress-info[value]::-webkit-progress-value{background-color:#5bc0de}.progress-info[value]::-moz-progress-bar{background-color:#5bc0de}.progress-info[value]::-ms-fill{background-color:#5bc0de}@media screen and (min-width:0\\\\0){.progress-info .progress-bar{background-color:#5bc0de}}.progress-warning[value]::-webkit-progress-value{background-color:#f0ad4e}.progress-warning[value]::-moz-progress-bar{background-color:#f0ad4e}.progress-warning[value]::-ms-fill{background-color:#f0ad4e}@media screen and (min-width:0\\\\0){.progress-warning .progress-bar{background-color:#f0ad4e}}.progress-danger[value]::-webkit-progress-value{background-color:#d9534f}.progress-danger[value]::-moz-progress-bar{background-color:#d9534f}.progress-danger[value]::-ms-fill{background-color:#d9534f}@media screen and (min-width:0\\\\0){.progress-danger .progress-bar{background-color:#d9534f}}.media{display:flex}.media-body{flex:1}.media-middle{align-self:center}.media-bottom{align-self:flex-end}.media-object{display:block}.media-object.img-thumbnail{max-width:none}.media-right{padding-left:10px}.media-left{padding-right:10px}.media-heading{margin-top:0;margin-bottom:5px}.media-list{padding-left:0;list-style:none}.list-group{padding-left:0;margin-bottom:0}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid #ddd}.list-group-item:first-child{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.list-group-item.disabled,.list-group-item.disabled:focus,.list-group-item.disabled:hover{color:#818a91;cursor:not-allowed;background-color:#eceeef}.list-group-item.disabled .list-group-item-heading,.list-group-item.disabled:focus .list-group-item-heading,.list-group-item.disabled:hover .list-group-item-heading{color:inherit}.list-group-item.disabled .list-group-item-text,.list-group-item.disabled:focus .list-group-item-text,.list-group-item.disabled:hover .list-group-item-text{color:#818a91}.list-group-item.active,.list-group-item.active:focus,.list-group-item.active:hover{z-index:2;color:#fff;text-decoration:none;background-color:#0275d8;border-color:#0275d8}.list-group-item.active .list-group-item-heading,.list-group-item.active .list-group-item-heading>.small,.list-group-item.active .list-group-item-heading>small,.list-group-item.active:focus .list-group-item-heading,.list-group-item.active:focus .list-group-item-heading>.small,.list-group-item.active:focus .list-group-item-heading>small,.list-group-item.active:hover .list-group-item-heading,.list-group-item.active:hover .list-group-item-heading>.small,.list-group-item.active:hover .list-group-item-heading>small{color:inherit}.list-group-item.active .list-group-item-text,.list-group-item.active:focus .list-group-item-text,.list-group-item.active:hover .list-group-item-text{color:#a8d6fe}.list-group-flush .list-group-item{border-radius:0}.list-group-item-action{width:100%;color:#555;text-align:inherit}.list-group-item-action .list-group-item-heading{color:#333}.list-group-item-action:focus,.list-group-item-action:hover{color:#555;text-decoration:none;background-color:#f5f5f5}.list-group-item-success{color:#3c763d;background-color:#dff0d8}a.list-group-item-success,button.list-group-item-success{color:#3c763d}a.list-group-item-success .list-group-item-heading,button.list-group-item-success .list-group-item-heading{color:inherit}a.list-group-item-success:focus,a.list-group-item-success:hover,button.list-group-item-success:focus,button.list-group-item-success:hover{color:#3c763d;background-color:#d0e9c6}a.list-group-item-success.active,a.list-group-item-success.active:focus,a.list-group-item-success.active:hover,button.list-group-item-success.active,button.list-group-item-success.active:focus,button.list-group-item-success.active:hover{color:#fff;background-color:#3c763d;border-color:#3c763d}.list-group-item-info{color:#31708f;background-color:#d9edf7}a.list-group-item-info,button.list-group-item-info{color:#31708f}a.list-group-item-info .list-group-item-heading,button.list-group-item-info .list-group-item-heading{color:inherit}a.list-group-item-info:focus,a.list-group-item-info:hover,button.list-group-item-info:focus,button.list-group-item-info:hover{color:#31708f;background-color:#c4e3f3}a.list-group-item-info.active,a.list-group-item-info.active:focus,a.list-group-item-info.active:hover,button.list-group-item-info.active,button.list-group-item-info.active:focus,button.list-group-item-info.active:hover{color:#fff;background-color:#31708f;border-color:#31708f}.list-group-item-warning{color:#8a6d3b;background-color:#fcf8e3}a.list-group-item-warning,button.list-group-item-warning{color:#8a6d3b}a.list-group-item-warning .list-group-item-heading,button.list-group-item-warning .list-group-item-heading{color:inherit}a.list-group-item-warning:focus,a.list-group-item-warning:hover,button.list-group-item-warning:focus,button.list-group-item-warning:hover{color:#8a6d3b;background-color:#faf2cc}a.list-group-item-warning.active,a.list-group-item-warning.active:focus,a.list-group-item-warning.active:hover,button.list-group-item-warning.active,button.list-group-item-warning.active:focus,button.list-group-item-warning.active:hover{color:#fff;background-color:#8a6d3b;border-color:#8a6d3b}.list-group-item-danger{color:#a94442;background-color:#f2dede}a.list-group-item-danger,button.list-group-item-danger{color:#a94442}a.list-group-item-danger .list-group-item-heading,button.list-group-item-danger .list-group-item-heading{color:inherit}a.list-group-item-danger:focus,a.list-group-item-danger:hover,button.list-group-item-danger:focus,button.list-group-item-danger:hover{color:#a94442;background-color:#ebcccc}a.list-group-item-danger.active,a.list-group-item-danger.active:focus,a.list-group-item-danger.active:hover,button.list-group-item-danger.active,button.list-group-item-danger.active:focus,button.list-group-item-danger.active:hover{color:#fff;background-color:#a94442;border-color:#a94442}.list-group-item-heading{margin-top:0;margin-bottom:5px}.list-group-item-text{margin-bottom:0;line-height:1.3}.embed-responsive{position:relative;display:block;height:0;padding:0;overflow:hidden}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9{padding-bottom:42.85714%}.embed-responsive-16by9{padding-bottom:56.25%}.embed-responsive-4by3{padding-bottom:75%}.embed-responsive-1by1{padding-bottom:100%}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.2}.close:focus,.close:hover{color:#000;text-decoration:none;cursor:pointer;opacity:.5}button.close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none}.tag{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.tag:empty{display:none}.btn .tag{position:relative;top:-1px}a.tag:focus,a.tag:hover{color:#fff;text-decoration:none;cursor:pointer}.tag-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.tag-default{background-color:#818a91}.tag-default[href]:focus,.tag-default[href]:hover{background-color:#687077}.tag-primary{background-color:#0275d8}.tag-primary[href]:focus,.tag-primary[href]:hover{background-color:#025aa5}.tag-success{background-color:#5cb85c}.tag-success[href]:focus,.tag-success[href]:hover{background-color:#449d44}.tag-info{background-color:#5bc0de}.tag-info[href]:focus,.tag-info[href]:hover{background-color:#31b0d5}.tag-warning{background-color:#f0ad4e}.tag-warning[href]:focus,.tag-warning[href]:hover{background-color:#ec971f}.tag-danger{background-color:#d9534f}.tag-danger[href]:focus,.tag-danger[href]:hover{background-color:#c9302c}.modal,.modal-open{overflow:hidden}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;outline:0;-webkit-overflow-scrolling:touch}.modal.fade .modal-dialog{transition:transform .3s ease-out;transform:translateY(-25%)}.modal.in .modal-dialog{transform:translate(0)}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.in{opacity:.5}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5}.modal-header:after{content:\\\"\\\";display:table;clear:both}.modal-header .close{margin-top:-2px}.modal-title{margin:0;line-height:1.5}.modal-body{position:relative;padding:15px}.modal-footer{padding:15px;text-align:right;border-top:1px solid #e5e5e5}.modal-footer:after{content:\\\"\\\";display:table;clear:both}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:544px){.modal-dialog{max-width:600px;margin:30px auto}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg{max-width:900px}}.tooltip{position:absolute;z-index:1070;display:block;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.in{opacity:.9}.tooltip.bs-tether-element-attached-bottom,.tooltip.tooltip-top{padding:5px 0;margin-top:-3px}.tooltip.bs-tether-element-attached-bottom .tooltip-arrow,.tooltip.tooltip-top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.bs-tether-element-attached-left,.tooltip.tooltip-right{padding:0 5px;margin-left:3px}.tooltip.bs-tether-element-attached-left .tooltip-arrow,.tooltip.tooltip-right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000}.tooltip.bs-tether-element-attached-top,.tooltip.tooltip-bottom{padding:5px 0;margin-top:3px}.tooltip.bs-tether-element-attached-top .tooltip-arrow,.tooltip.tooltip-bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bs-tether-element-attached-right,.tooltip.tooltip-left{padding:0 5px;margin-left:-3px}.tooltip.bs-tether-element-attached-right .tooltip-arrow,.tooltip.tooltip-left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;padding:1px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.popover.bs-tether-element-attached-bottom,.popover.popover-top{margin-top:-10px}.popover.bs-tether-element-attached-bottom .popover-arrow,.popover.popover-top .popover-arrow{bottom:-11px;left:50%;margin-left:-11px;border-top-color:rgba(0,0,0,.25);border-bottom-width:0}.popover.bs-tether-element-attached-bottom .popover-arrow:after,.popover.popover-top .popover-arrow:after{bottom:1px;margin-left:-10px;content:\\\"\\\";border-top-color:#fff;border-bottom-width:0}.popover.bs-tether-element-attached-left,.popover.popover-right{margin-left:10px}.popover.bs-tether-element-attached-left .popover-arrow,.popover.popover-right .popover-arrow{top:50%;left:-11px;margin-top:-11px;border-right-color:rgba(0,0,0,.25);border-left-width:0}.popover.bs-tether-element-attached-left .popover-arrow:after,.popover.popover-right .popover-arrow:after{bottom:-10px;left:1px;content:\\\"\\\";border-right-color:#fff;border-left-width:0}.popover.bs-tether-element-attached-top,.popover.popover-bottom{margin-top:10px}.popover.bs-tether-element-attached-top .popover-arrow,.popover.popover-bottom .popover-arrow{top:-11px;left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:rgba(0,0,0,.25)}.popover.bs-tether-element-attached-top .popover-arrow:after,.popover.popover-bottom .popover-arrow:after{top:1px;margin-left:-10px;content:\\\"\\\";border-top-width:0;border-bottom-color:#fff}.popover.bs-tether-element-attached-right,.popover.popover-left{margin-left:-10px}.popover.bs-tether-element-attached-right .popover-arrow,.popover.popover-left .popover-arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:rgba(0,0,0,.25)}.popover.bs-tether-element-attached-right .popover-arrow:after,.popover.popover-left .popover-arrow:after{right:1px;bottom:-10px;content:\\\"\\\";border-right-width:0;border-left-color:#fff}.popover-title{padding:8px 14px;margin:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:.2375rem .2375rem 0 0}.popover-title:empty{display:none}.popover-content{padding:9px 14px}.popover-arrow,.popover-arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover-arrow{border-width:11px}.popover-arrow:after{content:\\\"\\\";border-width:10px}.carousel,.carousel-inner{position:relative}.carousel-inner{width:100%;overflow:hidden}.carousel-inner>.carousel-item{position:relative;display:none;transition:left .6s ease-in-out}.carousel-inner>.carousel-item>a>img,.carousel-inner>.carousel-item>img{line-height:1}@media (-webkit-transform-3d),all and (transform-3d){.carousel-inner>.carousel-item{transition:transform .6s ease-in-out;backface-visibility:hidden;perspective:1000px}.carousel-inner>.carousel-item.active.right,.carousel-inner>.carousel-item.next{left:0;transform:translate3d(100%,0,0)}.carousel-inner>.carousel-item.active.left,.carousel-inner>.carousel-item.prev{left:0;transform:translate3d(-100%,0,0)}.carousel-inner>.carousel-item.active,.carousel-inner>.carousel-item.next.left,.carousel-inner>.carousel-item.prev.right{left:0;transform:translateZ(0)}}.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block}.carousel-inner>.active{left:0}.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%}.carousel-inner>.next{left:100%}.carousel-inner>.prev{left:-100%}.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0}.carousel-inner>.active.left{left:-100%}.carousel-inner>.active.right{left:100%}.carousel-control{position:absolute;top:0;bottom:0;left:0;width:15%;font-size:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6);opacity:.5}.carousel-control.left{background-image:linear-gradient(90deg,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000',endColorstr='#00000000',GradientType=1)}.carousel-control.right{right:0;left:auto;background-image:linear-gradient(90deg,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000',endColorstr='#80000000',GradientType=1)}.carousel-control:focus,.carousel-control:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control .icon-next,.carousel-control .icon-prev{position:absolute;top:50%;z-index:5;display:inline-block;width:20px;height:20px;margin-top:-10px;font-family:serif;line-height:1}.carousel-control .icon-prev{left:50%;margin-left:-10px}.carousel-control .icon-next{right:50%;margin-right:-10px}.carousel-control .icon-prev:before{content:\\\"\\\\2039\\\"}.carousel-control .icon-next:before{content:\\\"\\\\203A\\\"}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;padding-left:0;margin-left:-30%;text-align:center;list-style:none}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;cursor:pointer;background-color:transparent;border:1px solid #fff;border-radius:10px}.carousel-indicators .active{width:12px;height:12px;margin:0;background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-caption .btn{text-shadow:none}@media (min-width:544px){.carousel-control .icon-next,.carousel-control .icon-prev{width:30px;height:30px;margin-top:-15px;font-size:30px}.carousel-control .icon-prev{margin-left:-15px}.carousel-control .icon-next{margin-right:-15px}.carousel-caption{right:20%;left:20%;padding-bottom:30px}.carousel-indicators{bottom:20px}}.bg-faded{background-color:#f7f7f9}.bg-primary{color:#fff!important;background-color:#0275d8!important}a.bg-primary:focus,a.bg-primary:hover{background-color:#025aa5!important}.bg-success{color:#fff!important;background-color:#5cb85c!important}a.bg-success:focus,a.bg-success:hover{background-color:#449d44!important}.bg-info{color:#fff!important;background-color:#5bc0de!important}a.bg-info:focus,a.bg-info:hover{background-color:#31b0d5!important}.bg-warning{color:#fff!important;background-color:#f0ad4e!important}a.bg-warning:focus,a.bg-warning:hover{background-color:#ec971f!important}.bg-danger{color:#fff!important;background-color:#d9534f!important}a.bg-danger:focus,a.bg-danger:hover{background-color:#c9302c!important}.bg-inverse{color:#fff!important;background-color:#373a3c!important}a.bg-inverse:focus,a.bg-inverse:hover{background-color:#1f2021!important}.clearfix:after{content:\\\"\\\";display:table;clear:both}.d-block{display:block!important}.d-inline-block{display:inline-block!important}.d-inline{display:inline!important}.flex-xs-first{order:-1}.flex-xs-last{order:1}.flex-xs-unordered{order:0}.flex-items-xs-top{align-items:flex-start}.flex-items-xs-middle{align-items:center}.flex-items-xs-bottom{align-items:flex-end}.flex-xs-top{align-self:flex-start}.flex-xs-middle{align-self:center}.flex-xs-bottom{align-self:flex-end}.flex-items-xs-left{justify-content:flex-start}.flex-items-xs-center{justify-content:center}.flex-items-xs-right{justify-content:flex-end}.flex-items-xs-around{justify-content:space-around}.flex-items-xs-between{justify-content:space-between}@media (min-width:544px){.flex-sm-first{order:-1}.flex-sm-last{order:1}.flex-sm-unordered{order:0}}@media (min-width:544px){.flex-items-sm-top{align-items:flex-start}.flex-items-sm-middle{align-items:center}.flex-items-sm-bottom{align-items:flex-end}}@media (min-width:544px){.flex-sm-top{align-self:flex-start}.flex-sm-middle{align-self:center}.flex-sm-bottom{align-self:flex-end}}@media (min-width:544px){.flex-items-sm-left{justify-content:flex-start}.flex-items-sm-center{justify-content:center}.flex-items-sm-right{justify-content:flex-end}.flex-items-sm-around{justify-content:space-around}.flex-items-sm-between{justify-content:space-between}}@media (min-width:768px){.flex-md-first{order:-1}.flex-md-last{order:1}.flex-md-unordered{order:0}}@media (min-width:768px){.flex-items-md-top{align-items:flex-start}.flex-items-md-middle{align-items:center}.flex-items-md-bottom{align-items:flex-end}}@media (min-width:768px){.flex-md-top{align-self:flex-start}.flex-md-middle{align-self:center}.flex-md-bottom{align-self:flex-end}}@media (min-width:768px){.flex-items-md-left{justify-content:flex-start}.flex-items-md-center{justify-content:center}.flex-items-md-right{justify-content:flex-end}.flex-items-md-around{justify-content:space-around}.flex-items-md-between{justify-content:space-between}}@media (min-width:992px){.flex-lg-first{order:-1}.flex-lg-last{order:1}.flex-lg-unordered{order:0}}@media (min-width:992px){.flex-items-lg-top{align-items:flex-start}.flex-items-lg-middle{align-items:center}.flex-items-lg-bottom{align-items:flex-end}}@media (min-width:992px){.flex-lg-top{align-self:flex-start}.flex-lg-middle{align-self:center}.flex-lg-bottom{align-self:flex-end}}@media (min-width:992px){.flex-items-lg-left{justify-content:flex-start}.flex-items-lg-center{justify-content:center}.flex-items-lg-right{justify-content:flex-end}.flex-items-lg-around{justify-content:space-around}.flex-items-lg-between{justify-content:space-between}}@media (min-width:1200px){.flex-xl-first{order:-1}.flex-xl-last{order:1}.flex-xl-unordered{order:0}}@media (min-width:1200px){.flex-items-xl-top{align-items:flex-start}.flex-items-xl-middle{align-items:center}.flex-items-xl-bottom{align-items:flex-end}}@media (min-width:1200px){.flex-xl-top{align-self:flex-start}.flex-xl-middle{align-self:center}.flex-xl-bottom{align-self:flex-end}}@media (min-width:1200px){.flex-items-xl-left{justify-content:flex-start}.flex-items-xl-center{justify-content:center}.flex-items-xl-right{justify-content:flex-end}.flex-items-xl-around{justify-content:space-around}.flex-items-xl-between{justify-content:space-between}}.pull-xs-left{float:left!important}.pull-xs-right{float:right!important}.pull-xs-none{float:none!important}@media (min-width:544px){.pull-sm-left{float:left!important}.pull-sm-right{float:right!important}.pull-sm-none{float:none!important}}@media (min-width:768px){.pull-md-left{float:left!important}.pull-md-right{float:right!important}.pull-md-none{float:none!important}}@media (min-width:992px){.pull-lg-left{float:left!important}.pull-lg-right{float:right!important}.pull-lg-none{float:none!important}}@media (min-width:1200px){.pull-xl-left{float:left!important}.pull-xl-right{float:right!important}.pull-xl-none{float:none!important}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}.w-100{width:100%!important}.m-x-auto{margin-right:auto!important;margin-left:auto!important}.m-a-0{margin:0!important}.m-t-0{margin-top:0!important}.m-r-0{margin-right:0!important}.m-b-0{margin-bottom:0!important}.m-l-0,.m-x-0{margin-left:0!important}.m-x-0{margin-right:0!important}.m-y-0{margin-top:0!important;margin-bottom:0!important}.m-a-1{margin:1rem!important}.m-t-1{margin-top:1rem!important}.m-r-1{margin-right:1rem!important}.m-b-1{margin-bottom:1rem!important}.m-l-1,.m-x-1{margin-left:1rem!important}.m-x-1{margin-right:1rem!important}.m-y-1{margin-top:1rem!important;margin-bottom:1rem!important}.m-a-2{margin:1.5rem!important}.m-t-2{margin-top:1.5rem!important}.m-r-2{margin-right:1.5rem!important}.m-b-2{margin-bottom:1.5rem!important}.m-l-2,.m-x-2{margin-left:1.5rem!important}.m-x-2{margin-right:1.5rem!important}.m-y-2{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.m-a-3{margin:3rem!important}.m-t-3{margin-top:3rem!important}.m-r-3{margin-right:3rem!important}.m-b-3{margin-bottom:3rem!important}.m-l-3,.m-x-3{margin-left:3rem!important}.m-x-3{margin-right:3rem!important}.m-y-3{margin-top:3rem!important;margin-bottom:3rem!important}.p-a-0{padding:0!important}.p-t-0{padding-top:0!important}.p-r-0{padding-right:0!important}.p-b-0{padding-bottom:0!important}.p-l-0,.p-x-0{padding-left:0!important}.p-x-0{padding-right:0!important}.p-y-0{padding-top:0!important;padding-bottom:0!important}.p-a-1{padding:1rem!important}.p-t-1{padding-top:1rem!important}.p-r-1{padding-right:1rem!important}.p-b-1{padding-bottom:1rem!important}.p-l-1,.p-x-1{padding-left:1rem!important}.p-x-1{padding-right:1rem!important}.p-y-1{padding-top:1rem!important;padding-bottom:1rem!important}.p-a-2{padding:1.5rem!important}.p-t-2{padding-top:1.5rem!important}.p-r-2{padding-right:1.5rem!important}.p-b-2{padding-bottom:1.5rem!important}.p-l-2,.p-x-2{padding-left:1.5rem!important}.p-x-2{padding-right:1.5rem!important}.p-y-2{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.p-a-3{padding:3rem!important}.p-t-3{padding-top:3rem!important}.p-r-3{padding-right:3rem!important}.p-b-3{padding-bottom:3rem!important}.p-l-3,.p-x-3{padding-left:3rem!important}.p-x-3{padding-right:3rem!important}.p-y-3{padding-top:3rem!important;padding-bottom:3rem!important}.pos-f-t{position:fixed;top:0;right:0;left:0;z-index:1030}.text-justify{text-align:justify!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-xs-left{text-align:left!important}.text-xs-right{text-align:right!important}.text-xs-center{text-align:center!important}@media (min-width:544px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-normal{font-weight:400}.font-weight-bold{font-weight:700}.font-italic{font-style:italic}.text-muted{color:#818a91!important}a.text-muted:focus,a.text-muted:hover{color:#687077!important}.text-primary{color:#0275d8!important}a.text-primary:focus,a.text-primary:hover{color:#025aa5!important}.text-success{color:#5cb85c!important}a.text-success:focus,a.text-success:hover{color:#449d44!important}.text-info{color:#5bc0de!important}a.text-info:focus,a.text-info:hover{color:#31b0d5!important}.text-warning{color:#f0ad4e!important}a.text-warning:focus,a.text-warning:hover{color:#ec971f!important}.text-danger{color:#d9534f!important}a.text-danger:focus,a.text-danger:hover{color:#c9302c!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.invisible{visibility:hidden!important}.hidden-xs-up{display:none!important}@media (max-width:543px){.hidden-xs-down{display:none!important}}@media (min-width:544px){.hidden-sm-up{display:none!important}}@media (max-width:767px){.hidden-sm-down{display:none!important}}@media (min-width:768px){.hidden-md-up{display:none!important}}@media (max-width:991px){.hidden-md-down{display:none!important}}@media (min-width:992px){.hidden-lg-up{display:none!important}}@media (max-width:1199px){.hidden-lg-down{display:none!important}}@media (min-width:1200px){.hidden-xl-up{display:none!important}}.hidden-xl-down,.visible-print-block{display:none!important}@media print{.visible-print-block{display:block!important}}.visible-print-inline{display:none!important}@media print{.visible-print-inline{display:inline!important}}.visible-print-inline-block{display:none!important}@media print{.visible-print-inline-block{display:inline-block!important}}@media print{.hidden-print{display:none!important}}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/postcss-loader!./~/resolve-url-loader!./~/sass-loader?sourceMap!./~/bootstrap-loader/lib/bootstrap.styles.loader.js!./~/bootstrap-loader/no-op.js\n ** module id = 74\n ** module chunks = 1\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 75\n ** module chunks = 1\n **/","/* global Tether */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.4): tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Tooltip = (function ($) {\n\n  /**\n   * Check for Tether dependency\n   * Tether - http://github.hubspot.com/tether/\n   */\n  if (window.Tether === undefined) {\n    throw new Error('Bootstrap tooltips require Tether (http://github.hubspot.com/tether/)');\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NAME = 'tooltip';\n  var VERSION = '4.0.0-alpha.4';\n  var DATA_KEY = 'bs.tooltip';\n  var EVENT_KEY = '.' + DATA_KEY;\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var TRANSITION_DURATION = 150;\n  var CLASS_PREFIX = 'bs-tether';\n\n  var Default = {\n    animation: true,\n    template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"tooltip-arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    selector: false,\n    placement: 'top',\n    offset: '0 0',\n    constraints: []\n  };\n\n  var DefaultType = {\n    animation: 'boolean',\n    template: 'string',\n    title: '(string|element|function)',\n    trigger: 'string',\n    delay: '(number|object)',\n    html: 'boolean',\n    selector: '(string|boolean)',\n    placement: '(string|function)',\n    offset: 'string',\n    constraints: 'array'\n  };\n\n  var AttachmentMap = {\n    TOP: 'bottom center',\n    RIGHT: 'middle left',\n    BOTTOM: 'top center',\n    LEFT: 'middle right'\n  };\n\n  var HoverState = {\n    IN: 'in',\n    OUT: 'out'\n  };\n\n  var Event = {\n    HIDE: 'hide' + EVENT_KEY,\n    HIDDEN: 'hidden' + EVENT_KEY,\n    SHOW: 'show' + EVENT_KEY,\n    SHOWN: 'shown' + EVENT_KEY,\n    INSERTED: 'inserted' + EVENT_KEY,\n    CLICK: 'click' + EVENT_KEY,\n    FOCUSIN: 'focusin' + EVENT_KEY,\n    FOCUSOUT: 'focusout' + EVENT_KEY,\n    MOUSEENTER: 'mouseenter' + EVENT_KEY,\n    MOUSELEAVE: 'mouseleave' + EVENT_KEY\n  };\n\n  var ClassName = {\n    FADE: 'fade',\n    IN: 'in'\n  };\n\n  var Selector = {\n    TOOLTIP: '.tooltip',\n    TOOLTIP_INNER: '.tooltip-inner'\n  };\n\n  var TetherClass = {\n    element: false,\n    enabled: false\n  };\n\n  var Trigger = {\n    HOVER: 'hover',\n    FOCUS: 'focus',\n    CLICK: 'click',\n    MANUAL: 'manual'\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Tooltip = (function () {\n    function Tooltip(element, config) {\n      _classCallCheck(this, Tooltip);\n\n      // private\n      this._isEnabled = true;\n      this._timeout = 0;\n      this._hoverState = '';\n      this._activeTrigger = {};\n      this._tether = null;\n\n      // protected\n      this.element = element;\n      this.config = this._getConfig(config);\n      this.tip = null;\n\n      this._setListeners();\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    // getters\n\n    _createClass(Tooltip, [{\n      key: 'enable',\n\n      // public\n\n      value: function enable() {\n        this._isEnabled = true;\n      }\n    }, {\n      key: 'disable',\n      value: function disable() {\n        this._isEnabled = false;\n      }\n    }, {\n      key: 'toggleEnabled',\n      value: function toggleEnabled() {\n        this._isEnabled = !this._isEnabled;\n      }\n    }, {\n      key: 'toggle',\n      value: function toggle(event) {\n        if (event) {\n          var dataKey = this.constructor.DATA_KEY;\n          var context = $(event.currentTarget).data(dataKey);\n\n          if (!context) {\n            context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n            $(event.currentTarget).data(dataKey, context);\n          }\n\n          context._activeTrigger.click = !context._activeTrigger.click;\n\n          if (context._isWithActiveTrigger()) {\n            context._enter(null, context);\n          } else {\n            context._leave(null, context);\n          }\n        } else {\n\n          if ($(this.getTipElement()).hasClass(ClassName.IN)) {\n            this._leave(null, this);\n            return;\n          }\n\n          this._enter(null, this);\n        }\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        clearTimeout(this._timeout);\n\n        this.cleanupTether();\n\n        $.removeData(this.element, this.constructor.DATA_KEY);\n\n        $(this.element).off(this.constructor.EVENT_KEY);\n\n        if (this.tip) {\n          $(this.tip).remove();\n        }\n\n        this._isEnabled = null;\n        this._timeout = null;\n        this._hoverState = null;\n        this._activeTrigger = null;\n        this._tether = null;\n\n        this.element = null;\n        this.config = null;\n        this.tip = null;\n      }\n    }, {\n      key: 'show',\n      value: function show() {\n        var _this = this;\n\n        var showEvent = $.Event(this.constructor.Event.SHOW);\n\n        if (this.isWithContent() && this._isEnabled) {\n          $(this.element).trigger(showEvent);\n\n          var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);\n\n          if (showEvent.isDefaultPrevented() || !isInTheDom) {\n            return;\n          }\n\n          var tip = this.getTipElement();\n          var tipId = Util.getUID(this.constructor.NAME);\n\n          tip.setAttribute('id', tipId);\n          this.element.setAttribute('aria-describedby', tipId);\n\n          this.setContent();\n\n          if (this.config.animation) {\n            $(tip).addClass(ClassName.FADE);\n          }\n\n          var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n\n          var attachment = this._getAttachment(placement);\n\n          $(tip).data(this.constructor.DATA_KEY, this).appendTo(document.body);\n\n          $(this.element).trigger(this.constructor.Event.INSERTED);\n\n          this._tether = new Tether({\n            attachment: attachment,\n            element: tip,\n            target: this.element,\n            classes: TetherClass,\n            classPrefix: CLASS_PREFIX,\n            offset: this.config.offset,\n            constraints: this.config.constraints,\n            addTargetClasses: false\n          });\n\n          Util.reflow(tip);\n          this._tether.position();\n\n          $(tip).addClass(ClassName.IN);\n\n          var complete = function complete() {\n            var prevHoverState = _this._hoverState;\n            _this._hoverState = null;\n\n            $(_this.element).trigger(_this.constructor.Event.SHOWN);\n\n            if (prevHoverState === HoverState.OUT) {\n              _this._leave(null, _this);\n            }\n          };\n\n          if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n            $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);\n            return;\n          }\n\n          complete();\n        }\n      }\n    }, {\n      key: 'hide',\n      value: function hide(callback) {\n        var _this2 = this;\n\n        var tip = this.getTipElement();\n        var hideEvent = $.Event(this.constructor.Event.HIDE);\n        var complete = function complete() {\n          if (_this2._hoverState !== HoverState.IN && tip.parentNode) {\n            tip.parentNode.removeChild(tip);\n          }\n\n          _this2.element.removeAttribute('aria-describedby');\n          $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\n          _this2.cleanupTether();\n\n          if (callback) {\n            callback();\n          }\n        };\n\n        $(this.element).trigger(hideEvent);\n\n        if (hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        $(tip).removeClass(ClassName.IN);\n\n        if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n\n          $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n        } else {\n          complete();\n        }\n\n        this._hoverState = '';\n      }\n\n      // protected\n\n    }, {\n      key: 'isWithContent',\n      value: function isWithContent() {\n        return Boolean(this.getTitle());\n      }\n    }, {\n      key: 'getTipElement',\n      value: function getTipElement() {\n        return this.tip = this.tip || $(this.config.template)[0];\n      }\n    }, {\n      key: 'setContent',\n      value: function setContent() {\n        var $tip = $(this.getTipElement());\n\n        this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());\n\n        $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\n\n        this.cleanupTether();\n      }\n    }, {\n      key: 'setElementContent',\n      value: function setElementContent($element, content) {\n        var html = this.config.html;\n        if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n          // content is a DOM node or a jQuery\n          if (html) {\n            if (!$(content).parent().is($element)) {\n              $element.empty().append(content);\n            }\n          } else {\n            $element.text($(content).text());\n          }\n        } else {\n          $element[html ? 'html' : 'text'](content);\n        }\n      }\n    }, {\n      key: 'getTitle',\n      value: function getTitle() {\n        var title = this.element.getAttribute('data-original-title');\n\n        if (!title) {\n          title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n        }\n\n        return title;\n      }\n    }, {\n      key: 'cleanupTether',\n      value: function cleanupTether() {\n        if (this._tether) {\n          this._tether.destroy();\n        }\n      }\n\n      // private\n\n    }, {\n      key: '_getAttachment',\n      value: function _getAttachment(placement) {\n        return AttachmentMap[placement.toUpperCase()];\n      }\n    }, {\n      key: '_setListeners',\n      value: function _setListeners() {\n        var _this3 = this;\n\n        var triggers = this.config.trigger.split(' ');\n\n        triggers.forEach(function (trigger) {\n          if (trigger === 'click') {\n            $(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, $.proxy(_this3.toggle, _this3));\n          } else if (trigger !== Trigger.MANUAL) {\n            var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;\n            var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;\n\n            $(_this3.element).on(eventIn, _this3.config.selector, $.proxy(_this3._enter, _this3)).on(eventOut, _this3.config.selector, $.proxy(_this3._leave, _this3));\n          }\n        });\n\n        if (this.config.selector) {\n          this.config = $.extend({}, this.config, {\n            trigger: 'manual',\n            selector: ''\n          });\n        } else {\n          this._fixTitle();\n        }\n      }\n    }, {\n      key: '_fixTitle',\n      value: function _fixTitle() {\n        var titleType = typeof this.element.getAttribute('data-original-title');\n        if (this.element.getAttribute('title') || titleType !== 'string') {\n          this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n          this.element.setAttribute('title', '');\n        }\n      }\n    }, {\n      key: '_enter',\n      value: function _enter(event, context) {\n        var dataKey = this.constructor.DATA_KEY;\n\n        context = context || $(event.currentTarget).data(dataKey);\n\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          $(event.currentTarget).data(dataKey, context);\n        }\n\n        if (event) {\n          context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n        }\n\n        if ($(context.getTipElement()).hasClass(ClassName.IN) || context._hoverState === HoverState.IN) {\n          context._hoverState = HoverState.IN;\n          return;\n        }\n\n        clearTimeout(context._timeout);\n\n        context._hoverState = HoverState.IN;\n\n        if (!context.config.delay || !context.config.delay.show) {\n          context.show();\n          return;\n        }\n\n        context._timeout = setTimeout(function () {\n          if (context._hoverState === HoverState.IN) {\n            context.show();\n          }\n        }, context.config.delay.show);\n      }\n    }, {\n      key: '_leave',\n      value: function _leave(event, context) {\n        var dataKey = this.constructor.DATA_KEY;\n\n        context = context || $(event.currentTarget).data(dataKey);\n\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          $(event.currentTarget).data(dataKey, context);\n        }\n\n        if (event) {\n          context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n        }\n\n        if (context._isWithActiveTrigger()) {\n          return;\n        }\n\n        clearTimeout(context._timeout);\n\n        context._hoverState = HoverState.OUT;\n\n        if (!context.config.delay || !context.config.delay.hide) {\n          context.hide();\n          return;\n        }\n\n        context._timeout = setTimeout(function () {\n          if (context._hoverState === HoverState.OUT) {\n            context.hide();\n          }\n        }, context.config.delay.hide);\n      }\n    }, {\n      key: '_isWithActiveTrigger',\n      value: function _isWithActiveTrigger() {\n        for (var trigger in this._activeTrigger) {\n          if (this._activeTrigger[trigger]) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: '_getConfig',\n      value: function _getConfig(config) {\n        config = $.extend({}, this.constructor.Default, $(this.element).data(), config);\n\n        if (config.delay && typeof config.delay === 'number') {\n          config.delay = {\n            show: config.delay,\n            hide: config.delay\n          };\n        }\n\n        Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n\n        return config;\n      }\n    }, {\n      key: '_getDelegateConfig',\n      value: function _getDelegateConfig() {\n        var config = {};\n\n        if (this.config) {\n          for (var key in this.config) {\n            if (this.constructor.Default[key] !== this.config[key]) {\n              config[key] = this.config[key];\n            }\n          }\n        }\n\n        return config;\n      }\n\n      // static\n\n    }], [{\n      key: '_jQueryInterface',\n      value: function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $(this).data(DATA_KEY);\n          var _config = typeof config === 'object' ? config : null;\n\n          if (!data && /destroy|hide/.test(config)) {\n            return;\n          }\n\n          if (!data) {\n            data = new Tooltip(this, _config);\n            $(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error('No method named \"' + config + '\"');\n            }\n            data[config]();\n          }\n        });\n      }\n    }, {\n      key: 'VERSION',\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: 'Default',\n      get: function get() {\n        return Default;\n      }\n    }, {\n      key: 'NAME',\n      get: function get() {\n        return NAME;\n      }\n    }, {\n      key: 'DATA_KEY',\n      get: function get() {\n        return DATA_KEY;\n      }\n    }, {\n      key: 'Event',\n      get: function get() {\n        return Event;\n      }\n    }, {\n      key: 'EVENT_KEY',\n      get: function get() {\n        return EVENT_KEY;\n      }\n    }, {\n      key: 'DefaultType',\n      get: function get() {\n        return DefaultType;\n      }\n    }]);\n\n    return Tooltip;\n  })();\n\n  $.fn[NAME] = Tooltip._jQueryInterface;\n  $.fn[NAME].Constructor = Tooltip;\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Tooltip._jQueryInterface;\n  };\n\n  return Tooltip;\n})(jQuery);\n//# sourceMappingURL=tooltip.js.map\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = Tooltip;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?Tooltip!./~/bootstrap/js/dist/tooltip.js\n ** module id = 76\n ** module chunks = 1\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 80\n ** module chunks = 1\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../css-loader/index.js!./../postcss-loader/index.js!./../resolve-url-loader/index.js!./../sass-loader/index.js?sourceMap!./lib/bootstrap.styles.loader.js!./no-op.js\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../css-loader/index.js!./../postcss-loader/index.js!./../resolve-url-loader/index.js!./../sass-loader/index.js?sourceMap!./lib/bootstrap.styles.loader.js!./no-op.js\", function() {\n\t\t\tvar newContent = require(\"!!./../css-loader/index.js!./../postcss-loader/index.js!./../resolve-url-loader/index.js!./../sass-loader/index.js?sourceMap!./lib/bootstrap.styles.loader.js!./no-op.js\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader!./~/css-loader!./~/postcss-loader!./~/resolve-url-loader!./~/sass-loader?sourceMap!./~/bootstrap-loader/lib/bootstrap.styles.loader.js!./~/bootstrap-loader/no-op.js\n ** module id = 81\n ** module chunks = 1\n **/","(function(root, factory){\n\n\t//UMD\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine(function() {\n\t\t\treturn factory();\n\t\t});\n\t} else if (typeof module === \"object\") {\n\t\tmodule.exports = factory();\n \t} else {\n\t\troot.Tone = factory();\n\t}\n\n}(this, function(){\n\n\t\"use strict\";\n\t\n\tvar Tone;\n\t//constructs the main Tone object\n\tfunction Main(func){\n\t\tTone = func();\n\t}\n\t//invokes each of the modules with the main Tone object as the argument\n\tfunction Module(func){\n\t\tfunc(Tone);\n\t}\t/**\n\t *  Tone.js\n\t *  @author Yotam Mann\n\t *  @license http://opensource.org/licenses/MIT MIT License\n\t *  @copyright 2014-2016 Yotam Mann\n\t */\n\tMain(function () {\n\t    \n\t    //////////////////////////////////////////////////////////////////////////\n\t    //\tWEB AUDIO CONTEXT\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    function isUndef(val) {\n\t        return typeof val === 'undefined';\n\t    }\n\t    function isFunction(val) {\n\t        return typeof val === 'function';\n\t    }\n\t    var audioContext;\n\t    //polyfill for AudioContext and OfflineAudioContext\n\t    if (isUndef(window.AudioContext)) {\n\t        window.AudioContext = window.webkitAudioContext;\n\t    }\n\t    if (isUndef(window.OfflineAudioContext)) {\n\t        window.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t    }\n\t    if (!isUndef(AudioContext)) {\n\t        audioContext = new AudioContext();\n\t    } else {\n\t        throw new Error('Web Audio is not supported in this browser');\n\t    }\n\t    //SHIMS////////////////////////////////////////////////////////////////////\n\t    if (!isFunction(AudioContext.prototype.createGain)) {\n\t        AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t    }\n\t    if (!isFunction(AudioContext.prototype.createDelay)) {\n\t        AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t    }\n\t    if (!isFunction(AudioContext.prototype.createPeriodicWave)) {\n\t        AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t    }\n\t    if (!isFunction(AudioBufferSourceNode.prototype.start)) {\n\t        AudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t    }\n\t    if (!isFunction(AudioBufferSourceNode.prototype.stop)) {\n\t        AudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t    }\n\t    if (!isFunction(OscillatorNode.prototype.start)) {\n\t        OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t    }\n\t    if (!isFunction(OscillatorNode.prototype.stop)) {\n\t        OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\n\t    }\n\t    if (!isFunction(OscillatorNode.prototype.setPeriodicWave)) {\n\t        OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t    }\n\t    //extend the connect function to include Tones\n\t    if (isUndef(AudioNode.prototype._nativeConnect)) {\n\t        AudioNode.prototype._nativeConnect = AudioNode.prototype.connect;\n\t        AudioNode.prototype.connect = function (B, outNum, inNum) {\n\t            if (B.input) {\n\t                if (Array.isArray(B.input)) {\n\t                    if (isUndef(inNum)) {\n\t                        inNum = 0;\n\t                    }\n\t                    this.connect(B.input[inNum]);\n\t                } else {\n\t                    this.connect(B.input, outNum, inNum);\n\t                }\n\t            } else {\n\t                try {\n\t                    if (B instanceof AudioNode) {\n\t                        this._nativeConnect(B, outNum, inNum);\n\t                    } else {\n\t                        this._nativeConnect(B, outNum);\n\t                    }\n\t                } catch (e) {\n\t                    throw new Error('error connecting to node: ' + B);\n\t                }\n\t            }\n\t        };\n\t    }\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTONE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  @class  Tone is the base class of all other classes. It provides \n\t\t *          a lot of methods and functionality to all classes that extend\n\t\t *          it. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @alias Tone\n\t\t *  @param {number} [inputs=1] the number of input nodes\n\t\t *  @param {number} [outputs=1] the number of output nodes\n\t\t */\n\t    var Tone = function (inputs, outputs) {\n\t        /**\n\t\t\t *  the input node(s)\n\t\t\t *  @type {GainNode|Array}\n\t\t\t */\n\t        if (isUndef(inputs) || inputs === 1) {\n\t            this.input = this.context.createGain();\n\t        } else if (inputs > 1) {\n\t            this.input = new Array(inputs);\n\t        }\n\t        /**\n\t\t\t *  the output node(s)\n\t\t\t *  @type {GainNode|Array}\n\t\t\t */\n\t        if (isUndef(outputs) || outputs === 1) {\n\t            this.output = this.context.createGain();\n\t        } else if (outputs > 1) {\n\t            this.output = new Array(inputs);\n\t        }\n\t    };\n\t    /**\n\t\t *  Set the parameters at once. Either pass in an\n\t\t *  object mapping parameters to values, or to set a\n\t\t *  single parameter, by passing in a string and value.\n\t\t *  The last argument is an optional ramp time which \n\t\t *  will ramp any signal values to their destination value\n\t\t *  over the duration of the rampTime.\n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * //set values using an object\n\t\t * filter.set({\n\t\t * \t\"frequency\" : 300,\n\t\t * \t\"type\" : highpass\n\t\t * });\n\t\t *  @example\n\t\t * filter.set(\"type\", \"highpass\");\n\t\t *  @example\n\t\t * //ramp to the value 220 over 3 seconds. \n\t\t * oscillator.set({\n\t\t * \t\"frequency\" : 220\n\t\t * }, 3);\n\t\t */\n\t    Tone.prototype.set = function (params, value, rampTime) {\n\t        if (this.isObject(params)) {\n\t            rampTime = value;\n\t        } else if (this.isString(params)) {\n\t            var tmpObj = {};\n\t            tmpObj[params] = value;\n\t            params = tmpObj;\n\t        }\n\t        for (var attr in params) {\n\t            value = params[attr];\n\t            var parent = this;\n\t            if (attr.indexOf('.') !== -1) {\n\t                var attrSplit = attr.split('.');\n\t                for (var i = 0; i < attrSplit.length - 1; i++) {\n\t                    parent = parent[attrSplit[i]];\n\t                }\n\t                attr = attrSplit[attrSplit.length - 1];\n\t            }\n\t            var param = parent[attr];\n\t            if (isUndef(param)) {\n\t                continue;\n\t            }\n\t            if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {\n\t                if (param.value !== value) {\n\t                    if (isUndef(rampTime)) {\n\t                        param.value = value;\n\t                    } else {\n\t                        param.rampTo(value, rampTime);\n\t                    }\n\t                }\n\t            } else if (param instanceof AudioParam) {\n\t                if (param.value !== value) {\n\t                    param.value = value;\n\t                }\n\t            } else if (param instanceof Tone) {\n\t                param.set(value);\n\t            } else if (param !== value) {\n\t                parent[attr] = value;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the object's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @example\n\t\t * osc.get();\n\t\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t *  @example\n\t\t * osc.get(\"type\");\n\t\t * //returns { \"type\" : \"sine\"}\n\t\t * @example\n\t\t * //use dot notation to access deep properties\n\t\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t                  all available.\n\t\t *  @returns {Object}\n\t\t */\n\t    Tone.prototype.get = function (params) {\n\t        if (isUndef(params)) {\n\t            params = this._collectDefaults(this.constructor);\n\t        } else if (this.isString(params)) {\n\t            params = [params];\n\t        }\n\t        var ret = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var attr = params[i];\n\t            var parent = this;\n\t            var subRet = ret;\n\t            if (attr.indexOf('.') !== -1) {\n\t                var attrSplit = attr.split('.');\n\t                for (var j = 0; j < attrSplit.length - 1; j++) {\n\t                    var subAttr = attrSplit[j];\n\t                    subRet[subAttr] = subRet[subAttr] || {};\n\t                    subRet = subRet[subAttr];\n\t                    parent = parent[subAttr];\n\t                }\n\t                attr = attrSplit[attrSplit.length - 1];\n\t            }\n\t            var param = parent[attr];\n\t            if (this.isObject(params[attr])) {\n\t                subRet[attr] = param.get();\n\t            } else if (Tone.Signal && param instanceof Tone.Signal) {\n\t                subRet[attr] = param.value;\n\t            } else if (Tone.Param && param instanceof Tone.Param) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof AudioParam) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof Tone) {\n\t                subRet[attr] = param.get();\n\t            } else if (!isFunction(param) && !isUndef(param)) {\n\t                subRet[attr] = param;\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  collect all of the default attributes in one\n\t\t *  @private\n\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t */\n\t    Tone.prototype._collectDefaults = function (constr) {\n\t        var ret = [];\n\t        if (!isUndef(constr.defaults)) {\n\t            ret = Object.keys(constr.defaults);\n\t        }\n\t        if (!isUndef(constr._super)) {\n\t            var superDefs = this._collectDefaults(constr._super);\n\t            //filter out repeats\n\t            for (var i = 0; i < superDefs.length; i++) {\n\t                if (ret.indexOf(superDefs[i]) === -1) {\n\t                    ret.push(superDefs[i]);\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  @returns {string} returns the name of the class as a string\n\t\t */\n\t    Tone.prototype.toString = function () {\n\t        for (var className in Tone) {\n\t            var isLetter = className[0].match(/^[A-Z]$/);\n\t            var sameConstructor = Tone[className] === this.constructor;\n\t            if (isFunction(Tone[className]) && isLetter && sameConstructor) {\n\t                return className;\n\t            }\n\t        }\n\t        return 'Tone';\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCLASS VARS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  A static pointer to the audio context accessible as Tone.context. \n\t\t *  @type {AudioContext}\n\t\t */\n\t    Tone.context = audioContext;\n\t    /**\n\t\t *  The audio context.\n\t\t *  @type {AudioContext}\n\t\t */\n\t    Tone.prototype.context = Tone.context;\n\t    /**\n\t\t *  the default buffer size\n\t\t *  @type {number}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.prototype.bufferSize = 2048;\n\t    /**\n\t\t *  The delay time of a single frame (128 samples according to the spec). \n\t\t *  @type {number}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.prototype.blockTime = 128 / Tone.context.sampleRate;\n\t    /**\n\t\t *  The time of a single sample\n\t\t *  @type {number}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.prototype.sampleTime = 1 / Tone.context.sampleRate;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONNECTIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.dispose = function () {\n\t        if (!this.isUndef(this.input)) {\n\t            if (this.input instanceof AudioNode) {\n\t                this.input.disconnect();\n\t            }\n\t            this.input = null;\n\t        }\n\t        if (!this.isUndef(this.output)) {\n\t            if (this.output instanceof AudioNode) {\n\t                this.output.disconnect();\n\t            }\n\t            this.output = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  a silent connection to the DesinationNode\n\t\t *  which will ensure that anything connected to it\n\t\t *  will not be garbage collected\n\t\t *  \n\t\t *  @private\n\t\t */\n\t    var _silentNode = null;\n\t    /**\n\t\t *  makes a connection to ensure that the node will not be garbage collected\n\t\t *  until 'dispose' is explicitly called\n\t\t *\n\t\t *  use carefully. circumvents JS and WebAudio's normal Garbage Collection behavior\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.noGC = function () {\n\t        this.output.connect(_silentNode);\n\t        return this;\n\t    };\n\t    AudioNode.prototype.noGC = function () {\n\t        this.connect(_silentNode);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t *  @param  {Tone | AudioParam | AudioNode} unit \n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.connect = function (unit, outputNum, inputNum) {\n\t        if (Array.isArray(this.output)) {\n\t            outputNum = this.defaultArg(outputNum, 0);\n\t            this.output[outputNum].connect(unit, 0, inputNum);\n\t        } else {\n\t            this.output.connect(unit, outputNum, inputNum);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  disconnect the output\n\t\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t\t *                                   if the output is an array, or the\n\t\t *                                   node to disconnect from.\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.disconnect = function (output) {\n\t        if (Array.isArray(this.output)) {\n\t            output = this.defaultArg(output, 0);\n\t            this.output[output].disconnect();\n\t        } else if (!this.isUndef(output)) {\n\t            this.output.disconnect(output);\n\t        } else {\n\t            this.output.disconnect();\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect together all of the arguments in series\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.connectSeries = function () {\n\t        if (arguments.length > 1) {\n\t            var currentUnit = arguments[0];\n\t            for (var i = 1; i < arguments.length; i++) {\n\t                var toUnit = arguments[i];\n\t                currentUnit.connect(toUnit);\n\t                currentUnit = toUnit;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t *  @example\n\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.chain = function () {\n\t        if (arguments.length > 0) {\n\t            var currentUnit = this;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                var toUnit = arguments[i];\n\t                currentUnit.connect(toUnit);\n\t                currentUnit = toUnit;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.fan = function () {\n\t        if (arguments.length > 0) {\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                this.connect(arguments[i]);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    //give native nodes chain and fan methods\n\t    AudioNode.prototype.chain = Tone.prototype.chain;\n\t    AudioNode.prototype.fan = Tone.prototype.fan;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUTILITIES / HELPERS / MATHS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  If the `given` parameter is undefined, use the `fallback`. \n\t\t *  If both `given` and `fallback` are object literals, it will\n\t\t *  return a deep copy which includes all of the parameters from both \n\t\t *  objects. If a parameter is undefined in given, it will return\n\t\t *  the fallback property. \n\t\t *  <br><br>\n\t\t *  WARNING: if object is self referential, it will go into an an \n\t\t *  infinite recursive loop.\n\t\t *  \n\t\t *  @param  {*} given    \n\t\t *  @param  {*} fallback \n\t\t *  @return {*}          \n\t\t */\n\t    Tone.prototype.defaultArg = function (given, fallback) {\n\t        if (this.isObject(given) && this.isObject(fallback)) {\n\t            var ret = {};\n\t            //make a deep copy of the given object\n\t            for (var givenProp in given) {\n\t                ret[givenProp] = this.defaultArg(fallback[givenProp], given[givenProp]);\n\t            }\n\t            for (var fallbackProp in fallback) {\n\t                ret[fallbackProp] = this.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t            }\n\t            return ret;\n\t        } else {\n\t            return isUndef(given) ? fallback : given;\n\t        }\n\t    };\n\t    /**\n\t\t *  returns the args as an options object with given arguments\n\t\t *  mapped to the names provided. \n\t\t *\n\t\t *  if the args given is an array containing only one object, it is assumed\n\t\t *  that that's already the options object and will just return it. \n\t\t *  \n\t\t *  @param  {Array} values  the 'arguments' object of the function\n\t\t *  @param  {Array} keys the names of the arguments as they\n\t\t *                                 should appear in the options object\n\t\t *  @param {Object=} defaults optional defaults to mixin to the returned \n\t\t *                            options object                              \n\t\t *  @return {Object}       the options object with the names mapped to the arguments\n\t\t */\n\t    Tone.prototype.optionsObject = function (values, keys, defaults) {\n\t        var options = {};\n\t        if (values.length === 1 && this.isObject(values[0])) {\n\t            options = values[0];\n\t        } else {\n\t            for (var i = 0; i < keys.length; i++) {\n\t                options[keys[i]] = values[i];\n\t            }\n\t        }\n\t        if (!this.isUndef(defaults)) {\n\t            return this.defaultArg(options, defaults);\n\t        } else {\n\t            return options;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // TYPE CHECKING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  test if the arg is undefined\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is undefined\n\t\t *  @function\n\t\t */\n\t    Tone.prototype.isUndef = isUndef;\n\t    /**\n\t\t *  test if the arg is a function\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a function\n\t\t *  @function\n\t\t */\n\t    Tone.prototype.isFunction = isFunction;\n\t    /**\n\t\t *  Test if the argument is a number.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a number\n\t\t */\n\t    Tone.prototype.isNumber = function (arg) {\n\t        return typeof arg === 'number';\n\t    };\n\t    /**\n\t\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an object literal.\n\t\t */\n\t    Tone.prototype.isObject = function (arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;\n\t    };\n\t    /**\n\t\t *  Test if the argument is a boolean.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a boolean\n\t\t */\n\t    Tone.prototype.isBoolean = function (arg) {\n\t        return typeof arg === 'boolean';\n\t    };\n\t    /**\n\t\t *  Test if the argument is an Array\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an array\n\t\t */\n\t    Tone.prototype.isArray = function (arg) {\n\t        return Array.isArray(arg);\n\t    };\n\t    /**\n\t\t *  Test if the argument is a string.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a string\n\t\t */\n\t    Tone.prototype.isString = function (arg) {\n\t        return typeof arg === 'string';\n\t    };\n\t    /**\n\t\t *  An empty function.\n\t\t *  @static\n\t\t */\n\t    Tone.noOp = function () {\n\t    };\n\t    /**\n\t\t *  Make the property not writable. Internal use only. \n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make not writable\n\t\t */\n\t    Tone.prototype._readOnly = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._readOnly(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, {\n\t                writable: false,\n\t                enumerable: true\n\t            });\n\t        }\n\t    };\n\t    /**\n\t\t *  Make an attribute writeable. Interal use only. \n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make writable\n\t\t */\n\t    Tone.prototype._writable = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._writable(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, { writable: true });\n\t        }\n\t    };\n\t    /**\n\t\t * Possible play states. \n\t\t * @enum {string}\n\t\t */\n\t    Tone.State = {\n\t        Started: 'started',\n\t        Stopped: 'stopped',\n\t        Paused: 'paused'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // GAIN CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Equal power gain scale. Good for cross-fading.\n\t\t *  @param  {NormalRange} percent (0-1)\n\t\t *  @return {Number}         output gain (0-1)\n\t\t */\n\t    Tone.prototype.equalPowerScale = function (percent) {\n\t        var piFactor = 0.5 * Math.PI;\n\t        return Math.sin(percent * piFactor);\n\t    };\n\t    /**\n\t\t *  Convert decibels into gain.\n\t\t *  @param  {Decibels} db\n\t\t *  @return {Number}   \n\t\t */\n\t    Tone.prototype.dbToGain = function (db) {\n\t        return Math.pow(2, db / 6);\n\t    };\n\t    /**\n\t\t *  Convert gain to decibels.\n\t\t *  @param  {Number} gain (0-1)\n\t\t *  @return {Decibels}   \n\t\t */\n\t    Tone.prototype.gainToDb = function (gain) {\n\t        return 20 * (Math.log(gain) / Math.LN10);\n\t    };\n\t    /**\n\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t *  @param  {Interval} interval the number of semitones above the base note\n\t\t *  @return {number}          the frequency ratio\n\t\t *  @example\n\t\t * tone.intervalToFrequencyRatio(0); // 1\n\t\t * tone.intervalToFrequencyRatio(12); // 2\n\t\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t\t */\n\t    Tone.prototype.intervalToFrequencyRatio = function (interval) {\n\t        return Math.pow(2, interval / 12);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTIMING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t */\n\t    Tone.prototype.now = function () {\n\t        return this.context.currentTime;\n\t    };\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t *  @static\n\t\t */\n\t    Tone.now = function () {\n\t        return Tone.context.currentTime;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINHERITANCE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t *  to inherit the parent's properties, make sure to call \n\t\t *  Parent.call(this) in the child's constructor\n\t\t *\n\t\t *  based on closure library's inherit function\n\t\t *\n\t\t *  @static\n\t\t *  @param  {function} \tchild  \n\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t *                             if no parent is supplied, the child\n\t\t *                             will inherit from Tone\n\t\t */\n\t    Tone.extend = function (child, parent) {\n\t        if (isUndef(parent)) {\n\t            parent = Tone;\n\t        }\n\t        function TempConstructor() {\n\t        }\n\t        TempConstructor.prototype = parent.prototype;\n\t        child.prototype = new TempConstructor();\n\t        /** @override */\n\t        child.prototype.constructor = child;\n\t        child._super = parent;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONTEXT\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  array of callbacks to be invoked when a new context is added\n\t\t *  @private \n\t\t *  @private\n\t\t */\n\t    var newContextCallbacks = [];\n\t    /**\n\t\t *  invoke this callback when a new context is added\n\t\t *  will be invoked initially with the first context\n\t\t *  @private \n\t\t *  @static\n\t\t *  @param {function(AudioContext)} callback the callback to be invoked\n\t\t *                                           with the audio context\n\t\t */\n\t    Tone._initAudioContext = function (callback) {\n\t        //invoke the callback with the existing AudioContext\n\t        callback(Tone.context);\n\t        //add it to the array\n\t        newContextCallbacks.push(callback);\n\t    };\n\t    /**\n\t\t *  Tone automatically creates a context on init, but if you are working\n\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t *  useful to set your own. If you are going to set your own context, \n\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t *  @static\n\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t */\n\t    Tone.setContext = function (ctx) {\n\t        //set the prototypes\n\t        Tone.prototype.context = ctx;\n\t        Tone.context = ctx;\n\t        //invoke all the callbacks\n\t        for (var i = 0; i < newContextCallbacks.length; i++) {\n\t            newContextCallbacks[i](ctx);\n\t        }\n\t    };\n\t    //setup the context\n\t    Tone._initAudioContext(function (audioContext) {\n\t        //set the blockTime\n\t        Tone.prototype.blockTime = 128 / audioContext.sampleRate;\n\t        Tone.prototype.sampleTime = 1 / audioContext.sampleRate;\n\t        _silentNode = audioContext.createGain();\n\t        _silentNode.gain.value = 0;\n\t        _silentNode.connect(audioContext.destination);\n\t    });\n\t    Tone.version = 'r8';\n\t    // allow optional silencing of this log\n\t    if (!window.TONE_SILENCE_VERSION_LOGGING) {\n\t        console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');\n\t    }\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for all Signals. Used Internally. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.SignalBase = function () {\n\t    };\n\t    Tone.extend(Tone.SignalBase);\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {\n\t        //zero it out so that the signal can have full control\n\t        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor || Tone.TimelineSignal && Tone.TimelineSignal === node.constructor) {\n\t            //cancel changes\n\t            node._param.cancelScheduledValues(0);\n\t            //reset the value\n\t            node._param.value = 0;\n\t            //mark the value as overridden\n\t            node.overridden = true;\n\t        } else if (node instanceof AudioParam) {\n\t            node.cancelScheduledValues(0);\n\t            node.value = 0;\n\t        }\n\t        Tone.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t        return this;\n\t    };\n\t    return Tone.SignalBase;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Wraps the native Web Audio API \n\t\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {function|Array|Number} mapping The function used to define the values. \n\t\t *                                    The mapping function should take two arguments: \n\t\t *                                    the first is the value at the current position \n\t\t *                                    and the second is the array position. \n\t\t *                                    If the argument is an array, that array will be\n\t\t *                                    set as the wave shaping function. The input\n\t\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t\t *                                    signal can take on any numerical values. \n\t\t *                                    \n\t\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t\t *  @example\n\t\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t\t * \treturn val * 2;\n\t\t * }, 2048);\n\t\t *  @example\n\t\t * //a waveshaper can also be constructed with an array of values\n\t\t * var invert = new Tone.WaveShaper([1, -1]);\n\t\t */\n\t    Tone.WaveShaper = function (mapping, bufferLen) {\n\t        /**\n\t\t\t *  the waveshaper\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = this.input = this.output = this.context.createWaveShaper();\n\t        /**\n\t\t\t *  the waveshapers curve\n\t\t\t *  @type {Float32Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._curve = null;\n\t        if (Array.isArray(mapping)) {\n\t            this.curve = mapping;\n\t        } else if (isFinite(mapping) || this.isUndef(mapping)) {\n\t            this._curve = new Float32Array(this.defaultArg(mapping, 1024));\n\t        } else if (this.isFunction(mapping)) {\n\t            this._curve = new Float32Array(this.defaultArg(bufferLen, 1024));\n\t            this.setMap(mapping);\n\t        }\n\t    };\n\t    Tone.extend(Tone.WaveShaper, Tone.SignalBase);\n\t    /**\n\t\t *  Uses a mapping function to set the value of the curve. \n\t\t *  @param {function} mapping The function used to define the values. \n\t\t *                            The mapping function take two arguments: \n\t\t *                            the first is the value at the current position \n\t\t *                            which goes from -1 to 1 over the number of elements\n\t\t *                            in the curve array. The second argument is the array position. \n\t\t *  @returns {Tone.WaveShaper} this\n\t\t *  @example\n\t\t * //map the input signal from [-1, 1] to [0, 10]\n\t\t * shaper.setMap(function(val, index){\n\t\t * \treturn (val + 1) * 5;\n\t\t * })\n\t\t */\n\t    Tone.WaveShaper.prototype.setMap = function (mapping) {\n\t        for (var i = 0, len = this._curve.length; i < len; i++) {\n\t            var normalized = i / (len - 1) * 2 - 1;\n\t            this._curve[i] = mapping(normalized, i);\n\t        }\n\t        this._shaper.curve = this._curve;\n\t        return this;\n\t    };\n\t    /**\n\t\t * The array to set as the waveshaper curve. For linear curves\n\t\t * array length does not make much difference, but for complex curves\n\t\t * longer arrays will provide smoother interpolation. \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {Array}\n\t\t * @name curve\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {\n\t        get: function () {\n\t            return this._shaper.curve;\n\t        },\n\t        set: function (mapping) {\n\t            this._curve = new Float32Array(mapping);\n\t            this._shaper.curve = this._curve;\n\t        }\n\t    });\n\t    /**\n\t\t * Specifies what type of oversampling (if any) should be used when \n\t\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\". \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            if ([\n\t                    'none',\n\t                    '2x',\n\t                    '4x'\n\t                ].indexOf(oversampling) !== -1) {\n\t                this._shaper.oversample = oversampling;\n\t            } else {\n\t                throw new RangeError('Tone.WaveShaper: oversampling must be either \\'none\\', \\'2x\\', or \\'4x\\'');\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.WaveShaper} this\n\t\t */\n\t    Tone.WaveShaper.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._shaper.disconnect();\n\t        this._shaper = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.WaveShaper;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TimeBase is a flexible encoding of time\n\t\t *         which can be evaluated to and from a string.\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *  @extends {Tone}\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @example\n\t\t * Tone.TimeBase(4, \"n\")\n\t\t * Tone.TimeBase(2, \"t\")\n\t\t * Tone.TimeBase(\"2t\").add(\"1m\")\n\t\t * Tone.TimeBase(\"2t + 1m\");\n\t\t */\n\t    Tone.TimeBase = function (val, units) {\n\t        //allows it to be constructed with or without 'new'\n\t        if (this instanceof Tone.TimeBase) {\n\t            /**\n\t\t\t\t *  Any expressions parsed from the Time\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._expr = this._noOp;\n\t            if (val instanceof Tone.TimeBase) {\n\t                this.copy(val);\n\t            } else if (!this.isUndef(units) || this.isNumber(val)) {\n\t                //default units\n\t                units = this.defaultArg(units, this._defaultUnits);\n\t                var method = this._primaryExpressions[units].method;\n\t                this._expr = method.bind(this, val);\n\t            } else if (this.isString(val)) {\n\t                this.set(val);\n\t            } else if (this.isUndef(val)) {\n\t                //default expression\n\t                this._expr = this._defaultExpr();\n\t            }\n\t        } else {\n\t            return new Tone.TimeBase(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TimeBase);\n\t    /**\n\t\t *  Repalce the current time value with the value\n\t\t *  given by the expression string.\n\t\t *  @param  {String}  exprString\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.set = function (exprString) {\n\t        this._expr = this._parseExprString(exprString);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Return a clone of the TimeBase object.\n\t\t *  @return  {Tone.TimeBase} The new cloned Tone.TimeBase\n\t\t */\n\t    Tone.TimeBase.prototype.clone = function () {\n\t        var instance = new this.constructor();\n\t        instance.copy(this);\n\t        return instance;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.TimeBase} time\n\t\t *  @return  {TimeBase}\n\t\t */\n\t    Tone.TimeBase.prototype.copy = function (time) {\n\t        var val = time._expr();\n\t        return this.set(val);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tABSTRACT SYNTAX TREE PARSER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  All the primary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._primaryExpressions = {\n\t        'n': {\n\t            regexp: /^(\\d+)n/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                if (value === 1) {\n\t                    return this._beatsToUnits(this._timeSignature());\n\t                } else {\n\t                    return this._beatsToUnits(4 / value);\n\t                }\n\t            }\n\t        },\n\t        't': {\n\t            regexp: /^(\\d+)t/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                return this._beatsToUnits(8 / (parseInt(value) * 3));\n\t            }\n\t        },\n\t        'm': {\n\t            regexp: /^(\\d+)m/i,\n\t            method: function (value) {\n\t                return this._beatsToUnits(parseInt(value) * this._timeSignature());\n\t            }\n\t        },\n\t        'i': {\n\t            regexp: /^(\\d+)i/i,\n\t            method: function (value) {\n\t                return this._ticksToUnits(parseInt(value));\n\t            }\n\t        },\n\t        'hz': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)hz/i,\n\t            method: function (value) {\n\t                return this._frequencyToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'tr': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t            method: function (m, q, s) {\n\t                var total = 0;\n\t                if (m && m !== '0') {\n\t                    total += this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t                }\n\t                if (q && q !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(q));\n\t                }\n\t                if (s && s !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(s) / 4);\n\t                }\n\t                return total;\n\t            }\n\t        },\n\t        's': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?s)/,\n\t            method: function (value) {\n\t                return this._secondsToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'samples': {\n\t            regexp: /^(\\d+)samples/,\n\t            method: function (value) {\n\t                return parseInt(value) / this.context.sampleRate;\n\t            }\n\t        },\n\t        'default': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)/,\n\t            method: function (value) {\n\t                return this._primaryExpressions[this._defaultUnits].method.call(this, value);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the binary expressions that TimeBase can accept.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._binaryExpressions = {\n\t        '+': {\n\t            regexp: /^\\+/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() + rh();\n\t            }\n\t        },\n\t        '-': {\n\t            regexp: /^\\-/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() - rh();\n\t            }\n\t        },\n\t        '*': {\n\t            regexp: /^\\*/,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() * rh();\n\t            }\n\t        },\n\t        '/': {\n\t            regexp: /^\\//,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() / rh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the unary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._unaryExpressions = {\n\t        'neg': {\n\t            regexp: /^\\-/,\n\t            method: function (lh) {\n\t                return -lh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Syntactic glue which holds expressions together\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._syntaxGlue = {\n\t        '(': { regexp: /^\\(/ },\n\t        ')': { regexp: /^\\)/ }\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr, this);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr, context) {\n\t            var expressions = [\n\t                '_binaryExpressions',\n\t                '_unaryExpressions',\n\t                '_primaryExpressions',\n\t                '_syntaxGlue'\n\t            ];\n\t            for (var i = 0; i < expressions.length; i++) {\n\t                var group = context[expressions[i]];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            method: op.method,\n\t                            precedence: op.precedence,\n\t                            regexp: op.regexp,\n\t                            value: match[0]\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  Given a token, find the value within the groupName\n\t\t *  @param {Object} token\n\t\t *  @param {String} groupName\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._matchGroup = function (token, group, prec) {\n\t        var ret = false;\n\t        if (!this.isUndef(token)) {\n\t            for (var opName in group) {\n\t                var op = group[opName];\n\t                if (op.regexp.test(token.value)) {\n\t                    if (!this.isUndef(prec)) {\n\t                        if (op.precedence === prec) {\n\t                            return op;\n\t                        }\n\t                    } else {\n\t                        return op;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  Match a binary expression given the token and the precedence\n\t\t *  @param {Lexer} lexer\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseBinary = function (lexer, precedence) {\n\t        if (this.isUndef(precedence)) {\n\t            precedence = 2;\n\t        }\n\t        var expr;\n\t        if (precedence < 0) {\n\t            expr = this._parseUnary(lexer);\n\t        } else {\n\t            expr = this._parseBinary(lexer, precedence - 1);\n\t        }\n\t        var token = lexer.peek();\n\t        while (token && this._matchGroup(token, this._binaryExpressions, precedence)) {\n\t            token = lexer.next();\n\t            expr = token.method.bind(this, expr, this._parseBinary(lexer, precedence - 1));\n\t            token = lexer.peek();\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  Match a unary expression.\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseUnary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        var op = this._matchGroup(token, this._unaryExpressions);\n\t        if (op) {\n\t            token = lexer.next();\n\t            expr = this._parseUnary(lexer);\n\t            return op.method.bind(this, expr);\n\t        }\n\t        return this._parsePrimary(lexer);\n\t    };\n\t    /**\n\t\t *  Match a primary expression (a value).\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parsePrimary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        if (this.isUndef(token)) {\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected end of expression');\n\t        }\n\t        if (this._matchGroup(token, this._primaryExpressions)) {\n\t            token = lexer.next();\n\t            var matching = token.value.match(token.regexp);\n\t            return token.method.bind(this, matching[1], matching[2], matching[3]);\n\t        }\n\t        if (token && token.value === '(') {\n\t            lexer.next();\n\t            expr = this._parseBinary(lexer);\n\t            token = lexer.next();\n\t            if (!(token && token.value === ')')) {\n\t                throw new SyntaxError('Expected )');\n\t            }\n\t            return expr;\n\t        }\n\t        throw new SyntaxError('Tone.TimeBase: Cannot process token ' + token.value);\n\t    };\n\t    /**\n\t\t *  Recursively parse the string expression into a syntax tree.\n\t\t *  @param   {string} expr \n\t\t *  @return  {Function} the bound method to be evaluated later\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseExprString = function (exprString) {\n\t        if (!this.isString(exprString)) {\n\t            exprString = exprString.toString();\n\t        }\n\t        var lexer = this._tokenize(exprString);\n\t        var tree = this._parseBinary(lexer);\n\t        return tree;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tDEFAULTS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The initial expression value\n\t\t *  @return  {Number}  The initial value 0\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._noOp = function () {\n\t        return 0;\n\t    };\n\t    /**\n\t\t *  The default expression value if no arguments are given\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultExpr = function () {\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultUnits = 's';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {\n\t        return 1 / freq;\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._beatsToUnits = function (beats) {\n\t        return 60 / Tone.Transport.bpm.value * beats;\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {\n\t        return seconds;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {\n\t        return ticks * (this._beatsToUnits(1) / Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time signature.\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._timeSignature = function () {\n\t        return Tone.Transport.timeSignature;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Push an expression onto the expression list\n\t\t *  @param  {Time}  val\n\t\t *  @param  {String}  type\n\t\t *  @param  {String}  units\n\t\t *  @return  {Tone.TimeBase} \n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._pushExpr = function (val, name, units) {\n\t        //create the expression\n\t        if (!(val instanceof Tone.TimeBase)) {\n\t            val = new this.constructor(val, units);\n\t        }\n\t        this._expr = this._binaryExpressions[name].method.bind(this, this._expr, val._expr);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add to the current value.\n\t\t *  @param  {Time}  val    The value to add\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").add(\"1m\"); //\"3m\"\n\t\t */\n\t    Tone.TimeBase.prototype.add = function (val, units) {\n\t        return this._pushExpr(val, '+', units);\n\t    };\n\t    /**\n\t\t *  Subtract the value from the current time.\n\t\t *  @param  {Time}  val    The value to subtract\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").sub(\"1m\"); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.sub = function (val, units) {\n\t        return this._pushExpr(val, '-', units);\n\t    };\n\t    /**\n\t\t *  Multiply the current value by the given time.\n\t\t *  @param  {Time}  val    The value to multiply\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").mult(\"2\"); //\"4m\"\n\t\t */\n\t    Tone.TimeBase.prototype.mult = function (val, units) {\n\t        return this._pushExpr(val, '*', units);\n\t    };\n\t    /**\n\t\t *  Divide the current value by the given time.\n\t\t *  @param  {Time}  val    The value to divide by\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").div(2); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.div = function (val, units) {\n\t        return this._pushExpr(val, '/', units);\n\t    };\n\t    /**\n\t\t *  Evaluate the time value. Returns the time\n\t\t *  in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.TimeBase.prototype.eval = function () {\n\t        return this._expr();\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.dispose = function () {\n\t        this._expr = null;\n\t    };\n\t    return Tone.TimeBase;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Time is a primitive type for encoding Time values. \n\t\t *         Eventually all time values are evaluated to seconds\n\t\t *         using the `eval` method. Tone.Time can be constructed\n\t\t *         with or without the `new` keyword. Tone.Time can be passed\n\t\t *         into the parameter of any method which takes time as an argument. \n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * var t = Tone.Time(\"4n\");//encodes a quarter note\n\t\t * t.mult(4); // multiply that value by 4\n\t\t * t.toNotation(); //returns \"1m\"\n\t\t */\n\t    Tone.Time = function (val, units) {\n\t        if (this instanceof Tone.Time) {\n\t            /**\n\t\t\t\t *  If the current clock time should\n\t\t\t\t *  be added to the output\n\t\t\t\t *  @type  {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._plusNow = false;\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Time(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Time, Tone.TimeBase);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.Time.prototype._unaryExpressions = Object.create(Tone.TimeBase.prototype._unaryExpressions);\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            return Tone.Transport.nextSubdivision(rh());\n\t        }\n\t    };\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which adds the current clock time.\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.now = {\n\t        regexp: /^\\+/,\n\t        method: function (lh) {\n\t            this._plusNow = true;\n\t            return lh();\n\t        }\n\t    };\n\t    /**\n\t\t *  Quantize the time by the given subdivision. Optionally add a\n\t\t *  percentage which will move the time value towards the ideal\n\t\t *  quantized value by that percentage. \n\t\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t\t *                                   towards the quantized value by\n\t\t *                                   a percentage.\n\t\t *  @return  {Tone.Time}  this\n\t\t *  @example\n\t\t * Tone.Time(21).quantize(2).eval() //returns 22\n\t\t * Tone.Time(0.6).quantize(\"4n\", 0.5).eval() //returns 0.55\n\t\t */\n\t    Tone.Time.prototype.quantize = function (subdiv, percent) {\n\t        percent = this.defaultArg(percent, 1);\n\t        this._expr = function (expr, subdivision, percent) {\n\t            expr = expr();\n\t            subdivision = subdivision.toSeconds();\n\t            var multiple = Math.round(expr / subdivision);\n\t            var ideal = multiple * subdivision;\n\t            var diff = ideal - expr;\n\t            return expr + diff * percent;\n\t        }.bind(this, this._expr, new this.constructor(subdiv), percent);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Adds the clock time to the time expression at the \n\t\t *  moment of evaluation. \n\t\t *  @return  {Tone.Time}  this\n\t\t */\n\t    Tone.Time.prototype.addNow = function () {\n\t        this._plusNow = true;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  @override\n\t\t *  Override the default value return when no arguments are passed in.\n\t\t *  The default value is 'now'\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._defaultExpr = function () {\n\t        this._plusNow = true;\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.Time} time\n\t\t *  @return  {Time}\n\t\t */\n\t    Tone.Time.prototype.copy = function (time) {\n\t        Tone.TimeBase.prototype.copy.call(this, time);\n\t        this._plusNow = time._plusNow;\n\t        return this;\n\t    };\n\t    //CONVERSIONS//////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert a Time to Notation. Values will be thresholded to the nearest 128th note. \n\t\t *  @return {Notation} \n\t\t *  @example\n\t\t * //if the Transport is at 120bpm:\n\t\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t\t */\n\t    Tone.Time.prototype.toNotation = function () {\n\t        var time = this.toSeconds();\n\t        var testNotations = [\n\t            '1m',\n\t            '2n',\n\t            '4n',\n\t            '8n',\n\t            '16n',\n\t            '32n',\n\t            '64n',\n\t            '128n'\n\t        ];\n\t        var retNotation = this._toNotationHelper(time, testNotations);\n\t        //try the same thing but with tripelets\n\t        var testTripletNotations = [\n\t            '1m',\n\t            '2n',\n\t            '2t',\n\t            '4n',\n\t            '4t',\n\t            '8n',\n\t            '8t',\n\t            '16n',\n\t            '16t',\n\t            '32n',\n\t            '32t',\n\t            '64n',\n\t            '64t',\n\t            '128n'\n\t        ];\n\t        var retTripletNotation = this._toNotationHelper(time, testTripletNotations);\n\t        //choose the simpler expression of the two\n\t        if (retTripletNotation.split('+').length < retNotation.split('+').length) {\n\t            return retTripletNotation;\n\t        } else {\n\t            return retNotation;\n\t        }\n\t    };\n\t    /**\n\t\t *  Helper method for Tone.toNotation\n\t\t *  @param {Number} units \n\t\t *  @param {Array} testNotations\n\t\t *  @return {String}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._toNotationHelper = function (units, testNotations) {\n\t        //the threshold is the last value in the array\n\t        var threshold = this._notationToUnits(testNotations[testNotations.length - 1]);\n\t        var retNotation = '';\n\t        for (var i = 0; i < testNotations.length; i++) {\n\t            var notationTime = this._notationToUnits(testNotations[i]);\n\t            //account for floating point errors (i.e. round up if the value is 0.999999)\n\t            var multiple = units / notationTime;\n\t            var floatingPointError = 0.000001;\n\t            if (1 - multiple % 1 < floatingPointError) {\n\t                multiple += floatingPointError;\n\t            }\n\t            multiple = Math.floor(multiple);\n\t            if (multiple > 0) {\n\t                if (multiple === 1) {\n\t                    retNotation += testNotations[i];\n\t                } else {\n\t                    retNotation += multiple.toString() + '*' + testNotations[i];\n\t                }\n\t                units -= multiple * notationTime;\n\t                if (units < threshold) {\n\t                    break;\n\t                } else {\n\t                    retNotation += ' + ';\n\t                }\n\t            }\n\t        }\n\t        if (retNotation === '') {\n\t            retNotation = '0';\n\t        }\n\t        return retNotation;\n\t    };\n\t    /**\n\t\t *  Convert a notation value to the current units\n\t\t *  @param  {Notation}  notation \n\t\t *  @return  {Number} \n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._notationToUnits = function (notation) {\n\t        var primaryExprs = this._primaryExpressions;\n\t        var notationExprs = [\n\t            primaryExprs.n,\n\t            primaryExprs.t,\n\t            primaryExprs.m\n\t        ];\n\t        for (var i = 0; i < notationExprs.length; i++) {\n\t            var expr = notationExprs[i];\n\t            var match = notation.match(expr.regexp);\n\t            if (match) {\n\t                return expr.method.call(this, match[1]);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t\t *  @return  {BarsBeatsSixteenths}\n\t\t */\n\t    Tone.Time.prototype.toBarsBeatsSixteenths = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.toSeconds() / quarterTime;\n\t        var measures = Math.floor(quarters / this._timeSignature());\n\t        var sixteenths = quarters % 1 * 4;\n\t        quarters = Math.floor(quarters) % this._timeSignature();\n\t        sixteenths = sixteenths.toString();\n\t        if (sixteenths.length > 3) {\n\t            sixteenths = parseFloat(sixteenths).toFixed(3);\n\t        }\n\t        var progress = [\n\t            measures,\n\t            quarters,\n\t            sixteenths\n\t        ];\n\t        return progress.join(':');\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Time.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.eval() / quarterTime;\n\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time in samples\n\t\t *  @return  {Samples}  \n\t\t */\n\t    Tone.Time.prototype.toSamples = function () {\n\t        return this.toSeconds() * this.context.sampleRate;\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t *  @example\n\t\t * Tone.Time(2).toFrequency(); //0.5\n\t\t */\n\t    Tone.Time.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.toSeconds = function () {\n\t        return this.eval();\n\t    };\n\t    /**\n\t\t *  Return the time in milliseconds.\n\t\t *  @return  {Milliseconds} \n\t\t */\n\t    Tone.Time.prototype.toMilliseconds = function () {\n\t        return this.toSeconds() * 1000;\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.eval = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? this.now() : 0);\n\t    };\n\t    return Tone.Time;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Frequency is a primitive type for encoding Frequency values. \n\t\t *         Eventually all time values are evaluated to hertz\n\t\t *         using the `eval` method. \n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * Tone.Frequency(\"C3\").eval() // 261\n\t\t * Tone.Frequency(38, \"midi\").eval() //\n\t\t * Tone.Frequency(\"C3\").transpose(4).eval();\n\t\t */\n\t    Tone.Frequency = function (val, units) {\n\t        if (this instanceof Tone.Frequency) {\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Frequency(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Frequency, Tone.TimeBase);\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT BASE EXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.Frequency.prototype._primaryExpressions = Object.create(Tone.TimeBase.prototype._primaryExpressions);\n\t    /*\n\t\t *  midi type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.midi = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t        method: function (value) {\n\t            return this.midiToFrequency(value);\n\t        }\n\t    };\n\t    /*\n\t\t *  note type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.note = {\n\t        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t        method: function (pitch, octave) {\n\t            var index = noteToScaleIndex[pitch.toLowerCase()];\n\t            var noteNumber = index + (parseInt(octave) + 1) * 12;\n\t            return this.midiToFrequency(noteNumber);\n\t        }\n\t    };\n\t    /*\n\t\t *  BeatsBarsSixteenths type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.tr = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t        method: function (m, q, s) {\n\t            var total = 1;\n\t            if (m && m !== '0') {\n\t                total *= this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t            }\n\t            if (q && q !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(q));\n\t            }\n\t            if (s && s !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(s) / 4);\n\t            }\n\t            return total;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Transposes the frequency by the given number of semitones.\n\t\t *  @param  {Interval}  interval\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t\t */\n\t    Tone.Frequency.prototype.transpose = function (interval) {\n\t        this._expr = function (expr, interval) {\n\t            var val = expr();\n\t            return val * this.intervalToFrequencyRatio(interval);\n\t        }.bind(this, this._expr, interval);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Takes an array of semitone intervals and returns\n\t\t *  an array of frequencies transposed by those intervals.\n\t\t *  @param  {Array}  intervals\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t\t */\n\t    Tone.Frequency.prototype.harmonize = function (intervals) {\n\t        this._expr = function (expr, intervals) {\n\t            var val = expr();\n\t            var ret = [];\n\t            for (var i = 0; i < intervals.length; i++) {\n\t                ret[i] = val * this.intervalToFrequencyRatio(intervals[i]);\n\t            }\n\t            return ret;\n\t        }.bind(this, this._expr, intervals);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the value of the frequency as a MIDI note\n\t\t *  @return  {MIDI}\n\t\t *  @example\n\t\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t\t */\n\t    Tone.Frequency.prototype.toMidi = function () {\n\t        return this.frequencyToMidi(this.eval());\n\t    };\n\t    /**\n\t\t *  Return the value of the frequency in Scientific Pitch Notation\n\t\t *  @return  {Note}\n\t\t *  @example\n\t\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t\t */\n\t    Tone.Frequency.prototype.toNote = function () {\n\t        var freq = this.eval();\n\t        var log = Math.log(freq / Tone.Frequency.A4) / Math.LN2;\n\t        var noteNumber = Math.round(12 * log) + 57;\n\t        var octave = Math.floor(noteNumber / 12);\n\t        if (octave < 0) {\n\t            noteNumber += -12 * octave;\n\t        }\n\t        var noteName = scaleIndexToNote[noteNumber % 12];\n\t        return noteName + octave.toString();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.Frequency.prototype.toSeconds = function () {\n\t        return 1 / this.eval();\n\t    };\n\t    /**\n\t\t *  Return the value in Hertz\n\t\t *  @return  {Frequency}\n\t\t */\n\t    Tone.Frequency.prototype.toFrequency = function () {\n\t        return this.eval();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in ticks\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Frequency.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.eval() / quarterTime;\n\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS HELPERS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._frequencyToUnits = function (freq) {\n\t        return freq;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._ticksToUnits = function (ticks) {\n\t        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._beatsToUnits = function (beats) {\n\t        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._secondsToUnits = function (seconds) {\n\t        return 1 / seconds;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._defaultUnits = 'hz';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tFREQUENCY CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Note to scale index\n\t\t *  @type  {Object}\n\t\t */\n\t    var noteToScaleIndex = {\n\t        'cbb': -2,\n\t        'cb': -1,\n\t        'c': 0,\n\t        'c#': 1,\n\t        'cx': 2,\n\t        'dbb': 0,\n\t        'db': 1,\n\t        'd': 2,\n\t        'd#': 3,\n\t        'dx': 4,\n\t        'ebb': 2,\n\t        'eb': 3,\n\t        'e': 4,\n\t        'e#': 5,\n\t        'ex': 6,\n\t        'fbb': 3,\n\t        'fb': 4,\n\t        'f': 5,\n\t        'f#': 6,\n\t        'fx': 7,\n\t        'gbb': 5,\n\t        'gb': 6,\n\t        'g': 7,\n\t        'g#': 8,\n\t        'gx': 9,\n\t        'abb': 7,\n\t        'ab': 8,\n\t        'a': 9,\n\t        'a#': 10,\n\t        'ax': 11,\n\t        'bbb': 9,\n\t        'bb': 10,\n\t        'b': 11,\n\t        'b#': 12,\n\t        'bx': 13\n\t    };\n\t    /**\n\t\t *  scale index to note (sharps)\n\t\t *  @type  {Array}\n\t\t */\n\t    var scaleIndexToNote = [\n\t        'C',\n\t        'C#',\n\t        'D',\n\t        'D#',\n\t        'E',\n\t        'F',\n\t        'F#',\n\t        'G',\n\t        'G#',\n\t        'A',\n\t        'A#',\n\t        'B'\n\t    ];\n\t    /**\n\t\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t\t *  A4's values in Hertz. \n\t\t *  @type {Frequency}\n\t\t *  @static\n\t\t */\n\t    Tone.Frequency.A4 = 440;\n\t    /**\n\t\t *  Convert a MIDI note to frequency value. \n\t\t *  @param  {MIDI} midi The midi number to convert.\n\t\t *  @return {Frequency} the corresponding frequency value\n\t\t *  @example\n\t\t * tone.midiToFrequency(69); // returns 440\n\t\t */\n\t    Tone.Frequency.prototype.midiToFrequency = function (midi) {\n\t        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t    };\n\t    /**\n\t\t *  Convert a frequency value to a MIDI note.\n\t\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t\t *  @returns  {MIDI}\n\t\t *  @example\n\t\t * tone.midiToFrequency(440); // returns 69\n\t\t */\n\t    Tone.Frequency.prototype.frequencyToMidi = function (frequency) {\n\t        return 69 + 12 * Math.log(frequency / Tone.Frequency.A4) / Math.LN2;\n\t    };\n\t    return Tone.Frequency;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportTime is a the time along the Transport's\n\t\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t\t *         against the AudioContext's clock, it is evaluated against\n\t\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t\t *  @constructor\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @extends {Tone.Time}\n\t\t */\n\t    Tone.TransportTime = function (val, units) {\n\t        if (this instanceof Tone.TransportTime) {\n\t            Tone.Time.call(this, val, units);\n\t        } else {\n\t            return new Tone.TransportTime(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TransportTime, Tone.Time);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.TransportTime.prototype._unaryExpressions = Object.create(Tone.Time.prototype._unaryExpressions);\n\t    /**\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            var subdivision = this._secondsToTicks(rh());\n\t            var multiple = Math.ceil(Tone.Transport.ticks / subdivision);\n\t            return this._ticksToUnits(multiple * subdivision);\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert seconds into ticks\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._secondsToTicks = function (seconds) {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = seconds / quarterTime;\n\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Evaluate the time expression. Returns values in ticks\n\t\t *  @return {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.eval = function () {\n\t        var val = this._secondsToTicks(this._expr());\n\t        return val + (this._plusNow ? Tone.Transport.ticks : 0);\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.toTicks = function () {\n\t        return this.eval();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.TransportTime.prototype.toSeconds = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? Tone.Transport.seconds : 0);\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t */\n\t    Tone.TransportTime.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    return Tone.TransportTime;\n\t});\n\tModule(function (Tone) {\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTYPES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t * Units which a value can take on.\n\t\t * @enum {String}\n\t\t */\n\t    Tone.Type = {\n\t        /** \n\t\t\t *  Default units\n\t\t\t *  @typedef {Default}\n\t\t\t */\n\t        Default: 'number',\n\t        /**\n\t\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t\t *\n\t\t\t *  <ul>\n\t\t\t *  <li>Numbers, which will be taken literally as the time (in seconds).</li>\n\t\t\t *  <li>Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.</li>\n\t\t\t *  <li>TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times \n\t\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.</li>\n\t\t\t *  <li>Frequency, (\"8hz\") is converted to the length of the cycle in seconds.</li>\n\t\t\t *  <li>Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \n\t\t\t *  \"the current time plus whatever expression follows\".</li>\n\t\t\t *  <li>Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined \n\t\t\t *  into a mathematical expression which will be evaluated to compute the desired time.</li>\n\t\t\t *  <li>No Argument, for methods which accept time, no argument will be interpreted as \n\t\t\t *  \"now\" (i.e. the currentTime).</li>\n\t\t\t *  </ul>\n\t\t\t *  \n\t\t\t *  @typedef {Time}\n\t\t\t */\n\t        Time: 'time',\n\t        /**\n\t\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t\t *  values are converted to frequency instead of seconds. A number\n\t\t\t *  is taken literally as the value in hertz. Additionally any of the \n\t\t\t *  Time encodings can be used. Note names in the form\n\t\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t\t *  frequency value. \n\t\t\t *  @typedef {Frequency}\n\t\t\t */\n\t        Frequency: 'frequency',\n\t        /**\n\t\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable. \n\t\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t\t *  @typedef {TransportTime}\n\t\t\t */\n\t        TransportTime: 'transportTime',\n\t        /** \n\t\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t\t *  the smallest unit of time that the Transport supports.\n\t\t\t *  @typedef {Ticks}\n\t\t\t */\n\t        Ticks: 'ticks',\n\t        /** \n\t\t\t *  Normal values are within the range [0, 1].\n\t\t\t *  @typedef {NormalRange}\n\t\t\t */\n\t        NormalRange: 'normalRange',\n\t        /** \n\t\t\t *  AudioRange values are between [-1, 1].\n\t\t\t *  @typedef {AudioRange}\n\t\t\t */\n\t        AudioRange: 'audioRange',\n\t        /** \n\t\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels \n\t\t\t *  means no change in volume. -10db is approximately half as loud and 10db \n\t\t\t *  is twice is loud. \n\t\t\t *  @typedef {Decibels}\n\t\t\t */\n\t        Decibels: 'db',\n\t        /** \n\t\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t\t *  @typedef {Interval}\n\t\t\t */\n\t        Interval: 'interval',\n\t        /** \n\t\t\t *  Beats per minute. \n\t\t\t *  @typedef {BPM}\n\t\t\t */\n\t        BPM: 'bpm',\n\t        /** \n\t\t\t *  The value must be greater than or equal to 0.\n\t\t\t *  @typedef {Positive}\n\t\t\t */\n\t        Positive: 'positive',\n\t        /** \n\t\t\t *  A cent is a hundredth of a semitone. \n\t\t\t *  @typedef {Cents}\n\t\t\t */\n\t        Cents: 'cents',\n\t        /** \n\t\t\t *  Angle between 0 and 360. \n\t\t\t *  @typedef {Degrees}\n\t\t\t */\n\t        Degrees: 'degrees',\n\t        /** \n\t\t\t *  A number representing a midi note.\n\t\t\t *  @typedef {MIDI}\n\t\t\t */\n\t        MIDI: 'midi',\n\t        /** \n\t\t\t *  A colon-separated representation of time in the form of\n\t\t\t *  Bars:Beats:Sixteenths. \n\t\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t\t */\n\t        BarsBeatsSixteenths: 'barsBeatsSixteenths',\n\t        /** \n\t\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t\t *  Audio is typically sampled 44100 times per second. \n\t\t\t *  @typedef {Samples}\n\t\t\t */\n\t        Samples: 'samples',\n\t        /** \n\t\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t\t *  @typedef {Hertz}\n\t\t\t */\n\t        Hertz: 'hertz',\n\t        /** \n\t\t\t *  A frequency represented by a letter name, \n\t\t\t *  accidental and octave. This system is known as\n\t\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t\t *  @typedef {Note}\n\t\t\t */\n\t        Note: 'note',\n\t        /** \n\t\t\t *  One millisecond is a thousandth of a second. \n\t\t\t *  @typedef {Milliseconds}\n\t\t\t */\n\t        Milliseconds: 'milliseconds',\n\t        /** \n\t\t\t *  Seconds are the time unit of the AudioContext. In the end, \n\t\t\t *  all values need to be evaluated to seconds. \n\t\t\t *  @typedef {Seconds}\n\t\t\t */\n\t        Seconds: 'seconds',\n\t        /** \n\t\t\t *  A string representing a duration relative to a measure. \n\t\t\t *  <ul>\n\t\t\t *  \t<li>\"4n\" = quarter note</li>\n\t\t\t *   \t<li>\"2m\" = two measures</li>\n\t\t\t *    \t<li>\"8t\" = eighth-note triplet</li>\n\t\t\t *  </ul>\n\t\t\t *  @typedef {Notation}\n\t\t\t */\n\t        Notation: 'notation'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // AUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert Time into seconds.\n\t\t *  \n\t\t *  Unlike the method which it overrides, this takes into account \n\t\t *  transporttime and musical notation.\n\t\t *\n\t\t *  Time : 1.40\n\t\t *  Notation: 4n|1m|2t\n\t\t *  Now Relative: +3n\n\t\t *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)\n\t\t *\n\t\t *  @param  {Time} time \n\t\t *  @return {Seconds} \n\t\t */\n\t    Tone.prototype.toSeconds = function (time) {\n\t        if (this.isNumber(time)) {\n\t            return time;\n\t        } else if (this.isUndef(time)) {\n\t            return this.now();\n\t        } else if (this.isString(time)) {\n\t            return new Tone.Time(time).toSeconds();\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toSeconds();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a frequency representation into a number.\n\t\t *  @param  {Frequency} freq \n\t\t *  @return {Hertz}      the frequency in hertz\n\t\t */\n\t    Tone.prototype.toFrequency = function (freq) {\n\t        if (this.isNumber(freq)) {\n\t            return freq;\n\t        } else if (this.isString(freq) || this.isUndef(freq)) {\n\t            return new Tone.Frequency(freq).eval();\n\t        } else if (freq instanceof Tone.TimeBase) {\n\t            return freq.toFrequency();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a time representation into ticks.\n\t\t *  @param  {Time} time\n\t\t *  @return {Ticks}  the time in ticks\n\t\t */\n\t    Tone.prototype.toTicks = function (time) {\n\t        if (this.isNumber(time) || this.isString(time)) {\n\t            return new Tone.TransportTime(time).toTicks();\n\t        } else if (this.isUndef(time)) {\n\t            return Tone.Transport.ticks;\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toTicks();\n\t        }\n\t    };\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t\t *         additional unit conversion functionality. It also\n\t\t *         serves as a base-class for classes which have a single,\n\t\t *         automatable parameter. \n\t\t *  @extends {Tone}\n\t\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t\t *  @param  {Tone.Type} units The units of the audio param.\n\t\t *  @param  {Boolean} convert If the param should be converted.\n\t\t */\n\t    Tone.Param = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'param',\n\t            'units',\n\t            'convert'\n\t        ], Tone.Param.defaults);\n\t        /**\n\t\t\t *  The native parameter to control\n\t\t\t *  @type  {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input = options.param;\n\t        /**\n\t\t\t *  The units of the parameter\n\t\t\t *  @type {Tone.Type}\n\t\t\t */\n\t        this.units = options.units;\n\t        /**\n\t\t\t *  If the value should be converted or not\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.convert = options.convert;\n\t        /**\n\t\t\t *  True if the signal value is being overridden by \n\t\t\t *  a connected signal.\n\t\t\t *  @readOnly\n\t\t\t *  @type  {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this.overridden = false;\n\t        /**\n\t\t\t *  If there is an LFO, this is where it is held.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = null;\n\t        if (this.isObject(options.lfo)) {\n\t            this.value = options.lfo;\n\t        } else if (!this.isUndef(options.value)) {\n\t            this.value = options.value;\n\t        }\n\t    };\n\t    Tone.extend(Tone.Param);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Param.defaults = {\n\t        'units': Tone.Type.Default,\n\t        'convert': true,\n\t        'param': undefined\n\t    };\n\t    /**\n\t\t * The current value of the parameter. \n\t\t * @memberOf Tone.Param#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Param.prototype, 'value', {\n\t        get: function () {\n\t            return this._toUnits(this._param.value);\n\t        },\n\t        set: function (value) {\n\t            if (this.isObject(value)) {\n\t                //throw an error if the LFO needs to be included\n\t                if (this.isUndef(Tone.LFO)) {\n\t                    throw new Error('Include \\'Tone.LFO\\' to use an LFO as a Param value.');\n\t                }\n\t                //remove the old one\n\t                if (this._lfo) {\n\t                    this._lfo.dispose();\n\t                }\n\t                this._lfo = new Tone.LFO(value).start();\n\t                this._lfo.connect(this.input);\n\t            } else {\n\t                var convertedVal = this._fromUnits(value);\n\t                this._param.cancelScheduledValues(0);\n\t                this._param.value = convertedVal;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert the given value from the type specified by Tone.Param.units\n\t\t *  into the destination value (such as Gain or Frequency).\n\t\t *  @private\n\t\t *  @param  {*} val the value to convert\n\t\t *  @return {number}     the number which the value should be set to\n\t\t */\n\t    Tone.Param.prototype._fromUnits = function (val) {\n\t        if (this.convert || this.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Time:\n\t                return this.toSeconds(val);\n\t            case Tone.Type.Frequency:\n\t                return this.toFrequency(val);\n\t            case Tone.Type.Decibels:\n\t                return this.dbToGain(val);\n\t            case Tone.Type.NormalRange:\n\t                return Math.min(Math.max(val, 0), 1);\n\t            case Tone.Type.AudioRange:\n\t                return Math.min(Math.max(val, -1), 1);\n\t            case Tone.Type.Positive:\n\t                return Math.max(val, 0);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t\t * @private\n\t\t * @param  {number} val the value to convert\n\t\t * @return {number}\n\t\t */\n\t    Tone.Param.prototype._toUnits = function (val) {\n\t        if (this.convert || this.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Decibels:\n\t                return this.gainToDb(val);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t *  the minimum output value\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Param.prototype._minOutput = 0.00001;\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.Param.prototype.setValueAtTime = function (value, time) {\n\t        value = this._fromUnits(value);\n\t        time = this.toSeconds(time);\n\t        if (time <= this.now() + this.blockTime) {\n\t            this._param.value = value;\n\t        } else {\n\t            this._param.setValueAtTime(value, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Creates a schedule point with the current value at the current time.\n\t\t *  This is useful for creating an automation anchor point in order to \n\t\t *  schedule changes from the current value. \n\t\t *\n\t\t *  @param {number=} now (Optionally) pass the now value in. \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setRampPoint = function (now) {\n\t        now = this.defaultArg(now, this.now());\n\t        var currentVal = this._param.value;\n\t        // exponentialRampToValueAt cannot ever ramp from or to 0\n\t        // More info: https://bugzilla.mozilla.org/show_bug.cgi?id=1125600#c2\n\t        if (currentVal === 0) {\n\t            currentVal = this._minOutput;\n\t        }\n\t        this._param.setValueAtTime(currentVal, now);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t *  previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        this._param.linearRampToValueAtTime(value, this.toSeconds(endTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        this._param.exponentialRampToValueAtTime(value, this.toSeconds(endTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the current time and current value to the given value over the \n\t\t *  duration of the rampTime.\n\t\t *  \n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //exponentially ramp to the value 2 over 4 seconds. \n\t\t * signal.exponentialRampToValue(2, 4);\n\t\t */\n\t    Tone.Param.prototype.exponentialRampToValue = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an linear continuous change in parameter value from \n\t\t *  the current time and current value to the given value over the \n\t\t *  duration of the rampTime.\n\t\t *  \n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //linearly ramp to the value 4 over 3 seconds. \n\t\t * signal.linearRampToValue(4, 3);\n\t\t */\n\t    Tone.Param.prototype.linearRampToValue = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {number} timeConstant \n\t\t *  @returns {Tone.Param} this \n\t\t */\n\t    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        // The value will never be able to approach without timeConstant > 0.\n\t        // http://www.w3.org/TR/webaudio/#dfn-setTargetAtTime, where the equation\n\t        // is described. 0 results in a division by 0.\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        this._param.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t *  for the given duration.\n\t\t *  \t\n\t\t *  @param {Array} values    \n\t\t *  @param {Time} startTime \n\t\t *  @param {Time} duration  \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration) {\n\t        for (var i = 0; i < values.length; i++) {\n\t            values[i] = this._fromUnits(values[i]);\n\t        }\n\t        this._param.setValueCurveAtTime(values, this.toSeconds(startTime), this.toSeconds(duration));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t *  equal to startTime.\n\t\t *  \n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.cancelScheduledValues = function (startTime) {\n\t        this._param.cancelScheduledValues(this.toSeconds(startTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Ramps to the given value over the duration of the rampTime. \n\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t *  depending on the `units` of the signal\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} rampTime \tThe time that it takes the \n\t\t *                              value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //ramp to the value either linearly or exponentially \n\t\t * //depending on the \"units\" value of the signal\n\t\t * signal.rampTo(0, 10);\n\t\t *  @example\n\t\t * //schedule it to ramp starting at a specific time\n\t\t * signal.rampTo(0, 10, 5)\n\t\t */\n\t    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {\n\t        rampTime = this.defaultArg(rampTime, 0);\n\t        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM) {\n\t            this.exponentialRampToValue(value, rampTime, startTime);\n\t        } else {\n\t            this.linearRampToValue(value, rampTime, startTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The LFO created by the signal instance. If none\n\t\t *  was created, this is null.\n\t\t *  @type {Tone.LFO}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Param#\n\t\t *  @name lfo\n\t\t */\n\t    Object.defineProperty(Tone.Param.prototype, 'lfo', {\n\t        get: function () {\n\t            return this._lfo;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._param = null;\n\t        if (this._lfo) {\n\t            this._lfo.dispose();\n\t            this._lfo = null;\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Param;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t\t *         The GainNode is a basic building block of the Web Audio\n\t\t *         API and is useful for routing audio and adjusting gains. \n\t\t *  @extends {Tone}\n\t\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t\t *  @param {Tone.Type=} units The units of the gain parameter. \n\t\t */\n\t    Tone.Gain = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'gain',\n\t            'units'\n\t        ], Tone.Gain.defaults);\n\t        /**\n\t\t\t *  The GainNode\n\t\t\t *  @type  {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = this._gainNode = this.context.createGain();\n\t        /**\n\t\t\t *  The gain parameter of the gain node.\n\t\t\t *  @type {Tone.Param}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Param({\n\t            'param': this._gainNode.gain,\n\t            'units': options.units,\n\t            'value': options.gain,\n\t            'convert': options.convert\n\t        });\n\t        this._readOnly('gain');\n\t    };\n\t    Tone.extend(Tone.Gain);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Gain.defaults = {\n\t        'gain': 1,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Gain}  this\n\t\t */\n\t    Tone.Gain.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._gainNode.disconnect();\n\t        this._gainNode = null;\n\t        this._writable('gain');\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t    };\n\t    //STATIC///////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Create input and outputs for this object.\n\t\t *  @param  {Number}  input   The number of inputs\n\t\t *  @param  {Number=}  outputs  The number of outputs\n\t\t *  @return  {Tone}  this\n\t\t *  @internal\n\t\t */\n\t    Tone.prototype.createInsOuts = function (inputs, outputs) {\n\t        if (inputs === 1) {\n\t            this.input = new Tone.Gain();\n\t        } else if (inputs > 1) {\n\t            this.input = new Array(inputs);\n\t        }\n\t        if (outputs === 1) {\n\t            this.output = new Tone.Gain();\n\t        } else if (outputs > 1) {\n\t            this.output = new Array(inputs);\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    return Tone.Gain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t\t *          has all of the methods available to native Web Audio \n\t\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t\t *          as well as additional conveniences. Read more about working with signals \n\t\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Param}\n\t\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t\t *                                     is passed in, that parameter will be wrapped\n\t\t *                                     and controlled by the Signal. \n\t\t *  @param {string} [units=Number] unit The units the signal is in. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(10);\n\t\t */\n\t    Tone.Signal = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal.defaults);\n\t        /**\n\t\t\t * The node where the constant signal value is scaled.\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this._gain = this.context.createGain();\n\t        options.param = this._gain.gain;\n\t        Tone.Param.call(this, options);\n\t        /**\n\t\t\t * The node where the value is set.\n\t\t\t * @type {Tone.Param}\n\t\t\t * @private\n\t\t\t */\n\t        this.input = this._param = this._gain.gain;\n\t        //connect the const output to the node output\n\t        Tone.Signal._constant.chain(this._gain);\n\t    };\n\t    Tone.extend(Tone.Signal, Tone.Param);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Signal.defaults = {\n\t        'value': 0,\n\t        'units': Tone.Type.Default,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t *  @method\n\t\t */\n\t    Tone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Signal} this\n\t\t */\n\t    Tone.Signal.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._param = null;\n\t        this._gain.disconnect();\n\t        this._gain = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tSTATIC\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Generates a constant output of 1.\n\t\t *  @static\n\t\t *  @private\n\t\t *  @const\n\t\t *  @type {AudioBufferSourceNode}\n\t\t */\n\t    Tone.Signal._constant = null;\n\t    /**\n\t\t *  initializer function\n\t\t */\n\t    Tone._initAudioContext(function (audioContext) {\n\t        var buffer = audioContext.createBuffer(1, 128, audioContext.sampleRate);\n\t        var arr = buffer.getChannelData(0);\n\t        for (var i = 0; i < arr.length; i++) {\n\t            arr[i] = 1;\n\t        }\n\t        Tone.Signal._constant = audioContext.createBufferSource();\n\t        Tone.Signal._constant.channelCount = 1;\n\t        Tone.Signal._constant.channelCountMode = 'explicit';\n\t        Tone.Signal._constant.buffer = buffer;\n\t        Tone.Signal._constant.loop = true;\n\t        Tone.Signal._constant.start(0);\n\t        Tone.Signal._constant.noGC();\n\t    });\n\t    return Tone.Signal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Timeline class for scheduling and maintaining state\n\t\t *         along a timeline. All events must have a \"time\" property. \n\t\t *         Internally, events are stored in time order for fast \n\t\t *         retrieval.\n\t\t *  @extends {Tone}\n\t\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t\t */\n\t    Tone.Timeline = function () {\n\t        var options = this.optionsObject(arguments, ['memory'], Tone.Timeline.defaults);\n\t        /**\n\t\t\t *  The array of scheduled timeline events\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeline = [];\n\t        /**\n\t\t\t *  An array of items to remove from the list. \n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._toRemove = [];\n\t        /**\n\t\t\t *  Flag if the tieline is mid iteration\n\t\t\t *  @private\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this._iterating = false;\n\t        /**\n\t\t\t *  The memory of the timeline, i.e.\n\t\t\t *  how many events in the past it will retain\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.memory = options.memory;\n\t    };\n\t    Tone.extend(Tone.Timeline);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Timeline.defaults = { 'memory': Infinity };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Timeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Timeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._timeline.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t\t *  @param  {Object}  event  The event object to insert into the \n\t\t *                           timeline. \n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.addEvent = function (event) {\n\t        //the event needs to have a time attribute\n\t        if (this.isUndef(event.time)) {\n\t            throw new Error('Tone.Timeline: events must have a time attribute');\n\t        }\n\t        if (this._timeline.length) {\n\t            var index = this._search(event.time);\n\t            this._timeline.splice(index + 1, 0, event);\n\t        } else {\n\t            this._timeline.push(event);\n\t        }\n\t        //if the length is more than the memory, remove the previous ones\n\t        if (this.length > this.memory) {\n\t            var diff = this.length - this.memory;\n\t            this._timeline.splice(0, diff);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event object to remove from the list.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.removeEvent = function (event) {\n\t        if (this._iterating) {\n\t            this._toRemove.push(event);\n\t        } else {\n\t            var index = this._timeline.indexOf(event);\n\t            if (index !== -1) {\n\t                this._timeline.splice(index, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the nearest event whose time is less than or equal to the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object set after that time.\n\t\t */\n\t    Tone.Timeline.prototype.getEvent = function (time) {\n\t        var index = this._search(time);\n\t        if (index !== -1) {\n\t            return this._timeline[index];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the event which is scheduled after the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object after the given time\n\t\t */\n\t    Tone.Timeline.prototype.getEventAfter = function (time) {\n\t        var index = this._search(time);\n\t        if (index + 1 < this._timeline.length) {\n\t            return this._timeline[index + 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the event before the event at the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object before the given time\n\t\t */\n\t    Tone.Timeline.prototype.getEventBefore = function (time) {\n\t        var len = this._timeline.length;\n\t        //if it's after the last item, return the last item\n\t        if (len > 0 && this._timeline[len - 1].time < time) {\n\t            return this._timeline[len - 1];\n\t        }\n\t        var index = this._search(time);\n\t        if (index - 1 >= 0) {\n\t            return this._timeline[index - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Cancel events after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancel = function (after) {\n\t        if (this._timeline.length > 1) {\n\t            var index = this._search(after);\n\t            if (index >= 0) {\n\t                if (this._timeline[index].time === after) {\n\t                    //get the first item with that time\n\t                    for (var i = index; i >= 0; i--) {\n\t                        if (this._timeline[i].time === after) {\n\t                            index = i;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    }\n\t                    this._timeline = this._timeline.slice(0, index);\n\t                } else {\n\t                    this._timeline = this._timeline.slice(0, index + 1);\n\t                }\n\t            } else {\n\t                this._timeline = [];\n\t            }\n\t        } else if (this._timeline.length === 1) {\n\t            //the first item's time\n\t            if (this._timeline[0].time >= after) {\n\t                this._timeline = [];\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel events before or equal to the given time.\n\t\t *  @param  {Number}  time  The time to cancel before.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancelBefore = function (time) {\n\t        if (this._timeline.length) {\n\t            var index = this._search(time);\n\t            if (index >= 0) {\n\t                this._timeline = this._timeline.slice(index + 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Does a binary serach on the timeline array and returns the \n\t\t *  nearest event index whose time is after or equal to the given time.\n\t\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t\t *  If the time is after the end, the index of the last item is returned.\n\t\t *  @param  {Number}  time  \n\t\t *  @return  {Number} the index in the timeline array \n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._search = function (time) {\n\t        var beginning = 0;\n\t        var len = this._timeline.length;\n\t        var end = len;\n\t        if (len > 0 && this._timeline[len - 1].time <= time) {\n\t            return len - 1;\n\t        }\n\t        while (beginning < end) {\n\t            // calculate the midpoint for roughly equal partition\n\t            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t            var event = this._timeline[midPoint];\n\t            var nextEvent = this._timeline[midPoint + 1];\n\t            if (event.time === time) {\n\t                //choose the last one that has the same time\n\t                for (var i = midPoint; i < this._timeline.length; i++) {\n\t                    var testEvent = this._timeline[i];\n\t                    if (testEvent.time === time) {\n\t                        midPoint = i;\n\t                    }\n\t                }\n\t                return midPoint;\n\t            } else if (event.time < time && nextEvent.time > time) {\n\t                return midPoint;\n\t            } else if (event.time > time) {\n\t                //search lower\n\t                end = midPoint;\n\t            } else if (event.time < time) {\n\t                //search upper\n\t                beginning = midPoint + 1;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t    /**\n\t\t *  Internal iterator. Applies extra safety checks for \n\t\t *  removing items from the array. \n\t\t *  @param  {Function}  callback \n\t\t *  @param  {Number=}    lowerBound     \n\t\t *  @param  {Number=}    upperBound    \n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n\t        this._iterating = true;\n\t        lowerBound = this.defaultArg(lowerBound, 0);\n\t        upperBound = this.defaultArg(upperBound, this._timeline.length - 1);\n\t        for (var i = lowerBound; i <= upperBound; i++) {\n\t            callback(this._timeline[i]);\n\t        }\n\t        this._iterating = false;\n\t        if (this._toRemove.length > 0) {\n\t            for (var j = 0; j < this._toRemove.length; j++) {\n\t                var index = this._timeline.indexOf(this._toRemove[j]);\n\t                if (index !== -1) {\n\t                    this._timeline.splice(index, 1);\n\t                }\n\t            }\n\t            this._toRemove = [];\n\t        }\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEach = function (callback) {\n\t        this._iterate(callback);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or before the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachBefore = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(callback, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array after the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAfter = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or after the given time. Similar to \n\t\t *  forEachAfter, but includes the item(s) at the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachFrom = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        //work backwards until the event time is less than time\n\t        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t            lowerBound--;\n\t        }\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at the given time\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(function (event) {\n\t                if (event.time === time) {\n\t                    callback(event);\n\t                }\n\t            }, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Timeline}  this\n\t\t */\n\t    Tone.Timeline.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._timeline = null;\n\t        this._toRemove = null;\n\t    };\n\t    return Tone.Timeline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A signal which adds the method getValueAtTime. \n\t\t *         Code and inspiration from https://github.com/jsantell/web-audio-automation-timeline\n\t\t *  @extends {Tone.Param}\n\t\t *  @param {Number=} value The initial value of the signal\n\t\t *  @param {String=} units The conversion units of the signal.\n\t\t */\n\t    Tone.TimelineSignal = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal.defaults);\n\t        /**\n\t\t\t *  The scheduled events\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = new Tone.Timeline(10);\n\t        //constructors\n\t        Tone.Signal.apply(this, options);\n\t        options.param = this._param;\n\t        Tone.Param.call(this, options);\n\t        /**\n\t\t\t *  The initial scheduled value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._initial = this._fromUnits(this._param.value);\n\t    };\n\t    Tone.extend(Tone.TimelineSignal, Tone.Param);\n\t    /**\n\t\t *  The event types of a schedulable signal.\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.Type = {\n\t        Linear: 'linear',\n\t        Exponential: 'exponential',\n\t        Target: 'target',\n\t        Curve: 'curve',\n\t        Set: 'set'\n\t    };\n\t    /**\n\t\t * The current value of the signal. \n\t\t * @memberOf Tone.TimelineSignal#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.TimelineSignal.prototype, 'value', {\n\t        get: function () {\n\t            var now = this.now();\n\t            var val = this.getValueAtTime(now);\n\t            return this._toUnits(val);\n\t        },\n\t        set: function (value) {\n\t            var convertedVal = this._fromUnits(value);\n\t            this._initial = convertedVal;\n\t            this.cancelScheduledValues();\n\t            this._param.value = convertedVal;\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueAtTime = function (value, startTime) {\n\t        value = this._fromUnits(value);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Set,\n\t            'value': value,\n\t            'time': startTime\n\t        });\n\t        //invoke the original event\n\t        this._param.setValueAtTime(value, startTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t *  previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        endTime = this.toSeconds(endTime);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Linear,\n\t            'value': value,\n\t            'time': endTime\n\t        });\n\t        this._param.linearRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        //get the previous event and make sure it's not starting from 0\n\t        endTime = this.toSeconds(endTime);\n\t        var beforeEvent = this._searchBefore(endTime);\n\t        if (beforeEvent && beforeEvent.value === 0) {\n\t            //reschedule that event\n\t            this.setValueAtTime(this._minOutput, beforeEvent.time);\n\t        }\n\t        value = this._fromUnits(value);\n\t        var setValue = Math.max(value, this._minOutput);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Exponential,\n\t            'value': setValue,\n\t            'time': endTime\n\t        });\n\t        //if the ramped to value is 0, make it go to the min output, and then set to 0.\n\t        if (value < this._minOutput) {\n\t            this._param.exponentialRampToValueAtTime(this._minOutput, endTime - this.sampleTime);\n\t            this.setValueAtTime(0, endTime);\n\t        } else {\n\t            this._param.exponentialRampToValueAtTime(value, endTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {number} timeConstant \n\t\t *  @returns {Tone.TimelineSignal} this \n\t\t */\n\t    Tone.TimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Target,\n\t            'value': value,\n\t            'time': startTime,\n\t            'constant': timeConstant\n\t        });\n\t        this._param.setTargetAtTime(value, startTime, timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t *  @param {Float32Array} values        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {Time} duration\n\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t *  @returns {Tone.TimelineSignal} this \n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t        scaling = this.defaultArg(scaling, 1);\n\t        //copy the array\n\t        var floats = new Array(values.length);\n\t        for (var i = 0; i < floats.length; i++) {\n\t            floats[i] = this._fromUnits(values[i]) * scaling;\n\t        }\n\t        startTime = this.toSeconds(startTime);\n\t        duration = this.toSeconds(duration);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Curve,\n\t            'value': floats,\n\t            'time': startTime,\n\t            'duration': duration\n\t        });\n\t        //set the first value\n\t        this._param.setValueAtTime(floats[0], startTime);\n\t        //schedule a lienar ramp for each of the segments\n\t        for (var j = 1; j < floats.length; j++) {\n\t            var segmentTime = startTime + j / (floats.length - 1) * duration;\n\t            this._param.linearRampToValueAtTime(floats[j], segmentTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t *  equal to startTime.\n\t\t *  \n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.cancelScheduledValues = function (after) {\n\t        after = this.toSeconds(after);\n\t        this._events.cancel(after);\n\t        this._param.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the computed value at the given time. This provides\n\t\t *  a point from which a linear or exponential curve\n\t\t *  can be scheduled after. Will cancel events after \n\t\t *  the given time and shorten the currently scheduled\n\t\t *  linear or exponential ramp so that it ends at `time` .\n\t\t *  This is to avoid discontinuities and clicks in envelopes. \n\t\t *  @param {Time} time When to set the ramp point\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setRampPoint = function (time) {\n\t        time = this.toSeconds(time);\n\t        //get the value at the given time\n\t        var val = this._toUnits(this.getValueAtTime(time));\n\t        //if there is an event at the given time\n\t        //and that even is not a \"set\"\n\t        var before = this._searchBefore(time);\n\t        if (before && before.time === time) {\n\t            //remove everything after\n\t            this.cancelScheduledValues(time + this.sampleTime);\n\t        } else if (before && before.type === Tone.TimelineSignal.Type.Curve && before.time + before.duration > time) {\n\t            //if the curve is still playing\n\t            //cancel the curve\n\t            this.cancelScheduledValues(time);\n\t            this.linearRampToValueAtTime(val, time);\n\t        } else {\n\t            //reschedule the next event to end at the given time\n\t            var after = this._searchAfter(time);\n\t            if (after) {\n\t                //cancel the next event(s)\n\t                this.cancelScheduledValues(time);\n\t                if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t                    this.linearRampToValueAtTime(val, time);\n\t                } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t                    this.exponentialRampToValueAtTime(val, time);\n\t                }\n\t            }\n\t            this.setValueAtTime(val, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a linear ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the linear ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.linearRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a exponential ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the exponential ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.exponentialRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tGETTING SCHEDULED VALUES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value before or equal to the given time\n\t\t *  @param  {Number}  time  The time to query\n\t\t *  @return  {Object}  The event at or before the given time.\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchBefore = function (time) {\n\t        return this._events.getEvent(time);\n\t    };\n\t    /**\n\t\t *  The event after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {Object}  The next event after the given time\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchAfter = function (time) {\n\t        return this._events.getEventAfter(time);\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.TimelineSignal.prototype.getValueAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        var after = this._searchAfter(time);\n\t        var before = this._searchBefore(time);\n\t        var value = this._initial;\n\t        //if it was set by\n\t        if (before === null) {\n\t            value = this._initial;\n\t        } else if (before.type === Tone.TimelineSignal.Type.Target) {\n\t            var previous = this._events.getEventBefore(before.time);\n\t            var previouVal;\n\t            if (previous === null) {\n\t                previouVal = this._initial;\n\t            } else {\n\t                previouVal = previous.value;\n\t            }\n\t            value = this._exponentialApproach(before.time, previouVal, before.value, before.constant, time);\n\t        } else if (before.type === Tone.TimelineSignal.Type.Curve) {\n\t            value = this._curveInterpolate(before.time, before.value, before.duration, time);\n\t        } else if (after === null) {\n\t            value = before.value;\n\t        } else if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else {\n\t            value = before.value;\n\t        }\n\t        return value;\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @method\n\t\t */\n\t    Tone.TimelineSignal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUTOMATION CURVE CALCULATIONS\n\t    //\tMIT License, copyright (c) 2014 Jordan Santell\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Calculates the the value along the curve produced by setTargetAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n\t        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by linearRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n\t        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n\t        v0 = Math.max(this._minOutput, v0);\n\t        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by setValueCurveAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._curveInterpolate = function (start, curve, duration, time) {\n\t        var len = curve.length;\n\t        // If time is after duration, return the last curve value\n\t        if (time >= start + duration) {\n\t            return curve[len - 1];\n\t        } else if (time <= start) {\n\t            return curve[0];\n\t        } else {\n\t            var progress = (time - start) / duration;\n\t            var lowerIndex = Math.floor((len - 1) * progress);\n\t            var upperIndex = Math.ceil((len - 1) * progress);\n\t            var lowerVal = curve[lowerIndex];\n\t            var upperVal = curve[upperIndex];\n\t            if (upperIndex === lowerIndex) {\n\t                return lowerVal;\n\t            } else {\n\t                return this._linearInterpolate(lowerIndex, lowerVal, upperIndex, upperVal, progress * (len - 1));\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._events.dispose();\n\t        this._events = null;\n\t    };\n\t    return Tone.TimelineSignal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t *         must be AudioRange.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t\t *  @example\n\t\t * var pow = new Tone.Pow(2);\n\t\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t\t * //output of pow is 0.25. \n\t\t */\n\t    Tone.Pow = function (exp) {\n\t        /**\n\t\t\t * the exponent\n\t\t\t * @private\n\t\t\t * @type {number}\n\t\t\t */\n\t        this._exp = this.defaultArg(exp, 1);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t    };\n\t    Tone.extend(Tone.Pow, Tone.SignalBase);\n\t    /**\n\t\t * The value of the exponent.\n\t\t * @memberOf Tone.Pow#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Pow.prototype, 'value', {\n\t        get: function () {\n\t            return this._exp;\n\t        },\n\t        set: function (exp) {\n\t            this._exp = exp;\n\t            this._expScaler.setMap(this._expFunc(this._exp));\n\t        }\n\t    });\n\t    /**\n\t\t *  the function which maps the waveshaper\n\t\t *  @param   {number} exp\n\t\t *  @return {function}\n\t\t *  @private\n\t\t */\n\t    Tone.Pow.prototype._expFunc = function (exp) {\n\t        return function (val) {\n\t            return Math.pow(Math.abs(val), exp);\n\t        };\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Pow} this\n\t\t */\n\t    Tone.Pow.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._expScaler.dispose();\n\t        this._expScaler = null;\n\t        return this;\n\t    };\n\t    return Tone.Pow;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t\t *          envelope generator. Tone.Envelope outputs a signal which \n\t\t *          can be connected to an AudioParam or Tone.Signal. \n\t\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from \n\t\t *                         0 to it's maximum value. \n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value. \n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered. \n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t *  @example\n\t\t * //an amplitude envelope\n\t\t * var gainNode = Tone.context.createGain();\n\t\t * var env = new Tone.Envelope({\n\t\t * \t\"attack\" : 0.1,\n\t\t * \t\"decay\" : 0.2,\n\t\t * \t\"sustain\" : 1,\n\t\t * \t\"release\" : 0.8,\n\t\t * });\n\t\t * env.connect(gainNode.gain);\n\t\t */\n\t    Tone.Envelope = function () {\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        /** \n\t\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t\t *  time it takes for the envelope to reach it's maximum value. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.attack = options.attack;\n\t        /**\n\t\t\t *  After the attack portion of the envelope, the value will fall\n\t\t\t *  over the duration of the decay time to it's sustain value. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.decay = options.decay;\n\t        /**\n\t\t\t * \tThe sustain value is the value \n\t\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t\t * \tcalled, but before triggerRelease is invoked. \n\t\t\t *  @type {NormalRange}\n\t\t\t */\n\t        this.sustain = options.sustain;\n\t        /**\n\t\t\t *  After triggerRelease is called, the envelope's\n\t\t\t *  value will fall to it's miminum value over the\n\t\t\t *  duration of the release time. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.release = options.release;\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._attackCurve = 'linear';\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._releaseCurve = 'exponential';\n\t        /**\n\t\t\t *  the signal\n\t\t\t *  @type {Tone.TimelineSignal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sig = this.output = new Tone.TimelineSignal();\n\t        this._sig.setValueAtTime(0, 0);\n\t        //set the attackCurve initially\n\t        this.attackCurve = options.attackCurve;\n\t        this.releaseCurve = options.releaseCurve;\n\t    };\n\t    Tone.extend(Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Envelope.defaults = {\n\t        'attack': 0.01,\n\t        'decay': 0.1,\n\t        'sustain': 0.5,\n\t        'release': 1,\n\t        'attackCurve': 'linear',\n\t        'releaseCurve': 'exponential'\n\t    };\n\t    /**\n\t\t * Read the current value of the envelope. Useful for \n\t\t * syncronizing visual output to the envelope. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'value', {\n\t        get: function () {\n\t            return this.getValueAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the attack. \n\t\t * Can be any of these strings:\n\t\t * <ul>\n\t\t *   <li>linear</li>\n\t\t *   <li>exponential</li>\n\t\t *   <li>sine</li>\n\t\t *   <li>ease</li>\n\t\t *   <li>bounce</li>\n\t\t *   <li>ripple</li>\n\t\t *   <li>step</li>\n\t\t * </ul>\n\t\t * Can also be an array which describes the curve. Values\n\t\t * in the array are evenly subdivided and linearly\n\t\t * interpolated over the duration of the attack. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name attackCurve\n\t\t * @example\n\t\t * env.attackCurve = \"linear\";\n\t\t * @example\n\t\t * //can also be an array\n\t\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {\n\t        get: function () {\n\t            if (this.isString(this._attackCurve)) {\n\t                return this._attackCurve;\n\t            } else if (this.isArray(this._attackCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].In === this._attackCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._attackCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (this.isObject(curveDef)) {\n\t                    this._attackCurve = curveDef.In;\n\t                } else {\n\t                    this._attackCurve = curveDef;\n\t                }\n\t            } else if (this.isArray(curve)) {\n\t                this._attackCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the release. See the attack curve types. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name releaseCurve\n\t\t * @example\n\t\t * env.releaseCurve = \"linear\";\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {\n\t        get: function () {\n\t            if (this.isString(this._releaseCurve)) {\n\t                return this._releaseCurve;\n\t            } else if (this.isArray(this._releaseCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._releaseCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (this.isObject(curveDef)) {\n\t                    this._releaseCurve = curveDef.Out;\n\t                } else {\n\t                    this._releaseCurve = curveDef;\n\t                }\n\t            } else if (this.isArray(curve)) {\n\t                this._releaseCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Trigger the attack/decay portion of the ADSR envelope. \n\t\t *  @param  {Time} [time=now] When the attack should start.\n\t\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t\t *                               number between 0-1\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        var originalAttack = this.toSeconds(this.attack);\n\t        var attack = originalAttack;\n\t        var decay = this.toSeconds(this.decay);\n\t        velocity = this.defaultArg(velocity, 1);\n\t        //check if it's not a complete attack\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            //subtract the current value from the attack time\n\t            var attackRate = 1 / attack;\n\t            var remainingDistance = 1 - currentValue;\n\t            //the attack is now the remaining time\n\t            attack = remainingDistance / attackRate;\n\t        }\n\t        //attack\n\t        if (this._attackCurve === 'linear') {\n\t            this._sig.linearRampToValue(velocity, attack, time);\n\t        } else if (this._attackCurve === 'exponential') {\n\t            this._sig.exponentialRampToValue(velocity, attack, time);\n\t        } else if (attack > 0) {\n\t            this._sig.setRampPoint(time);\n\t            var curve = this._attackCurve;\n\t            //take only a portion of the curve\n\t            if (attack < originalAttack) {\n\t                var percentComplete = 1 - attack / originalAttack;\n\t                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);\n\t                curve = this._attackCurve.slice(sliceIndex);\n\t                //the first index is the current value\n\t                curve[0] = currentValue;\n\t            }\n\t            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t        }\n\t        //decay\n\t        this._sig.exponentialRampToValue(velocity * this.sustain, decay, attack + time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Triggers the release of the envelope.\n\t\t *  @param  {Time} [time=now] When the release portion of the envelope should start. \n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger release immediately\n\t\t *  env.triggerRelease();\n\t\t */\n\t    Tone.Envelope.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            var release = this.toSeconds(this.release);\n\t            if (this._releaseCurve === 'linear') {\n\t                this._sig.linearRampToValue(0, release, time);\n\t            } else if (this._releaseCurve === 'exponential') {\n\t                this._sig.exponentialRampToValue(0, release, time);\n\t            } else {\n\t                var curve = this._releaseCurve;\n\t                if (this.isArray(curve)) {\n\t                    this._sig.setRampPoint(time);\n\t                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.Envelope.prototype.getValueAtTime = function (time) {\n\t        return this._sig.getValueAtTime(time);\n\t    };\n\t    /**\n\t\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t\t *  some duration, then triggerRelease. \n\t\t *  @param {Time} duration The duration of the sustain.\n\t\t *  @param {Time} [time=now] When the attack should be triggered.\n\t\t *  @param {number} [velocity=1] The velocity of the envelope. \n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t * //trigger the attack and then the release after 0.6 seconds.\n\t\t * env.triggerAttackRelease(0.6);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + this.toSeconds(duration));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled envelope changes after the given time.\n\t\t *  @param  {Time} after\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.cancel = function (after) {\n\t        this._sig.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Borrows the connect method from Tone.Signal. \n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t \t *  Generate some complex envelope curves. \n\t \t */\n\t    (function _createCurves() {\n\t        var curveLen = 128;\n\t        var i, k;\n\t        //cosine curve\n\t        var cosineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n\t        }\n\t        //ripple curve\n\t        var rippleCurve = [];\n\t        var rippleCurveFreq = 6.4;\n\t        for (i = 0; i < curveLen - 1; i++) {\n\t            k = i / (curveLen - 1);\n\t            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t            rippleCurve[i] = sineWave / 10 + k * 0.83;\n\t        }\n\t        rippleCurve[curveLen - 1] = 1;\n\t        //stairs curve\n\t        var stairsCurve = [];\n\t        var steps = 5;\n\t        for (i = 0; i < curveLen; i++) {\n\t            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n\t        }\n\t        //in-out easing curve\n\t        var sineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t        }\n\t        //a bounce curve\n\t        var bounceCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            var freq = Math.pow(k, 3) * 4 + 0.2;\n\t            var val = Math.cos(freq * Math.PI * 2 * k);\n\t            bounceCurve[i] = Math.abs(val * (1 - k));\n\t        }\n\t        /**\n\t\t\t *  Invert a value curve to make it work for the release\n\t\t\t *  @private\n\t\t\t */\n\t        function invertCurve(curve) {\n\t            var out = new Array(curve.length);\n\t            for (var j = 0; j < curve.length; j++) {\n\t                out[j] = 1 - curve[j];\n\t            }\n\t            return out;\n\t        }\n\t        /**\n\t\t\t *  reverse the curve\n\t\t\t *  @private\n\t\t\t */\n\t        function reverseCurve(curve) {\n\t            return curve.slice(0).reverse();\n\t        }\n\t        /**\n\t\t\t *  attack and release curve arrays\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        Tone.Envelope.Type = {\n\t            'linear': 'linear',\n\t            'exponential': 'exponential',\n\t            'bounce': {\n\t                In: invertCurve(bounceCurve),\n\t                Out: bounceCurve\n\t            },\n\t            'cosine': {\n\t                In: cosineCurve,\n\t                Out: reverseCurve(cosineCurve)\n\t            },\n\t            'step': {\n\t                In: stairsCurve,\n\t                Out: invertCurve(stairsCurve)\n\t            },\n\t            'ripple': {\n\t                In: rippleCurve,\n\t                Out: invertCurve(rippleCurve)\n\t            },\n\t            'sine': {\n\t                In: sineCurve,\n\t                Out: invertCurve(sineCurve)\n\t            }\n\t        };\n\t    }());\n\t    /**\n\t\t *  Disconnect and dispose.\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sig.dispose();\n\t        this._sig = null;\n\t        this._attackCurve = null;\n\t        this._releaseCurve = null;\n\t        return this;\n\t    };\n\t    return Tone.Envelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node. \n\t\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from \n\t\t *                               0 to it's maximum value. \n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value. \n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered. \n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t *  @example\n\t\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t\t * \t\"attack\": 0.1,\n\t\t * \t\"decay\": 0.2,\n\t\t * \t\"sustain\": 1.0,\n\t\t * \t\"release\": 0.8\n\t\t * }).toMaster();\n\t\t * //create an oscillator and connect it\n\t\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t\t * //trigger the envelopes attack and release \"8t\" apart\n\t\t * ampEnv.triggerAttackRelease(\"8t\");\n\t\t */\n\t    Tone.AmplitudeEnvelope = function () {\n\t        Tone.Envelope.apply(this, arguments);\n\t        /**\n\t\t\t *  the input node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = new Tone.Gain();\n\t        this._sig.connect(this.output.gain);\n\t    };\n\t    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t\t */\n\t    Tone.AmplitudeEnvelope.prototype.dispose = function () {\n\t        this.input.dispose();\n\t        this.input = null;\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.AmplitudeEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Wrapper around the native Web Audio's \n\t\t *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n\t\t *          Extracts FFT or Waveform data from the incoming signal.\n\t\t *  @extends {Tone}\n\t\t *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\". \n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of \n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.Analyser = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'type',\n\t            'size'\n\t        ], Tone.Analyser.defaults);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {AnalyserNode}\n\t\t\t */\n\t        this._analyser = this.input = this.output = this.context.createAnalyser();\n\t        /**\n\t\t\t *  The analysis type\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The return type of the analysis\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._returnType = options.returnType;\n\t        /**\n\t\t\t *  The buffer that the FFT data is written to\n\t\t\t *  @type {TypedArray}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        //set the values initially\n\t        this.size = options.size;\n\t        this.type = options.type;\n\t        this.returnType = options.returnType;\n\t        this.minDecibels = options.minDecibels;\n\t        this.maxDecibels = options.maxDecibels;\n\t    };\n\t    Tone.extend(Tone.Analyser);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Analyser.defaults = {\n\t        'size': 1024,\n\t        'returnType': 'byte',\n\t        'type': 'fft',\n\t        'smoothing': 0.8,\n\t        'maxDecibels': -30,\n\t        'minDecibels': -100\n\t    };\n\t    /**\n\t\t *  Possible return types of Tone.Analyser.analyse()\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Analyser.Type = {\n\t        Waveform: 'waveform',\n\t        FFT: 'fft'\n\t    };\n\t    /**\n\t\t *  Possible return types of Tone.Analyser.analyse(). \n\t\t *  byte values are between [0,255]. float values are between \n\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Analyser.ReturnType = {\n\t        Byte: 'byte',\n\t        Float: 'float'\n\t    };\n\t    /**\n\t\t *  Run the analysis given the current settings and return the \n\t\t *  result as a TypedArray. \n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.Analyser.prototype.analyse = function () {\n\t        if (this._type === Tone.Analyser.Type.FFT) {\n\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t                this._analyser.getByteFrequencyData(this._buffer);\n\t            } else {\n\t                this._analyser.getFloatFrequencyData(this._buffer);\n\t            }\n\t        } else if (this._type === Tone.Analyser.Type.Waveform) {\n\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t                this._analyser.getByteTimeDomainData(this._buffer);\n\t            } else {\n\t                if (this.isFunction(AnalyserNode.prototype.getFloatTimeDomainData)) {\n\t                    this._analyser.getFloatTimeDomainData(this._buffer);\n\t                } else {\n\t                    var uint8 = new Uint8Array(this._buffer.length);\n\t                    this._analyser.getByteTimeDomainData(uint8);\n\t                    //referenced https://github.com/mohayonao/get-float-time-domain-data \n\t                    // POLYFILL\n\t                    for (var i = 0; i < uint8.length; i++) {\n\t                        this._buffer[i] = (uint8[i] - 128) * 0.0078125;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.frequencyBinCount;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.fftSize = size * 2;\n\t            this.type = this._type;\n\t        }\n\t    });\n\t    /**\n\t\t *  The return type of Tone.Analyser.analyse(), either \"byte\" or \"float\". \n\t\t *  When the type is set to \"byte\" the range of values returned in the array\n\t\t *  are between 0-255. \"float\" values are between \n\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {String}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'returnType', {\n\t        get: function () {\n\t            return this._returnType;\n\t        },\n\t        set: function (type) {\n\t            if (type === Tone.Analyser.ReturnType.Byte) {\n\t                this._buffer = new Uint8Array(this._analyser.frequencyBinCount);\n\t            } else if (type === Tone.Analyser.ReturnType.Float) {\n\t                this._buffer = new Float32Array(this._analyser.frequencyBinCount);\n\t            } else {\n\t                throw new TypeError('Tone.Analayser: invalid return type: ' + type);\n\t            }\n\t            this._returnType = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  The analysis function returned by Tone.Analyser.analyse(), either \"fft\" or \"waveform\". \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {String}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {\n\t                throw new TypeError('Tone.Analyser: invalid type: ' + type);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  0 represents no time averaging with the last analysis frame.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {NormalRange}\n\t\t *  @name smoothing\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {\n\t        get: function () {\n\t            return this._analyser.smoothingTimeConstant;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.smoothingTimeConstant = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The smallest decibel value which is analysed by the FFT. \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Decibels}\n\t\t *  @name minDecibels\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'minDecibels', {\n\t        get: function () {\n\t            return this._analyser.minDecibels;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.minDecibels = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The largest decibel value which is analysed by the FFT. \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Decibels}\n\t\t *  @name maxDecibels\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'maxDecibels', {\n\t        get: function () {\n\t            return this._analyser.maxDecibels;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.maxDecibels = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Analyser}  this\n\t\t */\n\t    Tone.Analyser.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._analyser.disconnect();\n\t        this._analyser = null;\n\t        this._buffer = null;\n\t    };\n\t    return Tone.Analyser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Compressor is a thin wrapper around the Web Audio \n\t\t *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n\t\t *         Compression reduces the volume of loud sounds or amplifies quiet sounds \n\t\t *         by narrowing or \"compressing\" an audio signal's dynamic range. \n\t\t *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n\t\t *  @param {Positive} [ratio] The gain reduction ratio.\n\t\t *  @example\n\t\t * var comp = new Tone.Compressor(-30, 3);\n\t\t */\n\t    Tone.Compressor = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'threshold',\n\t            'ratio'\n\t        ], Tone.Compressor.defaults);\n\t        /**\n\t\t\t *  the compressor node\n\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\t        /**\n\t\t\t *  the threshold vaue\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.threshold = this._compressor.threshold;\n\t        /**\n\t\t\t *  The attack parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\t        /**\n\t\t\t *  The release parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\t        /**\n\t\t\t *  The knee parameter\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.knee = this._compressor.knee;\n\t        /**\n\t\t\t *  The ratio value\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.ratio = this._compressor.ratio;\n\t        //set the defaults\n\t        this._readOnly([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.Compressor);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Compressor.defaults = {\n\t        'ratio': 12,\n\t        'threshold': -24,\n\t        'release': 0.25,\n\t        'attack': 0.003,\n\t        'knee': 30\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Compressor} this\n\t\t */\n\t    Tone.Compressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this._compressor.disconnect();\n\t        this._compressor = null;\n\t        this.attack.dispose();\n\t        this.attack = null;\n\t        this.release.dispose();\n\t        this.release = null;\n\t        this.threshold = null;\n\t        this.ratio = null;\n\t        this.knee = null;\n\t        return this;\n\t    };\n\t    return Tone.Compressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Add a signal and a number or two signals. When no value is\n\t\t *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n\t\t *         and <code>input[1]</code>. If a value is passed into the constructor, \n\t\t *         the it will be added to the input.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value If no value is provided, Tone.Add will sum the first\n\t\t *                         and second inputs. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(2);\n\t\t * var add = new Tone.Add(2);\n\t\t * signal.connect(add);\n\t\t * //the output of add equals 4\n\t\t *  @example\n\t\t * //if constructed with no arguments\n\t\t * //it will add the first and second inputs\n\t\t * var add = new Tone.Add();\n\t\t * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t * //the output of add equals 7. \n\t\t */\n\t    Tone.Add = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.connect(this._sum);\n\t    };\n\t    Tone.extend(Tone.Add, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Add} this\n\t\t */\n\t    Tone.Add.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sum.dispose();\n\t        this._sum = null;\n\t        this._param.dispose();\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Add;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor, \n\t\t *          multiplies the incoming signal by that value. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t\t *                         it will return the product of the first and second inputs\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply();\n\t\t * var sigA = new Tone.Signal(3);\n\t\t * var sigB = new Tone.Signal(4);\n\t\t * sigA.connect(mult, 0, 0);\n\t\t * sigB.connect(mult, 0, 1);\n\t\t * //output of mult is 12.\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply(10);\n\t\t * var sig = new Tone.Signal(2).connect(mult);\n\t\t * //the output of mult is 20. \n\t\t */\n\t    Tone.Multiply = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the input node is the same as the output node\n\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t *  \n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the scaling parameter\n\t\t\t *  @type {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[1] = this.output.gain;\n\t        this._param.value = this.defaultArg(value, 0);\n\t    };\n\t    Tone.extend(Tone.Multiply, Tone.Signal);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Multiply} this\n\t\t */\n\t    Tone.Multiply.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Multiply;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var neg = new Tone.Negate();\n\t\t * var sig = new Tone.Signal(-2).connect(neg);\n\t\t * //output of neg is positive 2. \n\t\t */\n\t    Tone.Negate = function () {\n\t        /**\n\t\t\t *  negation is done by multiplying by -1\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = this.input = this.output = new Tone.Multiply(-1);\n\t    };\n\t    Tone.extend(Tone.Negate, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Negate} this\n\t\t */\n\t    Tone.Negate.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        return this;\n\t    };\n\t    return Tone.Negate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n\t\t *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n\t\t *         signals <code>.value</code> will be subtracted from the incoming signal.\n\t\t *\n\t\t *  @extends {Tone.Signal}\n\t\t *  @constructor\n\t\t *  @param {number=} value The value to subtract from the incoming signal. If the value\n\t\t *                         is omitted, it will subtract the second signal from the first.\n\t\t *  @example\n\t\t * var sub = new Tone.Subtract(1);\n\t\t * var sig = new Tone.Signal(4).connect(sub);\n\t\t * //the output of sub is 3. \n\t\t *  @example\n\t\t * var sub = new Tone.Subtract();\n\t\t * var sigA = new Tone.Signal(10);\n\t\t * var sigB = new Tone.Signal(2.5);\n\t\t * sigA.connect(sub, 0, 0);\n\t\t * sigB.connect(sub, 0, 1);\n\t\t * //output of sub is 7.5\n\t\t */\n\t    Tone.Subtract = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  negate the input of the second input before connecting it\n\t\t\t *  to the summing node.\n\t\t\t *  @type {Tone.Negate}\n\t\t\t *  @private\n\t\t\t */\n\t        this._neg = new Tone.Negate();\n\t        /**\n\t\t\t *  the node where the value is set\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.chain(this._neg, this._sum);\n\t    };\n\t    Tone.extend(Tone.Subtract, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.Subtract.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._neg.dispose();\n\t        this._neg = null;\n\t        this._sum.disconnect();\n\t        this._sum = null;\n\t        this._param.dispose();\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Subtract;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var gt0 = new Tone.GreaterThanZero();\n\t\t * var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t * //the output of gt0 is 1. \n\t\t * sig.value = 0;\n\t\t * //the output of gt0 is 0. \n\t\t */\n\t    Tone.GreaterThanZero = function () {\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val <= 0) {\n\t                return 0;\n\t            } else {\n\t                return 1;\n\t            }\n\t        }, 127);\n\t        /**\n\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t *  this will help with values which are very close to 0\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(10000);\n\t        //connections\n\t        this._scale.connect(this._thresh);\n\t    };\n\t    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThanZero} this\n\t\t */\n\t    Tone.GreaterThanZero.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThanZero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t *          can compare two signals or a signal and a number. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t *  @example\n\t\t * var gt = new Tone.GreaterThan(2);\n\t\t * var sig = new Tone.Signal(4).connect(gt);\n\t\t * //output of gt is equal 1. \n\t\t */\n\t    Tone.GreaterThan = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  subtract the amount from the incoming signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[0] = new Tone.Subtract(value);\n\t        this.input[1] = this._param.input[1];\n\t        /**\n\t\t\t *  compare that amount to zero\n\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gtz = this.output = new Tone.GreaterThanZero();\n\t        //connect\n\t        this._param.connect(this._gtz);\n\t    };\n\t    Tone.extend(Tone.GreaterThan, Tone.Signal);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThan} this\n\t\t */\n\t    Tone.GreaterThan.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._param.dispose();\n\t        this._param = null;\n\t        this._gtz.dispose();\n\t        this._gtz = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThan;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Return the absolute value of an incoming signal. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var signal = new Tone.Signal(-1);\n\t\t * var abs = new Tone.Abs();\n\t\t * signal.connect(abs);\n\t\t * //the output of abs is 1. \n\t\t */\n\t    Tone.Abs = function () {\n\t        /**\n\t\t\t *  @type {Tone.LessThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val === 0) {\n\t                return 0;\n\t            } else {\n\t                return Math.abs(val);\n\t            }\n\t        }, 127);\n\t    };\n\t    Tone.extend(Tone.Abs, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Abs} this\n\t\t */\n\t    Tone.Abs.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        return this;\n\t    };\n\t    return Tone.Abs;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n\t\t *         values in the NormalRange. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {NormalRange} modulus The modulus to apply.\n\t\t *  @example\n\t\t * var mod = new Tone.Modulo(0.2)\n\t\t * var sig = new Tone.Signal(0.5).connect(mod);\n\t\t * //mod outputs 0.1\n\t\t */\n\t    Tone.Modulo = function (modulus) {\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t *  the input signal and the modulus.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\t        /**\n\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t *  @type  {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = new Tone.Multiply();\n\t        /**\n\t\t\t *  and subtracted from the input signal\n\t\t\t *  @type  {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = this.output = new Tone.Subtract();\n\t        /**\n\t\t\t *  the modulus signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modSignal = new Tone.Signal(modulus);\n\t        //connections\n\t        this.input.fan(this._shaper, this._subtract);\n\t        this._modSignal.connect(this._multiply, 0, 0);\n\t        this._shaper.connect(this._multiply, 0, 1);\n\t        this._multiply.connect(this._subtract, 0, 1);\n\t        this._setWaveShaper(modulus);\n\t    };\n\t    Tone.extend(Tone.Modulo, Tone.SignalBase);\n\t    /**\n\t\t *  @param  {number}  mod  the modulus to apply\n\t\t *  @private\n\t\t */\n\t    Tone.Modulo.prototype._setWaveShaper = function (mod) {\n\t        this._shaper.setMap(function (val) {\n\t            var multiple = Math.floor((val + 0.0001) / mod);\n\t            return multiple;\n\t        });\n\t    };\n\t    /**\n\t\t * The modulus value.\n\t\t * @memberOf Tone.Modulo#\n\t\t * @type {NormalRange}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Modulo.prototype, 'value', {\n\t        get: function () {\n\t            return this._modSignal.value;\n\t        },\n\t        set: function (mod) {\n\t            this._modSignal.value = mod;\n\t            this._setWaveShaper(mod);\n\t        }\n\t    });\n\t    /**\n\t\t * clean up\n\t\t *  @returns {Tone.Modulo} this\n\t\t */\n\t    Tone.Modulo.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modSignal.dispose();\n\t        this._modSignal = null;\n\t        return this;\n\t    };\n\t    return Tone.Modulo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t\t *         See Tone.GainToAudio.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var a2g = new Tone.AudioToGain();\n\t\t */\n\t    Tone.AudioToGain = function () {\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return (x + 1) / 2;\n\t        });\n\t    };\n\t    Tone.extend(Tone.AudioToGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AudioToGain} this\n\t\t */\n\t    Tone.AudioToGain.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.AudioToGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Evaluate an expression at audio rate. <br><br>\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {string} expr the expression to generate\n\t\t *  @example\n\t\t * //adds the signals from input[0] and input[1].\n\t\t * var expr = new Tone.Expr(\"$0 + $1\");\n\t\t */\n\t    Tone.Expr = function () {\n\t        var expr = this._replacements(Array.prototype.slice.call(arguments));\n\t        var inputCount = this._parseInputs(expr);\n\t        /**\n\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nodes = [];\n\t        /**\n\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.input = new Array(inputCount);\n\t        //create a gain for each input\n\t        for (var i = 0; i < inputCount; i++) {\n\t            this.input[i] = this.context.createGain();\n\t        }\n\t        //parse the syntax tree\n\t        var tree = this._parseTree(expr);\n\t        //evaluate the results\n\t        var result;\n\t        try {\n\t            result = this._eval(tree);\n\t        } catch (e) {\n\t            this._disposeNodes();\n\t            throw new Error('Tone.Expr: Could evaluate expression: ' + expr);\n\t        }\n\t        /**\n\t\t\t *  The output node is the result of the expression\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this.output = result;\n\t    };\n\t    Tone.extend(Tone.Expr, Tone.SignalBase);\n\t    //some helpers to cut down the amount of code\n\t    function applyBinary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        self._eval(args[1]).connect(op, 0, 1);\n\t        return op;\n\t    }\n\t    function applyUnary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        return op;\n\t    }\n\t    function getNumber(arg) {\n\t        return arg ? parseFloat(arg) : undefined;\n\t    }\n\t    function literalNumber(arg) {\n\t        return arg && arg.args ? parseFloat(arg.args) : undefined;\n\t    }\n\t    /*\n\t\t *  the Expressions that Tone.Expr can parse.\n\t\t *\n\t\t *  each expression belongs to a group and contains a regexp \n\t\t *  for selecting the operator as well as that operators method\n\t\t *  \n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr._Expressions = {\n\t        //values\n\t        'value': {\n\t            'signal': {\n\t                regexp: /^\\d+\\.\\d+|^\\d+/,\n\t                method: function (arg) {\n\t                    var sig = new Tone.Signal(getNumber(arg));\n\t                    return sig;\n\t                }\n\t            },\n\t            'input': {\n\t                regexp: /^\\$\\d/,\n\t                method: function (arg, self) {\n\t                    return self.input[getNumber(arg.substr(1))];\n\t                }\n\t            }\n\t        },\n\t        //syntactic glue\n\t        'glue': {\n\t            '(': { regexp: /^\\(/ },\n\t            ')': { regexp: /^\\)/ },\n\t            ',': { regexp: /^,/ }\n\t        },\n\t        //functions\n\t        'func': {\n\t            'abs': {\n\t                regexp: /^abs/,\n\t                method: applyUnary.bind(this, Tone.Abs)\n\t            },\n\t            'mod': {\n\t                regexp: /^mod/,\n\t                method: function (args, self) {\n\t                    var modulus = literalNumber(args[1]);\n\t                    var op = new Tone.Modulo(modulus);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'pow': {\n\t                regexp: /^pow/,\n\t                method: function (args, self) {\n\t                    var exp = literalNumber(args[1]);\n\t                    var op = new Tone.Pow(exp);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'a2g': {\n\t                regexp: /^a2g/,\n\t                method: function (args, self) {\n\t                    var op = new Tone.AudioToGain();\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            }\n\t        },\n\t        //binary expressions\n\t        'binary': {\n\t            '+': {\n\t                regexp: /^\\+/,\n\t                precedence: 1,\n\t                method: applyBinary.bind(this, Tone.Add)\n\t            },\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                precedence: 1,\n\t                method: function (args, self) {\n\t                    //both unary and binary op\n\t                    if (args.length === 1) {\n\t                        return applyUnary(Tone.Negate, args, self);\n\t                    } else {\n\t                        return applyBinary(Tone.Subtract, args, self);\n\t                    }\n\t                }\n\t            },\n\t            '*': {\n\t                regexp: /^\\*/,\n\t                precedence: 0,\n\t                method: applyBinary.bind(this, Tone.Multiply)\n\t            }\n\t        },\n\t        //unary expressions\n\t        'unary': {\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                method: applyUnary.bind(this, Tone.Negate)\n\t            },\n\t            '!': {\n\t                regexp: /^\\!/,\n\t                method: applyUnary.bind(this, Tone.NOT)\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  @param   {string} expr the expression string\n\t\t *  @return  {number}      the input count\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseInputs = function (expr) {\n\t        var inputArray = expr.match(/\\$\\d/g);\n\t        var inputMax = 0;\n\t        if (inputArray !== null) {\n\t            for (var i = 0; i < inputArray.length; i++) {\n\t                var inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t                inputMax = Math.max(inputMax, inputNum);\n\t            }\n\t        }\n\t        return inputMax;\n\t    };\n\t    /**\n\t\t *  @param   {Array} args \tan array of arguments\n\t\t *  @return  {string} the results of the replacements being replaced\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._replacements = function (args) {\n\t        var expr = args.shift();\n\t        for (var i = 0; i < args.length; i++) {\n\t            expr = expr.replace(/\\%/i, args[i]);\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr) {\n\t            for (var type in Tone.Expr._Expressions) {\n\t                var group = Tone.Expr._Expressions[type];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            type: type,\n\t                            value: match[0],\n\t                            method: op.method\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  recursively parse the string expression into a syntax tree\n\t\t *  \n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseTree = function (expr) {\n\t        var lexer = this._tokenize(expr);\n\t        var isUndef = this.isUndef.bind(this);\n\t        function matchSyntax(token, syn) {\n\t            return !isUndef(token) && token.type === 'glue' && token.value === syn;\n\t        }\n\t        function matchGroup(token, groupName, prec) {\n\t            var ret = false;\n\t            var group = Tone.Expr._Expressions[groupName];\n\t            if (!isUndef(token)) {\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    if (op.regexp.test(token.value)) {\n\t                        if (!isUndef(prec)) {\n\t                            if (op.precedence === prec) {\n\t                                return true;\n\t                            }\n\t                        } else {\n\t                            return true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return ret;\n\t        }\n\t        function parseExpression(precedence) {\n\t            if (isUndef(precedence)) {\n\t                precedence = 5;\n\t            }\n\t            var expr;\n\t            if (precedence < 0) {\n\t                expr = parseUnary();\n\t            } else {\n\t                expr = parseExpression(precedence - 1);\n\t            }\n\t            var token = lexer.peek();\n\t            while (matchGroup(token, 'binary', precedence)) {\n\t                token = lexer.next();\n\t                expr = {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [\n\t                        expr,\n\t                        parseExpression(precedence - 1)\n\t                    ]\n\t                };\n\t                token = lexer.peek();\n\t            }\n\t            return expr;\n\t        }\n\t        function parseUnary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (matchGroup(token, 'unary')) {\n\t                token = lexer.next();\n\t                expr = parseUnary();\n\t                return {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [expr]\n\t                };\n\t            }\n\t            return parsePrimary();\n\t        }\n\t        function parsePrimary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (isUndef(token)) {\n\t                throw new SyntaxError('Tone.Expr: Unexpected termination of expression');\n\t            }\n\t            if (token.type === 'func') {\n\t                token = lexer.next();\n\t                return parseFunctionCall(token);\n\t            }\n\t            if (token.type === 'value') {\n\t                token = lexer.next();\n\t                return {\n\t                    method: token.method,\n\t                    args: token.value\n\t                };\n\t            }\n\t            if (matchSyntax(token, '(')) {\n\t                lexer.next();\n\t                expr = parseExpression();\n\t                token = lexer.next();\n\t                if (!matchSyntax(token, ')')) {\n\t                    throw new SyntaxError('Expected )');\n\t                }\n\t                return expr;\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Parse error, cannot process token ' + token.value);\n\t        }\n\t        function parseFunctionCall(func) {\n\t            var token, args = [];\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, '(')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ( in a function call \"' + func.value + '\"');\n\t            }\n\t            token = lexer.peek();\n\t            if (!matchSyntax(token, ')')) {\n\t                args = parseArgumentList();\n\t            }\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, ')')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ) in a function call \"' + func.value + '\"');\n\t            }\n\t            return {\n\t                method: func.method,\n\t                args: args,\n\t                name: name\n\t            };\n\t        }\n\t        function parseArgumentList() {\n\t            var token, expr, args = [];\n\t            while (true) {\n\t                expr = parseExpression();\n\t                if (isUndef(expr)) {\n\t                    // TODO maybe throw exception?\n\t                    break;\n\t                }\n\t                args.push(expr);\n\t                token = lexer.peek();\n\t                if (!matchSyntax(token, ',')) {\n\t                    break;\n\t                }\n\t                lexer.next();\n\t            }\n\t            return args;\n\t        }\n\t        return parseExpression();\n\t    };\n\t    /**\n\t\t *  recursively evaluate the expression tree\n\t\t *  @param   {Object} tree \n\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._eval = function (tree) {\n\t        if (!this.isUndef(tree)) {\n\t            var node = tree.method(tree.args, this);\n\t            this._nodes.push(node);\n\t            return node;\n\t        }\n\t    };\n\t    /**\n\t\t *  dispose all the nodes\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._disposeNodes = function () {\n\t        for (var i = 0; i < this._nodes.length; i++) {\n\t            var node = this._nodes[i];\n\t            if (this.isFunction(node.dispose)) {\n\t                node.dispose();\n\t            } else if (this.isFunction(node.disconnect)) {\n\t                node.disconnect();\n\t            }\n\t            node = null;\n\t            this._nodes[i] = null;\n\t        }\n\t        this._nodes = null;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t */\n\t    Tone.Expr.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._disposeNodes();\n\t    };\n\t    return Tone.Expr;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var eqPowGain = new Tone.EqualPowerGain();\n\t\t */\n\t    Tone.EqualPowerGain = function () {\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (Math.abs(val) < 0.001) {\n\t                //should output 0 when input is 0\n\t                return 0;\n\t            } else {\n\t                return this.equalPowerScale(val);\n\t            }\n\t        }.bind(this), 4096);\n\t    };\n\t    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EqualPowerGain} this\n\t\t */\n\t    Tone.EqualPowerGain.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._eqPower.dispose();\n\t        this._eqPower = null;\n\t        return this;\n\t    };\n\t    return Tone.EqualPowerGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * @class  Tone.Crossfade provides equal power fading between two inputs. \n\t\t *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n\t\t *\n\t\t * @constructor\n\t\t * @extends {Tone}\n\t\t * @param {NormalRange} [initialFade=0.5]\n\t\t * @example\n\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t * //connect effect A to crossfade from\n\t\t * //effect output 0 to crossfade input 0\n\t\t * effectA.connect(crossFade, 0, 0);\n\t\t * //connect effect B to crossfade from\n\t\t * //effect output 0 to crossfade input 1\n\t\t * effectB.connect(crossFade, 0, 1);\n\t\t * crossFade.fade.value = 0;\n\t\t * // ^ only effectA is output\n\t\t * crossFade.fade.value = 1;\n\t\t * // ^ only effectB is output\n\t\t * crossFade.fade.value = 0.5;\n\t\t * // ^ the two signals are mixed equally. \n\t\t */\n\t    Tone.CrossFade = function (initialFade) {\n\t        this.createInsOuts(2, 1);\n\t        /**\n\t\t\t *  Alias for <code>input[0]</code>. \n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.a = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Alias for <code>input[1]</code>. \n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.b = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t * \tThe mix between the two inputs. A fade value of 0\n\t\t\t * \twill output 100% <code>input[0]</code> and \n\t\t\t * \ta value of 1 will output 100% <code>input[1]</code>. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.fade = new Tone.Signal(this.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerA = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerB = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  invert the incoming signal\n\t\t\t *  @private\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this._invert = new Tone.Expr('1 - $0');\n\t        //connections\n\t        this.a.connect(this.output);\n\t        this.b.connect(this.output);\n\t        this.fade.chain(this._equalPowerB, this.b.gain);\n\t        this.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t        this._readOnly('fade');\n\t    };\n\t    Tone.extend(Tone.CrossFade);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.CrossFade} this\n\t\t */\n\t    Tone.CrossFade.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('fade');\n\t        this._equalPowerA.dispose();\n\t        this._equalPowerA = null;\n\t        this._equalPowerB.dispose();\n\t        this._equalPowerB = null;\n\t        this.fade.dispose();\n\t        this.fade = null;\n\t        this._invert.dispose();\n\t        this._invert = null;\n\t        this.a.dispose();\n\t        this.a = null;\n\t        this.b.dispose();\n\t        this.b = null;\n\t        return this;\n\t    };\n\t    return Tone.CrossFade;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Filter is a filter which allows for all of the same native methods\n\t\t *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface). \n\t\t *          Tone.Filter has the added ability to set the filter rolloff at -12 \n\t\t *          (default), -24 and -48. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n\t\t *  @param {string=} type The type of filter.\n\t\t *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n\t\t *                            3 choices: -12, -24, and -48\n\t\t *  @example\n\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t */\n\t    Tone.Filter = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'rolloff'\n\t        ], Tone.Filter.defaults);\n\t        /**\n\t\t\t *  the filter(s)\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filters = [];\n\t        /**\n\t\t\t *  The cutoff frequency of the filter. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune parameter\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(0, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The gain of the filter, only used in certain filter types\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Signal({\n\t            'value': options.gain,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The Q or Quality of the filter\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        /**\n\t\t\t *  the type of the filter\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  the rolloff value of the filter\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rolloff = options.rolloff;\n\t        //set the rolloff;\n\t        this.rolloff = options.rolloff;\n\t        this._readOnly([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Filter);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Filter.defaults = {\n\t        'type': 'lowpass',\n\t        'frequency': 350,\n\t        'rolloff': -12,\n\t        'Q': 1,\n\t        'gain': 0\n\t    };\n\t    /**\n\t\t * The type of the filter. Types: \"lowpass\", \"highpass\", \n\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\". \n\t\t * @memberOf Tone.Filter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var types = [\n\t                'lowpass',\n\t                'highpass',\n\t                'bandpass',\n\t                'lowshelf',\n\t                'highshelf',\n\t                'notch',\n\t                'allpass',\n\t                'peaking'\n\t            ];\n\t            if (types.indexOf(type) === -1) {\n\t                throw new TypeError('Tone.Filter: invalid type ' + type);\n\t            }\n\t            this._type = type;\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The rolloff of the filter which is the drop in db\n\t\t * per octave. Implemented internally by cascading filters.\n\t\t * Only accepts the values -12, -24, -48 and -96.\n\t\t * @memberOf Tone.Filter#\n\t\t * @type {number}\n\t\t * @name rolloff\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {\n\t        get: function () {\n\t            return this._rolloff;\n\t        },\n\t        set: function (rolloff) {\n\t            rolloff = parseInt(rolloff, 10);\n\t            var possibilities = [\n\t                -12,\n\t                -24,\n\t                -48,\n\t                -96\n\t            ];\n\t            var cascadingCount = possibilities.indexOf(rolloff);\n\t            //check the rolloff is valid\n\t            if (cascadingCount === -1) {\n\t                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');\n\t            }\n\t            cascadingCount += 1;\n\t            this._rolloff = rolloff;\n\t            //first disconnect the filters and throw them away\n\t            this.input.disconnect();\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].disconnect();\n\t                this._filters[i] = null;\n\t            }\n\t            this._filters = new Array(cascadingCount);\n\t            for (var count = 0; count < cascadingCount; count++) {\n\t                var filter = this.context.createBiquadFilter();\n\t                filter.type = this._type;\n\t                this.frequency.connect(filter.frequency);\n\t                this.detune.connect(filter.detune);\n\t                this.Q.connect(filter.Q);\n\t                this.gain.connect(filter.gain);\n\t                this._filters[count] = filter;\n\t            }\n\t            //connect them up\n\t            var connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t            this.connectSeries.apply(this, connectionChain);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @return {Tone.Filter} this\n\t\t */\n\t    Tone.Filter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._filters.length; i++) {\n\t            this._filters[i].disconnect();\n\t            this._filters[i] = null;\n\t        }\n\t        this._filters = null;\n\t        this._writable([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.Q.dispose();\n\t        this.frequency = null;\n\t        this.Q = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Filter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t *         with two crossover frequency controls. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n\t\t *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n\t\t */\n\t    Tone.MultibandSplit = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ], Tone.MultibandSplit.defaults);\n\t        /**\n\t\t\t *  the input\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = new Tone.Gain();\n\t        /**\n\t\t\t *  the outputs\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Array(3);\n\t        /**\n\t\t\t *  The low band. Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  the lower filter of the mid band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowMidFilter = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The mid band output. Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  The high band output. Alias for <code>output[2]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.high = this.output[2] = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The quality of all the filters\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        this.input.fan(this.low, this.high);\n\t        this.input.chain(this._lowMidFilter, this.mid);\n\t        //the frequency control signal\n\t        this.lowFrequency.connect(this.low.frequency);\n\t        this.lowFrequency.connect(this._lowMidFilter.frequency);\n\t        this.highFrequency.connect(this.mid.frequency);\n\t        this.highFrequency.connect(this.high.frequency);\n\t        //the Q value\n\t        this.Q.connect(this.low.Q);\n\t        this.Q.connect(this._lowMidFilter.Q);\n\t        this.Q.connect(this.mid.Q);\n\t        this.Q.connect(this.high.Q);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandSplit);\n\t    /**\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandSplit.defaults = {\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500,\n\t        'Q': 1\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MultibandSplit} this\n\t\t */\n\t    Tone.MultibandSplit.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.low = null;\n\t        this._lowMidFilter.dispose();\n\t        this._lowMidFilter = null;\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.high.dispose();\n\t        this.high = null;\n\t        this.lowFrequency.dispose();\n\t        this.lowFrequency = null;\n\t        this.highFrequency.dispose();\n\t        this.highFrequency = null;\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n\t\t *         well as the low and high crossover frequencies.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  \n\t\t *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n\t\t *  @param {Decibels} [midLevel] The gain applied to the mid.\n\t\t *  @param {Decibels} [highLevel] The gain applied to the high.\n\t\t *  @example\n\t\t * var eq = new Tone.EQ3(-10, 3, -20);\n\t\t */\n\t    Tone.EQ3 = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'low',\n\t            'mid',\n\t            'high'\n\t        ], Tone.EQ3.defaults);\n\t        /**\n\t\t\t *  the output node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the multiband split\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multibandSplit = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  The gain for the lower signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\t        /**\n\t\t\t *  The gain for the mid signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Tone.Gain}\n\t\t\t * @private\n\t\t\t */\n\t        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the low part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.low = this._lowGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the mid part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.mid = this._midGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.high = this._highGain.gain;\n\t        /**\n\t\t\t *  The Q value for all of the filters. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = this._multibandSplit.Q;\n\t        /**\n\t\t\t *  The low/mid crossover frequency. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._multibandSplit.lowFrequency;\n\t        /**\n\t\t\t *  The mid/high crossover frequency. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._multibandSplit.highFrequency;\n\t        //the frequency bands\n\t        this._multibandSplit.low.chain(this._lowGain, this.output);\n\t        this._multibandSplit.mid.chain(this._midGain, this.output);\n\t        this._multibandSplit.high.chain(this._highGain, this.output);\n\t        this._readOnly([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.EQ3);\n\t    /**\n\t\t *  the default values\n\t\t */\n\t    Tone.EQ3.defaults = {\n\t        'low': 0,\n\t        'mid': 0,\n\t        'high': 0,\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EQ3} this\n\t\t */\n\t    Tone.EQ3.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t        this._multibandSplit.dispose();\n\t        this._multibandSplit = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        this._lowGain.dispose();\n\t        this._lowGain = null;\n\t        this._midGain.dispose();\n\t        this._midGain = null;\n\t        this._highGain.dispose();\n\t        this._highGain = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.EQ3;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t *          Scales a NormalRange input to between\n\t\t *          outputMin and outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @example\n\t\t * var scale = new Tone.Scale(50, 100);\n\t\t * var signal = new Tone.Signal(0.5).connect(scale);\n\t\t * //the output of scale equals 75\n\t\t */\n\t    Tone.Scale = function (outputMin, outputMax) {\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMin = this.defaultArg(outputMin, 0);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMax = this.defaultArg(outputMax, 1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._add = this.output = new Tone.Add(0);\n\t        this._scale.connect(this._add);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Scale, Tone.SignalBase);\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'min', {\n\t        get: function () {\n\t            return this._outputMin;\n\t        },\n\t        set: function (min) {\n\t            this._outputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'max', {\n\t        get: function () {\n\t            return this._outputMax;\n\t        },\n\t        set: function (max) {\n\t            this._outputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Scale.prototype._setRange = function () {\n\t        this._add.value = this._outputMin;\n\t        this._scale.value = this._outputMax - this._outputMin;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Scale} this\n\t\t */\n\t    Tone.Scale.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._add.dispose();\n\t        this._add = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        return this;\n\t    };\n\t    return Tone.Scale;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t *          Scales a NormalRange value [0,1] exponentially\n\t\t *          to the output range of outputMin to outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n\t\t *  @example\n\t\t * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n\t\t * var signal = new Tone.Signal(0.5).connect(scaleExp);\n\t\t */\n\t    Tone.ScaleExp = function (outputMin, outputMax, exponent) {\n\t        /**\n\t\t\t *  scale the input to the output range\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.input = new Tone.Pow(this.defaultArg(exponent, 2));\n\t        this._exp.connect(this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaleExp, Tone.SignalBase);\n\t    /**\n\t\t * Instead of interpolating linearly between the <code>min</code> and \n\t\t * <code>max</code> values, setting the exponent will interpolate between\n\t\t * the two values with an exponential curve. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.ScaleExp} this\n\t\t */\n\t    Tone.ScaleExp.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaleExp;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface). \n\t\t *  @extends {Tone}\n\t\t *  @param {Time=} delayTime The delay applied to the incoming signal.\n\t\t *  @param {Time=} maxDelay The maximum delay time. \n\t\t */\n\t    Tone.Delay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'maxDelay'\n\t        ], Tone.Delay.defaults);\n\t        /**\n\t\t\t *  The native delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = this.input = this.output = this.context.createDelay(this.toSeconds(options.maxDelay));\n\t        /**\n\t\t\t *  The amount of time the incoming signal is\n\t\t\t *  delayed. \n\t\t\t *  @type {Tone.Param}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Param({\n\t            'param': this._delayNode.delayTime,\n\t            'units': Tone.Type.Time,\n\t            'value': options.delayTime\n\t        });\n\t        this._readOnly('delayTime');\n\t    };\n\t    Tone.extend(Tone.Delay);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Delay.defaults = {\n\t        'maxDelay': 1,\n\t        'delayTime': 0\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Delay}  this\n\t\t */\n\t    Tone.Delay.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._delayNode.disconnect();\n\t        this._delayNode = null;\n\t        this._writable('delayTime');\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.Delay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Comb filters are basic building blocks for physical modeling. Read more\n\t\t *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the filter. \n\t\t *  @param {NormalRange=} resonance The amount of feedback the filter has. \n\t\t */\n\t    Tone.FeedbackCombFilter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'resonance'\n\t        ], Tone.FeedbackCombFilter.defaults);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay of the comb filter. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the feedback node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        this._delay.chain(this._feedback, this._delay);\n\t        this._readOnly([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FeedbackCombFilter);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackCombFilter} this\n\t\t */\n\t    Tone.FeedbackCombFilter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._feedback.dispose();\n\t        this._feedback = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Follower is a  crude envelope follower which will follow \n\t\t *          the amplitude of an incoming signal. \n\t\t *          Take care with small (< 0.02) attack or decay values \n\t\t *          as follower has some ripple which is exaggerated\n\t\t *          at these values. Read more about envelope followers (also known \n\t\t *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Time|Object} [attack] The rate at which the follower rises.\n\t\t *  @param {Time=} release The rate at which the folower falls. \n\t\t *  @example\n\t\t * var follower = new Tone.Follower(0.2, 0.4);\n\t\t */\n\t    Tone.Follower = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'release'\n\t        ], Tone.Follower.defaults);\n\t        /**\n\t\t\t *  @type {Tone.Abs}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = new Tone.Abs();\n\t        /**\n\t\t\t *  the lowpass filter which smooths the input\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filter = this.context.createBiquadFilter();\n\t        this._filter.type = 'lowpass';\n\t        this._filter.frequency.value = 0;\n\t        this._filter.Q.value = -100;\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequencyValues = new Tone.WaveShaper();\n\t        /**\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = new Tone.Subtract();\n\t        /**\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = new Tone.Delay(this.blockTime);\n\t        /**\n\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = new Tone.Multiply(10000);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._attack = options.attack;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._release = options.release;\n\t        //the smoothed signal to get the values\n\t        this.input.chain(this._abs, this._filter, this.output);\n\t        //the difference path\n\t        this._abs.connect(this._sub, 0, 1);\n\t        this._filter.chain(this._delay, this._sub);\n\t        //threshold the difference and use the thresh to set the frequency\n\t        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t        //set the attack and release values in the table\n\t        this._setAttackRelease(this._attack, this._release);\n\t    };\n\t    Tone.extend(Tone.Follower);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Follower.defaults = {\n\t        'attack': 0.05,\n\t        'release': 0.5\n\t    };\n\t    /**\n\t\t *  sets the attack and release times in the wave shaper\n\t\t *  @param   {Time} attack  \n\t\t *  @param   {Time} release \n\t\t *  @private\n\t\t */\n\t    Tone.Follower.prototype._setAttackRelease = function (attack, release) {\n\t        var minTime = this.blockTime;\n\t        attack = Tone.Time(attack).toFrequency();\n\t        release = Tone.Time(release).toFrequency();\n\t        attack = Math.max(attack, minTime);\n\t        release = Math.max(release, minTime);\n\t        this._frequencyValues.setMap(function (val) {\n\t            if (val <= 0) {\n\t                return attack;\n\t            } else {\n\t                return release;\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t * The attack time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'attack', {\n\t        get: function () {\n\t            return this._attack;\n\t        },\n\t        set: function (attack) {\n\t            this._attack = attack;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t * The release time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'release', {\n\t        get: function () {\n\t            return this._release;\n\t        },\n\t        set: function (release) {\n\t            this._release = release;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t *  Borrows the connect method from Signal so that the output can be used\n\t\t *  as a Tone.Signal control signal.\n\t\t *  @function\n\t\t */\n\t    Tone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t\t *  dispose\n\t\t *  @returns {Tone.Follower} this\n\t\t */\n\t    Tone.Follower.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._filter.disconnect();\n\t        this._filter = null;\n\t        this._frequencyValues.disconnect();\n\t        this._frequencyValues = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this._sub.disconnect();\n\t        this._sub = null;\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.Follower;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ScaledEnvelop is an envelope which can be scaled \n\t\t *         to any range. It's useful for applying an envelope \n\t\t *         to a frequency or any other non-NormalRange signal \n\t\t *         parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"min\" : 200,\n\t\t *  \t\"max\" : 2000\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.ScaledEnvelope = function () {\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        Tone.Envelope.call(this, options);\n\t        options = this.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\t        /** \n\t\t\t *  scale the incoming signal by an exponent\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.output = new Tone.Pow(options.exponent);\n\t        /**\n\t\t\t *  scale the signal to the desired range\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(options.min, options.max);\n\t        this._sig.chain(this._exp, this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.ScaledEnvelope.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'exponent': 1\n\t    };\n\t    /**\n\t\t * The envelope's min output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's max output value. In other words, the value\n\t\t * at the peak of the attack portion of the envelope. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.ScaledEnvelope} this\n\t\t */\n\t    Tone.ScaledEnvelope.prototype.dispose = function () {\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaledEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n\t\t *         it's got a `baseFrequency` and `octaves` parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var env = new Tone.FrequencyEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"baseFrequency\" : \"C2\",\n\t\t *  \t\"octaves\" : 4\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.FrequencyEnvelope = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        Tone.ScaledEnvelope.call(this, options);\n\t        options = this.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\t        /**\n\t\t\t *  Stores the octave value\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        //setup\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.FrequencyEnvelope.defaults = {\n\t        'baseFrequency': 200,\n\t        'octaves': 4,\n\t        'exponent': 2\n\t    };\n\t    /**\n\t\t * The envelope's mininum output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = this.toFrequency(min);\n\t            //also update the octaves\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The number of octaves above the baseFrequency that the\n\t\t * envelope will scale to.\n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FrequencyEnvelope} this\n\t\t */\n\t    Tone.FrequencyEnvelope.prototype.dispose = function () {\n\t        Tone.ScaledEnvelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.FrequencyEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Gate only passes a signal through when the incoming \n\t\t *          signal exceeds a specified threshold. To do this, Gate uses \n\t\t *          a Tone.Follower to follow the amplitude of the incoming signal. \n\t\t *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Decibels|Object} [threshold] The threshold above which the gate will open. \n\t\t *  @param {Time=} attack The follower's attack time\n\t\t *  @param {Time=} release The follower's release time\n\t\t *  @example\n\t\t * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n\t\t * var mic = new Tone.Microphone().connect(gate);\n\t\t * //the gate will only pass through the incoming \n\t\t * //signal when it's louder than -30db\n\t\t */\n\t    Tone.Gate = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'threshold',\n\t            'attack',\n\t            'release'\n\t        ], Tone.Gate.defaults);\n\t        /**\n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this._follower = new Tone.Follower(options.attack, options.release);\n\t        /**\n\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gt = new Tone.GreaterThan(this.dbToGain(options.threshold));\n\t        //the connections\n\t        this.input.connect(this.output);\n\t        //the control signal\n\t        this.input.chain(this._gt, this._follower, this.output.gain);\n\t    };\n\t    Tone.extend(Tone.Gate);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Gate.defaults = {\n\t        'attack': 0.1,\n\t        'release': 0.1,\n\t        'threshold': -40\n\t    };\n\t    /**\n\t\t * The threshold of the gate in decibels\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Decibels}\n\t\t * @name threshold\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'threshold', {\n\t        get: function () {\n\t            return this.gainToDb(this._gt.value);\n\t        },\n\t        set: function (thresh) {\n\t            this._gt.value = this.dbToGain(thresh);\n\t        }\n\t    });\n\t    /**\n\t\t * The attack speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'attack', {\n\t        get: function () {\n\t            return this._follower.attack;\n\t        },\n\t        set: function (attackTime) {\n\t            this._follower.attack = attackTime;\n\t        }\n\t    });\n\t    /**\n\t\t * The release speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'release', {\n\t        get: function () {\n\t            return this._follower.release;\n\t        },\n\t        set: function (releaseTime) {\n\t            this._follower.release = releaseTime;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Gate} this\n\t\t */\n\t    Tone.Gate.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._follower.dispose();\n\t        this._gt.dispose();\n\t        this._follower = null;\n\t        this._gt = null;\n\t        return this;\n\t    };\n\t    return Tone.Gate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t\t *          and <code>getStateAtTime(time)</code>.\n\t\t *\n\t\t *  @extends {Tone.Timeline}\n\t\t *  @param {String} initial The initial state of the TimelineState. \n\t\t *                          Defaults to <code>undefined</code>\n\t\t */\n\t    Tone.TimelineState = function (initial) {\n\t        Tone.Timeline.call(this);\n\t        /**\n\t\t\t *  The initial state\n\t\t\t *  @private\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this._initial = initial;\n\t    };\n\t    Tone.extend(Tone.TimelineState, Tone.Timeline);\n\t    /**\n\t\t *  Returns the scheduled state scheduled before or at\n\t\t *  the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t */\n\t    Tone.TimelineState.prototype.getStateAtTime = function (time) {\n\t        var event = this.getEvent(time);\n\t        if (event !== null) {\n\t            return event.state;\n\t        } else {\n\t            return this._initial;\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the scheduled state scheduled before or at\n\t\t *  the given time.\n\t\t *  @param  {String}  state The name of the state to set.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t */\n\t    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {\n\t        this.addEvent({\n\t            'state': state,\n\t            'time': time\n\t        });\n\t    };\n\t    return Tone.TimelineState;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Emitter gives classes which extend it\n\t\t *         the ability to listen for and emit events. \n\t\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t\t *         MIT (c) 2011 Jerome Etienne.\n\t\t *         \n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Emitter = function () {\n\t        /**\n\t\t\t *  Contains all of the events.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t        this._events = {};\n\t    };\n\t    Tone.extend(Tone.Emitter);\n\t    /**\n\t\t *  Bind a callback to a specific event.\n\t\t *  @param  {String}    event     The name of the event to listen for.\n\t\t *  @param  {Function}  callback  The callback to invoke when the\n\t\t *                                event is emitted\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.on = function (event, callback) {\n\t        //split the event\n\t        var events = event.split(/\\W+/);\n\t        for (var i = 0; i < events.length; i++) {\n\t            var eventName = events[i];\n\t            if (!this._events.hasOwnProperty(eventName)) {\n\t                this._events[eventName] = [];\n\t            }\n\t            this._events[eventName].push(callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove the event listener.\n\t\t *  @param  {String}    event     The event to stop listening to.\n\t\t *  @param  {Function=}  callback  The callback which was bound to \n\t\t *                                the event with Tone.Emitter.on.\n\t\t *                                If no callback is given, all callbacks\n\t\t *                                events are removed.\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.off = function (event, callback) {\n\t        var events = event.split(/\\W+/);\n\t        for (var ev = 0; ev < events.length; ev++) {\n\t            event = events[ev];\n\t            if (this._events.hasOwnProperty(event)) {\n\t                if (Tone.prototype.isUndef(callback)) {\n\t                    this._events[event] = [];\n\t                } else {\n\t                    var eventList = this._events[event];\n\t                    for (var i = 0; i < eventList.length; i++) {\n\t                        if (eventList[i] === callback) {\n\t                            eventList.splice(i, 1);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Invoke all of the callbacks bound to the event\n\t\t *  with any arguments passed in. \n\t\t *  @param  {String}  event  The name of the event.\n\t\t *  @param {*...} args The arguments to pass to the functions listening.\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.emit = function (event) {\n\t        if (this._events) {\n\t            var args = Array.prototype.slice.call(arguments, 1);\n\t            if (this._events.hasOwnProperty(event)) {\n\t                var eventList = this._events[event];\n\t                for (var i = 0, len = eventList.length; i < len; i++) {\n\t                    eventList[i].apply(this, args);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add Emitter functions (on/off/emit) to the object\n\t\t *  @param  {Object|Function}  object  The object or class to extend.\n\t\t */\n\t    Tone.Emitter.mixin = function (object) {\n\t        var functions = [\n\t            'on',\n\t            'off',\n\t            'emit'\n\t        ];\n\t        object._events = {};\n\t        for (var i = 0; i < functions.length; i++) {\n\t            var func = functions[i];\n\t            var emitterFunc = Tone.Emitter.prototype[func];\n\t            object[func] = emitterFunc;\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Emitter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A sample accurate clock which provides a callback at the given rate. \n\t\t *          While the callback is not sample-accurate (it is still susceptible to\n\t\t *          loose JS timing), the time passed in as the argument to the callback\n\t\t *          is precise. For most applications, it is better to use Tone.Transport\n\t\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t\t *\n\t\t * \t@constructor\n\t\t *  @extends {Tone.Emitter}\n\t\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t\t * \t@param {Frequency} frequency The rate of the callback\n\t\t * \t@example\n\t\t * //the callback will be invoked approximately once a second\n\t\t * //and will print the time exactly once a second apart.\n\t\t * var clock = new Tone.Clock(function(time){\n\t\t * \tconsole.log(time);\n\t\t * }, 1);\n\t\t */\n\t    Tone.Clock = function () {\n\t        Tone.Emitter.call(this);\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'frequency'\n\t        ], Tone.Clock.defaults);\n\t        /**\n\t\t\t *  The callback function to invoke at the scheduled tick.\n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The internal lookahead value\n\t\t\t *  @type {Number|String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lookAhead = 'auto';\n\t        /**\n\t\t\t *  The lookahead value which was automatically\n\t\t\t *  computed using a time-based averaging.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._computedLookAhead = UPDATE_RATE / 1000;\n\t        /**\n\t\t\t *  The next time the callback is scheduled.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nextTick = -1;\n\t        /**\n\t\t\t *  The last time the callback was invoked\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lastUpdate = -1;\n\t        /**\n\t\t\t *  The rate the callback function should be invoked. \n\t\t\t *  @type  {BPM}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.TimelineSignal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The number of times the callback was invoked. Starts counting at 0\n\t\t\t *  and increments after the callback was invoked. \n\t\t\t *  @type {Ticks}\n\t\t\t *  @readOnly\n\t\t\t */\n\t        this.ticks = 0;\n\t        /**\n\t\t\t *  The state timeline\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The loop function bound to its context. \n\t\t\t *  This is necessary to remove the event in the end.\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._boundLoop = this._loop.bind(this);\n\t        //bind a callback to the worker thread\n\t        Tone.Clock._worker.addEventListener('message', this._boundLoop);\n\t        this._readOnly('frequency');\n\t    };\n\t    Tone.extend(Tone.Clock, Tone.Emitter);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Clock.defaults = {\n\t        'callback': Tone.noOp,\n\t        'frequency': 1,\n\t        'lookAhead': 'auto'\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Clock#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Clock.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getStateAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  The time which the clock will schedule events in advance\n\t\t *  of the current time. Scheduling notes in advance improves\n\t\t *  performance and decreases the chance for clicks caused\n\t\t *  by scheduling events in the past. If set to \"auto\",\n\t\t *  this value will be automatically computed based on the \n\t\t *  rate of the update (~0.02 seconds). Larger values\n\t\t *  will yeild better performance, but at the cost of latency. \n\t\t *  Values less than 0.016 are not recommended.\n\t\t *  @type {Number|String}\n\t\t *  @memberOf Tone.Clock#\n\t\t *  @name lookAhead\n\t\t */\n\t    Object.defineProperty(Tone.Clock.prototype, 'lookAhead', {\n\t        get: function () {\n\t            return this._lookAhead;\n\t        },\n\t        set: function (val) {\n\t            if (val === 'auto') {\n\t                this._lookAhead = 'auto';\n\t            } else {\n\t                this._lookAhead = this.toSeconds(val);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the clock at the given time. Optionally pass in an offset\n\t\t *  of where to start the tick counter from.\n\t\t *  @param  {Time}  time    The time the clock should start\n\t\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t\t *  @return  {Tone.Clock}  this\n\t\t */\n\t    Tone.Clock.prototype.start = function (time, offset) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getStateAtTime(time) !== Tone.State.Started) {\n\t            this._state.addEvent({\n\t                'state': Tone.State.Started,\n\t                'time': time,\n\t                'offset': offset\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t *  @example\n\t\t * clock.stop();\n\t\t */\n\t    Tone.Clock.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the clock. Pausing does not reset the tick counter.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.pause = function (time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Paused, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The scheduling loop.\n\t\t *  @param  {Number}  time  The current page time starting from 0\n\t\t *                          when the page was loaded.\n\t\t *  @private\n\t\t */\n\t    Tone.Clock.prototype._loop = function () {\n\t        //compute the look ahead\n\t        if (this._lookAhead === 'auto') {\n\t            var time = this.now();\n\t            if (this._lastUpdate !== -1) {\n\t                var diff = time - this._lastUpdate;\n\t                //max size on the diff\n\t                diff = Math.min(10 * UPDATE_RATE / 1000, diff);\n\t                //averaging\n\t                this._computedLookAhead = (9 * this._computedLookAhead + diff) / 10;\n\t            }\n\t            this._lastUpdate = time;\n\t        } else {\n\t            this._computedLookAhead = this._lookAhead;\n\t        }\n\t        //get the frequency value to compute the value of the next loop\n\t        var now = this.now();\n\t        //if it's started\n\t        var lookAhead = this._computedLookAhead * 2;\n\t        var event = this._state.getEvent(now + lookAhead);\n\t        var state = Tone.State.Stopped;\n\t        if (event) {\n\t            state = event.state;\n\t            //if it was stopped and now started\n\t            if (this._nextTick === -1 && state === Tone.State.Started) {\n\t                this._nextTick = event.time;\n\t                if (!this.isUndef(event.offset)) {\n\t                    this.ticks = event.offset;\n\t                }\n\t                this.emit('start', event.time, this.ticks);\n\t            }\n\t        }\n\t        if (state === Tone.State.Started) {\n\t            while (now + lookAhead > this._nextTick) {\n\t                var tickTime = this._nextTick;\n\t                this._nextTick += 1 / this.frequency.getValueAtTime(this._nextTick);\n\t                this.callback(tickTime);\n\t                this.ticks++;\n\t            }\n\t        } else if (state === Tone.State.Stopped) {\n\t            if (event && this.ticks !== 0) {\n\t                this.emit('stop', event.time);\n\t            }\n\t            this._nextTick = -1;\n\t            this.ticks = 0;\n\t        } else if (state === Tone.State.Paused) {\n\t            if (this._nextTick !== -1) {\n\t                this.emit('pause', event.time);\n\t            }\n\t            this._nextTick = -1;\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the scheduled state at the given time.\n\t\t *  @param  {Time}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t *  @example\n\t\t * clock.start(\"+0.1\");\n\t\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t\t */\n\t    Tone.Clock.prototype.getStateAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        return this._state.getStateAtTime(time);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        Tone.TimelineState.prototype.dispose.call(this);\n\t        Tone.Clock._worker.removeEventListener('message', this._boundLoop);\n\t        this._writable('frequency');\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._boundLoop = null;\n\t        this._nextTick = Infinity;\n\t        this.callback = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    //URL Shim\n\t    window.URL = window.URL || window.webkitURL;\n\t    /**\n\t\t *  The update rate in Milliseconds\n\t\t *  @const\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t    var UPDATE_RATE = 20;\n\t    /**\n\t\t *  The script which runs in a web worker\n\t\t *  @type {Blob}\n\t\t *  @private\n\t\t */\n\t    var blob = new Blob(['setInterval(function(){self.postMessage(\\'tick\\')}, ' + UPDATE_RATE + ')']);\n\t    /**\n\t\t *  Create a blob url from the Blob\n\t\t *  @type  {URL}\n\t\t *  @private\n\t\t */\n\t    var blobUrl = URL.createObjectURL(blob);\n\t    /**\n\t\t *  The Worker which generates a regular callback\n\t\t *  @type {Worker}\n\t\t *  @private\n\t\t *  @static\n\t\t */\n\t    Tone.Clock._worker = new Worker(blobUrl);\n\t    return Tone.Clock;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Similar to Tone.Timeline, but all events represent\n\t\t *         intervals with both \"time\" and \"duration\" times. The \n\t\t *         events are placed in a tree structure optimized\n\t\t *         for querying an intersection point with the timeline\n\t\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t\t *         to represent the data.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.IntervalTimeline = function () {\n\t        /**\n\t\t\t *  The root node of the inteval tree\n\t\t\t *  @type  {IntervalNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._root = null;\n\t        /**\n\t\t\t *  Keep track of the length of the timeline.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._length = 0;\n\t    };\n\t    Tone.extend(Tone.IntervalTimeline);\n\t    /**\n\t\t *  The event to add to the timeline. All events must \n\t\t *  have a time and duration value\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.addEvent = function (event) {\n\t        if (this.isUndef(event.time) || this.isUndef(event.duration)) {\n\t            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');\n\t        }\n\t        var node = new IntervalNode(event.time, event.time + event.duration, event);\n\t        if (this._root === null) {\n\t            this._root = node;\n\t        } else {\n\t            this._root.insert(node);\n\t        }\n\t        this._length++;\n\t        // Restructure tree to be balanced\n\t        while (node !== null) {\n\t            node.updateHeight();\n\t            node.updateMax();\n\t            this._rebalance(node);\n\t            node = node.parent;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event to remove from the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.removeEvent = function (event) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(event.time, results);\n\t            for (var i = 0; i < results.length; i++) {\n\t                var node = results[i];\n\t                if (node.event === event) {\n\t                    this._removeNode(node);\n\t                    this._length--;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.IntervalTimeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Remove events whose time time is after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.cancel = function (after) {\n\t        this.forEachAfter(after, function (event) {\n\t            this.removeEvent(event);\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the root node as the given node\n\t\t *  @param {IntervalNode} node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._setRoot = function (node) {\n\t        this._root = node;\n\t        if (this._root !== null) {\n\t            this._root.parent = null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Replace the references to the node in the node's parent\n\t\t *  with the replacement node.\n\t\t *  @param  {IntervalNode}  node        \n\t\t *  @param  {IntervalNode}  replacement \n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n\t        if (node.parent !== null) {\n\t            if (node.isLeftChild()) {\n\t                node.parent.left = replacement;\n\t            } else {\n\t                node.parent.right = replacement;\n\t            }\n\t            this._rebalance(node.parent);\n\t        } else {\n\t            this._setRoot(replacement);\n\t        }\n\t    };\n\t    /**\n\t\t *  Remove the node from the tree and replace it with \n\t\t *  a successor which follows the schema.\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._removeNode = function (node) {\n\t        if (node.left === null && node.right === null) {\n\t            this._replaceNodeInParent(node, null);\n\t        } else if (node.right === null) {\n\t            this._replaceNodeInParent(node, node.left);\n\t        } else if (node.left === null) {\n\t            this._replaceNodeInParent(node, node.right);\n\t        } else {\n\t            var balance = node.getBalance();\n\t            var replacement, temp;\n\t            if (balance > 0) {\n\t                if (node.left.right === null) {\n\t                    replacement = node.left;\n\t                    replacement.right = node.right;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.left.right;\n\t                    while (replacement.right !== null) {\n\t                        replacement = replacement.right;\n\t                    }\n\t                    replacement.parent.right = replacement.left;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            } else {\n\t                if (node.right.left === null) {\n\t                    replacement = node.right;\n\t                    replacement.left = node.left;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.right.left;\n\t                    while (replacement.left !== null) {\n\t                        replacement = replacement.left;\n\t                    }\n\t                    replacement.parent = replacement.parent;\n\t                    replacement.parent.left = replacement.right;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            }\n\t            if (node.parent !== null) {\n\t                if (node.isLeftChild()) {\n\t                    node.parent.left = replacement;\n\t                } else {\n\t                    node.parent.right = replacement;\n\t                }\n\t            } else {\n\t                this._setRoot(replacement);\n\t            }\n\t            // this._replaceNodeInParent(node, replacement);\n\t            this._rebalance(temp);\n\t        }\n\t        node.dispose();\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the left\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.right the new root of this sub tree (instead of node)\n\t        var pivotNode = node.right;\n\t        node.right = pivotNode.left;\n\t        pivotNode.left = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the right\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateRight = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.left the new root of this sub tree (instead of node)\n\t        var pivotNode = node.left;\n\t        node.left = pivotNode.right;\n\t        pivotNode.right = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Balance the BST\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rebalance = function (node) {\n\t        var balance = node.getBalance();\n\t        if (balance > 1) {\n\t            if (node.left.getBalance() < 0) {\n\t                this._rotateLeft(node.left);\n\t            } else {\n\t                this._rotateRight(node);\n\t            }\n\t        } else if (balance < -1) {\n\t            if (node.right.getBalance() > 0) {\n\t                this._rotateRight(node.right);\n\t            } else {\n\t                this._rotateLeft(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Get an event whose time and duration span the give time. Will\n\t\t *  return the match whose \"time\" value is closest to the given time.\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Object}  The event which spans the desired time\n\t\t */\n\t    Tone.IntervalTimeline.prototype.getEvent = function (time) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            if (results.length > 0) {\n\t                var max = results[0];\n\t                for (var i = 1; i < results.length; i++) {\n\t                    if (results[i].low > max.low) {\n\t                        max = results[i];\n\t                    }\n\t                }\n\t                return max.event;\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the timeline.\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEach = function (callback) {\n\t        if (this._root !== null) {\n\t            var allNodes = [];\n\t            if (this._root !== null) {\n\t                this._root.traverse(function (node) {\n\t                    allNodes.push(node);\n\t                });\n\t            }\n\t            for (var i = 0; i < allNodes.length; i++) {\n\t                var ev = allNodes[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the given time\n\t\t *  overlaps with the time and duration time of the event.\n\t\t *  @param  {Number}  time The time to check if items are overlapping\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the time is greater\n\t\t *  than the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAfter = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.searchAfter(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.dispose = function () {\n\t        var allNodes = [];\n\t        if (this._root !== null) {\n\t            this._root.traverse(function (node) {\n\t                allNodes.push(node);\n\t            });\n\t        }\n\t        for (var i = 0; i < allNodes.length; i++) {\n\t            allNodes[i].dispose();\n\t        }\n\t        allNodes = null;\n\t        this._root = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Represents a node in the binary search tree, with the addition\n\t\t *  of a \"high\" value which keeps track of the highest value of\n\t\t *  its children. \n\t\t *  References: \n\t\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t\t *  @param {Number} low\n\t\t *  @param {Number} high\n\t\t *  @private\n\t\t */\n\t    var IntervalNode = function (low, high, event) {\n\t        //the event container\n\t        this.event = event;\n\t        //the low value\n\t        this.low = low;\n\t        //the high value\n\t        this.high = high;\n\t        //the high value for this and all child nodes\n\t        this.max = this.high;\n\t        //the nodes to the left\n\t        this._left = null;\n\t        //the nodes to the right\n\t        this._right = null;\n\t        //the parent node\n\t        this.parent = null;\n\t        //the number of child nodes\n\t        this.height = 0;\n\t    };\n\t    /** \n\t\t *  Insert a node into the correct spot in the tree\n\t\t *  @param  {IntervalNode}  node\n\t\t */\n\t    IntervalNode.prototype.insert = function (node) {\n\t        if (node.low <= this.low) {\n\t            if (this.left === null) {\n\t                this.left = node;\n\t            } else {\n\t                this.left.insert(node);\n\t            }\n\t        } else {\n\t            if (this.right === null) {\n\t                this.right = node;\n\t            } else {\n\t                this.right.insert(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which overlap \n\t\t *  with the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.search = function (point, results) {\n\t        // If p is to the right of the rightmost point of any interval\n\t        // in this node and all children, there won't be any matches.\n\t        if (point > this.max) {\n\t            return;\n\t        }\n\t        // Search left children\n\t        if (this.left !== null) {\n\t            this.left.search(point, results);\n\t        }\n\t        // Check this node\n\t        if (this.low <= point && this.high > point) {\n\t            results.push(this);\n\t        }\n\t        // If p is to the left of the time of this interval,\n\t        // then it can't be in any child to the right.\n\t        if (this.low > point) {\n\t            return;\n\t        }\n\t        // Search right children\n\t        if (this.right !== null) {\n\t            this.right.search(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which are less \n\t\t *  than the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.searchAfter = function (point, results) {\n\t        // Check this node\n\t        if (this.low >= point) {\n\t            results.push(this);\n\t            if (this.left !== null) {\n\t                this.left.searchAfter(point, results);\n\t            }\n\t        }\n\t        // search the right side\n\t        if (this.right !== null) {\n\t            this.right.searchAfter(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Invoke the callback on this element and both it's branches\n\t\t *  @param  {Function}  callback\n\t\t */\n\t    IntervalNode.prototype.traverse = function (callback) {\n\t        callback(this);\n\t        if (this.left !== null) {\n\t            this.left.traverse(callback);\n\t        }\n\t        if (this.right !== null) {\n\t            this.right.traverse(callback);\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateHeight = function () {\n\t        if (this.left !== null && this.right !== null) {\n\t            this.height = Math.max(this.left.height, this.right.height) + 1;\n\t        } else if (this.right !== null) {\n\t            this.height = this.right.height + 1;\n\t        } else if (this.left !== null) {\n\t            this.height = this.left.height + 1;\n\t        } else {\n\t            this.height = 0;\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateMax = function () {\n\t        this.max = this.high;\n\t        if (this.left !== null) {\n\t            this.max = Math.max(this.max, this.left.max);\n\t        }\n\t        if (this.right !== null) {\n\t            this.max = Math.max(this.max, this.right.max);\n\t        }\n\t    };\n\t    /**\n\t\t *  The balance is how the leafs are distributed on the node\n\t\t *  @return  {Number}  Negative numbers are balanced to the right\n\t\t */\n\t    IntervalNode.prototype.getBalance = function () {\n\t        var balance = 0;\n\t        if (this.left !== null && this.right !== null) {\n\t            balance = this.left.height - this.right.height;\n\t        } else if (this.left !== null) {\n\t            balance = this.left.height + 1;\n\t        } else if (this.right !== null) {\n\t            balance = -(this.right.height + 1);\n\t        }\n\t        return balance;\n\t    };\n\t    /**\n\t\t *  @returns {Boolean} true if this node is the left child\n\t\t *  of its parent\n\t\t */\n\t    IntervalNode.prototype.isLeftChild = function () {\n\t        return this.parent !== null && this.parent.left === this;\n\t    };\n\t    /**\n\t\t *  get/set the left node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'left', {\n\t        get: function () {\n\t            return this._left;\n\t        },\n\t        set: function (node) {\n\t            this._left = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  get/set the right node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'right', {\n\t        get: function () {\n\t            return this._right;\n\t        },\n\t        set: function (node) {\n\t            this._right = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  null out references.\n\t\t */\n\t    IntervalNode.prototype.dispose = function () {\n\t        this.parent = null;\n\t        this._left = null;\n\t        this._right = null;\n\t        this.event = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEND INTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    return Tone.IntervalTimeline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Transport for timing musical events.\n\t\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t\t *          in the argument of the callback function. Pass that time value to the object\n\t\t *          you're scheduling. <br><br>\n\t\t *          A single transport is created for you when the library is initialized. \n\t\t *          <br><br>\n\t\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t\t *          called with the time of that event as the argument. \n\t\t *\n\t\t *  @extends {Tone.Emitter}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //repeated event every 8th note\n\t\t * Tone.Transport.scheduleRepeat(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"8n\");\n\t\t *  @example\n\t\t * //schedule an event on the 16th measure\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"16:0:0\");\n\t\t */\n\t    Tone.Transport = function () {\n\t        Tone.Emitter.call(this);\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tLOOPING\n\t        //////////////////////////////////////////////////////////////////////\n\t        /** \n\t\t\t * \tIf the transport loops or not.\n\t\t\t *  @type {boolean}\n\t\t\t */\n\t        this.loop = false;\n\t        /** \n\t\t\t * \tThe loop start position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = 0;\n\t        /** \n\t\t\t * \tThe loop end position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = 0;\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tCLOCK/TEMPO\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t *  @private\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this._ppq = TransportConstructor.defaults.PPQ;\n\t        /**\n\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t *  initially starts at 120bpm\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Clock}\n\t\t\t */\n\t        this._clock = new Tone.Clock({\n\t            'callback': this._processTick.bind(this),\n\t            'frequency': 0\n\t        });\n\t        this._bindClockEvents();\n\t        /**\n\t\t\t *  The Beats Per Minute of the Transport. \n\t\t\t *  @type {BPM}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t */\n\t        this.bpm = this._clock.frequency;\n\t        this.bpm._toUnits = this._toUnits.bind(this);\n\t        this.bpm._fromUnits = this._fromUnits.bind(this);\n\t        this.bpm.units = Tone.Type.BPM;\n\t        this.bpm.value = TransportConstructor.defaults.bpm;\n\t        this._readOnly('bpm');\n\t        /**\n\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t *  of the time signature over a denominator of 4. \n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeSignature = TransportConstructor.defaults.timeSignature;\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tTIMELINE EVENTS\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  All the events in an object to keep track by ID\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scheduledEvents = {};\n\t        /**\n\t\t\t *  The event ID counter\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._eventID = 0;\n\t        /**\n\t\t\t * \tThe scheduled events.\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeline = new Tone.Timeline();\n\t        /**\n\t\t\t *  Repeated events\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._repeatedEvents = new Tone.IntervalTimeline();\n\t        /**\n\t\t\t *  Events that occur once\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._onceEvents = new Tone.Timeline();\n\t        /** \n\t\t\t *  All of the synced Signals\n\t\t\t *  @private \n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this._syncedSignals = [];\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tSWING\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  The subdivision of the swing\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._swingTicks = TransportConstructor.defaults.PPQ / 2;\n\t        //8n\n\t        /**\n\t\t\t *  The swing amount\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._swingAmount = 0;\n\t    };\n\t    Tone.extend(Tone.Transport, Tone.Emitter);\n\t    /**\n\t\t *  the defaults\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Transport.defaults = {\n\t        'bpm': 120,\n\t        'swing': 0,\n\t        'swingSubdivision': '8n',\n\t        'timeSignature': 4,\n\t        'loopStart': 0,\n\t        'loopEnd': '4m',\n\t        'PPQ': 192\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tTICKS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  called on every tick\n\t\t *  @param   {number} tickTime clock relative tick time\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._processTick = function (tickTime) {\n\t        var ticks = this._clock.ticks;\n\t        //handle swing\n\t        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat\n\t            ticks % (this._swingTicks * 2) !== 0) {\n\t            //add some swing\n\t            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\t            var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t            tickTime += Tone.Time(this._swingTicks * 2 / 3, 'i').eval() * amount;\n\t        }\n\t        //do the loop test\n\t        if (this.loop) {\n\t            if (ticks === this._loopEnd) {\n\t                this.emit('stop', tickTime);\n\t                this._clock.ticks = this._loopStart;\n\t                ticks = this._loopStart;\n\t                this.emit('start', tickTime, this.seconds);\n\t                this.emit('loop', tickTime);\n\t            }\n\t        }\n\t        //process the single occurrence events\n\t        this._onceEvents.forEachBefore(ticks, function (event) {\n\t            event.callback(tickTime);\n\t        });\n\t        //and clear the single occurrence timeline\n\t        this._onceEvents.cancelBefore(ticks);\n\t        //fire the next tick events if their time has come\n\t        this._timeline.forEachAtTime(ticks, function (event) {\n\t            event.callback(tickTime);\n\t        });\n\t        //process the repeated events\n\t        this._repeatedEvents.forEachAtTime(ticks, function (event) {\n\t            if ((ticks - event.time) % event.interval === 0) {\n\t                event.callback(tickTime);\n\t            }\n\t        });\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULABLE EVENTS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedule an event along the timeline.\n\t\t *  @param {Function} callback The callback to be invoked at the time.\n\t\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t\t *  @return {Number} The id of the event which can be used for canceling the event. \n\t\t *  @example\n\t\t * //trigger the callback when the Transport reaches the desired time\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \tenvelope.triggerAttack(time);\n\t\t * }, \"128i\");\n\t\t */\n\t    Tone.Transport.prototype.schedule = function (callback, time) {\n\t        var event = {\n\t            'time': this.toTicks(time),\n\t            'callback': callback\n\t        };\n\t        var id = this._eventID++;\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._timeline\n\t        };\n\t        this._timeline.addEvent(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Schedule a repeated event along the timeline. The event will fire\n\t\t *  at the `interval` starting at the `startTime` and for the specified\n\t\t *  `duration`. \n\t\t *  @param  {Function}  callback   The callback to invoke.\n\t\t *  @param  {Time}    interval   The duration between successive\n\t\t *                               callbacks.\n\t\t *  @param  {TimelinePosition=}    startTime  When along the timeline the events should\n\t\t *                               start being invoked.\n\t\t *  @param {Time} [duration=Infinity] How long the event should repeat. \n\t\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t\t *                           the event. \n\t\t *  @example\n\t\t * //a callback invoked every eighth note after the first measure\n\t\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t\t */\n\t    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n\t        if (interval <= 0) {\n\t            throw new Error('Tone.Transport: repeat events must have an interval larger than 0');\n\t        }\n\t        var event = {\n\t            'time': this.toTicks(startTime),\n\t            'duration': this.toTicks(this.defaultArg(duration, Infinity)),\n\t            'interval': this.toTicks(interval),\n\t            'callback': callback\n\t        };\n\t        var id = this._eventID++;\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._repeatedEvents\n\t        };\n\t        this._repeatedEvents.addEvent(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Schedule an event that will be removed after it is invoked. \n\t\t *  Note that if the given time is less than the current transport time, \n\t\t *  the event will be invoked immediately. \n\t\t *  @param {Function} callback The callback to invoke once.\n\t\t *  @param {TransportTime} time The time the callback should be invoked.\n\t\t *  @returns {Number} The ID of the scheduled event. \n\t\t */\n\t    Tone.Transport.prototype.scheduleOnce = function (callback, time) {\n\t        var event = {\n\t            'time': this.toTicks(time),\n\t            'callback': callback\n\t        };\n\t        var id = this._eventID++;\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._onceEvents\n\t        };\n\t        this._onceEvents.addEvent(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Clear the passed in event id from the timeline\n\t\t *  @param {Number} eventId The id of the event.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.clear = function (eventId) {\n\t        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t            var item = this._scheduledEvents[eventId.toString()];\n\t            item.timeline.removeEvent(item.event);\n\t            delete this._scheduledEvents[eventId.toString()];\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove scheduled events from the timeline after\n\t\t *  the given time. Repeated events will be removed\n\t\t *  if their startTime is after the given time\n\t\t *  @param {TransportTime} [after=0] Clear all events after\n\t\t *                          this time. \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.cancel = function (after) {\n\t        after = this.defaultArg(after, 0);\n\t        after = this.toTicks(after);\n\t        this._timeline.cancel(after);\n\t        this._onceEvents.cancel(after);\n\t        this._repeatedEvents.cancel(after);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSTART/STOP/PAUSE\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Bind start/stop/pause events from the clock and emit them.\n\t\t */\n\t    Tone.Transport.prototype._bindClockEvents = function () {\n\t        this._clock.on('start', function (time, offset) {\n\t            offset = Tone.Time(this._clock.ticks, 'i').toSeconds();\n\t            this.emit('start', time, offset);\n\t        }.bind(this));\n\t        this._clock.on('stop', function (time) {\n\t            this.emit('stop', time);\n\t        }.bind(this));\n\t        this._clock.on('pause', function (time) {\n\t            this.emit('pause', time);\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'state', {\n\t        get: function () {\n\t            return this._clock.getStateAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should start.\n\t\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //start the transport in one second starting at beginning of the 5th measure. \n\t\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t\t */\n\t    Tone.Transport.prototype.start = function (time, offset) {\n\t        //start the clock\n\t        if (!this.isUndef(offset)) {\n\t            offset = this.toTicks(offset);\n\t        }\n\t        this._clock.start(time, offset);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should stop. \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * Tone.Transport.stop();\n\t\t */\n\t    Tone.Transport.prototype.stop = function (time) {\n\t        this._clock.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.pause = function (time) {\n\t        this._clock.pause(time);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSETTERS/GETTERS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The time signature as just the numerator over 4. \n\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number|Array}\n\t\t *  @name timeSignature\n\t\t *  @example\n\t\t * //common time\n\t\t * Tone.Transport.timeSignature = 4;\n\t\t * // 7/8\n\t\t * Tone.Transport.timeSignature = [7, 8];\n\t\t * //this will be reduced to a single number\n\t\t * Tone.Transport.timeSignature; //returns 3.5\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {\n\t        get: function () {\n\t            return this._timeSignature;\n\t        },\n\t        set: function (timeSig) {\n\t            if (this.isArray(timeSig)) {\n\t                timeSig = timeSig[0] / timeSig[1] * 4;\n\t            }\n\t            this._timeSignature = timeSig;\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toSeconds();\n\t        },\n\t        set: function (startPosition) {\n\t            this._loopStart = this.toTicks(startPosition);\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toSeconds();\n\t        },\n\t        set: function (endPosition) {\n\t            this._loopEnd = this.toTicks(endPosition);\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the loop start and stop at the same time. \n\t\t *  @param {TransportTime} startPosition \n\t\t *  @param {TransportTime} endPosition   \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //loop over the first measure\n\t\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t\t * Tone.Transport.loop = true;\n\t\t */\n\t    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n\t        this.loopStart = startPosition;\n\t        this.loopEnd = endPosition;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The swing value. Between 0-1 where 1 equal to \n\t\t *  the note + half the subdivision.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {NormalRange}\n\t\t *  @name swing\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swing', {\n\t        get: function () {\n\t            return this._swingAmount;\n\t        },\n\t        set: function (amount) {\n\t            //scale the values to a normal range\n\t            this._swingAmount = amount;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the subdivision which the swing will be applied to. \n\t\t *  The default values is a 16th note. Value must be less \n\t\t *  than a quarter note.\n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Time}\n\t\t *  @name swingSubdivision\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._swingTicks, 'i').toNotation();\n\t        },\n\t        set: function (subdivision) {\n\t            this._swingTicks = this.toTicks(subdivision);\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t\t *  Setting the value will jump to that position right away. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {BarsBeatsSixteenths}\n\t\t *  @name position\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'position', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toBarsBeatsSixteenths();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in seconds\n\t\t *  Setting the value will jump to that position right away. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Seconds}\n\t\t *  @name seconds\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'seconds', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toSeconds();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's loop position as a normalized value. Always\n\t\t *  returns 0 if the transport if loop is not true. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name progress\n\t\t *  @type {NormalRange}\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'progress', {\n\t        get: function () {\n\t            if (this.loop) {\n\t                return (this.ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The transports current tick position.\n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Ticks}\n\t\t *  @name ticks\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'ticks', {\n\t        get: function () {\n\t            return this._clock.ticks;\n\t        },\n\t        set: function (t) {\n\t            var now = this.now();\n\t            //stop everything synced to the transport\n\t            if (this.state === Tone.State.Started) {\n\t                this.emit('stop', now);\n\t                this._clock.ticks = t;\n\t                //restart it with the new time\n\t                this.emit('start', now, this.seconds);\n\t            } else {\n\t                this._clock.ticks = t;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Pulses Per Quarter note. This is the smallest resolution\n\t\t *  the Transport timing supports. This should be set once\n\t\t *  on initialization and not set again. Changing this value \n\t\t *  after other objects have been created can cause problems. \n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number}\n\t\t *  @name PPQ\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {\n\t        get: function () {\n\t            return this._ppq;\n\t        },\n\t        set: function (ppq) {\n\t            var bpm = this.bpm.value;\n\t            this._ppq = ppq;\n\t            this.bpm.value = bpm;\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert from BPM to frequency (factoring in PPQ)\n\t\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._fromUnits = function (bpm) {\n\t        return 1 / (60 / bpm / this.PPQ);\n\t    };\n\t    /**\n\t\t *  Convert from frequency (with PPQ) into BPM\n\t\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t\t *  @return  {BPM}  The frequency value as BPM.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._toUnits = function (freq) {\n\t        return freq / this.PPQ * 60;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSYNCING\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the time aligned to the next subdivision\n\t\t *  of the Transport. If the Transport is not started,\n\t\t *  it will return 0.\n\t\t *  Note: this will not work precisely during tempo ramps.\n\t\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t\t *  @return  {Number}  The context time of the next subdivision.\n\t\t *  @example\n\t\t * Tone.Transport.start(); //the transport must be started\n\t\t * Tone.Transport.nextSubdivision(\"4n\");\n\t\t */\n\t    Tone.Transport.prototype.nextSubdivision = function (subdivision) {\n\t        subdivision = this.toSeconds(subdivision);\n\t        //if the transport's not started, return 0\n\t        var now;\n\t        if (this.state === Tone.State.Started) {\n\t            now = this._clock._nextTick;\n\t        } else {\n\t            return 0;\n\t        }\n\t        var transportPos = Tone.Time(this.ticks, 'i').eval();\n\t        var remainingTime = subdivision - transportPos % subdivision;\n\t        if (remainingTime === 0) {\n\t            remainingTime = subdivision;\n\t        }\n\t        return now + remainingTime;\n\t    };\n\t    /**\n\t\t *  Attaches the signal to the tempo control signal so that \n\t\t *  any changes in the tempo will change the signal in the same\n\t\t *  ratio. \n\t\t *  \n\t\t *  @param  {Tone.Signal} signal \n\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t *                         the two signals. Otherwise it will be computed\n\t\t *                         based on their current values. \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.syncSignal = function (signal, ratio) {\n\t        if (!ratio) {\n\t            //get the sync ratio\n\t            if (signal._param.value !== 0) {\n\t                ratio = signal._param.value / this.bpm._param.value;\n\t            } else {\n\t                ratio = 0;\n\t            }\n\t        }\n\t        var ratioSignal = new Tone.Gain(ratio);\n\t        this.bpm.chain(ratioSignal, signal._param);\n\t        this._syncedSignals.push({\n\t            'ratio': ratioSignal,\n\t            'signal': signal,\n\t            'initial': signal._param.value\n\t        });\n\t        signal._param.value = 0;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsyncs a previously synced signal from the transport's control. \n\t\t *  See Tone.Transport.syncSignal.\n\t\t *  @param  {Tone.Signal} signal \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.unsyncSignal = function (signal) {\n\t        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t            var syncedSignal = this._syncedSignals[i];\n\t            if (syncedSignal.signal === signal) {\n\t                syncedSignal.ratio.dispose();\n\t                syncedSignal.signal._param.value = syncedSignal.initial;\n\t                this._syncedSignals.splice(i, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        this._writable('bpm');\n\t        this.bpm = null;\n\t        this._timeline.dispose();\n\t        this._timeline = null;\n\t        this._onceEvents.dispose();\n\t        this._onceEvents = null;\n\t        this._repeatedEvents.dispose();\n\t        this._repeatedEvents = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tINITIALIZATION\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    var TransportConstructor = Tone.Transport;\n\t    Tone._initAudioContext(function () {\n\t        if (typeof Tone.Transport === 'function') {\n\t            //a single transport object\n\t            Tone.Transport = new Tone.Transport();\n\t        } else {\n\t            //stop the clock\n\t            Tone.Transport.stop();\n\t            //get the previous values\n\t            var prevSettings = Tone.Transport.get();\n\t            //destory the old transport\n\t            Tone.Transport.dispose();\n\t            //make new Transport insides\n\t            TransportConstructor.call(Tone.Transport);\n\t            //set the previous config\n\t            Tone.Transport.set(prevSettings);\n\t        }\n\t    });\n\t    return Tone.Transport;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Decibels} [volume=0] the initial volume\n\t\t *  @example\n\t\t * var vol = new Tone.Volume(-12);\n\t\t * instrument.chain(vol, Tone.Master);\n\t\t */\n\t    Tone.Volume = function () {\n\t        var options = this.optionsObject(arguments, ['volume'], Tone.Volume.defaults);\n\t        /**\n\t\t\t * the output node\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The unmuted volume\n\t\t\t * @type {Decibels}\n\t\t\t * @private\n\t\t\t */\n\t        this._unmutedVolume = 0;\n\t        /**\n\t\t\t *  if the volume is muted\n\t\t\t *  @type {Boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._muted = false;\n\t        /**\n\t\t\t *  The volume control in decibels. \n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this.output.gain;\n\t        this._readOnly('volume');\n\t        //set the mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Volume);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Volume.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Volume#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * volume.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Volume.prototype, 'mute', {\n\t        get: function () {\n\t            return this._muted;\n\t        },\n\t        set: function (mute) {\n\t            if (!this._muted && mute) {\n\t                this._unmutedVolume = this.volume.value;\n\t                //maybe it should ramp here?\n\t                this.volume.value = -Infinity;\n\t            } else if (this._muted && !mute) {\n\t                this.volume.value = this._unmutedVolume;\n\t            }\n\t            this._muted = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Volume} this\n\t\t */\n\t    Tone.Volume.prototype.dispose = function () {\n\t        this.input.dispose();\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this.volume.dispose();\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Volume;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A single master output which is connected to the\n\t\t *          AudioDestinationNode (aka your speakers). \n\t\t *          It provides useful conveniences such as the ability \n\t\t *          to set the volume and mute the entire application. \n\t\t *          It also gives you the ability to apply master effects to your application. \n\t\t *          <br><br>\n\t\t *          Like Tone.Transport, A single Tone.Master is created\n\t\t *          on initialization and you do not need to explicitly construct one.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //the audio will go from the oscillator to the speakers\n\t\t * oscillator.connect(Tone.Master);\n\t\t * //a convenience for connecting to the master output is also provided:\n\t\t * oscillator.toMaster();\n\t\t * //the above two examples are equivalent.\n\t\t */\n\t    Tone.Master = function () {\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  The private volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume();\n\t        /**\n\t\t\t * The volume of the master output.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        //connections\n\t        this.input.chain(this.output, this.context.destination);\n\t    };\n\t    Tone.extend(Tone.Master);\n\t    /**\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Master.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Master#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * Tone.Master.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Master.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously \n\t\t *  chained in the master effects chain. \n\t\t *  @param {AudioNode|Tone...} args All arguments will be connected in a row\n\t\t *                                  and the Master will be routed through it.\n\t\t *  @return  {Tone.Master}  this\n\t\t *  @example\n\t\t * //some overall compression to keep the levels in check\n\t\t * var masterCompressor = new Tone.Compressor({\n\t\t * \t\"threshold\" : -6,\n\t\t * \t\"ratio\" : 3,\n\t\t * \t\"attack\" : 0.5,\n\t\t * \t\"release\" : 0.1\n\t\t * });\n\t\t * //give a little boost to the lows\n\t\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t\t * //route everything through the filter \n\t\t * //and compressor before going to the speakers\n\t\t * Tone.Master.chain(lowBump, masterCompressor);\n\t\t */\n\t    Tone.Master.prototype.chain = function () {\n\t        this.input.disconnect();\n\t        this.input.chain.apply(this.input, arguments);\n\t        arguments[arguments.length - 1].connect(this.output);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Master}  this\n\t\t */\n\t    Tone.Master.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * //connect an oscillator to the master output\n\t\t * var osc = new Tone.Oscillator().toMaster();\n\t\t */\n\t    Tone.prototype.toMaster = function () {\n\t        this.connect(Tone.Master);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Also augment AudioNode's prototype to include toMaster\n\t\t *  as a convenience\n\t\t *  @returns {AudioNode} this\n\t\t */\n\t    AudioNode.prototype.toMaster = function () {\n\t        this.connect(Tone.Master);\n\t        return this;\n\t    };\n\t    var MasterConstructor = Tone.Master;\n\t    /**\n\t\t *  initialize the module and listen for new audio contexts\n\t\t */\n\t    Tone._initAudioContext(function () {\n\t        //a single master output\n\t        if (!Tone.prototype.isUndef(Tone.Master)) {\n\t            Tone.Master = new MasterConstructor();\n\t        } else {\n\t            MasterConstructor.prototype.dispose.call(Tone.Master);\n\t            MasterConstructor.call(Tone.Master);\n\t        }\n\t    });\n\t    return Tone.Master;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for sources. Sources have start/stop methods\n\t\t *          and the ability to be synced to the \n\t\t *          start/stop of Tone.Transport. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * //Multiple state change events can be chained together,\n\t\t * //but must be set in the correct order and with ascending times\n\t\t * \n\t\t * // OK\n\t\t * state.start().stop(\"+0.2\");\n\t\t * // AND\n\t\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t\t *\n\t\t * // BAD\n\t\t * state.stop(\"+0.2\").start();\n\t\t * // OR\n\t\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t\t * \n\t\t */\n\t    Tone.Source = function (options) {\n\t        // this.createInsOuts(0, 1);\n\t        options = this.defaultArg(options, Tone.Source.defaults);\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        /**\n\t\t\t * \tKeep track of the scheduled state.\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        this._state.memory = 10;\n\t        /**\n\t\t\t *  The synced `start` callback function from the transport\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._synced = false;\n\t        /**\n\t\t\t *  Keep track of all of the scheduled event ids\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scheduled = [];\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Source);\n\t    /**\n\t\t *  The default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Source.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Source#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'state', {\n\t        get: function () {\n\t            if (this._synced) {\n\t                if (Tone.Transport.state === Tone.State.Started) {\n\t                    return this._state.getStateAtTime(Tone.Transport.seconds);\n\t                } else {\n\t                    return Tone.State.Stopped;\n\t                }\n\t            } else {\n\t                return this._state.getStateAtTime(this.now());\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Source#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    //overwrite these functions\n\t    Tone.Source.prototype._start = Tone.noOp;\n\t    Tone.Source.prototype._stop = Tone.noOp;\n\t    /**\n\t\t *  Start the source at the specified time. If no time is given, \n\t\t *  start the source now.\n\t\t *  @param  {Time} [time=now] When the source should be started.\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t */\n\t    Tone.Source.prototype.start = function (time, offset, duration) {\n\t        if (this.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        //if it's started, stop it and restart it\n\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t            this.stop(time);\n\t        }\n\t        this._state.setStateAtTime(Tone.State.Started, time);\n\t        if (this._synced) {\n\t            // add the offset time to the event\n\t            var event = this._state.getEvent(time);\n\t            event.offset = this.defaultArg(offset, 0);\n\t            event.duration = duration;\n\t            var sched = Tone.Transport.schedule(function (t) {\n\t                this._start(t, offset, duration);\n\t            }.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        } else {\n\t            this._start.apply(this, arguments);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the source at the specified time. If no time is given, \n\t\t *  stop the source now.\n\t\t *  @param  {Time} [time=now] When the source should be stopped. \n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.stop(); // stops the source immediately\n\t\t */\n\t    Tone.Source.prototype.stop = function (time) {\n\t        if (this.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        if (!this._synced) {\n\t            this._stop.apply(this, arguments);\n\t        } else {\n\t            var sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the source to the Transport so that all subsequent\n\t\t *  calls to `start` and `stop` are synced to the TransportTime\n\t\t *  instead of the AudioContext time. \n\t\t *\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t\t * source.sync().start(0).stop(0.3);\n\t\t * //start the transport.\n\t\t * Tone.Transport.start();\n\t\t *\n\t\t *  @example\n\t\t * //start the transport with an offset and the sync'ed sources\n\t\t * //will start in the correct position\n\t\t * source.sync().start(0.1);\n\t\t * //the source will be invoked with an offset of 0.4\n\t\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t\t */\n\t    Tone.Source.prototype.sync = function () {\n\t        this._synced = true;\n\t        Tone.Transport.on('start', function (time, offset) {\n\t            if (offset > 0) {\n\t                // get the playback state at that time\n\t                var stateEvent = this._state.getEvent(offset);\n\t                // listen for start events which may occur in the middle of the sync'ed time\n\t                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {\n\t                    // get the offset\n\t                    var startOffset = offset - this.toSeconds(stateEvent.time);\n\t                    var duration;\n\t                    if (stateEvent.duration) {\n\t                        duration = this.toSeconds(stateEvent.duration) - startOffset;\n\t                    }\n\t                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t                }\n\t            }\n\t        }.bind(this));\n\t        Tone.Transport.on('stop pause', function (time) {\n\t            if (this._state.getStateAtTime(Tone.Transport.seconds) === Tone.State.Started) {\n\t                this._stop(time);\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t\t *  @returns {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.unsync = function () {\n\t        this._synced = false;\n\t        Tone.Transport.off('start stop pause');\n\t        // clear all of the scheduled ids\n\t        for (var i = 0; i < this._scheduled.length; i++) {\n\t            var id = this._scheduled[i];\n\t            Tone.Transport.clear(id);\n\t        }\n\t        this._scheduled = [];\n\t        this._state.cancel(0);\n\t        return this;\n\t    };\n\t    /**\n\t\t *\tClean up.\n\t\t *  @return {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.unsync();\n\t        this._scheduled = null;\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    return Tone.Source;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Oscillator supports a number of features including\n\t\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type), \n\t\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {Frequency} [frequency] Starting frequency\n\t\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t\t *  @example\n\t\t * //make and start a 440hz sine tone\n\t\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t\t */\n\t    Tone.Oscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.Oscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the main oscillator\n\t\t\t *  @type {OscillatorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the periodic wave\n\t\t\t *  @type {PeriodicWave}\n\t\t\t *  @private\n\t\t\t */\n\t        this._wave = null;\n\t        /**\n\t\t\t *  The partials of the oscillator\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = this.defaultArg(options.partials, [1]);\n\t        /**\n\t\t\t *  the phase of the oscillator\n\t\t\t *  between 0 - 360\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  the type of the oscillator\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        //setup\n\t        this.type = options.type;\n\t        this.phase = this._phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Oscillator, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Oscillator.defaults = {\n\t        'type': 'sine',\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'partials': []\n\t    };\n\t    /**\n\t\t *  The Oscillator types\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Oscillator.Type = {\n\t        Sine: 'sine',\n\t        Triangle: 'triangle',\n\t        Sawtooth: 'sawtooth',\n\t        Square: 'square',\n\t        Custom: 'custom'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now] \n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._start = function (time) {\n\t        //new oscillator with previous values\n\t        this._oscillator = this.context.createOscillator();\n\t        this._oscillator.setPeriodicWave(this._wave);\n\t        //connect the control signal to the oscillator frequency & detune\n\t        this._oscillator.connect(this.output);\n\t        this.frequency.connect(this._oscillator.frequency);\n\t        this.detune.connect(this._oscillator.detune);\n\t        //start the oscillator\n\t        this._oscillator.start(this.toSeconds(time));\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @private\n\t\t *  @param  {Time} [time=now] (optional) timing parameter\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype._stop = function (time) {\n\t        if (this._oscillator) {\n\t            this._oscillator.stop(this.toSeconds(time));\n\t            this._oscillator = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t *  will also affect the oscillators frequency. \n\t\t *  @returns {Tone.Oscillator} this\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 120;\n\t\t * osc.frequency.value = 440;\n\t\t * //the ration between the bpm and the frequency will be maintained\n\t\t * osc.syncFrequency();\n\t\t * Tone.Transport.bpm.value = 240; \n\t\t * // the frequency of the oscillator is doubled to 880\n\t\t */\n\t    Tone.Oscillator.prototype.syncFrequency = function () {\n\t        Tone.Transport.syncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the oscillator's frequency from the Transport. \n\t\t *  See Tone.Oscillator.syncFrequency\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.unsyncFrequency = function () {\n\t        Tone.Transport.unsyncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t\t * 8 partials of the triangle wave.\n\t\t * <br><br> \n\t\t * Uses PeriodicWave internally even for native types so that it can set the phase. \n\t\t * PeriodicWave equations are from the \n\t\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t\t *  \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * //set it to a square wave\n\t\t * osc.type = \"square\";\n\t\t * @example\n\t\t * //set the first 6 partials of a sawtooth wave\n\t\t * osc.type = \"sawtooth6\";\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var coefs = this._getRealImaginary(type, this._phase);\n\t            var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t            this._wave = periodicWave;\n\t            if (this._oscillator !== null) {\n\t                this._oscillator.setPeriodicWave(this._wave);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the real and imaginary components based \n\t\t *  on the oscillator type.\n\t\t *  @returns {Array} [real, imaginary]\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {\n\t        var fftSize = 4096;\n\t        var periodicWaveSize = fftSize / 2;\n\t        var real = new Float32Array(periodicWaveSize);\n\t        var imag = new Float32Array(periodicWaveSize);\n\t        var partialCount = 1;\n\t        if (type === Tone.Oscillator.Type.Custom) {\n\t            partialCount = this._partials.length + 1;\n\t            periodicWaveSize = partialCount;\n\t        } else {\n\t            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t            if (partial) {\n\t                partialCount = parseInt(partial[2]) + 1;\n\t                type = partial[1];\n\t                partialCount = Math.max(partialCount, 2);\n\t                periodicWaveSize = partialCount;\n\t            }\n\t        }\n\t        for (var n = 1; n < periodicWaveSize; ++n) {\n\t            var piFactor = 2 / (n * Math.PI);\n\t            var b;\n\t            switch (type) {\n\t            case Tone.Oscillator.Type.Sine:\n\t                b = n <= partialCount ? 1 : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Square:\n\t                b = n & 1 ? 2 * piFactor : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Sawtooth:\n\t                b = piFactor * (n & 1 ? 1 : -1);\n\t                break;\n\t            case Tone.Oscillator.Type.Triangle:\n\t                if (n & 1) {\n\t                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n\t                } else {\n\t                    b = 0;\n\t                }\n\t                break;\n\t            case Tone.Oscillator.Type.Custom:\n\t                b = this._partials[n - 1];\n\t                break;\n\t            default:\n\t                throw new TypeError('Tone.Oscillator: invalid type: ' + type);\n\t            }\n\t            if (b !== 0) {\n\t                real[n] = -b * Math.sin(phase * n);\n\t                imag[n] = b * Math.cos(phase * n);\n\t            } else {\n\t                real[n] = 0;\n\t                imag[n] = 0;\n\t            }\n\t        }\n\t        return [\n\t            real,\n\t            imag\n\t        ];\n\t    };\n\t    /**\n\t\t *  Compute the inverse FFT for a given phase.\t\n\t\t *  @param  {Float32Array}  real\n\t\t *  @param  {Float32Array}  imag \n\t\t *  @param  {NormalRange}  phase \n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n\t        var sum = 0;\n\t        var len = real.length;\n\t        for (var i = 0; i < len; i++) {\n\t            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t        }\n\t        return sum;\n\t    };\n\t    /**\n\t\t *  Returns the initial value of the oscillator.\n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getInitialValue = function () {\n\t        var coefs = this._getRealImaginary(this._type, 0);\n\t        var real = coefs[0];\n\t        var imag = coefs[1];\n\t        var maxValue = 0;\n\t        var twoPi = Math.PI * 2;\n\t        //check for peaks in 8 places\n\t        for (var i = 0; i < 8; i++) {\n\t            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);\n\t        }\n\t        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t    };\n\t    /**\n\t\t * The partials of the waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {\n\t        get: function () {\n\t            if (this._type !== Tone.Oscillator.Type.Custom) {\n\t                return [];\n\t            } else {\n\t                return this._partials;\n\t            }\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this.type = Tone.Oscillator.Type.Custom;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t * @example\n\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase * (180 / Math.PI);\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase * Math.PI / 180;\n\t            //reset the type\n\t            this.type = this._type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._oscillator !== null) {\n\t            this._oscillator.disconnect();\n\t            this._oscillator = null;\n\t        }\n\t        this._wave = null;\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.Oscillator;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n\t\t *         it's own class is that many browsers optimize out Tone.Signal\n\t\t *         with a value of 0 and will not process nodes further down the graph. \n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Zero = function () {\n\t        /**\n\t\t\t *  The gain node\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = this.input = this.output = new Tone.Gain();\n\t        Tone.Zero._zeros.connect(this._gain);\n\t    };\n\t    Tone.extend(Tone.Zero);\n\t    /**\n\t\t *  clean up\n\t\t *  @return  {Tone.Zero}  this\n\t\t */\n\t    Tone.Zero.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._gain.dispose();\n\t        this._gain = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Generates a constant output of 0. This is so \n\t\t *  the processing graph doesn't optimize out this\n\t\t *  segment of the graph. \n\t\t *  @static\n\t\t *  @private\n\t\t *  @const\n\t\t *  @type {AudioBufferSourceNode}\n\t\t */\n\t    Tone.Zero._zeros = null;\n\t    /**\n\t\t *  initializer function\n\t\t */\n\t    Tone._initAudioContext(function (audioContext) {\n\t        var buffer = audioContext.createBuffer(1, 128, audioContext.sampleRate);\n\t        var arr = buffer.getChannelData(0);\n\t        for (var i = 0; i < arr.length; i++) {\n\t            arr[i] = 0;\n\t        }\n\t        Tone.Zero._zeros = audioContext.createBufferSource();\n\t        Tone.Zero._zeros.channelCount = 1;\n\t        Tone.Zero._zeros.channelCountMode = 'explicit';\n\t        Tone.Zero._zeros.buffer = buffer;\n\t        Tone.Zero._zeros.loop = true;\n\t        Tone.Zero._zeros.start(0);\n\t        Tone.Zero._zeros.noGC();\n\t    });\n\t    return Tone.Zero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal \n\t\t *          which can be attached to an AudioParam or Tone.Signal \n\t\t *          in order to modulate that parameter with an oscillator. The LFO can \n\t\t *          also be synced to the transport to start/stop and change when the tempo changes.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n\t\t *                               in the frequency range of 0.1 to 10 hertz. \n\t\t *  @param {number=} min The minimum output value of the LFO. \n\t\t *  @param {number=} max The maximum value of the LFO. \n\t\t *  @example\n\t\t * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t * lfo.connect(filter.frequency);\n\t\t */\n\t    Tone.LFO = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'min',\n\t            'max'\n\t        ], Tone.LFO.defaults);\n\t        /** \n\t\t\t *  The oscillator. \n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'type': options.type\n\t        });\n\t        /**\n\t\t\t *  the lfo's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._oscillator.frequency;\n\t        /**\n\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t * the min and max output. For example if the min is -10 and the max \n\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t * between -5 and 5. \n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.amplitude = this._oscillator.volume;\n\t        this.amplitude.units = Tone.Type.NormalRange;\n\t        this.amplitude.value = options.amplitude;\n\t        /**\n\t\t\t *  The signal which is output when the LFO is stopped\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\t        /**\n\t\t\t *  Just outputs zeros.\n\t\t\t *  @type {Tone.Zero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._zeros = new Tone.Zero();\n\t        /**\n\t\t\t *  The value that the LFO outputs when it's stopped\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedValue = 0;\n\t        /**\n\t\t\t *  @type {Tone.AudioToGain} \n\t\t\t *  @private\n\t\t\t */\n\t        this._a2g = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  @type {Tone.Scale} \n\t\t\t *  @private\n\t\t\t */\n\t        this._scaler = this.output = new Tone.Scale(options.min, options.max);\n\t        /**\n\t\t\t *  the units of the LFO (used for converting)\n\t\t\t *  @type {Tone.Type} \n\t\t\t *  @private\n\t\t\t */\n\t        this._units = Tone.Type.Default;\n\t        this.units = options.units;\n\t        //connect it up\n\t        this._oscillator.chain(this._a2g, this._scaler);\n\t        this._zeros.connect(this._a2g);\n\t        this._stoppedSignal.connect(this._a2g);\n\t        this._readOnly([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this.phase = options.phase;\n\t    };\n\t    Tone.extend(Tone.LFO, Tone.Oscillator);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LFO.defaults = {\n\t        'type': 'sine',\n\t        'min': 0,\n\t        'max': 1,\n\t        'phase': 0,\n\t        'frequency': '4n',\n\t        'amplitude': 1,\n\t        'units': Tone.Type.Default\n\t    };\n\t    /**\n\t\t *  Start the LFO. \n\t\t *  @param  {Time} [time=now] the time the LFO will start\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(0, time);\n\t        this._oscillator.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the LFO. \n\t\t *  @param  {Time} [time=now] the time the LFO will stop\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t        this._oscillator.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the start/stop/pause to the transport \n\t\t *  and the frequency to the bpm of the transport\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @example\n\t\t *  lfo.frequency.value = \"8n\";\n\t\t *  lfo.sync().start(0)\n\t\t *  //the rate of the LFO will always be an eighth note, \n\t\t *  //even as the tempo changes\n\t\t */\n\t    Tone.LFO.prototype.sync = function () {\n\t        this._oscillator.sync();\n\t        this._oscillator.syncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t *  unsync the LFO from transport control\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.unsync = function () {\n\t        this._oscillator.unsync();\n\t        this._oscillator.unsyncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The miniumum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'min', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.min);\n\t        },\n\t        set: function (min) {\n\t            min = this._fromUnits(min);\n\t            this._scaler.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'max', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.max);\n\t        },\n\t        set: function (max) {\n\t            max = this._fromUnits(max);\n\t            this._scaler.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator: sine, square, sawtooth, triangle. \n\t\t * @memberOf Tone.LFO#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'type', {\n\t        get: function () {\n\t            return this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            this._oscillator.type = type;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The output units of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Tone.Type}\n\t\t * @name units\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'units', {\n\t        get: function () {\n\t            return this._units;\n\t        },\n\t        set: function (val) {\n\t            var currentMin = this.min;\n\t            var currentMax = this.max;\n\t            //convert the min and the max\n\t            this._units = val;\n\t            this.min = currentMin;\n\t            this.max = currentMax;\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Boolean}\n\t\t * @name mute\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'mute', {\n\t        get: function () {\n\t            return this._oscillator.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._oscillator.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.LFO#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'state', {\n\t        get: function () {\n\t            return this._oscillator.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node. \n\t\t *  Tone.LFO will automatically convert to the destination units of the \n\t\t *  will get the units from the connected node.\n\t\t *  @param  {Tone | AudioParam | AudioNode} node \n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype.connect = function (node) {\n\t        if (node.constructor === Tone.Signal || node.constructor === Tone.Param || node.constructor === Tone.TimelineSignal) {\n\t            this.convert = node.convert;\n\t            this.units = node.units;\n\t        }\n\t        Tone.Signal.prototype.connect.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  private method borrowed from Param converts \n\t\t *  units from their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\t    /**\n\t\t *  private method borrowed from Param converts \n\t\t *  units to their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\t    /**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._stoppedSignal.dispose();\n\t        this._stoppedSignal = null;\n\t        this._zeros.dispose();\n\t        this._zeros = null;\n\t        this._scaler.dispose();\n\t        this._scaler = null;\n\t        this._a2g.dispose();\n\t        this._a2g = null;\n\t        this.frequency = null;\n\t        this.amplitude = null;\n\t        return this;\n\t    };\n\t    return Tone.LFO;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Limiter will limit the loudness of an incoming signal. \n\t\t *         It is composed of a Tone.Compressor with a fast attack \n\t\t *         and release. Limiters are commonly used to safeguard against \n\t\t *         signal clipping. Unlike a compressor, limiters do not provide \n\t\t *         smooth gain reduction and almost completely prevent \n\t\t *         additional gain above the threshold.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {number} threshold The theshold above which the limiting is applied. \n\t\t *  @example\n\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t */\n\t    Tone.Limiter = function () {\n\t        var options = this.optionsObject(arguments, ['threshold'], Tone.Limiter.defaults);\n\t        /**\n\t\t\t *  the compressor\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this._compressor = this.input = this.output = new Tone.Compressor({\n\t            'attack': 0.001,\n\t            'decay': 0.001,\n\t            'threshold': options.threshold\n\t        });\n\t        /**\n\t\t\t * The threshold of of the limiter\n\t\t\t * @type {Decibel}\n\t\t\t * @signal\n\t\t\t */\n\t        this.threshold = this._compressor.threshold;\n\t        this._readOnly('threshold');\n\t    };\n\t    Tone.extend(Tone.Limiter);\n\t    /**\n\t\t *  The default value\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Limiter.defaults = { 'threshold': -12 };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Limiter} this\n\t\t */\n\t    Tone.Limiter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._compressor.dispose();\n\t        this._compressor = null;\n\t        this._writable('threshold');\n\t        this.threshold = null;\n\t        return this;\n\t    };\n\t    return Tone.Limiter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to \n\t\t *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the comb filter\n\t\t *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n\t\t *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n\t\t *                                signal as it is fedback. \n\t\t */\n\t    Tone.LowpassCombFilter = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'resonance',\n\t            'dampening'\n\t        ], Tone.LowpassCombFilter.defaults);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the comb filter. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the lowpass filter\n\t\t\t *  @type  {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowpass = this.output = this.context.createBiquadFilter();\n\t        this._lowpass.Q.value = -3.0102999566398125;\n\t        this._lowpass.type = 'lowpass';\n\t        /**\n\t\t\t *  The dampening control of the feedback\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Param({\n\t            'param': this._lowpass.frequency,\n\t            'units': Tone.Type.Frequency,\n\t            'value': options.dampening\n\t        });\n\t        /**\n\t\t\t *  the feedback gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        //connections\n\t        this._delay.chain(this._lowpass, this._feedback, this._delay);\n\t        this._readOnly([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.LowpassCombFilter);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LowpassCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.LowpassCombFilter} this\n\t\t */\n\t    Tone.LowpassCombFilter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        this.resonance.dispose();\n\t        this.resonance = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._lowpass.disconnect();\n\t        this._lowpass = null;\n\t        this._feedback.disconnect();\n\t        this._feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.LowpassCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Merge brings two signals into the left and right \n\t\t *          channels of a single stereo channel.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var merge = new Tone.Merge().toMaster();\n\t\t * //routing a sine tone in the left channel\n\t\t * //and noise in the right channel\n\t\t * var osc = new Tone.Oscillator().connect(merge.left);\n\t\t * var noise = new Tone.Noise().connect(merge.right);\n\t\t * //starting our oscillators\n\t\t * noise.start();\n\t\t * osc.start();\n\t\t */\n\t    Tone.Merge = function () {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The left input channel.\n\t\t\t *  Alias for <code>input[0]</code>\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.left = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  The right input channel.\n\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.right = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  the merger node for the two channels\n\t\t\t *  @type {ChannelMergerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merger = this.output = this.context.createChannelMerger(2);\n\t        //connections\n\t        this.left.connect(this._merger, 0, 0);\n\t        this.right.connect(this._merger, 0, 1);\n\t        this.left.channelCount = 1;\n\t        this.right.channelCount = 1;\n\t        this.left.channelCountMode = 'explicit';\n\t        this.right.channelCountMode = 'explicit';\n\t    };\n\t    Tone.extend(Tone.Merge);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Merge} this\n\t\t */\n\t    Tone.Merge.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._merger.disconnect();\n\t        this._merger = null;\n\t        return this;\n\t    };\n\t    return Tone.Merge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n\t\t *          of an input signal with some averaging applied. It can also get the raw \n\t\t *          value of the input signal.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {String} type Either \"level\" or \"signal\". \n\t\t *  @param {Number} smoothing The amount of smoothing applied between frames.\n\t\t *  @example\n\t\t * var meter = new Tone.Meter();\n\t\t * var mic = new Tone.Microphone().start();\n\t\t * //connect mic to the meter\n\t\t * mic.connect(meter);\n\t\t * //the current level of the mic input\n\t\t * var level = meter.value;\n\t\t */\n\t    Tone.Meter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'type',\n\t            'smoothing'\n\t        ], Tone.Meter.defaults);\n\t        /**\n\t\t\t *  The type of the meter, either \"level\" or \"signal\". \n\t\t\t *  A \"level\" meter will return the volume level (rms) of the \n\t\t\t *  input signal and a \"signal\" meter will return\n\t\t\t *  the signal value of the input. \n\t\t\t *  @type  {String}\n\t\t\t */\n\t        this.type = options.type;\n\t        /**\n\t\t\t *  The analyser node which computes the levels.\n\t\t\t *  @private\n\t\t\t *  @type  {Tone.Analyser}\n\t\t\t */\n\t        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 512);\n\t        this._analyser.returnType = 'float';\n\t        /**\n\t\t\t *  The amount of carryover between the current and last frame. \n\t\t\t *  Only applied meter for \"level\" type.\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.smoothing = options.smoothing;\n\t        /**\n\t\t\t *  The last computed value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lastValue = 0;\n\t    };\n\t    Tone.extend(Tone.Meter);\n\t    /**\n\t\t *  @private\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Meter.Type = {\n\t        Level: 'level',\n\t        Signal: 'signal'\n\t    };\n\t    /**\n\t\t *  The defaults\n\t\t *  @type {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Meter.defaults = {\n\t        'smoothing': 0.8,\n\t        'type': Tone.Meter.Type.Level\n\t    };\n\t    /**\n\t\t * The current value of the meter. A value of 1 is\n\t\t * \"unity\".\n\t\t * @memberOf Tone.Meter#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Meter.prototype, 'value', {\n\t        get: function () {\n\t            var signal = this._analyser.analyse();\n\t            if (this.type === Tone.Meter.Type.Level) {\n\t                //rms\n\t                var sum = 0;\n\t                for (var i = 0; i < signal.length; i++) {\n\t                    sum += Math.pow(signal[i], 2);\n\t                }\n\t                var rms = Math.sqrt(sum / signal.length);\n\t                //smooth it\n\t                rms = Math.max(rms, this._lastValue * this.smoothing);\n\t                this._lastValue = rms;\n\t                //scale it\n\t                var unity = 0.35;\n\t                var val = rms / unity;\n\t                //scale the output curve\n\t                return Math.sqrt(val);\n\t            } else {\n\t                return signal[0];\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Meter} this\n\t\t */\n\t    Tone.Meter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t        return this;\n\t    };\n\t    return Tone.Meter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *\t@class  Tone.Split splits an incoming signal into left and right channels.\n\t\t *\t\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var split = new Tone.Split();\n\t\t * stereoSignal.connect(split);\n\t\t */\n\t    Tone.Split = function () {\n\t        this.createInsOuts(0, 2);\n\t        /** \n\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = this.context.createChannelSplitter(2);\n\t        /** \n\t\t\t *  Left channel output. \n\t\t\t *  Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.left = this.output[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Right channel output.\n\t\t\t *  Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.right = this.output[1] = new Tone.Gain();\n\t        //connections\n\t        this._splitter.connect(this.left, 0, 0);\n\t        this._splitter.connect(this.right, 1, 0);\n\t    };\n\t    Tone.extend(Tone.Split);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Split} this\n\t\t */\n\t    Tone.Split.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._splitter.disconnect();\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._splitter = null;\n\t        return this;\n\t    };\n\t    return Tone.Split;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels). <br><br>\n\t\t *         <code>\n\t\t *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n\t\t *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideSplit = function () {\n\t        this.createInsOuts(0, 2);\n\t        /**\n\t\t\t *  split the incoming signal into left and right channels\n\t\t\t *  @type  {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = this.input = new Tone.Split();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing. Alias for\n\t\t\t *  <code>output[0]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.mid = this.output[0] = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side output. Connect to side processing. Alias for\n\t\t\t *  <code>output[1]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.side = this.output[1] = new Tone.Expr('($0 - $1) * $2');\n\t        this._split.connect(this.mid, 0, 0);\n\t        this._split.connect(this.mid, 1, 1);\n\t        this._split.connect(this.side, 0, 0);\n\t        this._split.connect(this.side, 1, 1);\n\t        sqrtTwo.connect(this.mid, 0, 2);\n\t        sqrtTwo.connect(this.side, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideSplit);\n\t    /**\n\t\t *  a constant signal equal to 1 / sqrt(2)\n\t\t *  @type {Number}\n\t\t *  @signal\n\t\t *  @private\n\t\t *  @static\n\t\t */\n\t    var sqrtTwo = null;\n\t    Tone._initAudioContext(function () {\n\t        sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideSplit} this\n\t\t */\n\t    Tone.MidSideSplit.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels). \n\t\t *         MidSideMerge merges the mid and side signal after they've been seperated\n\t\t *         by Tone.MidSideSplit.<br><br>\n\t\t *         <code>\n\t\t *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n\t\t *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideMerge = function () {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The mid signal input. Alias for\n\t\t\t *  <code>input[0]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.mid = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Left\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._left = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side signal input. Alias for\n\t\t\t *  <code>input[1]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.side = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Right\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._right = new Tone.Expr('($0 - $1) * $2');\n\t        /**\n\t\t\t *  Merge the left/right signal back into a stereo signal.\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.mid.connect(this._left, 0, 0);\n\t        this.side.connect(this._left, 0, 1);\n\t        this.mid.connect(this._right, 0, 0);\n\t        this.side.connect(this._right, 0, 1);\n\t        this._left.connect(this._merge, 0, 0);\n\t        this._right.connect(this._merge, 0, 1);\n\t        sqrtTwo.connect(this._left, 0, 2);\n\t        sqrtTwo.connect(this._right, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideMerge);\n\t    /**\n\t\t *  A constant signal equal to 1 / sqrt(2).\n\t\t *  @type {Number}\n\t\t *  @signal\n\t\t *  @private\n\t\t *  @static\n\t\t */\n\t    var sqrtTwo = null;\n\t    Tone._initAudioContext(function () {\n\t        sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideMerge} this\n\t\t */\n\t    Tone.MidSideMerge.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._left.dispose();\n\t        this._left = null;\n\t        this._right.dispose();\n\t        this._right = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideMerge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.MidSideCompressor applies two different compressors to the mid\n\t\t *         and side signal components. See Tone.MidSideSplit. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @param {Object} options The options that are passed to the mid and side\n\t\t *                          compressors. \n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideCompressor = function (options) {\n\t        options = this.defaultArg(options, Tone.MidSideCompressor.defaults);\n\t        /**\n\t\t\t *  the mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = this.input = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  the mid/side recombination\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = this.output = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The compressor applied to the mid signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the side signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.side = new Tone.Compressor(options.side);\n\t        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t        this._readOnly([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MidSideCompressor);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MidSideCompressor.defaults = {\n\t        'mid': {\n\t            'ratio': 3,\n\t            'threshold': -24,\n\t            'release': 0.03,\n\t            'attack': 0.02,\n\t            'knee': 16\n\t        },\n\t        'side': {\n\t            'ratio': 6,\n\t            'threshold': -30,\n\t            'release': 0.25,\n\t            'attack': 0.03,\n\t            'knee': 10\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MidSideCompressor} this\n\t\t */\n\t    Tone.MidSideCompressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n\t\t *         where both left and right channels have the same value. This can be useful \n\t\t *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t */\n\t    Tone.Mono = function () {\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  merge the signal\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.input.connect(this._merge, 0, 0);\n\t        this.input.connect(this._merge, 0, 1);\n\t        this.input.gain.value = this.dbToGain(-10);\n\t    };\n\t    Tone.extend(Tone.Mono);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Mono} this\n\t\t */\n\t    Tone.Mono.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.Mono;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Object} options The low/mid/high compressor settings.\n\t\t *  @example\n\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t *  \t\"lowFrequency\" : 200,\n\t\t *  \t\"highFrequency\" : 1300\n\t\t *  \t\"low\" : {\n\t\t *  \t\t\"threshold\" : -12\n\t\t *  \t}\n\t\t *  })\n\t\t */\n\t    Tone.MultibandCompressor = function (options) {\n\t        options = this.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\t        /**\n\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._splitter.lowFrequency;\n\t        /**\n\t\t\t *  mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._splitter.highFrequency;\n\t        /**\n\t\t\t *  the output\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The compressor applied to the low frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.low = new Tone.Compressor(options.low);\n\t        /**\n\t\t\t *  The compressor applied to the mid frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the high frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.high = new Tone.Compressor(options.high);\n\t        //connect the compressor\n\t        this._splitter.low.chain(this.low, this.output);\n\t        this._splitter.mid.chain(this.mid, this.output);\n\t        this._splitter.high.chain(this.high, this.output);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandCompressor);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandCompressor.defaults = {\n\t        'low': Tone.Compressor.defaults,\n\t        'mid': Tone.Compressor.defaults,\n\t        'high': Tone.Compressor.defaults,\n\t        'lowFrequency': 250,\n\t        'highFrequency': 2000\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MultibandCompressor} this\n\t\t */\n\t    Tone.MultibandCompressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._splitter.dispose();\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.mid.dispose();\n\t        this.high.dispose();\n\t        this._splitter = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n\t\t *          support 3D. Panner uses the StereoPannerNode when available. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {NormalRange} [initialPan=0] The initail panner value (defaults to 0 = center)\n\t\t *  @example\n\t\t *  //pan the input signal hard right. \n\t\t *  var panner = new Tone.Panner(1);\n\t\t */\n\t    Tone.Panner = function (initialPan) {\n\t        if (this._hasStereoPanner) {\n\t            /**\n\t\t\t\t *  the panner node\n\t\t\t\t *  @type {StereoPannerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._panner = this.input = this.output = this.context.createStereoPanner();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = this._panner.pan;\n\t        } else {\n\t            /**\n\t\t\t\t *  the dry/wet knob\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._crossFade = new Tone.CrossFade();\n\t            /**\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._merger = this.output = new Tone.Merge();\n\t            /**\n\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._splitter = this.input = new Tone.Split();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\t            /**\n\t\t\t\t *  always sends 0\n\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._zero = new Tone.Zero();\n\t            /**\n\t\t\t\t *  The analog to gain conversion\n\t\t\t\t *  @type  {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._a2g = new Tone.AudioToGain();\n\t            //CONNECTIONS:\n\t            this._zero.connect(this._a2g);\n\t            this.pan.chain(this._a2g, this._crossFade.fade);\n\t            //left channel is a, right channel is b\n\t            this._splitter.connect(this._crossFade, 0, 0);\n\t            this._splitter.connect(this._crossFade, 1, 1);\n\t            //merge it back together\n\t            this._crossFade.a.connect(this._merger, 0, 0);\n\t            this._crossFade.b.connect(this._merger, 0, 1);\n\t        }\n\t        //initial value\n\t        this.pan.value = this.defaultArg(initialPan, 0);\n\t        this._readOnly('pan');\n\t    };\n\t    Tone.extend(Tone.Panner);\n\t    /**\n\t\t *  indicates if the panner is using the new StereoPannerNode internally\n\t\t *  @type  {boolean}\n\t\t *  @private\n\t\t */\n\t    Tone.Panner.prototype._hasStereoPanner = Tone.prototype.isFunction(Tone.context.createStereoPanner);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner} this\n\t\t */\n\t    Tone.Panner.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('pan');\n\t        if (this._hasStereoPanner) {\n\t            this._panner.disconnect();\n\t            this._panner = null;\n\t            this.pan = null;\n\t        } else {\n\t            this._zero.dispose();\n\t            this._zero = null;\n\t            this._crossFade.dispose();\n\t            this._crossFade = null;\n\t            this._splitter.dispose();\n\t            this._splitter = null;\n\t            this._merger.dispose();\n\t            this._merger = null;\n\t            this.pan.dispose();\n\t            this.pan = null;\n\t            this._a2g.dispose();\n\t            this._a2g = null;\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Panner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n\t\t *          Tries to normalize the API across various browsers. See Tone.Listener\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Number} positionX The initial x position.\n\t\t *  @param {Number} positionY The initial y position.\n\t\t *  @param {Number} positionZ The initial z position.\n\t\t */\n\t    Tone.Panner3D = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'positionX',\n\t            'positionY',\n\t            'positionZ'\n\t        ], Tone.Panner3D.defaults);\n\t        /**\n\t\t\t *  The panner node\n\t\t\t *  @type {PannerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = this.output = this.context.createPanner();\n\t        //set some values\n\t        this._panner.panningModel = options.panningModel;\n\t        this._panner.maxDistance = options.maxDistance;\n\t        this._panner.distanceModel = options.distanceModel;\n\t        this._panner.coneOuterGain = options.coneOuterGain;\n\t        this._panner.coneOuterAngle = options.coneOuterAngle;\n\t        this._panner.coneInnerAngle = options.coneInnerAngle;\n\t        this._panner.refDistance = options.refDistance;\n\t        this._panner.rolloffFactor = options.rolloffFactor;\n\t        /**\n\t\t\t *  Holds the current orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            options.orientationX,\n\t            options.orientationY,\n\t            options.orientationZ\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            options.positionX,\n\t            options.positionY,\n\t            options.positionZ\n\t        ];\n\t        // set the default position/orientation\n\t        this.orientationX = options.orientationX;\n\t        this.orientationY = options.orientationY;\n\t        this.orientationZ = options.orientationZ;\n\t        this.positionX = options.positionX;\n\t        this.positionY = options.positionY;\n\t        this.positionZ = options.positionZ;\n\t    };\n\t    Tone.extend(Tone.Panner3D);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t *  Defaults according to the specification\n\t\t */\n\t    Tone.Panner3D.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'orientationX': 0,\n\t        'orientationY': 0,\n\t        'orientationZ': 0,\n\t        'panningModel': 'equalpower',\n\t        'maxDistance': 10000,\n\t        'distanceModel': 'inverse',\n\t        'coneOuterGain': 0,\n\t        'coneOuterAngle': 360,\n\t        'coneInnerAngle': 360,\n\t        'refDistance': 1,\n\t        'rolloffFactor': 1\n\t    };\n\t    Tone.Panner3D.prototype._rampTimeConstant = 0.3;\n\t    /**\n\t\t *  Sets the position of the source in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setPosition = function (x, y, z) {\n\t        if (this._panner.positionX) {\n\t            var now = this.now();\n\t            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the source in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {\n\t        if (this._panner.orientationX) {\n\t            var now = this.now();\n\t            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setOrientation(x, y, z);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  Proxy a property on the panner to an exposed public propery\n\t\t *  @param  {String}  prop\n\t\t *  @private\n\t\t */\n\t    Tone.Panner3D._aliasProperty = function (prop) {\n\t        Object.defineProperty(Tone.Panner3D.prototype, prop, {\n\t            set: function (val) {\n\t                this._panner[prop] = val;\n\t            },\n\t            get: function () {\n\t                return this._panner[prop];\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t *  The panning model. Either \"equalpower\" or \"HRTF\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name panningModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('panningModel');\n\t    /**\n\t\t *  A reference distance for reducing volume as source move further from the listener\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name refDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('refDistance');\n\t    /**\n\t\t *  Describes how quickly the volume is reduced as source moves away from listener.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name rolloffFactor\n\t\t */\n\t    Tone.Panner3D._aliasProperty('rolloffFactor');\n\t    /**\n\t\t *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name distanceModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('distanceModel');\n\t    /**\n\t\t *  The angle, in degrees, inside of which there will be no volume reduction\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneInnerAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneInnerAngle');\n\t    /**\n\t\t *  The angle, in degrees, outside of which the volume will be reduced \n\t\t *  to a constant value of coneOuterGain\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterAngle');\n\t    /**\n\t\t *  The gain outside of the coneOuterAngle\n\t\t *  @type {Gain}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterGain\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterGain');\n\t    /**\n\t\t *  The maximum distance between source and listener, \n\t\t *  after which the volume will not be reduced any further.\n\t\t *  @type {Positive}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name maxDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('maxDistance');\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.dispose = function () {\n\t        this._panner.disconnect();\n\t        this._panner = null;\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    return Tone.Panner3D;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {AudioRange} pan the initial pan\n\t\t *  @param {number} volume The output volume. \n\t\t *  @example\n\t\t * //pan the incoming signal left and drop the volume\n\t\t * var panVol = new Tone.PanVol(0.25, -12);\n\t\t */\n\t    Tone.PanVol = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'pan',\n\t            'volume'\n\t        ], Tone.PanVol.defaults);\n\t        /**\n\t\t\t *  The panning node\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = new Tone.Panner(options.pan);\n\t        /**\n\t\t\t *  The L/R panning control.\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.pan = this._panner.pan;\n\t        /**\n\t\t\t *  The volume node\n\t\t\t *  @type {Tone.Volume}\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t *  The volume control in decibels. \n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        //connections\n\t        this._panner.connect(this._volume);\n\t        this._readOnly([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PanVol);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.PanVol.defaults = {\n\t        'pan': 0.5,\n\t        'volume': 0\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.PanVol} this\n\t\t */\n\t    Tone.PanVol.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this.pan = null;\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.PanVol;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlInterpolate will interpolate between given values based\n\t\t *         on the \"index\" property. Passing in an array or object literal\n\t\t *         will interpolate each of the parameters. Note (i.e. \"C3\")\n\t\t *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n\t\t *         assumed to be numbers. \n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n\t\t * interp.index = 0.75;\n\t\t * interp.value; //returns 1.5\n\t\t *\n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([\n\t\t * \t[2, 4, 5],\n\t\t * \t[9, 3, 2],\n\t\t * ]);\n\t\t * @param {Array} values The array of values to interpolate over\n\t\t * @param {Positive} index The initial interpolation index.\n\t\t * @extends {Tone}\n\t\t */\n\t    Tone.CtrlInterpolate = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'values',\n\t            'index'\n\t        ], Tone.CtrlInterpolate.defaults);\n\t        /**\n\t\t\t *  The values to interpolate between\n\t\t\t *  @type  {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The interpolated index between values. For example: a value of 1.5\n\t\t\t *  would interpolate equally between the value at index 1\n\t\t\t *  and the value at index 2. \n\t\t\t *  @example\n\t\t\t * interp.index = 0; \n\t\t\t * interp.value; //returns the value at 0\n\t\t\t * interp.index = 0.5;\n\t\t\t * interp.value; //returns the value between indices 0 and 1. \n\t\t\t *  @type  {Positive}\n\t\t\t */\n\t        this.index = options.index;\n\t    };\n\t    Tone.extend(Tone.CtrlInterpolate);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlInterpolate.defaults = {\n\t        'index': 0,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The current interpolated value based on the index\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlInterpolate#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {\n\t        get: function () {\n\t            var index = this.index;\n\t            index = Math.min(index, this.values.length - 1);\n\t            var lowerPosition = Math.floor(index);\n\t            var lower = this.values[lowerPosition];\n\t            var upper = this.values[Math.ceil(index)];\n\t            return this._interpolate(index - lowerPosition, lower, upper);\n\t        }\n\t    });\n\t    /**\n\t\t *  Internal interpolation routine\n\t\t *  @param  {NormalRange}  index  The index between the lower and upper\n\t\t *  @param  {*}  lower \n\t\t *  @param  {*}  upper \n\t\t *  @return  {*}  The interpolated value\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {\n\t        if (this.isArray(lower)) {\n\t            var retArray = [];\n\t            for (var i = 0; i < lower.length; i++) {\n\t                retArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t            }\n\t            return retArray;\n\t        } else if (this.isObject(lower)) {\n\t            var retObj = {};\n\t            for (var attr in lower) {\n\t                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t            }\n\t            return retObj;\n\t        } else {\n\t            lower = this._toNumber(lower);\n\t            upper = this._toNumber(upper);\n\t            return (1 - index) * lower + index * upper;\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert from the given type into a number\n\t\t *  @param  {Number|String}  value\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._toNumber = function (val) {\n\t        if (this.isNumber(val)) {\n\t            return val;\n\t        } else {\n\t            //otherwise assume that it's Time...\n\t            return this.toSeconds(val);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlInterpolate}  this\n\t\t */\n\t    Tone.CtrlInterpolate.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlInterpolate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n\t\t *         to Tone.CtrlMarkov.next will move to the next state. If the next\n\t\t *         state choice is an array, the next state is chosen randomly with\n\t\t *         even probability for all of the choices. For a weighted probability\n\t\t *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n\t\t *         The probabilities will be normalized and then chosen. If no next options\n\t\t *         are given for the current state, the state will stay there. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [\"end\", \"middle\"],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n\t\t *\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n\t\t * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n\t\t *  @param {Object} values An object with the state names as the keys\n\t\t *                         and the next state(s) as the values. \n\t\t */\n\t    Tone.CtrlMarkov = function (values, initial) {\n\t        /**\n\t\t\t *  The Markov values with states as the keys\n\t\t\t *  and next state(s) as the values. \n\t\t\t *  @type {Object}\n\t\t\t */\n\t        this.values = this.defaultArg(values, {});\n\t        /**\n\t\t\t *  The current state of the Markov values. The next\n\t\t\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t\t\t *  is invoked.\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this.value = this.defaultArg(initial, Object.keys(this.values)[0]);\n\t    };\n\t    Tone.extend(Tone.CtrlMarkov);\n\t    /**\n\t\t *  Returns the next state of the Markov values. \n\t\t *  @return  {String}\n\t\t */\n\t    Tone.CtrlMarkov.prototype.next = function () {\n\t        if (this.values.hasOwnProperty(this.value)) {\n\t            var next = this.values[this.value];\n\t            if (this.isArray(next)) {\n\t                var distribution = this._getProbDistribution(next);\n\t                var rand = Math.random();\n\t                var total = 0;\n\t                for (var i = 0; i < distribution.length; i++) {\n\t                    var dist = distribution[i];\n\t                    if (rand > total && rand < total + dist) {\n\t                        var chosen = next[i];\n\t                        if (this.isObject(chosen)) {\n\t                            this.value = chosen.value;\n\t                        } else {\n\t                            this.value = chosen;\n\t                        }\n\t                    }\n\t                    total += dist;\n\t                }\n\t            } else {\n\t                this.value = next;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Choose randomly from an array weighted options in the form \n\t\t *  {\"state\" : string, \"probability\" : number} or an array of values\n\t\t *  @param  {Array}  options \n\t\t *  @return  {Array}  The randomly selected choice\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {\n\t        var distribution = [];\n\t        var total = 0;\n\t        var needsNormalizing = false;\n\t        for (var i = 0; i < options.length; i++) {\n\t            var option = options[i];\n\t            if (this.isObject(option)) {\n\t                needsNormalizing = true;\n\t                distribution[i] = option.probability;\n\t            } else {\n\t                distribution[i] = 1 / options.length;\n\t            }\n\t            total += distribution[i];\n\t        }\n\t        if (needsNormalizing) {\n\t            //normalize the values\n\t            for (var j = 0; j < distribution.length; j++) {\n\t                distribution[j] = distribution[j] / total;\n\t            }\n\t        }\n\t        return distribution;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlMarkov}  this\n\t\t */\n\t    Tone.CtrlMarkov.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlMarkov;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Generate patterns from an array of values.\n\t\t *         Has a number of arpeggiation and randomized\n\t\t *         selection patterns. \n\t\t *           <ul>\n\t\t *  \t        <li>\"up\" - cycles upward</li>\n\t\t *  \t\t\t<li>\"down\" - cycles downward</li>\n\t\t *  \t\t\t<li>\"upDown\" - up then and down</li>\n\t\t *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n\t\t *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n\t\t *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n\t\t *  \t\t\t<li>\"random\" - randomly select an index</li>\n\t\t *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n\t\t *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n\t\t *     \t\t</ul>\n\t\t *  @param  {Array}  values   An array of options to choose from.\n\t\t *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.CtrlPattern = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'values',\n\t            'type'\n\t        ], Tone.CtrlPattern.defaults);\n\t        /**\n\t\t\t *  The array of values to arpeggiate over\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The current position in the values array\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.index = 0;\n\t        /**\n\t\t\t *  The type placeholder\n\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        /**\n\t\t\t *  Shuffled values for the RandomOnce type\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shuffled = null;\n\t        /**\n\t\t\t *  The direction of the movement\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._direction = null;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.CtrlPattern);\n\t    /**\n\t\t *  The Control Patterns\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t */\n\t    Tone.CtrlPattern.Type = {\n\t        Up: 'up',\n\t        Down: 'down',\n\t        UpDown: 'upDown',\n\t        DownUp: 'downUp',\n\t        AlternateUp: 'alternateUp',\n\t        AlternateDown: 'alternateDown',\n\t        Random: 'random',\n\t        RandomWalk: 'randomWalk',\n\t        RandomOnce: 'randomOnce'\n\t    };\n\t    /**\n\t\t *  The default values. \n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlPattern.defaults = {\n\t        'type': Tone.CtrlPattern.Type.Up,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The value at the current index of the pattern.\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {\n\t        get: function () {\n\t            //some safeguards\n\t            if (this.values.length === 0) {\n\t                return;\n\t            } else if (this.values.length === 1) {\n\t                return this.values[0];\n\t            }\n\t            this.index = Math.min(this.index, this.values.length - 1);\n\t            var val = this.values[this.index];\n\t            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                if (this.values.length !== this._shuffled.length) {\n\t                    this._shuffleValues();\n\t                }\n\t                val = this.values[this._shuffled[this.index]];\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern used to select the next\n\t\t *  item from the values array\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._shuffled = null;\n\t            //the first index\n\t            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this.index = 0;\n\t            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t            //the direction\n\t            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t            //randoms\n\t            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                this._shuffleValues();\n\t            } else if (this._type === Tone.CtrlPattern.Random) {\n\t                this.index = Math.floor(Math.random() * this.values.length);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Return the next value given the current position\n\t\t *  and pattern.\n\t\t *  @return {*} The next value\n\t\t */\n\t    Tone.CtrlPattern.prototype.next = function () {\n\t        var type = this.type;\n\t        //choose the next index\n\t        if (type === Tone.CtrlPattern.Type.Up) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Down) {\n\t            this.index--;\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index++;\n\t            } else {\n\t                this.index--;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this.index >= this.values.length) {\n\t                this.index = this.values.length - 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Random) {\n\t            this.index = Math.floor(Math.random() * this.values.length);\n\t        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {\n\t            if (Math.random() < 0.5) {\n\t                this.index--;\n\t                this.index = Math.max(this.index, 0);\n\t            } else {\n\t                this.index++;\n\t                this.index = Math.min(this.index, this.values.length - 1);\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                //reshuffle the values for next time\n\t                this._shuffleValues();\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 2;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Shuffles the values and places the results into the _shuffled\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlPattern.prototype._shuffleValues = function () {\n\t        var copy = [];\n\t        this._shuffled = [];\n\t        for (var i = 0; i < this.values.length; i++) {\n\t            copy[i] = i;\n\t        }\n\t        while (copy.length > 0) {\n\t            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t            this._shuffled.push(randVal[0]);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.CtrlPattern} this\n\t\t */\n\t    Tone.CtrlPattern.prototype.dispose = function () {\n\t        this._shuffled = null;\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlPattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Choose a random value.\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var randomWalk = new Tone.CtrlRandom({\n\t\t * \t\"min\" : 0,\n\t\t * \t\"max\" : 10,\n\t\t * \t\"integer\" : true\n\t\t * });\n\t\t * randomWalk.eval();\n\t\t *\n\t\t *  @param {Number|Time=} min The minimum return value.\n\t\t *  @param {Number|Time=} max The maximum return value.\n\t\t */\n\t    Tone.CtrlRandom = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'min',\n\t            'max'\n\t        ], Tone.CtrlRandom.defaults);\n\t        /**\n\t\t\t *  The minimum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.min = options.min;\n\t        /**\n\t\t\t *  The maximum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.max = options.max;\n\t        /**\n\t\t\t *  If the return value should be an integer\n\t\t\t *  @type  {Boolean}\n\t\t\t */\n\t        this.integer = options.integer;\n\t    };\n\t    Tone.extend(Tone.CtrlRandom);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlRandom.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'integer': false\n\t    };\n\t    /**\n\t\t *  Return a random value between min and max. \n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlRandom#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {\n\t        get: function () {\n\t            var min = this.toSeconds(this.min);\n\t            var max = this.toSeconds(this.max);\n\t            var rand = Math.random();\n\t            var val = rand * min + (1 - rand) * max;\n\t            if (this.integer) {\n\t                val = Math.floor(val);\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    return Tone.CtrlRandom;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t *          classes that make requests for audio files such as Tone.Player,\n\t\t *          Tone.Sampler and Tone.Convolver.\n\t\t *          <br><br>\n\t\t *          Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t *  \t\tprovides static methods which keep track of the loading progress \n\t\t *  \t\tof all of the buffers. These methods are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t\t *\n\t\t *  @constructor \n\t\t *  @extends {Tone}\n\t\t *  @param {AudioBuffer|string} url The url to load, or the audio buffer to set. \n\t\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded. \n\t\t *                            It's recommended to use Tone.Buffer.onload instead \n\t\t *                            since it will give you a callback when ALL buffers are loaded.\n\t\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t\t *  @example\n\t\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t\t * \t//the buffer is now available.\n\t\t * \tvar buff = buffer.get();\n\t\t * });\n\t\t */\n\t    Tone.Buffer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload',\n\t            'onerror'\n\t        ], Tone.Buffer.defaults);\n\t        /**\n\t\t\t *  stores the loaded AudioBuffer\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        /**\n\t\t\t *  indicates if the buffer should be reversed or not\n\t\t\t *  @type {Boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._reversed = options.reverse;\n\t        /**\n\t\t\t *  The XHR\n\t\t\t *  @type  {XMLHttpRequest}\n\t\t\t *  @private\n\t\t\t */\n\t        this._xhr = null;\n\t        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {\n\t            this.set(options.url);\n\t            // invoke the onload callback\n\t            if (options.onload) {\n\t                options.onload(this);\n\t            }\n\t        } else if (this.isString(options.url)) {\n\t            this.load(options.url, options.onload, options.onerror);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffer);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Buffer.defaults = {\n\t        'url': undefined,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t\t *  of this buffer.\n\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.set = function (buffer) {\n\t        if (buffer instanceof Tone.Buffer) {\n\t            this._buffer = buffer.get();\n\t        } else {\n\t            this._buffer = buffer;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t\t */\n\t    Tone.Buffer.prototype.get = function () {\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  Makes an xhr reqest for the selected url then decodes\n\t\t *  the file as an audio buffer. Invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {String} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t\t */\n\t    Tone.Buffer.prototype.load = function (url, onload, onerror) {\n\t        var promise = new Promise(function (load, error) {\n\t            this._xhr = Tone.Buffer.load(url, //success\n\t            function (buff) {\n\t                this._xhr = null;\n\t                this.set(buff);\n\t                load(this);\n\t                if (onload) {\n\t                    onload(this);\n\t                }\n\t            }.bind(this), //error\n\t            function (err) {\n\t                this._xhr = null;\n\t                error(err);\n\t                if (onerror) {\n\t                    onerror(err);\n\t                }\n\t            }.bind(this));\n\t        }.bind(this));\n\t        return promise;\n\t    };\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._buffer = null;\n\t        if (this._xhr) {\n\t            Tone.Buffer._currentDownloads--;\n\t            this._xhr.abort();\n\t            this._xhr = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * If the buffer is loaded or not\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {\n\t        get: function () {\n\t            return this.length > 0;\n\t        }\n\t    });\n\t    /**\n\t\t * The duration of the buffer. \n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name duration\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'duration', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.duration;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The length of the buffer in samples\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name length\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'length', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.length;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of discrete audio channels. Returns 0 if no buffer\n\t\t * is loaded.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name numberOfChannels\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.numberOfChannels;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the audio buffer from the array\n\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t *  @param {Number} [channels=1] The number of channels contained in the array. \n\t\t *                               If the channel is more than 1, the input array\n\t\t *                               is expected to be a multidimensional array\n\t\t *                               with dimensions equal to the number of channels.\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.fromArray = function (array) {\n\t        var isMultidimensional = array[0].length > 0;\n\t        var channels = isMultidimensional ? array.length : 1;\n\t        var len = isMultidimensional ? array[0].length : array.length;\n\t        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t        if (!isMultidimensional && channels === 1) {\n\t            array = [array];\n\t        }\n\t        for (var c = 0; c < channels; c++) {\n\t            if (this.isFunction(buffer.copyToChannel)) {\n\t                buffer.copyToChannel(array[c], c);\n\t            } else {\n\t                var channel = buffer.getChannelData(c);\n\t                var channelArray = array[c];\n\t                for (var i = 0; i < channelArray.length; i++) {\n\t                    channel[i] = channelArray[i];\n\t                }\n\t            }\n\t        }\n\t        this._buffer = buffer;\n\t        return this;\n\t    };\n\t    /**\n\t\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional \n\t\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t *  @return {Array}\n\t\t */\n\t    Tone.Buffer.prototype.toArray = function (channel) {\n\t        if (this.isNumber(channel)) {\n\t            return this._buffer.getChannelData(channel);\n\t        } else {\n\t            var ret = [];\n\t            for (var c = 0; c < this.numberOfChannels; c++) {\n\t                ret[c] = new Float32Array(this.length);\n\t                if (this.isFunction(this._buffer.copyFromChannel)) {\n\t                    this._buffer.copyFromChannel(ret[c], c);\n\t                } else {\n\t                    var channelData = this._buffer.getChannelData(c);\n\t                    var retArray = ret[c];\n\t                    for (var i = 0; i < channelData.length; i++) {\n\t                        retArray[i] = channelData[i];\n\t                    }\n\t                }\n\t            }\n\t            if (ret.length === 1) {\n\t                return ret[0];\n\t            } else {\n\t                return ret;\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Cut a subsection of the array and return a buffer of the\n\t\t *  subsection. Does not modify the original buffer\n\t\t *  @param {Time} start The time to start the slice\n\t\t *  @param {Time=} end The end time to slice. If none is given\n\t\t *                     will default to the end of the buffer\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.slice = function (start, end) {\n\t        end = this.defaultArg(end, this.duration);\n\t        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t        var replacement = [];\n\t        for (var i = 0; i < this.numberOfChannels; i++) {\n\t            replacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t        }\n\t        var retBuffer = new Tone.Buffer().fromArray(replacement);\n\t        return retBuffer;\n\t    };\n\t    /**\n\t\t *  Reverse the buffer.\n\t\t *  @private\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype._reverse = function () {\n\t        if (this.loaded) {\n\t            for (var i = 0; i < this._buffer.numberOfChannels; i++) {\n\t                Array.prototype.reverse.call(this._buffer.getChannelData(i));\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Reverse the buffer.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._reversed;\n\t        },\n\t        set: function (rev) {\n\t            if (this._reversed !== rev) {\n\t                this._reversed = rev;\n\t                this._reverse();\n\t            }\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // STATIC METHODS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //statically inherits Emitter methods\n\t    Tone.Emitter.mixin(Tone.Buffer);\n\t    /**\n\t\t *  the static queue for all of the xhr requests\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t    Tone.Buffer._downloadQueue = [];\n\t    /**\n\t\t *  the total number of downloads\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Buffer._currentDownloads = 0;\n\t    /**\n\t\t *  A path which is prefixed before every url.\n\t\t *  @type  {String}\n\t\t *  @static\n\t\t */\n\t    Tone.Buffer.baseUrl = '';\n\t    /**\n\t\t *  Loads a url using XMLHttpRequest.\n\t\t *  @param {String} url\n\t\t *  @param {Function} onload\n\t\t *  @param {Function} onerror\n\t\t *  @param {Function} onprogress\n\t\t *  @return {XMLHttpRequest}\n\t\t */\n\t    Tone.Buffer.load = function (url, onload, onerror) {\n\t        //default\n\t        onload = onload || Tone.noOp;\n\t        function onError(e) {\n\t            Tone.Buffer._currentDownloads--;\n\t            if (onerror) {\n\t                onerror(e);\n\t            } else {\n\t                throw new Error(e);\n\t            }\n\t        }\n\t        function onProgress() {\n\t            //calculate the progress\n\t            var totalProgress = 0;\n\t            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {\n\t                totalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t            }\n\t            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);\n\t        }\n\t        var request = new XMLHttpRequest();\n\t        request.open('GET', Tone.Buffer.baseUrl + url, true);\n\t        request.responseType = 'arraybuffer';\n\t        //start out as 0\n\t        request.progress = 0;\n\t        Tone.Buffer._currentDownloads++;\n\t        Tone.Buffer._downloadQueue.push(request);\n\t        request.addEventListener('load', function () {\n\t            if (request.status === 200) {\n\t                Tone.context.decodeAudioData(request.response, function (buff) {\n\t                    request.progress = 1;\n\t                    onProgress();\n\t                    onload(buff);\n\t                    Tone.Buffer._currentDownloads--;\n\t                    if (Tone.Buffer._currentDownloads === 0) {\n\t                        // clear the downloads\n\t                        Tone.Buffer._downloadQueue = [];\n\t                        //emit the event at the end\n\t                        Tone.Buffer.emit('load');\n\t                    }\n\t                }, function () {\n\t                    onError('Tone.Buffer: could not decode audio data: ' + url);\n\t                });\n\t            } else {\n\t                onError('Tone.Buffer: could not locate file: ' + url);\n\t            }\n\t        });\n\t        request.addEventListener('error', onError);\n\t        request.addEventListener('progress', function (event) {\n\t            if (event.lengthComputable) {\n\t                //only go to 95%, the last 5% is when the audio is decoded\n\t                request.progress = event.loaded / event.total * 0.95;\n\t                onProgress();\n\t            }\n\t        });\n\t        request.send();\n\t        return request;\n\t    };\n\t    /**\n\t\t *  Checks a url's extension to see if the current browser can play that file type.\n\t\t *  @param {String} url The url/extension to test\n\t\t *  @return {Boolean} If the file extension can be played\n\t\t *  @static\n\t\t *  @example\n\t\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t\t */\n\t    Tone.Buffer.supportsType = function (url) {\n\t        var extension = url.split('.');\n\t        extension = extension[extension.length - 1];\n\t        var response = document.createElement('audio').canPlayType('audio/' + extension);\n\t        return response !== '';\n\t    };\n\t    return Tone.Buffer;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class A data structure for holding multiple buffers.\n\t\t *  \n\t\t *  @param  {Object|Array}    urls      An object literal or array\n\t\t *                                      of urls to load.\n\t\t *  @param  {Function=}  callback  The callback to invoke when\n\t\t *                                 the buffers are loaded. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * //load a whole bank of piano samples\n\t\t * var pianoSamples = new Tone.Buffers({\n\t\t * \t\"C4\" : \"path/to/C4.mp3\"\n\t\t * \t\"C#4\" : \"path/to/C#4.mp3\"\n\t\t * \t\"D4\" : \"path/to/D4.mp3\"\n\t\t * \t\"D#4\" : \"path/to/D#4.mp3\"\n\t\t * \t...\n\t\t * }, function(){\n\t\t * \t//play one of the samples when they all load\n\t\t * \tplayer.buffer = pianoSamples.get(\"C4\");\n\t\t * \tplayer.start();\n\t\t * });\n\t\t * \n\t\t */\n\t    Tone.Buffers = function (urls, onload, baseUrl) {\n\t        /**\n\t\t\t *  All of the buffers\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffers = {};\n\t        /**\n\t\t\t *  A path which is prefixed before every url.\n\t\t\t *  @type  {String}\n\t\t\t */\n\t        this.baseUrl = this.defaultArg(baseUrl, '');\n\t        urls = this._flattenUrls(urls);\n\t        this._loadingCount = 0;\n\t        //add each one\n\t        for (var key in urls) {\n\t            this._loadingCount++;\n\t            this.add(key, urls[key], this._bufferLoaded.bind(this, onload));\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffers);\n\t    /**\n\t\t *  True if the buffers object has a buffer by that name.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Boolean}\n\t\t */\n\t    Tone.Buffers.prototype.has = function (name) {\n\t        return this._buffers.hasOwnProperty(name);\n\t    };\n\t    /**\n\t\t *  Get a buffer by name. If an array was loaded, \n\t\t *  then use the array index.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Tone.Buffer}\n\t\t */\n\t    Tone.Buffers.prototype.get = function (name) {\n\t        if (this.has(name)) {\n\t            return this._buffers[name];\n\t        } else {\n\t            throw new Error('Tone.Buffers: no buffer named ' + name);\n\t        }\n\t    };\n\t    /**\n\t\t *  A buffer was loaded. decrement the counter.\n\t\t *  @param  {Function}  callback \n\t\t *  @private\n\t\t */\n\t    Tone.Buffers.prototype._bufferLoaded = function (callback) {\n\t        this._loadingCount--;\n\t        if (this._loadingCount === 0 && callback) {\n\t            callback(this);\n\t        }\n\t    };\n\t    /**\n\t\t * If the buffers are loaded or not\n\t\t * @memberOf Tone.Buffers#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {\n\t        get: function () {\n\t            var isLoaded = true;\n\t            for (var buffName in this._buffers) {\n\t                var buff = this.get(buffName);\n\t                isLoaded = isLoaded && buff.loaded;\n\t            }\n\t            return isLoaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a buffer by name and url to the Buffers\n\t\t *  @param  {String}    name      A unique name to give\n\t\t *                                the buffer\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke \n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Buffers.prototype.add = function (name, url, callback) {\n\t        callback = this.defaultArg(callback, Tone.noOp);\n\t        if (url instanceof Tone.Buffer) {\n\t            this._buffers[name] = url;\n\t            callback(this);\n\t        } else if (url instanceof AudioBuffer) {\n\t            this._buffers[name] = new Tone.Buffer(url);\n\t            callback(this);\n\t        } else if (this.isString(url)) {\n\t            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Flatten an object into a single depth object. \n\t\t *  thanks to https://gist.github.com/penguinboy/762197\n\t\t *  @param   {Object} ob \t\n\t\t *  @return  {Object}    \n\t\t *  @private\n\t\t */\n\t    Tone.Buffers.prototype._flattenUrls = function (ob) {\n\t        var toReturn = {};\n\t        for (var i in ob) {\n\t            if (!ob.hasOwnProperty(i))\n\t                continue;\n\t            if (this.isObject(ob[i])) {\n\t                var flatObject = this._flattenUrls(ob[i]);\n\t                for (var x in flatObject) {\n\t                    if (!flatObject.hasOwnProperty(x))\n\t                        continue;\n\t                    toReturn[i + '.' + x] = flatObject[x];\n\t                }\n\t            } else {\n\t                toReturn[i] = ob[i];\n\t            }\n\t        }\n\t        return toReturn;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Buffers} this\n\t\t */\n\t    Tone.Buffers.prototype.dispose = function () {\n\t        for (var name in this._buffers) {\n\t            this._buffers[name].dispose();\n\t        }\n\t        this._buffers = null;\n\t        return this;\n\t    };\n\t    return Tone.Buffers;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  buses are another way of routing audio\n\t\t *\n\t\t *  augments Tone.prototype to include send and recieve\n\t\t */\n\t    /**\n\t\t  *  All of the routes\n\t\t  *  \n\t\t  *  @type {Object}\n\t\t  *  @static\n\t\t  *  @private\n\t\t  */\n\t    var Buses = {};\n\t    /**\n\t\t *  Send this signal to the channel name. \n\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t *  @param  {Decibels} amount The amount of the source to send to the bus. \n\t\t *  @return {GainNode} The gain node which connects this node to the desired channel. \n\t\t *                     Can be used to adjust the levels of the send.\n\t\t *  @example\n\t\t * source.send(\"reverb\", -12);\n\t\t */\n\t    Tone.prototype.send = function (channelName, amount) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        amount = this.defaultArg(amount, 0);\n\t        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\t        this.output.chain(sendKnob, Buses[channelName]);\n\t        return sendKnob;\n\t    };\n\t    /**\n\t\t *  Recieve the input from the desired channelName to the input\n\t\t *\n\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t *  @param {AudioNode} [input] If no input is selected, the\n\t\t *                                         input of the current node is\n\t\t *                                         chosen. \n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * reverbEffect.receive(\"reverb\");\n\t\t */\n\t    Tone.prototype.receive = function (channelName, input) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        if (this.isUndef(input)) {\n\t            input = this.input;\n\t        }\n\t        Buses[channelName].connect(input);\n\t        return this;\n\t    };\n\t    //remove all the send/receives when a new audio context is passed in\n\t    Tone._initAudioContext(function () {\n\t        Buses = {};\n\t    });\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space \n\t\t *          using a right-handed cartesian coordinate system. \n\t\t *          The units used in the coordinate system are not defined; \n\t\t *          these coordinates are independent/invariant of any particular \n\t\t *          units such as meters or feet. Tone.Panner3D objects have an forward \n\t\t *          vector representing the direction the sound is projecting. Additionally, \n\t\t *          they have a sound cone representing how directional the sound is. \n\t\t *          For example, the sound could be omnidirectional, in which case it would \n\t\t *          be heard anywhere regardless of its forward, or it can be more directional \n\t\t *          and heard only if it is facing the listener. Tone.Listener objects \n\t\t *          (representing a person's ears) have an forward and up vector \n\t\t *          representing in which direction the person is facing. Because both the \n\t\t *          source stream and the listener can be moving, they both have a velocity \n\t\t *          vector representing both the speed and direction of movement. Taken together, \n\t\t *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n\t\t *          <br><br>\n\t\t *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t *  @param {Number} positionX The initial x position.\n\t\t *  @param {Number} positionY The initial y position.\n\t\t *  @param {Number} positionZ The initial z position.\n\t\t */\n\t    Tone.Listener = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'positionX',\n\t            'positionY',\n\t            'positionZ'\n\t        ], ListenerConstructor.defaults);\n\t        /**\n\t\t\t *  The listener node\n\t\t\t *  @type {AudioListener}\n\t\t\t *  @private\n\t\t\t */\n\t        this._listener = this.context.listener;\n\t        /**\n\t\t\t *  Holds the current forward orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            options.forwardX,\n\t            options.forwardY,\n\t            options.forwardZ,\n\t            options.upX,\n\t            options.upY,\n\t            options.upZ\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            options.positionX,\n\t            options.positionY,\n\t            options.positionZ\n\t        ];\n\t        // set the default position/forward\n\t        this.forwardX = options.forwardX;\n\t        this.forwardY = options.forwardY;\n\t        this.forwardZ = options.forwardZ;\n\t        this.upX = options.upX;\n\t        this.upY = options.upY;\n\t        this.upZ = options.upZ;\n\t        this.positionX = options.positionX;\n\t        this.positionY = options.positionY;\n\t        this.positionZ = options.positionZ;\n\t    };\n\t    Tone.extend(Tone.Listener);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t *  Defaults according to the specification\n\t\t */\n\t    Tone.Listener.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'forwardX': 0,\n\t        'forwardY': 0,\n\t        'forwardZ': 1,\n\t        'upX': 0,\n\t        'upY': 1,\n\t        'upZ': 0\n\t    };\n\t    Tone.Listener.prototype._rampTimeConstant = 0.3;\n\t    /**\n\t\t *  Sets the position of the listener in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setPosition = function (x, y, z) {\n\t        if (this._listener.positionX) {\n\t            var now = this.now();\n\t            this._listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._listener.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the listener using two vectors, the forward\n\t\t *  vector (which direction the listener is facing) and the up vector \n\t\t *  (which the up direction of the listener). An up vector\n\t\t *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction. \n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @param  {Number}  upX\n\t\t *  @param  {Number}  upY\n\t\t *  @param  {Number}  upZ\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {\n\t        if (this._listener.forwardX) {\n\t            var now = this.now();\n\t            this._listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t            this._listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t            this._listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t            this._listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t        } else {\n\t            this._listener.setOrientation(x, y, z, upX, upY, upZ);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upX', {\n\t        set: function (pos) {\n\t            this._orientation[3] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[3];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upY', {\n\t        set: function (pos) {\n\t            this._orientation[4] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[4];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upZ', {\n\t        set: function (pos) {\n\t            this._orientation[5] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[5];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.dispose = function () {\n\t        this._listener.disconnect();\n\t        this._listener = null;\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    //SINGLETON SETUP\n\t    var ListenerConstructor = Tone.Listener;\n\t    Tone._initAudioContext(function () {\n\t        if (typeof Tone.Listener === 'function') {\n\t            //a single listener object\n\t            Tone.Listener = new Tone.Listener();\n\t        } else {\n\t            //make new Listener insides\n\t            ListenerConstructor.call(Tone.Listener);\n\t        }\n\t    });\n\t    //END SINGLETON SETUP\n\t    return Tone.Listener;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n\t\t * \t        the effectSend and effectReturn GainNodes, then control the amount of\n\t\t * \t        effect which goes to the output using the wet control.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {NormalRange|Object} [wet] The starting wet value. \n\t\t */\n\t    Tone.Effect = function () {\n\t        this.createInsOuts(1, 1);\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control is how much of the effected\n\t\t\t *  will pass through to the output. 1 = 100% effected\n\t\t\t *  signal, 0 = 100% dry signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSend = new Tone.Gain();\n\t        /**\n\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturn = new Tone.Gain();\n\t        //connections\n\t        this.input.connect(this._dryWet.a);\n\t        this.input.connect(this.effectSend);\n\t        this.effectReturn.connect(this._dryWet.b);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Effect.defaults = { 'wet': 1 };\n\t    /**\n\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t *  @param  {Tone} effect\n\t\t *  @private\n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.connectEffect = function (effect) {\n\t        this.effectSend.chain(effect, this.effectReturn);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this.effectSend.dispose();\n\t        this.effectSend = null;\n\t        this.effectReturn.dispose();\n\t        this.effectReturn = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.Effect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n\t\t *         Setting the LFO rate and depth allows for control over the filter modulation rate \n\t\t *         and depth.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Time|Object} [frequency] The rate of the LFO.\n\t\t *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n\t \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n\t\t *  @example\n\t\t * //create an autofilter and start it's LFO\n\t\t * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the filter and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n\t\t */\n\t    Tone.AutoFilter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'baseFrequency',\n\t            'octaves'\n\t        ], Tone.AutoFilter.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the filter cutoff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth\n\t        });\n\t        /**\n\t\t\t * The range of the filter modulating between the min and max frequency. \n\t\t\t * 0 = no modulation. 1 = full modulation.\n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t * How fast the filter modulates between min and max. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The filter node\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The octaves placeholder\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = 0;\n\t        //connections\n\t        this.connectEffect(this.filter);\n\t        this._lfo.connect(this.filter.frequency);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.octaves = options.octaves;\n\t        this.baseFrequency = options.baseFrequency;\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoFilter, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoFilter.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1,\n\t        'baseFrequency': 200,\n\t        'octaves': 2.6,\n\t        'filter': {\n\t            'type': 'lowpass',\n\t            'rolloff': -12,\n\t            'Q': 1\n\t        }\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the filter to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum value of the filter's cutoff frequency.\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Frequency}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._lfo.min;\n\t        },\n\t        set: function (freq) {\n\t            this._lfo.min = this.toFrequency(freq);\n\t            //and set the max\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value of the filter's cutoff frequency. \n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (oct) {\n\t            this._octaves = oct;\n\t            this._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n\t\t *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n\t\t *  @example\n\t\t * //create an autopanner and start it's LFO\n\t\t * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the panner and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n\t\t */\n\t    Tone.AutoPanner = function () {\n\t        var options = this.optionsObject(arguments, ['frequency'], Tone.AutoPanner.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the panning\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth,\n\t            'min': -1,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t * The amount of panning between left and right. \n\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t *  the panner node which does the panning\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = new Tone.Panner();\n\t        /**\n\t\t\t * How fast the panner modulates between left and right. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        //connections\n\t        this.connectEffect(this._panner);\n\t        this._lfo.connect(this._panner.pan);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoPanner, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoPanner.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the panner to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the panner from the transport\n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this._writable([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoPanner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n\t\t *          The frequency of the filter is adjusted proportionally to the \n\t\t *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set \n\t\t *                                            to at the low point of the wah\n\t\t *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n\t\t *                                the filter will sweep to when fully open\n\t\t *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for \n\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t *  @example\n\t\t * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n\t\t * //initialize the synth and connect to autowah\n\t\t * var synth = new Synth.connect(autoWah);\n\t\t * //Q value influences the effect of the wah - default is 2\n\t\t * autoWah.Q.value = 6;\n\t\t * //more audible on higher notes\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\")\n\t\t */\n\t    Tone.AutoWah = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'baseFrequency',\n\t            'octaves',\n\t            'sensitivity'\n\t        ], Tone.AutoWah.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The envelope follower. Set the attack/release\n\t\t\t *  timing to adjust how the envelope is followed. \n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this.follower = new Tone.Follower(options.follower);\n\t        /**\n\t\t\t *  scales the follower value to the frequency domain\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  the input gain to adjust the sensitivity\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputBoost = new Tone.Gain();\n\t        /**\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bandpass = new Tone.Filter({\n\t            'rolloff': -48,\n\t            'frequency': 0,\n\t            'Q': options.Q\n\t        });\n\t        /**\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._peaking = new Tone.Filter(0, 'peaking');\n\t        this._peaking.gain.value = options.gain;\n\t        /**\n\t\t\t * The gain of the filter.\n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.gain = this._peaking.gain;\n\t        /**\n\t\t\t * The quality of the filter.\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.Q = this._bandpass.Q;\n\t        //the control signal path\n\t        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t        this._sweepRange.connect(this._bandpass.frequency);\n\t        this._sweepRange.connect(this._peaking.frequency);\n\t        //the filtered path\n\t        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t        //set the initial value\n\t        this._setSweepRange();\n\t        this.sensitivity = options.sensitivity;\n\t        this._readOnly([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AutoWah, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoWah.defaults = {\n\t        'baseFrequency': 100,\n\t        'octaves': 6,\n\t        'sensitivity': 0,\n\t        'Q': 2,\n\t        'gain': 2,\n\t        'follower': {\n\t            'attack': 0.3,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * The number of octaves that the filter will sweep above the \n\t\t * baseFrequency. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Number}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The base frequency from which the sweep will start from.\n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (baseFreq) {\n\t            this._baseFrequency = baseFreq;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Decibels}\n\t\t * @name sensitivity\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {\n\t        get: function () {\n\t            return this.gainToDb(1 / this._inputBoost.gain.value);\n\t        },\n\t        set: function (sensitivy) {\n\t            this._inputBoost.gain.value = 1 / this.dbToGain(sensitivy);\n\t        }\n\t    });\n\t    /**\n\t\t *  sets the sweep range of the scaler\n\t\t *  @private\n\t\t */\n\t    Tone.AutoWah.prototype._setSweepRange = function () {\n\t        this._sweepRange.min = this._baseFrequency;\n\t        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.AutoWah} this\n\t\t */\n\t    Tone.AutoWah.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this.follower.dispose();\n\t        this.follower = null;\n\t        this._sweepRange.dispose();\n\t        this._sweepRange = null;\n\t        this._bandpass.dispose();\n\t        this._bandpass = null;\n\t        this._peaking.dispose();\n\t        this._peaking = null;\n\t        this._inputBoost.dispose();\n\t        this._inputBoost = null;\n\t        this._writable([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.gain = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoWah;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth. \n\t\t *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n\t\t *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n\t\t *                       of 1 to 8. \n\t\t *  @example\n\t\t * //initialize crusher and route a synth through it\n\t\t * var crusher = new Tone.BitCrusher(4).toMaster();\n\t\t * var synth = new Tone.MonoSynth().connect(crusher);\n\t\t */\n\t    Tone.BitCrusher = function () {\n\t        var options = this.optionsObject(arguments, ['bits'], Tone.BitCrusher.defaults);\n\t        Tone.Effect.call(this, options);\n\t        var invStepSize = 1 / Math.pow(2, options.bits - 1);\n\t        /**\n\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = new Tone.Subtract();\n\t        /**\n\t\t\t *  The mod function\n\t\t\t *  @type  {Tone.Modulo}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulo = new Tone.Modulo(invStepSize);\n\t        /**\n\t\t\t *  keeps track of the bits\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bits = options.bits;\n\t        //connect it up\n\t        this.effectSend.fan(this._subtract, this._modulo);\n\t        this._modulo.connect(this._subtract, 0, 1);\n\t        this._subtract.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.BitCrusher, Tone.Effect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.BitCrusher.defaults = { 'bits': 4 };\n\t    /**\n\t\t * The bit depth of the effect. Nominal range of 1-8. \n\t\t * @memberOf Tone.BitCrusher#\n\t\t * @type {number}\n\t\t * @name bits\n\t\t */\n\t    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {\n\t        get: function () {\n\t            return this._bits;\n\t        },\n\t        set: function (bits) {\n\t            this._bits = bits;\n\t            var invStepSize = 1 / Math.pow(2, bits - 1);\n\t            this._modulo.value = invStepSize;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.BitCrusher} this\n\t\t */\n\t    Tone.BitCrusher.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modulo.dispose();\n\t        this._modulo = null;\n\t        return this;\n\t    };\n\t    return Tone.BitCrusher;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n\t\t *         for making different types of distortion sounds.\n\t\t *         Note that odd orders sound very different from even ones, \n\t\t *         and order = 1 is no change. \n\t\t *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t *  @example\n\t\t * //create a new cheby\n\t\t * var cheby = new Tone.Chebyshev(50);\n\t\t * //create a monosynth connected to our cheby\n\t\t * synth = new Tone.MonoSynth().connect(cheby);\n\t\t */\n\t    Tone.Chebyshev = function () {\n\t        var options = this.optionsObject(arguments, ['order'], Tone.Chebyshev.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds onto the order of the filter\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._order = options.order;\n\t        this.connectEffect(this._shaper);\n\t        this.order = options.order;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Chebyshev, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chebyshev.defaults = {\n\t        'order': 1,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t *  get the coefficient for that degree\n\t\t *  @param {number} x the x value\n\t\t *  @param   {number} degree \n\t\t *  @param {Object} memo memoize the computed value. \n\t\t *                       this speeds up computation greatly. \n\t\t *  @return  {number}       the coefficient \n\t\t *  @private\n\t\t */\n\t    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n\t        if (memo.hasOwnProperty(degree)) {\n\t            return memo[degree];\n\t        } else if (degree === 0) {\n\t            memo[degree] = 0;\n\t        } else if (degree === 1) {\n\t            memo[degree] = x;\n\t        } else {\n\t            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t        }\n\t        return memo[degree];\n\t    };\n\t    /**\n\t\t * The order of the Chebyshev polynomial which creates\n\t\t * the equation which is applied to the incoming \n\t\t * signal through a Tone.WaveShaper. The equations\n\t\t * are in the form:<br>\n\t\t * order 2: 2x^2 + 1<br>\n\t\t * order 3: 4x^3 + 3x <br>\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {Positive}\n\t\t * @name order\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {\n\t        get: function () {\n\t            return this._order;\n\t        },\n\t        set: function (order) {\n\t            this._order = order;\n\t            var curve = new Array(4096);\n\t            var len = curve.length;\n\t            for (var i = 0; i < len; ++i) {\n\t                var x = i * 2 / len - 1;\n\t                if (x === 0) {\n\t                    //should output 0 when input is 0\n\t                    curve[i] = 0;\n\t                } else {\n\t                    curve[i] = this._getCoefficient(x, order, {});\n\t                }\n\t            }\n\t            this._shaper.curve = curve;\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chebyshev} this\n\t\t */\n\t    Tone.Chebyshev.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Chebyshev;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R. \n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.Effect}\n\t\t */\n\t    Tone.StereoEffect = function () {\n\t        this.createInsOuts(1, 1);\n\t        //get the defaults\n\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t *  will pass through to the output. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  then split it\n\t\t\t *  @type {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = new Tone.Split();\n\t        /**\n\t\t\t *  the effects send LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendL = this._split.left;\n\t        /**\n\t\t\t *  the effects send RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendR = this._split.right;\n\t        /**\n\t\t\t *  the stereo effect merger\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = new Tone.Merge();\n\t        /**\n\t\t\t *  the effect return LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnL = this._merge.left;\n\t        /**\n\t\t\t *  the effect return RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnR = this._merge.right;\n\t        //connections\n\t        this.input.connect(this._split);\n\t        //dry wet connections\n\t        this.input.connect(this._dryWet, 0, 0);\n\t        this._merge.connect(this._dryWet, 0, 1);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.StereoEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.StereoEffect} this\n\t\t */\n\t    Tone.StereoEffect.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        this.effectSendL = null;\n\t        this.effectSendR = null;\n\t        this.effectReturnL = null;\n\t        this.effectReturnR = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.FeedbackEffect provides a loop between an \n\t\t * \t        audio source and its own output. This is a base-class\n\t\t * \t        for feedback effects. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {NormalRange|Object} [feedback] The initial feedback value.\n\t\t */\n\t    Tone.FeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback']);\n\t        options = this.defaultArg(options, Tone.FeedbackEffect.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the gain which controls the feedback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of signal which is fed back into the effect input. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = this._feedbackGain.gain;\n\t        //the feedback loop\n\t        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.FeedbackEffect, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.FeedbackEffect} this\n\t\t */\n\t    Tone.FeedbackEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this._feedbackGain.dispose();\n\t        this._feedbackGain = null;\n\t        this.feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t *         and right to left instead of on the same channel.\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t */\n\t    Tone.StereoXFeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The amount of feedback from the output\n\t\t\t *  back into the input of the effect (routed\n\t\t\t *  across left and right channels).\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackLR = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackRL = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoXFeedbackEffect, Tone.FeedbackEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoXFeedbackEffect} this\n\t\t */\n\t    Tone.StereoXFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackLR.dispose();\n\t        this._feedbackLR = null;\n\t        this._feedbackRL.dispose();\n\t        this._feedbackRL = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoXFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Chorus is a stereo chorus effect with feedback composed of \n\t\t *         a left and right delay with a Tone.LFO applied to the delayTime of each channel. \n\t\t *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n\t\t *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n\t\t *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms. \n\t\t *\t@param {NormalRange} [depth] The depth of the chorus.\n\t\t *\t@example\n\t\t * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n\t\t * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n\t\t */\n\t    Tone.Chorus = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'delayTime',\n\t            'depth'\n\t        ], Tone.Chorus.defaults);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the depth of the chorus\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._depth = options.depth;\n\t        /**\n\t\t\t *  the delayTime\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayTime = options.delayTime / 1000;\n\t        /**\n\t\t\t *  the lfo which controls the delayTime\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1,\n\t            'phase': 180\n\t        });\n\t        /**\n\t\t\t *  delay for left\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeL = new Tone.Delay();\n\t        /**\n\t\t\t *  delay for right\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeR = new Tone.Delay();\n\t        /**\n\t\t\t * The frequency of the LFO which modulates the delayTime. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        //connections\n\t        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t        //and pass through to make the detune apparent\n\t        this.effectSendL.connect(this.effectReturnL);\n\t        this.effectSendR.connect(this.effectReturnR);\n\t        //lfo setup\n\t        this._lfoL.connect(this._delayNodeL.delayTime);\n\t        this._lfoR.connect(this._delayNodeR.delayTime);\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        //have one LFO frequency control the other\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the initial values\n\t        this.depth = this._depth;\n\t        this.frequency.value = options.frequency;\n\t        this.type = options.type;\n\t        this._readOnly(['frequency']);\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chorus.defaults = {\n\t        'frequency': 1.5,\n\t        'delayTime': 3.5,\n\t        'depth': 0.7,\n\t        'feedback': 0.1,\n\t        'type': 'sine',\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * The depth of the effect. A depth of 1 makes the delayTime\n\t\t * modulate between 0 and 2*delayTime (centered around the delayTime). \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {NormalRange}\n\t\t * @name depth\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'depth', {\n\t        get: function () {\n\t            return this._depth;\n\t        },\n\t        set: function (depth) {\n\t            this._depth = depth;\n\t            var deviation = this._delayTime * depth;\n\t            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoL.max = this._delayTime + deviation;\n\t            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoR.max = this._delayTime + deviation;\n\t        }\n\t    });\n\t    /**\n\t\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t\t * will give a more pronounced effect. Nominal range a delayTime\n\t\t * is between 2 and 20ms. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Milliseconds}\n\t\t * @name delayTime\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {\n\t        get: function () {\n\t            return this._delayTime * 1000;\n\t        },\n\t        set: function (delayTime) {\n\t            this._delayTime = delayTime / 1000;\n\t            this.depth = this._depth;\n\t        }\n\t    });\n\t    /**\n\t\t * The oscillator type of the LFO. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chorus} this\n\t\t */\n\t    Tone.Chorus.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._delayNodeL.dispose();\n\t        this._delayNodeL = null;\n\t        this._delayNodeR.dispose();\n\t        this._delayNodeR = null;\n\t        this._writable('frequency');\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Chorus;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Convolver is a wrapper around the Native Web Audio \n\t\t *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n\t\t *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n\t\t *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n\t\t *                                           contianing the impulse response. \n\t\t *  @param {Function} onload The callback to invoke when the url is loaded.\n\t\t *  @example\n\t\t * //initializing the convolver with an impulse response\n\t\t * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n\t\t */\n\t    Tone.Convolver = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.Convolver.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  convolver node\n\t\t\t *  @type {ConvolverNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._convolver = this.context.createConvolver();\n\t        /**\n\t\t\t *  the convolution buffer\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = new Tone.Buffer();\n\t        if (this.isString(options.url)) {\n\t            this._buffer.load(options.url, function (buffer) {\n\t                this.buffer = buffer;\n\t                options.onload();\n\t            }.bind(this));\n\t        } else if (options.url) {\n\t            this.buffer = options.url;\n\t            options.onload();\n\t        }\n\t        this.connectEffect(this._convolver);\n\t    };\n\t    Tone.extend(Tone.Convolver, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Convolver.defaults = { 'onload': Tone.noOp };\n\t    /**\n\t\t *  The convolver's buffer\n\t\t *  @memberOf Tone.Convolver#\n\t\t *  @type {AudioBuffer}\n\t\t *  @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer.get();\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t            this._convolver.buffer = this._buffer.get();\n\t        }\n\t    });\n\t    /**\n\t\t *  Load an impulse response url as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {string} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @param  {function=} callback\n\t\t *  @returns {Tone.Convolver} this\n\t\t */\n\t    Tone.Convolver.prototype.load = function (url, callback) {\n\t        this._buffer.load(url, function (buff) {\n\t            this.buffer = buff;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Convolver} this\n\t\t */\n\t    Tone.Convolver.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._convolver.disconnect();\n\t        this._convolver = null;\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Convolver;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n\t\t *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n\t\t *  @example\n\t\t * var dist = new Tone.Distortion(0.8).toMaster();\n\t\t * var fm = new Tone.SimpleFM().connect(dist);\n\t\t * //this sounds good on bass notes\n\t\t * fm.triggerAttackRelease(\"A1\", \"8n\");\n\t\t */\n\t    Tone.Distortion = function () {\n\t        var options = this.optionsObject(arguments, ['distortion'], Tone.Distortion.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds the distortion amount\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._distortion = options.distortion;\n\t        this.connectEffect(this._shaper);\n\t        this.distortion = options.distortion;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Distortion, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Distortion.defaults = {\n\t        'distortion': 0.4,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t * The amount of distortion.\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {NormalRange}\n\t\t * @name distortion\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {\n\t        get: function () {\n\t            return this._distortion;\n\t        },\n\t        set: function (amount) {\n\t            this._distortion = amount;\n\t            var k = amount * 100;\n\t            var deg = Math.PI / 180;\n\t            this._shaper.setMap(function (x) {\n\t                if (Math.abs(x) < 0.001) {\n\t                    //should output 0 when input is 0\n\t                    return 0;\n\t                } else {\n\t                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t                }\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Distortion} this\n\t\t */\n\t    Tone.Distortion.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Distortion;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n\t\t *          signal is fed back into the delay. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delay applied to the incoming signal. \n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                            is fed back through the delay.\n\t\t *  @example\n\t\t * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n\t\t * var tom = new Tone.DrumSynth({\n\t\t * \t\"octaves\" : 4,\n\t\t * \t\"pitchDecay\" : 0.1\n\t\t * }).connect(feedbackDelay);\n\t\t * tom.triggerAttackRelease(\"A2\",\"32n\");\n\t\t */\n\t    Tone.FeedbackDelay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.FeedbackDelay.defaults);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the DelayNode. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delayNode.delayTime;\n\t        // connect it up\n\t        this.connectEffect(this._delayNode);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\t    /**\n\t\t *  The default values. \n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackDelay.defaults = { 'delayTime': 0.25 };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackDelay} this\n\t\t */\n\t    Tone.FeedbackDelay.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterTunings = [\n\t        1557 / 44100,\n\t        1617 / 44100,\n\t        1491 / 44100,\n\t        1422 / 44100,\n\t        1277 / 44100,\n\t        1356 / 44100,\n\t        1188 / 44100,\n\t        1116 / 44100\n\t    ];\n\t    /**\n\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFrequencies = [\n\t        225,\n\t        556,\n\t        441,\n\t        341\n\t    ];\n\t    /**\n\t\t *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n\t\t *         Read more on reverb on [SoundOnSound](http://www.soundonsound.com/sos/may00/articles/reverb.htm).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Correlated to the decay time. \n\t\t *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part \n\t\t *                                 of the reverb. \n\t\t *  @example\n\t\t * var freeverb = new Tone.Freeverb().toMaster();\n\t\t * freeverb.dampening.value = 1000;\n\t\t * //routing synth through the reverb\n\t\t * var synth = new Tone.AMSynth().connect(freeverb);\n\t\t */\n\t    Tone.Freeverb = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'roomSize',\n\t            'dampening'\n\t        ], Tone.Freeverb.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The roomSize value between. A larger roomSize\n\t\t\t *  will result in a longer decay. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of dampening of the reverberant signal. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  the comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._combFilters = [];\n\t        /**\n\t\t\t *  the allpass filters on the left\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersL = [];\n\t        /**\n\t\t\t *  the allpass filters on the right\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersR = [];\n\t        //make the allpass filters on teh right\n\t        for (var l = 0; l < allpassFilterFrequencies.length; l++) {\n\t            var allpassL = this.context.createBiquadFilter();\n\t            allpassL.type = 'allpass';\n\t            allpassL.frequency.value = allpassFilterFrequencies[l];\n\t            this._allpassFiltersL.push(allpassL);\n\t        }\n\t        //make the allpass filters on the left\n\t        for (var r = 0; r < allpassFilterFrequencies.length; r++) {\n\t            var allpassR = this.context.createBiquadFilter();\n\t            allpassR.type = 'allpass';\n\t            allpassR.frequency.value = allpassFilterFrequencies[r];\n\t            this._allpassFiltersR.push(allpassR);\n\t        }\n\t        //make the comb filters\n\t        for (var c = 0; c < combFilterTunings.length; c++) {\n\t            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t            if (c < combFilterTunings.length / 2) {\n\t                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t            } else {\n\t                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t            }\n\t            this.roomSize.connect(lfpf.resonance);\n\t            this.dampening.connect(lfpf.dampening);\n\t            this._combFilters.push(lfpf);\n\t        }\n\t        //chain the allpass filters togetehr\n\t        this.connectSeries.apply(this, this._allpassFiltersL);\n\t        this.connectSeries.apply(this, this._allpassFiltersR);\n\t        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t        this._readOnly([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Freeverb, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Freeverb.defaults = {\n\t        'roomSize': 0.7,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Freeverb} this\n\t\t */\n\t    Tone.Freeverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t            this._allpassFiltersL[al].disconnect();\n\t            this._allpassFiltersL[al] = null;\n\t        }\n\t        this._allpassFiltersL = null;\n\t        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t            this._allpassFiltersR[ar].disconnect();\n\t            this._allpassFiltersR[ar] = null;\n\t        }\n\t        this._allpassFiltersR = null;\n\t        for (var cf = 0; cf < this._combFilters.length; cf++) {\n\t            this._combFilters[cf].dispose();\n\t            this._combFilters[cf] = null;\n\t        }\n\t        this._combFilters = null;\n\t        this._writable([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        return this;\n\t    };\n\t    return Tone.Freeverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of the comb filter delay time values\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterDelayTimes = [\n\t        1687 / 25000,\n\t        1601 / 25000,\n\t        2053 / 25000,\n\t        2251 / 25000\n\t    ];\n\t    /**\n\t\t *  the resonances of each of the comb filters\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterResonances = [\n\t        0.773,\n\t        0.802,\n\t        0.753,\n\t        0.733\n\t    ];\n\t    /**\n\t\t *  the allpass filter frequencies\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFreqs = [\n\t        347,\n\t        113,\n\t        37\n\t    ];\n\t    /**\n\t\t *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n\t\t *         tuned by John Chowning in 1970.\n\t\t *         It is made up of three allpass filters and four Tone.FeedbackCombFilter. \n\t\t *         \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n\t\t *  @example\n\t\t * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n\t\t * var delay = new Tone.FeedbackDelay(0.5); \n\t\t * //connecting the synth to reverb through delay\n\t\t * var synth = new Tone.DuoSynth().chain(delay, reverb);\n\t\t * synth.triggerAttackRelease(\"A4\",\"8n\");\n\t\t */\n\t    Tone.JCReverb = function () {\n\t        var options = this.optionsObject(arguments, ['roomSize'], Tone.JCReverb.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  room size control values between [0,1]\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  scale the room size\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\t        /**\n\t\t\t *  a series of allpass filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFilters = [];\n\t        /**\n\t\t\t *  parallel feedback comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackCombFilters = [];\n\t        //make the allpass filters\n\t        for (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t            var allpass = this.context.createBiquadFilter();\n\t            allpass.type = 'allpass';\n\t            allpass.frequency.value = allpassFilterFreqs[af];\n\t            this._allpassFilters.push(allpass);\n\t        }\n\t        //and the comb filters\n\t        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t            this._scaleRoomSize.connect(fbcf.resonance);\n\t            fbcf.resonance.value = combFilterResonances[cf];\n\t            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t            if (cf < combFilterDelayTimes.length / 2) {\n\t                fbcf.connect(this.effectReturnL);\n\t            } else {\n\t                fbcf.connect(this.effectReturnR);\n\t            }\n\t            this._feedbackCombFilters.push(fbcf);\n\t        }\n\t        //chain the allpass filters together\n\t        this.roomSize.connect(this._scaleRoomSize);\n\t        this.connectSeries.apply(this, this._allpassFilters);\n\t        this.effectSendL.connect(this._allpassFilters[0]);\n\t        this.effectSendR.connect(this._allpassFilters[0]);\n\t        this._readOnly(['roomSize']);\n\t    };\n\t    Tone.extend(Tone.JCReverb, Tone.StereoEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.JCReverb.defaults = { 'roomSize': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.JCReverb} this\n\t\t */\n\t    Tone.JCReverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t            this._allpassFilters[apf].disconnect();\n\t            this._allpassFilters[apf] = null;\n\t        }\n\t        this._allpassFilters = null;\n\t        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t            this._feedbackCombFilters[fbcf].dispose();\n\t            this._feedbackCombFilters[fbcf] = null;\n\t        }\n\t        this._feedbackCombFilters = null;\n\t        this._writable(['roomSize']);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this._scaleRoomSize.dispose();\n\t        this._scaleRoomSize = null;\n\t        return this;\n\t    };\n\t    return Tone.JCReverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels) \n\t\t *         and effects them separately before being recombined.\n\t\t *         Applies a Mid/Side seperation and recombination.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         This is a base-class for Mid/Side Effects. \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideEffect = function () {\n\t        Tone.Effect.apply(this, arguments);\n\t        /**\n\t\t\t *  The mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  The mid/side merge\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midSend = this._midSideSplit.mid;\n\t        /**\n\t\t\t *  The side send. Connect to side processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideSend = this._midSideSplit.side;\n\t        /**\n\t\t\t *  The mid return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midReturn = this._midSideMerge.mid;\n\t        /**\n\t\t\t *  The side return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideReturn = this._midSideMerge.side;\n\t        //the connections\n\t        this.effectSend.connect(this._midSideSplit);\n\t        this._midSideMerge.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.MidSideEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.MidSideEffect} this\n\t\t */\n\t    Tone.MidSideEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        this.midSend = null;\n\t        this.sideSend = null;\n\t        this.midReturn = null;\n\t        this.sideReturn = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n\t\t *         of different frequency components of an incoming signal. Read more on \n\t\t *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)). \n\t\t *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n\t\t *\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t *\t@constructor\n\t\t *\t@param {Frequency|Object} [frequency] The speed of the phasing. \n\t\t *\t@param {number} [octaves] The octaves of the effect. \n\t\t *\t@param {Frequency} [baseFrequency] The base frequency of the filters. \n\t\t *\t@example\n\t\t * var phaser = new Tone.Phaser({\n\t\t * \t\"frequency\" : 15, \n\t\t * \t\"octaves\" : 5, \n\t\t * \t\"baseFrequency\" : 1000\n\t\t * }).toMaster();\n\t\t * var synth = new Tone.FMSynth().connect(phaser);\n\t\t * synth.triggerAttackRelease(\"E3\", \"2n\");\n\t\t */\n\t    Tone.Phaser = function () {\n\t        //set the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'octaves',\n\t            'baseFrequency'\n\t        ], Tone.Phaser.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t        this._lfoR.phase = 180;\n\t        /**\n\t\t\t *  the base modulation frequency\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  the octaves of the phasing\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  The quality factor of the filters\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\t        /**\n\t\t\t * the frequency of the effect\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        this.frequency.value = options.frequency;\n\t        //connect them up\n\t        this.effectSendL.connect(this._filtersL[0]);\n\t        this.effectSendR.connect(this._filtersR[0]);\n\t        this._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t        this._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t        //control the frequency with one LFO\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the options\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        this._readOnly([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Phaser, Tone.StereoEffect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Phaser.defaults = {\n\t        'frequency': 0.5,\n\t        'octaves': 3,\n\t        'stages': 10,\n\t        'Q': 10,\n\t        'baseFrequency': 350\n\t    };\n\t    /**\n\t\t *  @param {number} stages\n\t\t *  @returns {Array} the number of filters all connected together\n\t\t *  @private\n\t\t */\n\t    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {\n\t        var filters = new Array(stages);\n\t        //make all the filters\n\t        for (var i = 0; i < stages; i++) {\n\t            var filter = this.context.createBiquadFilter();\n\t            filter.type = 'allpass';\n\t            Q.connect(filter.Q);\n\t            connectToFreq.connect(filter.frequency);\n\t            filters[i] = filter;\n\t        }\n\t        this.connectSeries.apply(this, filters);\n\t        return filters;\n\t    };\n\t    /**\n\t\t * The number of octaves the phase goes above\n\t\t * the baseFrequency\n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            var max = this._baseFrequency * Math.pow(2, octaves);\n\t            this._lfoL.max = max;\n\t            this._lfoR.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The the base frequency of the filters. \n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {number}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (freq) {\n\t            this._baseFrequency = freq;\n\t            this._lfoL.min = freq;\n\t            this._lfoR.min = freq;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Phaser} this\n\t\t */\n\t    Tone.Phaser.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        for (var i = 0; i < this._filtersL.length; i++) {\n\t            this._filtersL[i].disconnect();\n\t            this._filtersL[i] = null;\n\t        }\n\t        this._filtersL = null;\n\t        for (var j = 0; j < this._filtersR.length; j++) {\n\t            this._filtersR[j].disconnect();\n\t            this._filtersR[j] = null;\n\t        }\n\t        this._filtersR = null;\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Phaser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n\t\t *          first in one channel and next in the opposite channel. In a stereo\n\t\t *          system these are the right and left channels.\n\t\t *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays \n\t\t *          with independent delay values. Each delay is routed to one channel\n\t\t *          (left or right), and the channel triggered second will always \n\t\t *          trigger at the same interval after the first.\n\t\t *\n\t\t * \t@constructor\n\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                                 is fed back through the delay.\n\t\t *  @example\n\t\t * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n\t\t * var drum = new Tone.DrumSynth().connect(pingPong);\n\t\t * drum.triggerAttackRelease(\"C4\", \"32n\");\n\t\t */\n\t    Tone.PingPongDelay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.PingPongDelay.defaults);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node on the left side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay node on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the predelay on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay time signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\t        //connect it up\n\t        this.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t        //rearranged the feedback to be after the rightPreDelay\n\t        this._feedbackLR.disconnect();\n\t        this._feedbackLR.connect(this._rightDelay);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PingPongDelay.defaults = {\n\t        'delayTime': 0.25,\n\t        'maxDelayTime': 1\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PingPongDelay} this\n\t\t */\n\t    Tone.PingPongDelay.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._leftDelay.dispose();\n\t        this._leftDelay = null;\n\t        this._rightDelay.dispose();\n\t        this._rightDelay = null;\n\t        this._rightPreDelay.dispose();\n\t        this._rightPreDelay = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime.dispose();\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PingPongDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal. \n\t\t *         The effect is achieved by speeding up or slowing down the delayTime\n\t\t *         of a DelayNode using a sawtooth wave. \n\t\t *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n\t\t *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n\t\t *         \n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Interval=} pitch The interval to transpose the incoming signal by. \n\t\t */\n\t    Tone.PitchShift = function () {\n\t        var options = this.optionsObject(arguments, ['pitch'], Tone.PitchShift.defaults);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  The pitch signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequency = new Tone.Signal(0);\n\t        /**\n\t\t\t *  Uses two DelayNodes to cover up the jump in\n\t\t\t *  the sawtooth wave. \n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayA = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoA = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth'\n\t        }).connect(this._delayA.delayTime);\n\t        /**\n\t\t\t *  The second DelayNode\n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayB = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoB = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth',\n\t            'phase': 180\n\t        }).connect(this._delayB.delayTime);\n\t        /**\n\t\t\t *  Crossfade quickly between the two delay lines\n\t\t\t *  to cover up the jump in the sawtooth wave\n\t\t\t *  @type  {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFade = new Tone.CrossFade();\n\t        /**\n\t\t\t *  LFO which alternates between the two\n\t\t\t *  delay lines to cover up the disparity in the\n\t\t\t *  sawtooth wave. \n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFadeLFO = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 1,\n\t            'type': 'triangle',\n\t            'phase': 90\n\t        }).connect(this._crossFade.fade);\n\t        /**\n\t\t\t *  The delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackDelay = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay on the input signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._feedbackDelay.delayTime;\n\t        this._readOnly('delayTime');\n\t        /**\n\t\t\t *  Hold the current pitch\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pitch = options.pitch;\n\t        /**\n\t\t\t *  Hold the current windowSize\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._windowSize = options.windowSize;\n\t        //connect the two delay lines up\n\t        this._delayA.connect(this._crossFade.a);\n\t        this._delayB.connect(this._crossFade.b);\n\t        //connect the frequency\n\t        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t        //route the input\n\t        this.effectSend.fan(this._delayA, this._delayB);\n\t        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t        //start the LFOs at the same time\n\t        var now = this.now();\n\t        this._lfoA.start(now);\n\t        this._lfoB.start(now);\n\t        this._crossFadeLFO.start(now);\n\t        //set the initial value\n\t        this.windowSize = this._windowSize;\n\t    };\n\t    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PitchShift.defaults = {\n\t        'pitch': 0,\n\t        'windowSize': 0.1,\n\t        'delayTime': 0,\n\t        'feedback': 0\n\t    };\n\t    /**\n\t\t * Repitch the incoming signal by some interval (measured\n\t\t * in semi-tones). \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Interval}\n\t\t * @name pitch\n\t\t * @example\n\t\t * pitchShift.pitch = -12; //down one octave\n\t\t * pitchShift.pitch = 7; //up a fifth\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {\n\t        get: function () {\n\t            return this._pitch;\n\t        },\n\t        set: function (interval) {\n\t            this._pitch = interval;\n\t            var factor = 0;\n\t            if (interval < 0) {\n\t                this._lfoA.min = 0;\n\t                this._lfoA.max = this._windowSize;\n\t                this._lfoB.min = 0;\n\t                this._lfoB.max = this._windowSize;\n\t                factor = this.intervalToFrequencyRatio(interval - 1) + 1;\n\t            } else {\n\t                this._lfoA.min = this._windowSize;\n\t                this._lfoA.max = 0;\n\t                this._lfoB.min = this._windowSize;\n\t                this._lfoB.max = 0;\n\t                factor = this.intervalToFrequencyRatio(interval) - 1;\n\t            }\n\t            this._frequency.value = factor * (1.2 / this._windowSize);\n\t        }\n\t    });\n\t    /**\n\t\t * The window size corresponds roughly to the sample length in a looping sampler. \n\t\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t\t * signal, but larger values will result in smoother pitch shifting for larger intervals. \n\t\t * A nominal range of 0.03 to 0.1 is recommended. \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Time}\n\t\t * @name windowSize\n\t\t * @example\n\t\t * pitchShift.windowSize = 0.1;\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {\n\t        get: function () {\n\t            return this._windowSize;\n\t        },\n\t        set: function (size) {\n\t            this._windowSize = this.toSeconds(size);\n\t            this.pitch = this._pitch;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.PitchShift}  this\n\t\t */\n\t    Tone.PitchShift.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._frequency.dispose();\n\t        this._frequency = null;\n\t        this._delayA.disconnect();\n\t        this._delayA = null;\n\t        this._delayB.disconnect();\n\t        this._delayB = null;\n\t        this._lfoA.dispose();\n\t        this._lfoA = null;\n\t        this._lfoB.dispose();\n\t        this._lfoB = null;\n\t        this._crossFade.dispose();\n\t        this._crossFade = null;\n\t        this._crossFadeLFO.dispose();\n\t        this._crossFadeLFO = null;\n\t        this._writable('delayTime');\n\t        this._feedbackDelay.dispose();\n\t        this._feedbackDelay = null;\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PitchShift;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for stereo feedback effects where the effectReturn\n\t\t *         is fed back into the same channel. \n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t */\n\t    Tone.StereoFeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  controls the amount of feedback\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackL = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackR = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t        this.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoFeedbackEffect, Tone.FeedbackEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoFeedbackEffect} this\n\t\t */\n\t    Tone.StereoFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackL.dispose();\n\t        this._feedbackL = null;\n\t        this._feedbackR.dispose();\n\t        this._feedbackR = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Applies a width factor to the mid/side seperation. \n\t\t *         0 is all mid and 1 is all side.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         <code>\n\t\t *         Mid *= 2*(1-width)<br>\n\t\t *         Side *= 2*width\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.MidSideEffect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t */\n\t    Tone.StereoWidener = function () {\n\t        var options = this.optionsObject(arguments, ['width'], Tone.StereoWidener.defaults);\n\t        Tone.MidSideEffect.call(this, options);\n\t        /**\n\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  Mid multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midMult = new Tone.Expr('$0 * ($1 * (1 - $2))');\n\t        /**\n\t\t\t *  Side multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sideMult = new Tone.Expr('$0 * ($1 * $2)');\n\t        /**\n\t\t\t *  constant output of 2\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._two = new Tone.Signal(2);\n\t        //the mid chain\n\t        this._two.connect(this._midMult, 0, 1);\n\t        this.width.connect(this._midMult, 0, 2);\n\t        //the side chain\n\t        this._two.connect(this._sideMult, 0, 1);\n\t        this.width.connect(this._sideMult, 0, 2);\n\t        //connect it to the effect send/return\n\t        this.midSend.chain(this._midMult, this.midReturn);\n\t        this.sideSend.chain(this._sideMult, this.sideReturn);\n\t        this._readOnly(['width']);\n\t    };\n\t    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.StereoWidener.defaults = { 'width': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.StereoWidener} this\n\t\t */\n\t    Tone.StereoWidener.prototype.dispose = function () {\n\t        Tone.MidSideEffect.prototype.dispose.call(this);\n\t        this._writable(['width']);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._midMult.dispose();\n\t        this._midMult = null;\n\t        this._sideMult.dispose();\n\t        this._sideMult = null;\n\t        this._two.dispose();\n\t        this._two = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoWidener;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n\t\t *         The type, frequency, and depth of the LFO is controllable.\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t *  @param {Frequency} [frequency] The rate of the effect.\n\t\t *  @param {NormalRange} [depth] The depth of the effect.\n\t\t *  @example\n\t\t * //create a tremolo and start it's LFO\n\t\t * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n\t\t * //route an oscillator through the tremolo and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n\t\t */\n\t    Tone.Tremolo = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Tremolo.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeL = new Tone.Gain();\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeR = new Tone.Gain();\n\t        /**\n\t\t\t *  The frequency of the tremolo.\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The depth of the effect. A depth of 0, has no effect\n\t\t\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t\t\t *  modulate fully between 0 and 1.\n\t\t\t *  @type  {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\t        this._lfoL.connect(this._amplitudeL.gain);\n\t        this._lfoR.connect(this._amplitudeR.gain);\n\t        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t        this.type = options.type;\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Tremolo, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Tremolo.defaults = {\n\t        'frequency': 10,\n\t        'type': 'sine',\n\t        'depth': 0.5,\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * Start the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo begins.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.start = function (time) {\n\t        this._lfoL.start(time);\n\t        this._lfoR.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo stops.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.stop = function (time) {\n\t        this._lfoL.stop(time);\n\t        this._lfoR.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the effect to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                              Transport has started.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.Tremolo.prototype.sync = function (delay) {\n\t        this._lfoL.sync(delay);\n\t        this._lfoR.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.unsync = function () {\n\t        this._lfoL.unsync();\n\t        this._lfoR.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The Tremolo's oscillator type.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._amplitudeL.dispose();\n\t        this._amplitudeL = null;\n\t        this._amplitudeR.dispose();\n\t        this._amplitudeR = null;\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.Tremolo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n\t\t *         modulates the delayTime of the delay, causing the pitch to rise\n\t\t *         and fall. \n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency} frequency The frequency of the vibrato.\n\t\t *  @param {NormalRange} depth The amount the pitch is modulated.\n\t\t */\n\t    Tone.Vibrato = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Vibrato.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The delay node used for the vibrato effect\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(0, options.maxDelay);\n\t        /**\n\t\t\t *  The LFO used to control the vibrato\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'type': options.type,\n\t            'min': 0,\n\t            'max': options.maxDelay,\n\t            'frequency': options.frequency,\n\t            'phase': -90    //offse the phase so the resting position is in the center\n\t        }).start().connect(this._delayNode.delayTime);\n\t        /**\n\t\t\t *  The frequency of the vibrato\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The depth of the vibrato. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        this.depth.value = options.depth;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSend.chain(this._delayNode, this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.Vibrato, Tone.Effect);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Vibrato.defaults = {\n\t        'maxDelay': 0.005,\n\t        'frequency': 5,\n\t        'depth': 0.1,\n\t        'type': 'sine'\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the Vibrato.\n\t\t * @memberOf Tone.Vibrato#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Vibrato.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Vibrato} this\n\t\t */\n\t    Tone.Vibrato.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t    };\n\t    return Tone.Vibrato;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n\t\t *          callback for a single or repeatable events along the timeline. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @param {function} callback The callback to invoke at the time. \n\t\t *  @param {*} value The value or values which should be passed to\n\t\t *                      the callback function on invocation.  \n\t\t *  @example\n\t\t * var chord = new Tone.Event(function(time, chord){\n\t\t * \t//the chord as well as the exact time of the event\n\t\t * \t//are passed in as arguments to the callback function\n\t\t * }, [\"D4\", \"E4\", \"F4\"]);\n\t\t * //start the chord at the beginning of the transport timeline\n\t\t * chord.start();\n\t\t * //loop it every measure for 8 measures\n\t\t * chord.loop = 8;\n\t\t * chord.loopEnd = \"1m\";\n\t\t */\n\t    Tone.Event = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'value'\n\t        ], Tone.Event.defaults);\n\t        /**\n\t\t\t *  Loop value\n\t\t\t *  @type  {Boolean|Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  The callback to invoke. \n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The value which is passed to the\n\t\t\t *  callback function.\n\t\t\t *  @type  {*}\n\t\t\t *  @private\n\t\t\t */\n\t        this.value = options.value;\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = this.toTicks(options.loopStart);\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t        /**\n\t\t\t *  Tracks the scheduled events\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The playback speed of the note. A speed of 1\n\t\t\t *  is no change. \n\t\t\t *  @private\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this._playbackRate = 1;\n\t        /**\n\t\t\t *  A delay time from when the event is scheduled to start\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startOffset = 0;\n\t        /**\n\t\t\t *  The probability that the callback will be invoked\n\t\t\t *  at the scheduled time. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @example\n\t\t\t * //the callback will be invoked 50% of the time\n\t\t\t * event.probability = 0.5;\n\t\t\t */\n\t        this.probability = options.probability;\n\t        /**\n\t\t\t *  If set to true, will apply small (+/-0.02 seconds) random variation\n\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t *  by that amount.\n\t\t\t *  @example\n\t\t\t * event.humanize = true;\n\t\t\t *  @type {Boolean|Time}\n\t\t\t */\n\t        this.humanize = options.humanize;\n\t        /**\n\t\t\t *  If mute is true, the callback won't be\n\t\t\t *  invoked.\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.mute = options.mute;\n\t        //set the initial values\n\t        this.playbackRate = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Event.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'value': null,\n\t        'probability': 1,\n\t        'mute': false,\n\t        'humanize': false\n\t    };\n\t    /**\n\t\t *  Reschedule all of the events along the timeline\n\t\t *  with the updated values.\n\t\t *  @param {Time} after Only reschedules events after the given time.\n\t\t *  @return  {Tone.Event}  this\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._rescheduleEvents = function (after) {\n\t        //if no argument is given, schedules all of the events\n\t        after = this.defaultArg(after, -1);\n\t        this._state.forEachFrom(after, function (event) {\n\t            var duration;\n\t            if (event.state === Tone.State.Started) {\n\t                if (!this.isUndef(event.id)) {\n\t                    Tone.Transport.clear(event.id);\n\t                }\n\t                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t                if (this._loop) {\n\t                    duration = Infinity;\n\t                    if (this.isNumber(this._loop)) {\n\t                        duration = this._loop * this._getLoopDuration();\n\t                    }\n\t                    var nextEvent = this._state.getEventAfter(startTick);\n\t                    if (nextEvent !== null) {\n\t                        duration = Math.min(duration, nextEvent.time - startTick);\n\t                    }\n\t                    if (duration !== Infinity) {\n\t                        //schedule a stop since it's finite duration\n\t                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t                        duration = Tone.Time(duration, 'i');\n\t                    }\n\t                    var interval = Tone.Time(this._getLoopDuration(), 'i');\n\t                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.TransportTime(startTick, 'i'), duration);\n\t                } else {\n\t                    event.id = Tone.Transport.schedule(this._tick.bind(this), startTick + 'i');\n\t                }\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the note, either \"started\" or \"stopped\".\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getStateAtTime(Tone.Transport.ticks);\n\t        }\n\t    });\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the note at the given time. \n\t\t *  @param  {TimelinePosition}  time  When the note should start.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.start = function (time) {\n\t        time = this.toTicks(time);\n\t        if (this._state.getStateAtTime(time) === Tone.State.Stopped) {\n\t            this._state.addEvent({\n\t                'state': Tone.State.Started,\n\t                'time': time,\n\t                'id': undefined\n\t            });\n\t            this._rescheduleEvents(time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the Event at the given time.\n\t\t *  @param  {TimelinePosition}  time  When the note should stop.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.stop = function (time) {\n\t        this.cancel(time);\n\t        time = this.toTicks(time);\n\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Stopped, time);\n\t            var previousEvent = this._state.getEventBefore(time);\n\t            var reschedulTime = time;\n\t            if (previousEvent !== null) {\n\t                reschedulTime = previousEvent.time;\n\t            }\n\t            this._rescheduleEvents(reschedulTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.cancel = function (time) {\n\t        time = this.defaultArg(time, -Infinity);\n\t        time = this.toTicks(time);\n\t        this._state.forEachFrom(time, function (event) {\n\t            Tone.Transport.clear(event.id);\n\t        });\n\t        this._state.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The callback function invoker. Also \n\t\t *  checks if the Event is done playing\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._tick = function (time) {\n\t        if (!this.mute && this._state.getStateAtTime(Tone.Transport.ticks) === Tone.State.Started) {\n\t            if (this.probability < 1 && Math.random() > this.probability) {\n\t                return;\n\t            }\n\t            if (this.humanize) {\n\t                var variation = 0.02;\n\t                if (!this.isBoolean(this.humanize)) {\n\t                    variation = this.toSeconds(this.humanize);\n\t                }\n\t                time += (Math.random() * 2 - 1) * variation;\n\t            }\n\t            this.callback(time, this.value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the duration of the loop.\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._getLoopDuration = function () {\n\t        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n\t    };\n\t    /**\n\t\t *  If the note should loop or not\n\t\t *  between Tone.Event.loopStart and \n\t\t *  Tone.Event.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Event does after it starts.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the note. Defaults to 1.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t *  @example\n\t\t * note.loop = true;\n\t\t * //repeat the note twice as fast\n\t\t * note.playbackRate = 2;\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point is the time the event will loop\n\t\t *  if Tone.Event.loop is true.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The time when the loop should start. \n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The current progress of the loop interval.\n\t\t *  Returns 0 if the event is not started yet or\n\t\t *  it is not set to loop.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'progress', {\n\t        get: function () {\n\t            if (this._loop) {\n\t                var ticks = Tone.Transport.ticks;\n\t                var lastEvent = this._state.getEvent(ticks);\n\t                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {\n\t                    var loopDuration = this._getLoopDuration();\n\t                    var progress = (ticks - lastEvent.time) % loopDuration;\n\t                    return progress / loopDuration;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.dispose = function () {\n\t        this.cancel();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this.value = null;\n\t    };\n\t    return Tone.Event;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Loop creates a looped callback at the \n\t\t *         specified interval. The callback can be \n\t\t *         started, stopped and scheduled along\n\t\t *         the Transport's timeline. \n\t\t *  @example\n\t\t * var loop = new Tone.Loop(function(time){\n\t\t * \t//triggered every eighth note. \n\t\t * \tconsole.log(time);\n\t\t * }, \"8n\").start(0);\n\t\t * Tone.Transport.start();\n\t\t *  @extends {Tone}\n\t\t *  @param {Function} callback The callback to invoke with the event.\n\t\t *  @param {Time} interval The time between successive callback calls. \n\t\t */\n\t    Tone.Loop = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'interval'\n\t        ], Tone.Loop.defaults);\n\t        /**\n\t\t\t *  The event which produces the callbacks\n\t\t\t */\n\t        this._event = new Tone.Event({\n\t            'callback': this._tick.bind(this),\n\t            'loop': true,\n\t            'loopEnd': options.interval,\n\t            'playbackRate': options.playbackRate,\n\t            'probability': options.probability\n\t        });\n\t        /**\n\t\t\t *  The callback to invoke with the next event in the pattern\n\t\t\t *  @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        //set the iterations\n\t        this.iterations = options.iterations;\n\t    };\n\t    Tone.extend(Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Loop.defaults = {\n\t        'interval': '4n',\n\t        'callback': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'iterations': Infinity,\n\t        'probability': true,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Start the loop at the specified time along the Transport's\n\t\t *  timeline.\n\t\t *  @param  {TimelinePosition=}  time  When to start the Loop.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.start = function (time) {\n\t        this._event.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the loop at the given time.\n\t\t *  @param  {TimelinePosition=}  time  When to stop the Arpeggio\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.stop = function (time) {\n\t        this._event.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.cancel = function (time) {\n\t        this._event.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Loop.prototype._tick = function (time) {\n\t        this.callback(time);\n\t    };\n\t    /**\n\t\t *  The state of the Loop, either started or stopped.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {String}\n\t\t *  @name state\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'state', {\n\t        get: function () {\n\t            return this._event.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  The progress of the loop as a value between 0-1. 0, when\n\t\t *  the loop is stopped or done iterating. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'progress', {\n\t        get: function () {\n\t            return this._event.progress;\n\t        }\n\t    });\n\t    /**\n\t\t *  The time between successive callbacks. \n\t\t *  @example\n\t\t * loop.interval = \"8n\"; //loop every 8n\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name interval\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'interval', {\n\t        get: function () {\n\t            return this._event.loopEnd;\n\t        },\n\t        set: function (interval) {\n\t            this._event.loopEnd = interval;\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the loop. The normal playback rate is 1 (no change). \n\t\t *  A `playbackRate` of 2 would be twice as fast. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._event.playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._event.playbackRate = rate;\n\t        }\n\t    });\n\t    /**\n\t\t *  Random variation +/-0.01s to the scheduled time. \n\t\t *  Or give it a time value which it will randomize by.\n\t\t *  @type {Boolean|Time}\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._event.humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._event.humanize = variation;\n\t        }\n\t    });\n\t    /**\n\t\t *  The probably of the callback being invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'probability', {\n\t        get: function () {\n\t            return this._event.probability;\n\t        },\n\t        set: function (prob) {\n\t            this._event.probability = prob;\n\t        }\n\t    });\n\t    /**\n\t\t *  Muting the Loop means that no callbacks are invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Boolean}\n\t\t *  @name mute\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'mute', {\n\t        get: function () {\n\t            return this._event.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._event.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of iterations of the loop. The default\n\t\t *  value is Infinity (loop forever).\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Positive}\n\t\t *  @name iterations\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'iterations', {\n\t        get: function () {\n\t            if (this._event.loop === true) {\n\t                return Infinity;\n\t            } else {\n\t                return this._event.loop;\n\t            }\n\t            return this._pattern.index;\n\t        },\n\t        set: function (iters) {\n\t            if (iters === Infinity) {\n\t                this._event.loop = true;\n\t            } else {\n\t                this._event.loop = iters;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.dispose = function () {\n\t        this._event.dispose();\n\t        this._event = null;\n\t        this.callback = null;\n\t    };\n\t    return Tone.Loop;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Part is a collection Tone.Events which can be\n\t\t *         started/stoped and looped as a single unit.\n\t\t *\n\t\t *  @extends {Tone.Event}\n\t\t *  @param {Function} callback The callback to invoke on each event\n\t\t *  @param {Array} events the array of events\n\t\t *  @example\n\t\t * var part = new Tone.Part(function(time, note){\n\t\t * \t//the notes given as the second element in the array\n\t\t * \t//will be passed in as the second argument\n\t\t * \tsynth.triggerAttackRelease(note, \"8n\", time);\n\t\t * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n\t\t *  @example\n\t\t * //use an array of objects as long as the object has a \"time\" attribute\n\t\t * var part = new Tone.Part(function(time, value){\n\t\t * \t//the value is an object which contains both the note and the velocity\n\t\t * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n\t\t * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9}, \n\t\t * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n\t\t * ]).start(0);\n\t\t */\n\t    Tone.Part = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'events'\n\t        ], Tone.Part.defaults);\n\t        /**\n\t\t\t *  If the part is looping or not\n\t\t\t *  @type  {Boolean|Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = this.toTicks(options.loopStart);\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t        /**\n\t\t\t *  The playback rate of the part\n\t\t\t *  @type  {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  private holder of probability value\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._probability = options.probability;\n\t        /**\n\t\t\t *  the amount of variation from the\n\t\t\t *  given time. \n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._humanize = options.humanize;\n\t        /**\n\t\t\t *  The start offset\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startOffset = 0;\n\t        /**\n\t\t\t *  Keeps track of the current state\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  An array of Objects. \n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = [];\n\t        /**\n\t\t\t *  The callback to invoke at all the scheduled events.\n\t\t\t *  @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  If mute is true, the callback won't be\n\t\t\t *  invoked.\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.mute = options.mute;\n\t        //add the events\n\t        var events = this.defaultArg(options.events, []);\n\t        if (!this.isUndef(options.events)) {\n\t            for (var i = 0; i < events.length; i++) {\n\t                if (Array.isArray(events[i])) {\n\t                    this.add(events[i][0], events[i][1]);\n\t                } else {\n\t                    this.add(events[i]);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Part, Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Part.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'probability': 1,\n\t        'humanize': false,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Start the part at the given time. \n\t\t *  @param  {TransportTime}  time    When to start the part.\n\t\t *  @param  {Time=}  offset  The offset from the start of the part\n\t\t *                           to begin playing at.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.start = function (time, offset) {\n\t        var ticks = this.toTicks(time);\n\t        if (this._state.getStateAtTime(ticks) !== Tone.State.Started) {\n\t            if (this._loop) {\n\t                offset = this.defaultArg(offset, this._loopStart);\n\t            } else {\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toTicks(offset);\n\t            this._state.addEvent({\n\t                'state': Tone.State.Started,\n\t                'time': ticks,\n\t                'offset': offset\n\t            });\n\t            this._forEach(function (event) {\n\t                this._startNote(event, ticks, offset);\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the event in the given event at the correct time given\n\t\t *  the ticks and offset and looping.\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @param  {Ticks}  ticks\n\t\t *  @param  {Ticks}  offset\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._startNote = function (event, ticks, offset) {\n\t        ticks -= offset;\n\t        if (this._loop) {\n\t            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t                if (event.startOffset < offset) {\n\t                    //start it on the next loop\n\t                    ticks += this._getLoopDuration();\n\t                }\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t                event.loop = false;\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        } else {\n\t            if (event.startOffset >= offset) {\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Part#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t            this._forEach(function (event) {\n\t                event.startOffset += this._startOffset;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Stop the part at the given time.\n\t\t *  @param  {TimelinePosition}  time  When to stop the part.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.stop = function (time) {\n\t        var ticks = this.toTicks(time);\n\t        this._state.cancel(ticks);\n\t        this._state.setStateAtTime(Tone.State.Stopped, ticks);\n\t        this._forEach(function (event) {\n\t            event.stop(time);\n\t        });\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get/Set an Event's value at the given time. \n\t\t *  If a value is passed in and no event exists at\n\t\t *  the given time, one will be created with that value. \n\t\t *  If two events are at the same time, the first one will\n\t\t *  be returned.\n\t\t *  @example\n\t\t * part.at(\"1m\"); //returns the part at the first measure\n\t\t *\n\t\t * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2. \n\t\t * //if an event didn't exist at that time, it will be created.\n\t\t *  @param {TransportTime} time The time of the event to get or set.\n\t\t *  @param {*=} value If a value is passed in, the value of the\n\t\t *                    event at the given time will be set to it.\n\t\t *  @return {Tone.Event} the event at the time\n\t\t */\n\t    Tone.Part.prototype.at = function (time, value) {\n\t        time = Tone.TransportTime(time);\n\t        var tickTime = Tone.Time(1, 'i').toSeconds();\n\t        for (var i = 0; i < this._events.length; i++) {\n\t            var event = this._events[i];\n\t            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {\n\t                if (!this.isUndef(value)) {\n\t                    event.value = value;\n\t                }\n\t                return event;\n\t            }\n\t        }\n\t        //if there was no event at that time, create one\n\t        if (!this.isUndef(value)) {\n\t            this.add(time, value);\n\t            //return the new event\n\t            return this._events[this._events.length - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Add a an event to the part. \n\t\t *  @param {Time} time The time the note should start.\n\t\t *                            If an object is passed in, it should\n\t\t *                            have a 'time' attribute and the rest\n\t\t *                            of the object will be used as the 'value'.\n\t\t *  @param  {Tone.Event|*}  value \n\t\t *  @returns {Tone.Part} this\n\t\t *  @example\n\t\t * part.add(\"1m\", \"C#+11\");\n\t\t */\n\t    Tone.Part.prototype.add = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        var event;\n\t        if (value instanceof Tone.Event) {\n\t            event = value;\n\t            event.callback = this._tick.bind(this);\n\t        } else {\n\t            event = new Tone.Event({\n\t                'callback': this._tick.bind(this),\n\t                'value': value\n\t            });\n\t        }\n\t        //the start offset\n\t        event.startOffset = time;\n\t        //initialize the values\n\t        event.set({\n\t            'loopEnd': this.loopEnd,\n\t            'loopStart': this.loopStart,\n\t            'loop': this.loop,\n\t            'humanize': this.humanize,\n\t            'playbackRate': this.playbackRate,\n\t            'probability': this.probability\n\t        });\n\t        this._events.push(event);\n\t        //start the note if it should be played right now\n\t        this._restartEvent(event);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Restart the given event\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._restartEvent = function (event) {\n\t        var stateEvent = this._state.getEvent(Tone.Transport.ticks);\n\t        if (stateEvent && stateEvent.state === Tone.State.Started) {\n\t            this._startNote(event, stateEvent.time, stateEvent.offset);\n\t        }\n\t    };\n\t    /**\n\t\t *  Remove an event from the part. Will recursively iterate\n\t\t *  into nested parts to find the event.\n\t\t *  @param {Time} time The time of the event\n\t\t *  @param {*} value Optionally select only a specific event value\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.remove = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t            var event = this._events[i];\n\t            if (event instanceof Tone.Part) {\n\t                event.remove(time, value);\n\t            } else {\n\t                if (event.startOffset === time) {\n\t                    if (this.isUndef(value) || !this.isUndef(value) && event.value === value) {\n\t                        this._events.splice(i, 1);\n\t                        event.dispose();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove all of the notes from the group. \n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.removeAll = function () {\n\t        this._forEach(function (event) {\n\t            event.dispose();\n\t        });\n\t        this._events = [];\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t\t *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.cancel = function (after) {\n\t        after = this.toTicks(after);\n\t        this._forEach(function (event) {\n\t            event.cancel(after);\n\t        });\n\t        this._state.cancel(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over all of the events\n\t\t *  @param {Function} callback\n\t\t *  @param {Object} ctx The context\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._forEach = function (callback, ctx) {\n\t        ctx = this.defaultArg(ctx, this);\n\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t            var e = this._events[i];\n\t            if (e instanceof Tone.Part) {\n\t                e._forEach(callback, ctx);\n\t            } else {\n\t                callback.call(ctx, e);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the attribute of all of the events\n\t\t *  @param  {String}  attr  the attribute to set\n\t\t *  @param  {*}  value      The value to set it to\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._setAll = function (attr, value) {\n\t        this._forEach(function (event) {\n\t            event[attr] = value;\n\t        });\n\t    };\n\t    /**\n\t\t *  Internal tick method\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._tick = function (time, value) {\n\t        if (!this.mute) {\n\t            this.callback(time, value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Determine if the event should be currently looping\n\t\t *  given the loop boundries of this Part.\n\t\t *  @param  {Tone.Event}  event  The event to test\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._testLoopBoundries = function (event) {\n\t        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {\n\t            event.cancel();\n\t        } else {\n\t            //reschedule it if it's stopped\n\t            if (event.state === Tone.State.Stopped) {\n\t                this._restartEvent(event);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The probability of the notes being triggered.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'probability', {\n\t        get: function () {\n\t            return this._probability;\n\t        },\n\t        set: function (prob) {\n\t            this._probability = prob;\n\t            this._setAll('probability', prob);\n\t        }\n\t    });\n\t    /**\n\t\t *  If set to true, will apply small random variation\n\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t *  by that amount.\n\t\t *  @example\n\t\t * event.humanize = true;\n\t\t *  @type {Boolean|Time}\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._humanize = variation;\n\t            this._setAll('humanize', variation);\n\t        }\n\t    });\n\t    /**\n\t\t *  If the part should loop or not\n\t\t *  between Tone.Part.loopStart and \n\t\t *  Tone.Part.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Part does after it starts.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t *  @example\n\t\t * //loop the part 8 times\n\t\t * part.loop = 8;\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._forEach(function (event) {\n\t                event._loopStart = this._loopStart;\n\t                event._loopEnd = this._loopEnd;\n\t                event.loop = loop;\n\t                this._testLoopBoundries(event);\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopEnd = this.loopEnd;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopStart point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopStart = this.loopStart;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the part\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._setAll('playbackRate', rate);\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe number of scheduled notes in the part. \n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'length', {\n\t        get: function () {\n\t            return this._events.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.dispose = function () {\n\t        this.removeAll();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Part;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Pattern arpeggiates between the given notes\n\t\t *         in a number of patterns. See Tone.CtrlPattern for\n\t\t *         a full list of patterns.\n\t\t *  @example\n\t\t * var pattern = new Tone.Pattern(function(time, note){\n\t\t *   //the order of the notes passed in depends on the pattern\n\t\t * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n\t\t *  @extends {Tone.Loop}\n\t\t *  @param {Function} callback The callback to invoke with the\n\t\t *                             event.\n\t\t *  @param {Array} values The values to arpeggiate over.\n\t\t */\n\t    Tone.Pattern = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'values',\n\t            'pattern'\n\t        ], Tone.Pattern.defaults);\n\t        Tone.Loop.call(this, options);\n\t        /**\n\t\t\t *  The pattern manager\n\t\t\t *  @type {Tone.CtrlPattern}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pattern = new Tone.CtrlPattern({\n\t            'values': options.values,\n\t            'type': options.pattern,\n\t            'index': options.index\n\t        });\n\t    };\n\t    Tone.extend(Tone.Pattern, Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Pattern.defaults = {\n\t        'pattern': Tone.CtrlPattern.Type.Up,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Pattern.prototype._tick = function (time) {\n\t        this.callback(time, this._pattern.value);\n\t        this._pattern.next();\n\t    };\n\t    /**\n\t\t *  The current index in the values array.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Positive}\n\t\t *  @name index\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'index', {\n\t        get: function () {\n\t            return this._pattern.index;\n\t        },\n\t        set: function (i) {\n\t            this._pattern.index = i;\n\t        }\n\t    });\n\t    /**\n\t\t *  The array of events.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Array}\n\t\t *  @name values\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'values', {\n\t        get: function () {\n\t            return this._pattern.values;\n\t        },\n\t        set: function (vals) {\n\t            this._pattern.values = vals;\n\t        }\n\t    });\n\t    /**\n\t\t *  The current value of the pattern.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'value', {\n\t        get: function () {\n\t            return this._pattern.value;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {String}\n\t\t *  @name pattern\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {\n\t        get: function () {\n\t            return this._pattern.type;\n\t        },\n\t        set: function (pattern) {\n\t            this._pattern.type = pattern;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Pattern}  this\n\t\t */\n\t    Tone.Pattern.prototype.dispose = function () {\n\t        Tone.Loop.prototype.dispose.call(this);\n\t        this._pattern.dispose();\n\t        this._pattern = null;\n\t    };\n\t    return Tone.Pattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A sequence is an alternate notation of a part. Instead\n\t\t *         of passing in an array of [time, event] pairs, pass\n\t\t *         in an array of events which will be spaced at the\n\t\t *         given subdivision. Sub-arrays will subdivide that beat\n\t\t *         by the number of items are in the array. \n\t\t *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n\t\t *  @param  {Function}  callback  The callback to invoke with every note\n\t\t *  @param  {Array}    events  The sequence\n\t\t *  @param  {Time} subdivision  The subdivision between which events are placed. \n\t\t *  @extends {Tone.Part}\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //straight quater notes\n\t\t * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //subdivisions are given as subarrays\n\t\t * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n\t\t */\n\t    Tone.Sequence = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'events',\n\t            'subdivision'\n\t        ], Tone.Sequence.defaults);\n\t        //remove the events\n\t        var events = options.events;\n\t        delete options.events;\n\t        Tone.Part.call(this, options);\n\t        /**\n\t\t\t *  The subdivison of each note\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subdivision = this.toTicks(options.subdivision);\n\t        //if no time was passed in, the loop end is the end of the cycle\n\t        if (this.isUndef(options.loopEnd) && !this.isUndef(events)) {\n\t            this._loopEnd = events.length * this._subdivision;\n\t        }\n\t        //defaults to looping\n\t        this._loop = true;\n\t        //add all of the events\n\t        if (!this.isUndef(events)) {\n\t            for (var i = 0; i < events.length; i++) {\n\t                this.add(i, events[i]);\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Sequence, Tone.Part);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Sequence.defaults = { 'subdivision': '4n' };\n\t    /**\n\t\t *  The subdivision of the sequence. This can only be \n\t\t *  set in the constructor. The subdivision is the \n\t\t *  interval between successive steps. \n\t\t *  @type {Time}\n\t\t *  @memberOf Tone.Sequence#\n\t\t *  @name subdivision\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._subdivision, 'i').toNotation();\n\t        }\n\t    });\n\t    /**\n\t\t *  Get/Set an index of the sequence. If the index contains a subarray, \n\t\t *  a Tone.Sequence representing that sub-array will be returned. \n\t\t *  @example\n\t\t * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n\t\t * sequence.at(0)// => returns \"E4\"\n\t\t * //set a value\n\t\t * sequence.at(0, \"G3\");\n\t\t * //get a nested sequence\n\t\t * sequence.at(3).at(1)// => returns \"Bb3\"\n\t\t * @param {Positive} index The index to get or set\n\t\t * @param {*} value Optionally pass in the value to set at the given index.\n\t\t */\n\t    Tone.Sequence.prototype.at = function (index, value) {\n\t        //if the value is an array, \n\t        if (this.isArray(value)) {\n\t            //remove the current event at that index\n\t            this.remove(index);\n\t        }\n\t        //call the parent's method\n\t        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n\t    };\n\t    /**\n\t\t *  Add an event at an index, if there's already something\n\t\t *  at that index, overwrite it. If `value` is an array, \n\t\t *  it will be parsed as a subsequence.\n\t\t *  @param {Number} index The index to add the event to\n\t\t *  @param {*} value The value to add at that index\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.add = function (index, value) {\n\t        if (value === null) {\n\t            return this;\n\t        }\n\t        if (this.isArray(value)) {\n\t            //make a subsequence and add that to the sequence\n\t            var subSubdivision = Math.round(this._subdivision / value.length);\n\t            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Time(subSubdivision, 'i'));\n\t        }\n\t        Tone.Part.prototype.add.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove a value from the sequence by index\n\t\t *  @param {Number} index The index of the event to remove\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.remove = function (index, value) {\n\t        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the time of the index given the Sequence's subdivision\n\t\t *  @param  {Number}  index \n\t\t *  @return  {Time}  The time of that index\n\t\t *  @private\n\t\t */\n\t    Tone.Sequence.prototype._indexTime = function (index) {\n\t        if (index instanceof Tone.TransportTime) {\n\t            return index;\n\t        } else {\n\t            return Tone.TransportTime(index * this._subdivision + this.startOffset, 'i');\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.dispose = function () {\n\t        Tone.Part.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Sequence;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is \n\t\t *         a square and only odd-numbered harmonics are present. At all other widths \n\t\t *         even-numbered harmonics are present. Read more \n\t\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t\t *  @param {NormalRange} [width] The width of the pulse\n\t\t *  @example\n\t\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t\t */\n\t    Tone.PulseOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'width'\n\t        ], Tone.Oscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The width of the pulse. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  gate the width amount\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._widthGate = new Tone.Gain();\n\t        /**\n\t\t\t *  the sawtooth oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sawtooth = new Tone.Oscillator({\n\t            frequency: options.frequency,\n\t            detune: options.detune,\n\t            type: 'sawtooth',\n\t            phase: options.phase\n\t        });\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._sawtooth.frequency;\n\t        /**\n\t\t\t *  The detune in cents. \n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._sawtooth.detune;\n\t        /**\n\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = new Tone.WaveShaper(function (val) {\n\t            if (val < 0) {\n\t                return -1;\n\t            } else {\n\t                return 1;\n\t            }\n\t        });\n\t        //connections\n\t        this._sawtooth.chain(this._thresh, this.output);\n\t        this.width.chain(this._widthGate, this._thresh);\n\t        this._readOnly([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PulseOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  The default parameters.\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PulseOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'width': 0.2\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.start(time);\n\t        this._widthGate.gain.setValueAtTime(1, time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.stop(time);\n\t        //the width is still connected to the output. \n\t        //that needs to be stopped also\n\t        this._widthGate.gain.setValueAtTime(0, time);\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._sawtooth.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._sawtooth.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pulse';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up method.\n\t\t *  @return {Tone.PulseOscillator} this\n\t\t */\n\t    Tone.PulseOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._sawtooth.dispose();\n\t        this._sawtooth = null;\n\t        this._writable([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._widthGate.dispose();\n\t        this._widthGate = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.PulseOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator \n\t\t *         at the modulationFrequency. This has the effect of continuously\n\t\t *         changing the timbre of the oscillator by altering the harmonics \n\t\t *         generated.\n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse. \n\t\t *  @example\n\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t\t */\n\t    Tone.PWMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'modulationFrequency'\n\t        ], Tone.PWMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the pulse oscillator\n\t\t\t *  @type {Tone.PulseOscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t        //change the pulse oscillator type\n\t        this._pulse._sawtooth.type = 'sine';\n\t        /**\n\t\t\t *  the modulator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'detune': options.detune,\n\t            'phase': options.phase\n\t        });\n\t        /**\n\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t *  at the extreme values.\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = new Tone.Multiply(2);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._modulator.frequency;\n\t        /**\n\t\t\t *  The detune of the oscillator.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._modulator.detune;\n\t        /**\n\t\t\t *  The modulation rate of the oscillator. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.modulationFrequency = this._pulse.frequency;\n\t        //connections\n\t        this._modulator.chain(this._scale, this._pulse.width);\n\t        this._pulse.connect(this.output);\n\t        this._readOnly([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PWMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PWMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationFrequency': 0.4\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._pulse.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._pulse.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pwm';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._modulator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.PWMOscillator} this\n\t\t */\n\t    Tone.PWMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._pulse.dispose();\n\t        this._pulse = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._writable([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.modulationFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.PWMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FMOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.FMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this.detune.connect(this._modulator.detune);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationIndex': 2,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FMOscillator} this\n\t\t */\n\t    Tone.FMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        return this;\n\t    };\n\t    return Tone.FMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AMOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.AMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.AMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._carrier.frequency;\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.connect(this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.AMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.AMOscillator} this\n\t\t */\n\t    Tone.AMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        return this;\n\t    };\n\t    return Tone.AMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FatOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FatOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'spread'\n\t        ], Tone.FatOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The array of oscillators\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The total spread of the oscillators\n\t\t\t *  @type  {Cents}\n\t\t\t *  @private\n\t\t\t */\n\t        this._spread = options.spread;\n\t        /**\n\t\t\t *  The type of the oscillator\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The phase of the oscillators\n\t\t\t *  @type {Degrees}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  The partials array\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = this.defaultArg(options.partials, []);\n\t        //set the count initially\n\t        this.count = options.count;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FatOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FatOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'spread': 20,\n\t        'count': 3,\n\t        'type': 'sawtooth'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.start(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.stop(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  Iterate over all of the oscillators\n\t\t *  @param  {Function}  iterator  The iterator function\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._forEach = function (iterator) {\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            iterator.call(this, this._oscillators[i], i);\n\t        }\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._forEach(function (osc) {\n\t                osc.type = type;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            return this._spread;\n\t        },\n\t        set: function (spread) {\n\t            this._spread = spread;\n\t            if (this._oscillators.length > 1) {\n\t                var start = -spread / 2;\n\t                var step = spread / (this._oscillators.length - 1);\n\t                this._forEach(function (osc, i) {\n\t                    osc.detune.value = start + step * i;\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {\n\t        get: function () {\n\t            return this._oscillators.length;\n\t        },\n\t        set: function (count) {\n\t            count = Math.max(count, 1);\n\t            if (this._oscillators.length !== count) {\n\t                // var partials = this.partials;\n\t                // var type = this.type;\n\t                //dispose the previous oscillators\n\t                this._forEach(function (osc) {\n\t                    osc.dispose();\n\t                });\n\t                this._oscillators = [];\n\t                for (var i = 0; i < count; i++) {\n\t                    var osc = new Tone.Oscillator();\n\t                    if (this.type === Tone.Oscillator.Type.Custom) {\n\t                        osc.partials = this._partials;\n\t                    } else {\n\t                        osc.type = this._type;\n\t                    }\n\t                    osc.phase = this._phase;\n\t                    osc.volume.value = -6 - count;\n\t                    this.frequency.connect(osc.frequency);\n\t                    this.detune.connect(osc.detune);\n\t                    osc.connect(this.output);\n\t                    this._oscillators[i] = osc;\n\t                }\n\t                //set the spread\n\t                this.spread = this._spread;\n\t                if (this.state === Tone.State.Started) {\n\t                    this._forEach(function (osc) {\n\t                        osc.start();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase;\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase;\n\t            this._forEach(function (osc) {\n\t                osc.phase = phase;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._partials;\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this._type = Tone.Oscillator.Type.Custom;\n\t            this._forEach(function (osc) {\n\t                osc.partials = partials;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FatOscillator} this\n\t\t */\n\t    Tone.FatOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._forEach(function (osc) {\n\t            osc.dispose();\n\t        });\n\t        this._oscillators = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.FatOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t\t *         into one class. The oscillator class can be changed by setting the `type`. \n\t\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively. \n\t\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t\t *         to a FatOscillator of type \"sawtooth\". \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t\t *  @param {String} type The type of the oscillator.\n\t\t *  @example\n\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t */\n\t    Tone.OmniOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.OmniOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the type of the oscillator source\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sourceType = undefined;\n\t        /**\n\t\t\t *  the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        //set the oscillator\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        //set the options\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.OmniOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.OmniOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'type': 'sine',\n\t        'phase': 0\n\t    };\n\t    /**\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    var OmniOscType = {\n\t        Pulse: 'PulseOscillator',\n\t        PWM: 'PWMOscillator',\n\t        Osc: 'Oscillator',\n\t        FM: 'FMOscillator',\n\t        AM: 'AMOscillator',\n\t        Fat: 'FatOscillator'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._start = function (time) {\n\t        this._oscillator.start(time);\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._stop = function (time) {\n\t        this._oscillator.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error \n\t\t * when it's not.\n\t\t * \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name type\n\t\t * @example\n\t\t * omniOsc.type = \"pwm\";\n\t\t * //modulationFrequency is parameter which is available\n\t\t * //only when the type is \"pwm\". \n\t\t * omniOsc.modulationFrequency.value = 0.5;\n\t\t * @example\n\t\t * //an square wave frequency modulated by a sawtooth\n\t\t * omniOsc.type = \"fmsquare\";\n\t\t * omniOsc.modulationType = \"sawtooth\";\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {\n\t        get: function () {\n\t            var prefix = '';\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                prefix = 'fm';\n\t            } else if (this._sourceType === OmniOscType.AM) {\n\t                prefix = 'am';\n\t            } else if (this._sourceType === OmniOscType.Fat) {\n\t                prefix = 'fat';\n\t            }\n\t            return prefix + this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            if (type.substr(0, 2) === 'fm') {\n\t                this._createNewOscillator(OmniOscType.FM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 2) === 'am') {\n\t                this._createNewOscillator(OmniOscType.AM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 3) === 'fat') {\n\t                this._createNewOscillator(OmniOscType.Fat);\n\t                this._oscillator.type = type.substr(3);\n\t            } else if (type === 'pwm') {\n\t                this._createNewOscillator(OmniOscType.PWM);\n\t            } else if (type === 'pulse') {\n\t                this._createNewOscillator(OmniOscType.Pulse);\n\t            } else {\n\t                this._createNewOscillator(OmniOscType.Osc);\n\t                this._oscillator.type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._oscillator.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._oscillator.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set a member/attribute of the oscillator. \n\t\t *  @param {Object|String} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.set = function (params, value) {\n\t        //make sure the type is set first\n\t        if (params === 'type') {\n\t            this.type = value;\n\t        } else if (this.isObject(params) && params.hasOwnProperty('type')) {\n\t            this.type = params.type;\n\t        }\n\t        //then set the rest\n\t        Tone.prototype.set.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the oscillator to the frequency and detune signals\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {\n\t        if (oscType !== this._sourceType) {\n\t            this._sourceType = oscType;\n\t            var OscillatorConstructor = Tone[oscType];\n\t            //short delay to avoid clicks on the change\n\t            var now = this.now() + this.blockTime;\n\t            if (this._oscillator !== null) {\n\t                var oldOsc = this._oscillator;\n\t                oldOsc.stop(now);\n\t                //dispose the old one\n\t                setTimeout(function () {\n\t                    oldOsc.dispose();\n\t                    oldOsc = null;\n\t                }, this.blockTime * 1000);\n\t            }\n\t            this._oscillator = new OscillatorConstructor();\n\t            this.frequency.connect(this._oscillator.frequency);\n\t            this.detune.connect(this._oscillator.detune);\n\t            this._oscillator.connect(this.output);\n\t            if (this.state === Tone.State.Started) {\n\t                this._oscillator.start(now);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {NormalRange}\n\t\t * @signal\n\t\t * @name width\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t * omniOsc.width.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Pulse) {\n\t                return this._oscillator.width;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.count;\n\t            }\n\t        },\n\t        set: function (count) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.count = count;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t\t * for more info.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.spread;\n\t            }\n\t        },\n\t        set: function (spread) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.spread = spread;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator. Only if the oscillator\n\t\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t\t * for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.modulationType;\n\t            }\n\t        },\n\t        set: function (mType) {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                this._oscillator.modulationType = mType;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t * modulating signal (ma) -- as in ma/mf. \n\t\t * See Tone.FMOscillator for more info. \n\t\t * @type {Positive}\n\t\t * @signal\n\t\t * @name modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                return this._oscillator.modulationIndex;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t\t *  for more info. \n\t\t *  @memberOf Tone.OmniOscillator#\n\t\t *  @signal\n\t\t *  @type {Positive}\n\t\t *  @name harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.harmonicity;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulationFrequency Signal of the oscillator \n\t\t * (only if the oscillator type is set to pwm). See \n\t\t * Tone.PWMOscillator for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Frequency}\n\t\t * @signal\n\t\t * @name modulationFrequency\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.PWM) {\n\t                return this._oscillator.modulationFrequency;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._sourceType = null;\n\t        return this;\n\t    };\n\t    return Tone.OmniOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base-class for all instruments\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Instrument = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t        /**\n\t\t\t *  The output and volume triming node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t    };\n\t    Tone.extend(Tone.Instrument);\n\t    /**\n\t\t *  the default attributes\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Instrument.defaults = {\n\t        /** the volume of the output in decibels */\n\t        'volume': 0\n\t    };\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {string|number} note the note to trigger\n\t\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttack = Tone.noOp;\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {Time} [time=now] when to trigger the release\n\t\t */\n\t    Tone.Instrument.prototype.triggerRelease = Tone.noOp;\n\t    /**\n\t\t *  Trigger the attack and then the release after the duration. \n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t *                          triggering the release.\n\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t *  @returns {Tone.Instrument} this\n\t\t *  @example\n\t\t * //trigger \"C4\" for the duration of an 8th note\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(note, time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Instrument} this\n\t\t */\n\t    Tone.Instrument.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable(['volume']);\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Instrument;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  This is an abstract base class for other monophonic instruments to \n\t\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t\t *          shouldn't be directly instantiated.\n\t\t *\n\t\t *  @constructor\n\t\t *  @abstract\n\t\t *  @extends {Tone.Instrument}\n\t\t */\n\t    Tone.Monophonic = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Monophonic.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The glide time between notes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.portamento = options.portamento;\n\t    };\n\t    Tone.extend(Tone.Monophonic, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Monophonic.defaults = { 'portamento': 0 };\n\t    /**\n\t\t *  Trigger the attack of the note optionally with a given velocity. \n\t\t *  \n\t\t *  \n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} [time=now]     When the note should start.\n\t\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t\t *                                determines how \"loud\" the note \n\t\t *                                will be triggered.\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerAttack(\"C4\");\n\t\t *  @example\n\t\t * //trigger the note a half second from now at half velocity\n\t\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t\t */\n\t    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._triggerEnvelopeAttack(time, velocity);\n\t        this.setNote(note, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the envelope\n\t\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerRelease();\n\t\t */\n\t    Tone.Monophonic.prototype.triggerRelease = function (time) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._triggerEnvelopeRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {\n\t    };\n\t    /**\n\t\t *  Set the note at the given time. If no time is given, the note\n\t\t *  will set immediately. \n\t\t *  @param {Frequency} note The note to change to.\n\t\t *  @param  {Time} [time=now] The time when the note should be set. \n\t\t *  @returns {Tone.Monophonic} this\n\t\t * @example\n\t\t * //change to F#6 in one quarter note from now.\n\t\t * synth.setNote(\"F#6\", \"+4n\");\n\t\t * @example\n\t\t * //change to Bb4 right now\n\t\t * synth.setNote(\"Bb4\");\n\t\t */\n\t    Tone.Monophonic.prototype.setNote = function (note, time) {\n\t        time = this.toSeconds(time);\n\t        if (this.portamento > 0) {\n\t            var currentNote = this.frequency.value;\n\t            this.frequency.setValueAtTime(currentNote, time);\n\t            var portTime = this.toSeconds(this.portamento);\n\t            this.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t        } else {\n\t            this.frequency.setValueAtTime(note, time);\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Monophonic;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t\t *          routed through a Tone.AmplitudeEnvelope. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.Synth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Synth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Synth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Synth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Synth.defaults = {\n\t        'oscillator': { 'type': 'triangle' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.3,\n\t            'release': 1\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Synth} this\n\t\t */\n\t    Tone.Synth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.Synth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n\t\t *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n\t\t *          the two signals) affects the timbre of the output signal greatly.\n\t\t *          Read more about Amplitude Modulation Synthesis on \n\t\t *          [SoundOnSound](http://www.soundonsound.com/sos/mar00/articles/synthsecrets.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                            see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.AMSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"4n\");\n\t\t */\n\t    Tone.AMSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.AMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice. \n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth();\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice. \n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth();\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain();\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'moduation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t *  trigger the attack portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the port glide\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.AMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n\t\t *          The amplitude of the Tone.Oscillator and the cutoff frequency of the \n\t\t *          Tone.Filter are controlled by Tone.Envelopes. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n\t\t *          \n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MonoSynth({\n\t\t * \t\"oscillator\" : {\n\t\t * \t\t\"type\" : \"square\"\n\t\t *  },\n\t\t *  \"envelope\" : {\n\t\t *  \t\"attack\" : 0.1\n\t\t *  }\n\t\t * }).toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.MonoSynth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.MonoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The filter.\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The filter envelope.\n\t\t\t *  @type {Tone.FrequencyEnvelope}\n\t\t\t */\n\t        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.filter, this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        //connect the filter envelope\n\t        this.filterEnvelope.connect(this.filter.frequency);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MonoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MonoSynth.defaults = {\n\t        'frequency': 'C4',\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'square' },\n\t        'filter': {\n\t            'Q': 6,\n\t            'type': 'lowpass',\n\t            'rolloff': -24\n\t        },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.9,\n\t            'release': 1\n\t        },\n\t        'filterEnvelope': {\n\t            'attack': 0.06,\n\t            'decay': 0.2,\n\t            'sustain': 0.5,\n\t            'release': 2,\n\t            'baseFrequency': 200,\n\t            'octaves': 7,\n\t            'exponent': 2\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.filterEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t */\n\t    Tone.MonoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.filterEnvelope.dispose();\n\t        this.filterEnvelope = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.MonoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.DuoSynth is a monophonic synth composed of two \n\t\t *          MonoSynths run in parallel with control over the \n\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var duoSynth = new Tone.DuoSynth().toMaster();\n\t\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t\t */\n\t    Tone.DuoSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.DuoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  the first voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice0 = new Tone.MonoSynth(options.voice0);\n\t        this.voice0.volume.value = -10;\n\t        /**\n\t\t\t *  the second voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice1 = new Tone.MonoSynth(options.voice1);\n\t        this.voice1.volume.value = -10;\n\t        /**\n\t\t\t *  The vibrato LFO. \n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t        this._vibrato.start();\n\t        /**\n\t\t\t * the vibrato frequency\n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoRate = this._vibrato.frequency;\n\t        /**\n\t\t\t *  the vibrato gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\t        /**\n\t\t\t * The amount of vibrato\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoAmount = this._vibratoGain.gain;\n\t        /**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * duoSynth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        //control the two voices frequency\n\t        this.frequency.connect(this.voice0.frequency);\n\t        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n\t        this._vibrato.connect(this._vibratoGain);\n\t        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t        this.voice0.connect(this.output);\n\t        this.voice1.connect(this.output);\n\t        this._readOnly([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.DuoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.DuoSynth.defaults = {\n\t        'vibratoAmount': 0.5,\n\t        'vibratoRate': 5,\n\t        'harmonicity': 1.5,\n\t        'voice0': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        },\n\t        'voice1': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.voice0.envelope.triggerAttack(time, velocity);\n\t        this.voice1.envelope.triggerAttack(time, velocity);\n\t        this.voice0.filterEnvelope.triggerAttack(time);\n\t        this.voice1.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.voice0.triggerRelease(time);\n\t        this.voice1.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t */\n\t    Tone.DuoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t        this.voice0.dispose();\n\t        this.voice0 = null;\n\t        this.voice1.dispose();\n\t        this.voice1 = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._vibratoGain.dispose();\n\t        this._vibratoGain = null;\n\t        this._vibrato = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this.vibratoAmount.dispose();\n\t        this.vibratoAmount = null;\n\t        this.vibratoRate = null;\n\t        return this;\n\t    };\n\t    return Tone.DuoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n\t\t *          the frequency of a second Tone.Synth. A lot of spectral content \n\t\t *          can be explored using the modulationIndex parameter. Read more about\n\t\t *          frequency modulation synthesis on [SoundOnSound](http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var fmSynth = new Tone.FMSynth().toMaster();\n\t\t * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t\t */\n\t    Tone.FMSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.FMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth(options.carrier);\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth(options.modulator);\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulation index which essentially the depth or amount of the modulation. It is the \n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'modulationIndex': 10,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'moduation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * \ttrigger the attack portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FMSynth} this\n\t\t */\n\t    Tone.FMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.FMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n\t\t *          with an amplitude envelope and frequency ramp. A Tone.Oscillator\n\t\t *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n\t\t *          quality of the sound comes from the frequency envelope applied\n\t\t *          during during Tone.MembraneSynth.triggerAttack(note). The frequency\n\t\t *          envelope starts at <code>note * .octaves</code> and ramps to \n\t\t *          <code>note</code> over the duration of <code>.pitchDecay</code>. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MembraneSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C2\", \"8n\");\n\t\t */\n\t    Tone.MembraneSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.MembraneSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.Oscillator(options.oscillator).start();\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        /**\n\t\t\t *  The number of octaves the pitch envelope ramps.\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.octaves = options.octaves;\n\t        /**\n\t\t\t *  The amount of time the frequency envelope takes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.pitchDecay = options.pitchDecay;\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MembraneSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MembraneSynth.defaults = {\n\t        'pitchDecay': 0.05,\n\t        'octaves': 10,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 0.4,\n\t            'sustain': 0.01,\n\t            'release': 1.4,\n\t            'attackCurve': 'exponential'\n\t        }\n\t    };\n\t    /**\n\t\t *  Trigger the note at the given time with the given velocity. \n\t\t *  \n\t\t *  @param  {Frequency} note     the note\n\t\t *  @param  {Time} [time=now]     the time, if not given is now\n\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t *  @example\n\t\t *  kick.triggerAttack(60);\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        note = this.toFrequency(note);\n\t        var maxNote = note * this.octaves;\n\t        this.oscillator.frequency.setValueAtTime(maxNote, time);\n\t        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the note.\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.MembraneSynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  Inharmonic ratio of frequencies based on the Roland TR-808\n\t\t *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var inharmRatios = [\n\t        1,\n\t        1.483,\n\t        1.932,\n\t        2.546,\n\t        2.63,\n\t        3.897\n\t    ];\n\t    /**\n\t\t *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n\t\t *          and amplitude envelope which is good for making metalophone sounds. Based\n\t\t *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n\t\t *          Inspiration from [Sound on Sound](http://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] The options availble for the synth\n\t\t *                             see defaults below\n\t\t */\n\t    Tone.MetalSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.MetalSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The frequency of the cymbal\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The array of FMOscillators\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The frequency multipliers\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._freqMultipliers = [];\n\t        /**\n\t\t\t *  The amplitude for the body\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitue = new Tone.Gain(0).connect(this.output);\n\t        /**\n\t\t\t *  highpass the output\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._highpass = new Tone.Filter({\n\t            'type': 'highpass',\n\t            'Q': 0\n\t        }).connect(this._amplitue);\n\t        /**\n\t\t\t *  The number of octaves the highpass\n\t\t\t *  filter frequency ramps\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  Scale the body envelope\n\t\t\t *  for the bandpass\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\t        /**\n\t\t\t *  The envelope which is connected both to the \n\t\t\t *  amplitude and highpass filter's cutoff frequency\n\t\t\t *  @type  {Tone.Envelope}\n\t\t\t */\n\t        this.envelope = new Tone.Envelope({\n\t            'attack': options.envelope.attack,\n\t            'attackCurve': 'exponential',\n\t            'decay': options.envelope.decay,\n\t            'sustain': 0,\n\t            'release': options.envelope.release\n\t        }).chain(this._filterFreqScaler, this._highpass.frequency);\n\t        this.envelope.connect(this._amplitue.gain);\n\t        for (var i = 0; i < inharmRatios.length; i++) {\n\t            var osc = new Tone.FMOscillator({\n\t                'type': 'square',\n\t                'modulationType': 'square',\n\t                'harmonicity': options.harmonicity,\n\t                'modulationIndex': options.modulationIndex\n\t            });\n\t            osc.connect(this._highpass).start(0);\n\t            this._oscillators[i] = osc;\n\t            var mult = new Tone.Multiply(inharmRatios[i]);\n\t            this._freqMultipliers[i] = mult;\n\t            this.frequency.chain(mult, osc.frequency);\n\t        }\n\t        //set the octaves\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.MetalSynth, Tone.Instrument);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MetalSynth.defaults = {\n\t        'frequency': 200,\n\t        'envelope': {\n\t            'attack': 0.0015,\n\t            'decay': 1.4,\n\t            'release': 0.2\n\t        },\n\t        'harmonicity': 5.1,\n\t        'modulationIndex': 32,\n\t        'resonance': 4000,\n\t        'octaves': 1.5\n\t    };\n\t    /**\n\t\t *  Trigger the attack.\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {\n\t        time = this.toSeconds(time);\n\t        vel = this.defaultArg(vel, 1);\n\t        this.envelope.triggerAttack(time, vel);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the envelope.\n\t\t *  @param  {Time}  time      When the release should be triggered.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release of the envelope after the given \n\t\t *  duration. \n\t\t *  @param  {Time}  duration  The duration before triggering the release\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The modulationIndex of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.modulationIndex\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            return this._oscillators[0].modulationIndex.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].modulationIndex.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The harmonicity of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.harmonicity\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {\n\t        get: function () {\n\t            return this._oscillators[0].harmonicity.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].harmonicity.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The frequency of the highpass filter attached to the envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Frequency}\n\t\t *  @name  resonance\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {\n\t        get: function () {\n\t            return this._filterFreqScaler.min;\n\t        },\n\t        set: function (val) {\n\t            this._filterFreqScaler.min = val;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of octaves above the \"resonance\" frequency\n\t\t *  that the filter ramps during the attack/decay envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Number}\n\t\t *  @name  octaves\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octs) {\n\t            this._octaves = octs;\n\t            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.MetalSynth} this\n\t\t */\n\t    Tone.MetalSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            this._oscillators[i].dispose();\n\t            this._freqMultipliers[i].dispose();\n\t        }\n\t        this._oscillators = null;\n\t        this._freqMultipliers = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._filterFreqScaler.dispose();\n\t        this._filterFreqScaler = null;\n\t        this._amplitue.dispose();\n\t        this._amplitue = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this._highpass.dispose();\n\t        this._highpass = null;\n\t    };\n\t    return Tone.MetalSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n\t\t *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n\t\t *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t *  @example\n\t\t * //initialize the noise and start\n\t\t * var noise = new Tone.Noise(\"pink\").start();\n\t\t * \n\t\t * //make an autofilter to shape the noise\n\t\t * var autoFilter = new Tone.AutoFilter({\n\t\t * \t\"frequency\" : \"8m\", \n\t\t * \t\"min\" : 800, \n\t\t * \t\"max\" : 15000\n\t\t * }).connect(Tone.Master);\n\t\t * \n\t\t * //connect the noise\n\t\t * noise.connect(autoFilter);\n\t\t * //start the autofilter LFO\n\t\t * autoFilter.start()\n\t\t */\n\t    Tone.Noise = function () {\n\t        var options = this.optionsObject(arguments, ['type'], Tone.Noise.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {AudioBuffer}\n\t\t\t */\n\t        this._buffer = null;\n\t        /**\n\t\t\t *  The playback rate of the noise. Affects\n\t\t\t *  the \"frequency\" of the noise.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.Noise, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Noise.defaults = {\n\t        'type': 'white',\n\t        'playbackRate': 1\n\t    };\n\t    /**\n\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t * @memberOf Tone.Noise#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * noise.type = \"white\";\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'type', {\n\t        get: function () {\n\t            if (this._buffer === _whiteNoise) {\n\t                return 'white';\n\t            } else if (this._buffer === _brownNoise) {\n\t                return 'brown';\n\t            } else if (this._buffer === _pinkNoise) {\n\t                return 'pink';\n\t            }\n\t        },\n\t        set: function (type) {\n\t            if (this.type !== type) {\n\t                switch (type) {\n\t                case 'white':\n\t                    this._buffer = _whiteNoise;\n\t                    break;\n\t                case 'pink':\n\t                    this._buffer = _pinkNoise;\n\t                    break;\n\t                case 'brown':\n\t                    this._buffer = _brownNoise;\n\t                    break;\n\t                default:\n\t                    throw new TypeError('Tone.Noise: invalid type: ' + type);\n\t                }\n\t                //if it's playing, stop and restart it\n\t                if (this.state === Tone.State.Started) {\n\t                    var now = this.now() + this.blockTime;\n\t                    //remove the listener\n\t                    this._stop(now);\n\t                    this._start(now);\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the noise. Affects\n\t\t *  the \"frequency\" of the noise.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  internal start method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._start = function (time) {\n\t        this._source = this.context.createBufferSource();\n\t        this._source.buffer = this._buffer;\n\t        this._source.loop = true;\n\t        this._source.playbackRate.value = this._playbackRate;\n\t        this._source.connect(this.output);\n\t        this._source.start(this.toSeconds(time), Math.random() * (this._buffer.duration - 0.001));\n\t    };\n\t    /**\n\t\t *  internal stop method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Noise} this\n\t\t */\n\t    Tone.Noise.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // THE BUFFERS\n\t    // borrowed heavily from http://noisehack.com/generate-noise-web-audio-api/\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *\tstatic noise buffers\n\t\t *\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {AudioBuffer}\n\t\t */\n\t    var _pinkNoise = null, _brownNoise = null, _whiteNoise = null;\n\t    Tone._initAudioContext(function (audioContext) {\n\t        var sampleRate = audioContext.sampleRate;\n\t        //four seconds per buffer\n\t        var bufferLength = sampleRate * 4;\n\t        //fill the buffers\n\t        _pinkNoise = function () {\n\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t                var channel = buffer.getChannelData(channelNum);\n\t                var b0, b1, b2, b3, b4, b5, b6;\n\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    b0 = 0.99886 * b0 + white * 0.0555179;\n\t                    b1 = 0.99332 * b1 + white * 0.0750759;\n\t                    b2 = 0.969 * b2 + white * 0.153852;\n\t                    b3 = 0.8665 * b3 + white * 0.3104856;\n\t                    b4 = 0.55 * b4 + white * 0.5329522;\n\t                    b5 = -0.7616 * b5 - white * 0.016898;\n\t                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t                    channel[i] *= 0.11;\n\t                    // (roughly) compensate for gain\n\t                    b6 = white * 0.115926;\n\t                }\n\t            }\n\t            return buffer;\n\t        }();\n\t        _brownNoise = function () {\n\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t                var channel = buffer.getChannelData(channelNum);\n\t                var lastOut = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    channel[i] = (lastOut + 0.02 * white) / 1.02;\n\t                    lastOut = channel[i];\n\t                    channel[i] *= 3.5;    // (roughly) compensate for gain\n\t                }\n\t            }\n\t            return buffer;\n\t        }();\n\t        _whiteNoise = function () {\n\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t                var channel = buffer.getChannelData(channelNum);\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    channel[i] = Math.random() * 2 - 1;\n\t                }\n\t            }\n\t            return buffer;\n\t        }();\n\t    });\n\t    return Tone.Noise;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter), \n\t\t *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n\t\t *          of the noise and the other is controls the cutoff frequency of the filter. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t * @example\n\t\t * var noiseSynth = new Tone.NoiseSynth().toMaster();\n\t\t * noiseSynth.triggerAttackRelease(\"8n\");\n\t\t */\n\t    Tone.NoiseSynth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.NoiseSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The noise source.\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @example\n\t\t\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t\t\t */\n\t        this.noise = new Tone.Noise();\n\t        /**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the noise to the output\n\t        this.noise.chain(this.envelope, this.output);\n\t        //start the noise\n\t        this.noise.start();\n\t        this._readOnly([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.NoiseSynth, Tone.Instrument);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.NoiseSynth.defaults = {\n\t        'noise': { 'type': 'white' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0\n\t        }\n\t    };\n\t    /**\n\t\t *  Start the attack portion of the envelopes. Unlike other \n\t\t *  instruments, Tone.NoiseSynth doesn't have a note. \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t *  @example\n\t\t * noiseSynth.triggerAttack();\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the release portion of the envelopes.\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and then the release. \n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     the time of the attack\n\t\t *  @param  {number} [velocity=1] the velocity\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t        this.noise.dispose();\n\t        this.noise = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.NoiseSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Karplus-String string synthesis. Often out of tune. \n\t\t *         Will change when the AudioWorkerNode is available across\n\t\t *         browsers. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] see the defaults\n\t\t *  @example\n\t\t * var plucky = new Tone.PluckSynth().toMaster();\n\t\t * plucky.triggerAttack(\"C4\");\n\t\t */\n\t    Tone.PluckSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.PluckSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @private\n\t\t\t */\n\t        this._noise = new Tone.Noise('pink');\n\t        /**\n\t\t\t *  The amount of noise at the attack. \n\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this.attackNoise = 1;\n\t        /**\n\t\t\t *  the LFCF\n\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfcf = new Tone.LowpassCombFilter({\n\t            'resonance': options.resonance,\n\t            'dampening': options.dampening\n\t        });\n\t        /**\n\t\t\t *  The resonance control. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._lfcf.resonance;\n\t        /**\n\t\t\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = this._lfcf.dampening;\n\t        //connections\n\t        this._noise.connect(this._lfcf);\n\t        this._lfcf.connect(this.output);\n\t        this._readOnly([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PluckSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PluckSynth.defaults = {\n\t        'attackNoise': 1,\n\t        'dampening': 4000,\n\t        'resonance': 0.9\n\t    };\n\t    /**\n\t\t *  Trigger the note. \n\t\t *  @param {Frequency} note The note to trigger.\n\t\t *  @param {Time} [time=now] When the note should be triggered.\n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {\n\t        note = this.toFrequency(note);\n\t        time = this.toSeconds(time);\n\t        var delayAmount = 1 / note;\n\t        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t        this._noise.start(time);\n\t        this._noise.stop(time + delayAmount * this.attackNoise);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._noise.dispose();\n\t        this._lfcf.dispose();\n\t        this._noise = null;\n\t        this._lfcf = null;\n\t        this._writable([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t        this.dampening = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.PluckSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PolySynth handles voice creation and allocation for any\n\t\t *          instruments passed in as the second paramter. PolySynth is \n\t\t *          not a synthesizer by itself, it merely manages voices of \n\t\t *          one of the other types of synths, allowing any of the \n\t\t *          monophonic synthesizers to be polyphonic. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {number|Object} [polyphony=4] The number of voices to create\n\t\t *  @param {function} [voice=Tone.Synth] The constructor of the voices\n\t\t *                                            uses Tone.Synth by default. \n\t\t *  @example\n\t\t * //a polysynth composed of 6 Voices of Synth\n\t\t * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\t\t * //set the attributes using the set interface\n\t\t * synth.set(\"detune\", -1200);\n\t\t * //play a chord\n\t\t * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n\t\t */\n\t    Tone.PolySynth = function () {\n\t        Tone.Instrument.call(this);\n\t        var options = this.optionsObject(arguments, [\n\t            'polyphony',\n\t            'voice'\n\t        ], Tone.PolySynth.defaults);\n\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t        //max polyphony\n\t        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\t        /**\n\t\t\t *  the array of voices\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.voices = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The queue of voices with data about last trigger\n\t\t\t *  and the triggered note\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this._triggers = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        this._readOnly('detune');\n\t        //create the voices\n\t        for (var i = 0; i < options.polyphony; i++) {\n\t            var v = new options.voice(arguments[2], arguments[3]);\n\t            this.voices[i] = v;\n\t            v.connect(this.output);\n\t            if (v.hasOwnProperty('detune')) {\n\t                this.detune.connect(v.detune);\n\t            }\n\t            this._triggers[i] = {\n\t                release: -1,\n\t                note: null,\n\t                voice: v\n\t            };\n\t        }\n\t        //set the volume initially\n\t        this.volume.value = options.volume;\n\t    };\n\t    Tone.extend(Tone.PolySynth, Tone.Instrument);\n\t    /**\n\t\t *  the defaults\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PolySynth.defaults = {\n\t        'polyphony': 4,\n\t        'volume': 0,\n\t        'detune': 0,\n\t        'voice': Tone.Synth\n\t    };\n\t    /**\n\t\t *  Trigger the attack portion of the note\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  The start time of the note.\n\t\t *  @param {number} [velocity=1] The velocity of the note.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord immediately with a velocity of 0.2\n\t\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            var val = notes[i];\n\t            //trigger the oldest voice\n\t            var oldest = this._triggers[0];\n\t            var oldestIndex = 0;\n\t            for (var j = 1; j < this._triggers.length; j++) {\n\t                if (this._triggers[j].release < oldest.release) {\n\t                    oldest = this._triggers[j];\n\t                    oldestIndex = j;\n\t                }\n\t            }\n\t            oldest.release = Infinity;\n\t            oldest.note = JSON.stringify(val);\n\t            oldest.voice.triggerAttack(val, time, velocity);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release after the specified duration\n\t\t *  \n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     if no time is given, defaults to now\n\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord for a duration of a half note \n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n\t\t *  @example\n\t\t * //can pass in an array of durations as well\n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(notes, time, velocity);\n\t        if (this.isArray(duration) && this.isArray(notes)) {\n\t            for (var i = 0; i < notes.length; i++) {\n\t                var d = duration[Math.min(i, duration.length - 1)];\n\t                this.triggerRelease(notes[i], time + this.toSeconds(d));\n\t            }\n\t        } else {\n\t            this.triggerRelease(notes, time + this.toSeconds(duration));\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the note. Unlike monophonic instruments, \n\t\t *  a note (or array of notes) needs to be passed in as the first argument.\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  When the release will be triggered. \n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n\t\t */\n\t    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            //get the voice\n\t            var stringified = JSON.stringify(notes[i]);\n\t            for (var v = 0; v < this._triggers.length; v++) {\n\t                var desc = this._triggers[v];\n\t                if (desc.note === stringified && desc.release > time) {\n\t                    desc.voice.triggerRelease(time);\n\t                    desc.release = time;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set a member/attribute of the voices. \n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.set({\n\t\t * \t\"filter\" : {\n\t\t * \t\t\"type\" : \"highpass\"\n\t\t * \t},\n\t\t * \t\"envelope\" : {\n\t\t * \t\t\"attack\" : 0.25\n\t\t * \t}\n\t\t * });\n\t\t */\n\t    Tone.PolySynth.prototype.set = function (params, value, rampTime) {\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].set(params, value, rampTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the synth's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t   all available.\n\t\t */\n\t    Tone.PolySynth.prototype.get = function (params) {\n\t        return this.voices[0].get(params);\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of all the currently active voices.\n\t\t *  @param {Time} [time=now] When the notes should be released.\n\t\t *  @return {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.releaseAll = function (time) {\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._triggers.length; i++) {\n\t            var desc = this._triggers[i];\n\t            if (desc.release > time) {\n\t                desc.release = time;\n\t                desc.voice.triggerRelease(time);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].dispose();\n\t            this.voices[i] = null;\n\t        }\n\t        this._writable('detune');\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.voices = null;\n\t        this._triggers = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The maximum number of notes that can be allocated \n\t\t *  to a polysynth. \n\t\t *  @type  {Number}\n\t\t *  @static\n\t\t */\n\t    Tone.PolySynth.MAX_POLYPHONY = 20;\n\t    return Tone.PolySynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Source} \n\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t *                                  which to load the AudioBuffer\n\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t *                            Recommended to use Tone.Buffer.on('load') instead.\n\t\t *  @example\n\t\t * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n\t\t * //play as soon as the buffer is loaded\n\t\t * player.autostart = true;\n\t\t */\n\t    Tone.Player = function (url) {\n\t        var options;\n\t        if (url instanceof Tone.Buffer) {\n\t            url = url.get();\n\t            options = Tone.Player.defaults;\n\t        } else {\n\t            options = this.optionsObject(arguments, [\n\t                'url',\n\t                'onload'\n\t            ], Tone.Player.defaults);\n\t        }\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  If the file should play as soon\n\t\t\t *  as the buffer is loaded. \n\t\t\t *  @type {boolean}\n\t\t\t *  @example\n\t\t\t * //will play as soon as it's loaded\n\t\t\t * var player = new Tone.Player({\n\t\t\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t\t\t * \t\"autostart\" : true,\n\t\t\t * }).toMaster();\n\t\t\t */\n\t        this.autostart = options.autostart;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t */\n\t        this._buffer = new Tone.Buffer({\n\t            'url': options.url,\n\t            'onload': this._onload.bind(this, options.onload),\n\t            'reverse': options.reverse\n\t        });\n\t        if (url instanceof AudioBuffer) {\n\t            this._buffer.set(url);\n\t        }\n\t        /**\n\t\t\t *  if the buffer should loop once it's over\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = options.loopStart;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = options.loopEnd;\n\t        /**\n\t\t\t *  the playback rate\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t *  before the the previous 'start' is done playing. Otherwise, \n\t\t\t *  successive calls to Tone.Player.start will only start\n\t\t\t *  the sample if it had played all the way through. \n\t\t\t *  @type {boolean}\n\t\t\t */\n\t        this.retrigger = options.retrigger;\n\t    };\n\t    Tone.extend(Tone.Player, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Player.defaults = {\n\t        'onload': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'loop': false,\n\t        'autostart': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'retrigger': false,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Load the audio file as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads. \n\t\t *  Note: this does not need to be called if a url\n\t\t *  was passed in to the constructor. Only use this\n\t\t *  if you want to manually load a new url. \n\t\t * @param {string} url The url of the buffer to load.\n\t\t *                     Filetype support depends on the\n\t\t *                     browser.\n\t\t *  @param  {function=} callback The function to invoke once\n\t\t *                               the sample is loaded.\n\t\t *  @returns {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype.load = function (url, callback) {\n\t        this._buffer.load(url, this._onload.bind(this, callback));\n\t        return this;\n\t    };\n\t    /**\n\t\t * Internal callback when the buffer is loaded.\n\t\t * @private\n\t\t */\n\t    Tone.Player.prototype._onload = function (callback) {\n\t        callback(this);\n\t        if (this.autostart) {\n\t            this.start();\n\t        }\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  and/or duration which will play the buffer from a position\n\t\t *  within the buffer for the given duration. \n\t\t *  \n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.Player} this\n\t\t *  @memberOf Tone.Player#\n\t\t *  @method start\n\t\t *  @name start\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @private\n\t\t */\n\t    Tone.Player.prototype._start = function (startTime, offset, duration) {\n\t        if (this._buffer.loaded) {\n\t            //if it's a loop the default offset is the loopstart point\n\t            if (this._loop) {\n\t                offset = this.defaultArg(offset, this._loopStart);\n\t            } else {\n\t                //otherwise the default offset is 0\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toSeconds(offset);\n\t            //make sure it has a positive duration\n\t            duration = this.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\t            duration = this.toSeconds(duration);\n\t            //the values in seconds\n\t            startTime = this.toSeconds(startTime);\n\t            //make the source\n\t            this._source = this.context.createBufferSource();\n\t            this._source.buffer = this._buffer.get();\n\t            //set the looping properties\n\t            if (this._loop) {\n\t                this._source.loop = this._loop;\n\t                this._source.loopStart = this.toSeconds(this._loopStart);\n\t                this._source.loopEnd = this.toSeconds(this._loopEnd);\n\t            } else {\n\t                //if it's not looping, set the state change at the end of the sample\n\t                this._state.setStateAtTime(Tone.State.Stopped, startTime + duration);\n\t            }\n\t            //and other properties\n\t            this._source.playbackRate.value = this._playbackRate;\n\t            this._source.connect(this.output);\n\t            //start it\n\t            if (this._loop) {\n\t                //modify the offset if it's greater than the loop time\n\t                var loopEnd = this._source.loopEnd || this._buffer.duration;\n\t                var loopStart = this._source.loopStart;\n\t                var loopDuration = loopEnd - loopStart;\n\t                if (offset > loopDuration) {\n\t                    offset = loopStart + offset % loopDuration;\n\t                    if (offset > loopEnd) {\n\t                        offset -= loopDuration;\n\t                    }\n\t                }\n\t                this._source.start(startTime, offset);\n\t            } else {\n\t                this._source.start(startTime, offset, duration);\n\t            }\n\t        } else {\n\t            throw Error('Tone.Player: tried to start Player before the buffer was loaded');\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop playback.\n\t\t *  @private\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t            this._source = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Seek to a specific time in the player's buffer. If the \n\t\t *  source is no longer playing at that time, it will stop.\n\t\t *  If you seek to a time that \n\t\t *  @param {Time} offset The time to seek to.\n\t\t *  @param {Time=} time The time for the seek event to occur.\n\t\t *  @return {Tone.Player} this\n\t\t *  @example\n\t\t * source.start(0.2);\n\t\t * source.stop(0.4);\n\t\t */\n\t    Tone.Player.prototype.seek = function (offset, time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t            offset = this.toSeconds(offset);\n\t            // if it's currently playing, stop it\n\t            this._stop(time);\n\t            //restart it at the given time\n\t            this._start(time, offset);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the loop start and end. Will only loop if loop is \n\t\t *  set to true. \n\t\t *  @param {Time} loopStart The loop end time\n\t\t *  @param {Time} loopEnd The loop end time\n\t\t *  @returns {Tone.Player} this\n\t\t *  @example\n\t\t * //loop 0.1 seconds of the file. \n\t\t * player.setLoopPoints(0.2, 0.3);\n\t\t * player.loop = true;\n\t\t */\n\t    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n\t        this.loopStart = loopStart;\n\t        this.loopEnd = loopEnd;\n\t        return this;\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = loopStart;\n\t            if (this._source) {\n\t                this._source.loopStart = this.toSeconds(loopStart);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = loopEnd;\n\t            if (this._source) {\n\t                this._source.loopEnd = this.toSeconds(loopEnd);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer;\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            if (this._source) {\n\t                this._source.loop = loop;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The playback speed. 1 is normal speed. This is not a signal because\n\t\t * Safari and iOS currently don't support playbackRate as a signal.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {number}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this._buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Player;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Sampler wraps Tone.Player in an AmplitudeEnvelope.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {String} url the url of the audio file\n\t\t *  @param {Function=} onload The callback to invoke when the sample is loaded.\n\t\t *  @example\n\t\t * var sampler = new Sampler(\"./audio/casio/A1.mp3\", function(){\n\t\t * \t//repitch the sample down a half step\n\t\t * \tsampler.triggerAttack(-1);\n\t\t * }).toMaster();\n\t\t */\n\t    Tone.Sampler = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.Sampler.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The sample player.\n\t\t\t *  @type {Tone.Player}\n\t\t\t */\n\t        this.player = new Tone.Player(options.url, options.onload);\n\t        this.player.retrigger = true;\n\t        /**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        this.player.chain(this.envelope, this.output);\n\t        this._readOnly([\n\t            'player',\n\t            'envelope'\n\t        ]);\n\t        this.loop = options.loop;\n\t        this.reverse = options.reverse;\n\t    };\n\t    Tone.extend(Tone.Sampler, Tone.Instrument);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.Sampler.defaults = {\n\t        'onload': Tone.noOp,\n\t        'loop': false,\n\t        'reverse': false,\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.1\n\t        }\n\t    };\n\t    /**\n\t\t *  Trigger the start of the sample. \n\t\t *  @param {Interval} [pitch=0] The amount the sample should\n\t\t *                              be repitched. \n\t\t *  @param {Time} [time=now] The time when the sample should start\n\t\t *  @param {NormalRange} [velocity=1] The velocity of the note\n\t\t *  @returns {Tone.Sampler} this\n\t\t *  @example\n\t\t * sampler.triggerAttack(0, \"+0.1\", 0.5);\n\t\t */\n\t    Tone.Sampler.prototype.triggerAttack = function (pitch, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        pitch = this.defaultArg(pitch, 0);\n\t        this.player.playbackRate = this.intervalToFrequencyRatio(pitch);\n\t        this.player.start(time);\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the release portion of the sample. Will stop the sample once the \n\t\t *  envelope has fully released. \n\t\t *  \n\t\t *  @param {Time} [time=now] The time when the note should release\n\t\t *  @returns {Tone.Sampler} this\n\t\t *  @example\n\t\t * sampler.triggerRelease();\n\t\t */\n\t    Tone.Sampler.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        this.player.stop(this.toSeconds(this.envelope.release) + time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * If the output sample should loop or not.\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {number|string}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'loop', {\n\t        get: function () {\n\t            return this.player.loop;\n\t        },\n\t        set: function (loop) {\n\t            this.player.loop = loop;\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'reverse', {\n\t        get: function () {\n\t            return this.player.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this.player.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * The buffer to play.\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'buffer', {\n\t        get: function () {\n\t            return this.player.buffer;\n\t        },\n\t        set: function (buff) {\n\t            this.player.buffer = buff;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Sampler} this\n\t\t */\n\t    Tone.Sampler.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'player',\n\t            'envelope'\n\t        ]);\n\t        this.player.dispose();\n\t        this.player = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.Sampler;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Now called Tone.Synth\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t */\n\t    Tone.SimpleSynth = function (options) {\n\t        console.warn('Tone.SimpleSynth is now called Tone.Synth');\n\t        Tone.Synth.call(this, options);\n\t    };\n\t    Tone.extend(Tone.SimpleSynth, Tone.Synth);\n\t    return Tone.SimpleSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n\t\t *         See also Tone.AudioToGain. \n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var g2a = new Tone.GainToAudio();\n\t\t */\n\t    Tone.GainToAudio = function () {\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return Math.abs(x) * 2 - 1;\n\t        });\n\t    };\n\t    Tone.extend(Tone.GainToAudio, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.GainToAudio} this\n\t\t */\n\t    Tone.GainToAudio.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.GainToAudio;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number} inputMin the min input value\n\t\t *  @param {number} inputMax the max input value\n\t\t *  @example\n\t\t * var norm = new Tone.Normalize(2, 4);\n\t\t * var sig = new Tone.Signal(3).connect(norm);\n\t\t * //output of norm is 0.5. \n\t\t */\n\t    Tone.Normalize = function (inputMin, inputMax) {\n\t        /**\n\t\t\t *  the min input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMin = this.defaultArg(inputMin, 0);\n\t        /**\n\t\t\t *  the max input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMax = this.defaultArg(inputMax, 1);\n\t        /**\n\t\t\t *  subtract the min from the input\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = this.input = new Tone.Add(0);\n\t        /**\n\t\t\t *  divide by the difference between the input and output\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._div = this.output = new Tone.Multiply(1);\n\t        this._sub.connect(this._div);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Normalize, Tone.SignalBase);\n\t    /**\n\t\t * The minimum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'min', {\n\t        get: function () {\n\t            return this._inputMin;\n\t        },\n\t        set: function (min) {\n\t            this._inputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'max', {\n\t        get: function () {\n\t            return this._inputMax;\n\t        },\n\t        set: function (max) {\n\t            this._inputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Normalize.prototype._setRange = function () {\n\t        this._sub.value = -this._inputMin;\n\t        this._div.value = 1 / (this._inputMax - this._inputMin);\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Normalize} this\n\t\t */\n\t    Tone.Normalize.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sub.dispose();\n\t        this._sub = null;\n\t        this._div.dispose();\n\t        this._div = null;\n\t        return this;\n\t    };\n\t    return Tone.Normalize;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Wrapper around the native BufferSourceNode.\n\t\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t\t *  @param  {Function}  onended  The callback to invoke when the \n\t\t *                               buffer is done playing.\n\t\t */\n\t    Tone.BufferSource = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'buffer',\n\t            'onended'\n\t        ], Tone.BufferSource.defaults);\n\t        /**\n\t\t\t *  The callback to invoke after the \n\t\t\t *  buffer source is done playing. \n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.onended = options.onended;\n\t        /**\n\t\t\t *  The time that the buffer was started.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startTime = -1;\n\t        /**\n\t\t\t *  The gain node which envelopes the BufferSource\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gainNode = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The buffer source\n\t\t\t *  @type  {AudioBufferSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._source = this.context.createBufferSource();\n\t        this._source.connect(this._gainNode);\n\t        this._source.onended = this._onended.bind(this);\n\t        /**\n\t\t\t *  The playbackRate of the buffer\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);\n\t        /**\n\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t        /**\n\t\t\t *  The value that the buffer ramps to\n\t\t\t *  @type {Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = 1;\n\t        //set the buffer initially\n\t        if (!this.isUndef(options.buffer)) {\n\t            this.buffer = options.buffer;\n\t        }\n\t        this.loop = options.loop;\n\t    };\n\t    Tone.extend(Tone.BufferSource);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.BufferSource.defaults = {\n\t        'onended': Tone.noOp,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.BufferSource#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'state', {\n\t        get: function () {\n\t            var now = this.now();\n\t            if (this._startTime !== -1 && now > this._startTime) {\n\t                return Tone.State.Started;\n\t            } else {\n\t                return Tone.State.Stopped;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the buffer\n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n\t\t *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {\n\t        if (this._startTime !== -1) {\n\t            throw new Error('Tone.BufferSource: can only be started once.');\n\t        }\n\t        if (this.buffer) {\n\t            time = this.toSeconds(time);\n\t            //if it's a loop the default offset is the loopstart point\n\t            if (this.loop) {\n\t                offset = this.defaultArg(offset, this.loopStart);\n\t            } else {\n\t                //otherwise the default offset is 0\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toSeconds(offset);\n\t            //the values in seconds\n\t            time = this.toSeconds(time);\n\t            this._source.start(time, offset);\n\t            gain = this.defaultArg(gain, 1);\n\t            this._gain = gain;\n\t            //the fadeIn time\n\t            if (this.isUndef(fadeInTime)) {\n\t                fadeInTime = this.toSeconds(this.fadeIn);\n\t            } else {\n\t                fadeInTime = this.toSeconds(fadeInTime);\n\t            }\n\t            if (fadeInTime > 0) {\n\t                this._gainNode.gain.setValueAtTime(0, time);\n\t                this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);\n\t            } else {\n\t                this._gainNode.gain.setValueAtTime(gain, time);\n\t            }\n\t            this._startTime = time + fadeInTime;\n\t            if (!this.isUndef(duration)) {\n\t                duration = this.defaultArg(duration, this.buffer.duration - offset);\n\t                duration = this.toSeconds(duration);\n\t                this.stop(time + duration + fadeInTime, fadeInTime);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the buffer. Optionally add a ramp time to fade the \n\t\t *  buffer out. \n\t\t *  @param  {Time=}  time         The time the buffer should stop.\n\t\t *  @param  {Time=}  fadeOutTime  How long the gain should fade out for\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {\n\t        if (this.buffer) {\n\t            time = this.toSeconds(time);\n\t            //the fadeOut time\n\t            if (this.isUndef(fadeOutTime)) {\n\t                fadeOutTime = this.toSeconds(this.fadeOut);\n\t            } else {\n\t                fadeOutTime = this.toSeconds(fadeOutTime);\n\t            }\n\t            //cancel the end curve\n\t            this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n\t            //set a new one\n\t            if (fadeOutTime > 0) {\n\t                this._gainNode.gain.setValueAtTime(this._gain, time);\n\t                this._gainNode.gain.linearRampToValueAtTime(0, time + fadeOutTime);\n\t                time += fadeOutTime;\n\t            } else {\n\t                this._gainNode.gain.setValueAtTime(0, time);\n\t            }\n\t            // fix for safari bug and old FF\n\t            if (!this.isNumber(this._source.playbackState) || this._source.playbackState === 2) {\n\t                this._source.stop(time);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal callback when the buffer is ended. \n\t\t *  Invokes `onended` and disposes the node.\n\t\t *  @private\n\t\t */\n\t    Tone.BufferSource.prototype._onended = function () {\n\t        this.onended(this);\n\t        this.dispose();\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._source.loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._source.loopStart = this.toSeconds(loopStart);\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._source.loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._source.loopEnd = this.toSeconds(loopEnd);\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {AudioBuffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {\n\t        get: function () {\n\t            if (this._source) {\n\t                return this._source.buffer;\n\t            } else {\n\t                return null;\n\t            }\n\t        },\n\t        set: function (buffer) {\n\t            if (buffer instanceof Tone.Buffer) {\n\t                this._source.buffer = buffer.get();\n\t            } else {\n\t                this._source.buffer = buffer;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {\n\t        get: function () {\n\t            return this._source.loop;\n\t        },\n\t        set: function (loop) {\n\t            this._source.loop = loop;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.dispose = function () {\n\t        this.onended = null;\n\t        if (this._source) {\n\t            this._source.onended = null;\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        if (this._gainNode) {\n\t            this._gainNode.dispose();\n\t            this._gainNode = null;\n\t        }\n\t        this._startTime = -1;\n\t        this.playbackRate = null;\n\t        this.output = null;\n\t        return this;\n\t    };\n\t    return Tone.BufferSource;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    //polyfill for getUserMedia\n\t    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\t    /**\n\t\t *  @class  Tone.ExternalInput is a WebRTC Audio Input. Check \n\t\t *          [Media Stream API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n\t\t *          to see which browsers are supported. As of\n\t\t *          writing this, Chrome, Firefox, and Opera \n\t\t *          support Media Stream. Chrome allows enumeration \n\t\t *          of the sources, and access to device name over a \n\t\t *          secure (HTTPS) connection. See [https://simpl.info](https://simpl.info/getusermedia/sources/index.html) \n\t\t *          vs [http://simple.info](https://simpl.info/getusermedia/sources/index.html) \n\t\t *          on a Chrome browser for the difference.\n\t\t *         \n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {number} [inputNum=0] If multiple inputs are present, select the input number. Chrome only.\n\t\t *  @example\n\t\t * //select the third input\n\t\t * var motu = new Tone.ExternalInput(3);\n\t\t * \n\t\t * //opening the input asks the user to activate their mic\n\t\t * motu.open(function(){\n\t\t * \t//opening is activates the microphone\n\t\t * \t//starting lets audio through\n\t\t * \tmotu.start(10);\n\t\t * });\n\t\t */\n\t    Tone.ExternalInput = function () {\n\t        var options = this.optionsObject(arguments, ['inputNum'], Tone.ExternalInput.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The MediaStreamNode \n\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mediaStream = null;\n\t        /**\n\t\t\t *  The media stream created by getUserMedia.\n\t\t\t *  @type {LocalMediaStream}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stream = null;\n\t        /**\n\t\t\t *  The constraints argument for getUserMedia\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._constraints = { 'audio': true };\n\t        /**\n\t\t\t *  The input source position in Tone.ExternalInput.sources. \n\t\t\t *  Set before ExternalInput.open().\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputNum = options.inputNum;\n\t        /**\n\t\t\t *  Gates the input signal for start/stop. \n\t\t\t *  Initially closed.\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gate = new Tone.Gain(0).connect(this.output);\n\t    };\n\t    Tone.extend(Tone.ExternalInput, Tone.Source);\n\t    /**\n\t\t * the default parameters\n\t\t * @type {Object}\n\t\t */\n\t    Tone.ExternalInput.defaults = { 'inputNum': 0 };\n\t    /**\n\t\t * wrapper for getUserMedia function\n\t\t * @param {function} callback\n\t\t * @param {function} error\n\t\t * @private\n\t\t */\n\t    Tone.ExternalInput.prototype._getUserMedia = function (callback, error) {\n\t        if (!Tone.ExternalInput.supported) {\n\t            error('browser does not support \\'getUserMedia\\'');\n\t        }\n\t        if (Tone.ExternalInput.sources[this._inputNum]) {\n\t            this._constraints = { audio: { optional: [{ sourceId: Tone.ExternalInput.sources[this._inputNum].id }] } };\n\t        }\n\t        navigator.getUserMedia(this._constraints, function (stream) {\n\t            this._onStream(stream);\n\t            callback();\n\t        }.bind(this), function (err) {\n\t            error(err);\n\t        });\n\t    };\n\t    /**\n\t\t * called when the stream is successfully setup\n\t\t * @param  {LocalMediaStream} stream\n\t\t * @private\n\t\t */\n\t    Tone.ExternalInput.prototype._onStream = function (stream) {\n\t        if (!this.isFunction(this.context.createMediaStreamSource)) {\n\t            throw new Error('Tone.ExternalInput: browser does not support the \\'MediaStreamSourceNode\\'');\n\t        }\n\t        //can only start a new source if the previous one is closed\n\t        if (!this._stream) {\n\t            this._stream = stream;\n\t            //Wrap a MediaStreamSourceNode around the live input stream.\n\t            this._mediaStream = this.context.createMediaStreamSource(stream);\n\t            //Connect the MediaStreamSourceNode to a gate gain node\n\t            this._mediaStream.connect(this._gate);\n\t        }\n\t    };\n\t    /**\n\t\t *  Open the media stream \n\t\t *  @param  {function=} callback The callback function to \n\t\t *                       execute when the stream is open\n\t\t *  @param  {function=} error The callback function to execute\n\t\t *                            when the media stream can't open. \n\t\t *                            This is fired either because the browser\n\t\t *                            doesn't support the media stream,\n\t\t *                            or the user blocked opening the microphone. \n\t\t *  @return {Tone.ExternalInput} this\n\t\t */\n\t    Tone.ExternalInput.prototype.open = function (callback, error) {\n\t        callback = this.defaultArg(callback, Tone.noOp);\n\t        error = this.defaultArg(error, Tone.noOp);\n\t        Tone.ExternalInput.getSources(function () {\n\t            this._getUserMedia(callback, error);\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Close the media stream\n\t\t *  @return {Tone.ExternalInput} this\n\t\t */\n\t    Tone.ExternalInput.prototype.close = function () {\n\t        if (this._stream) {\n\t            var track = this._stream.getTracks()[this._inputNum];\n\t            if (!this.isUndef(track)) {\n\t                track.stop();\n\t            }\n\t            this._stream = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the stream\n\t\t *  @private\n\t\t */\n\t    Tone.ExternalInput.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._gate.gain.setValueAtTime(1, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stops the stream.\n\t\t *  @private\n\t\t */\n\t    Tone.ExternalInput.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._gate.gain.setValueAtTime(0, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Clean up.\n\t\t * @return {Tone.ExternalInput} this\n\t\t */\n\t    Tone.ExternalInput.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this.close();\n\t        if (this._mediaStream) {\n\t            this._mediaStream.disconnect();\n\t            this._mediaStream = null;\n\t        }\n\t        this._constraints = null;\n\t        this._gate.dispose();\n\t        this._gate = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // STATIC METHODS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t * The array of available sources, different depending on whether connection is secure\n\t\t * @type {Array}\n\t\t * @static\n\t\t */\n\t    Tone.ExternalInput.sources = [];\n\t    /**\n\t\t * indicates whether browser supports MediaStreamTrack.getSources (i.e. Chrome vs Firefox)\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t    Tone.ExternalInput._canGetSources = !Tone.prototype.isUndef(window.MediaStreamTrack) && Tone.prototype.isFunction(MediaStreamTrack.getSources);\n\t    /**\n\t\t *  If getUserMedia is supported by the browser.\n\t\t *  @type  {Boolean}\n\t\t *  @memberOf Tone.ExternalInput#\n\t\t *  @name supported\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.ExternalInput, 'supported', {\n\t        get: function () {\n\t            return Tone.prototype.isFunction(navigator.getUserMedia);\n\t        }\n\t    });\n\t    /**\n\t\t *  Populates the source list. Invokes the callback with an array of \n\t\t *  possible audio sources.\n\t\t *  @param  {function=} callback Callback to be executed after populating list \n\t\t *  @return {Tone.ExternalInput} this\n\t\t *  @static\n\t\t *  @example\n\t\t * var soundflower = new Tone.ExternalInput();\n\t\t * Tone.ExternalInput.getSources(selectSoundflower);\n\t\t *\n\t\t * function selectSoundflower(sources){\n\t\t * \tfor(var i = 0; i < sources.length; i++){\n\t\t * \t\tif(sources[i].label === \"soundflower\"){\n\t\t * \t\t\tsoundflower.inputNum = i;\n\t\t * \t\t\tsoundflower.open(function(){\n\t\t * \t\t\t\tsoundflower.start();\n\t\t * \t\t\t});\n\t\t * \t\t\tbreak;\n\t\t * \t\t}\n\t\t * \t}\n\t\t * };\n\t\t */\n\t    Tone.ExternalInput.getSources = function (callback) {\n\t        if (Tone.ExternalInput.sources.length === 0 && Tone.ExternalInput._canGetSources) {\n\t            MediaStreamTrack.getSources(function (media_sources) {\n\t                for (var i = 0; i < media_sources.length; i++) {\n\t                    if (media_sources[i].kind === 'audio') {\n\t                        Tone.ExternalInput.sources[i] = media_sources[i];\n\t                    }\n\t                }\n\t                callback(Tone.ExternalInput.sources);\n\t            });\n\t        } else {\n\t            callback(Tone.ExternalInput.sources);\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.ExternalInput;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.MultiPlayer is well suited for one-shots, multi-sampled istruments\n\t\t *         or any time you need to play a bunch of audio buffers. \n\t\t *  @param  {Object|Array|Tone.Buffers}  buffers  The buffers which are available\n\t\t *                                                to the MultiPlayer\n\t\t *  @param {Function} onload The callback to invoke when all of the buffers are loaded.\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var multiPlayer = new MultiPlayer({\n\t\t * \t\"kick\" : \"path/to/kick.mp3\",\n\t\t * \t\"snare\" : \"path/to/snare.mp3\",\n\t\t * }, function(){\n\t\t * \tmultiPlayer.start(\"kick\");\n\t\t * });\n\t\t *  @example\n\t\t * //can also store the values in an array\n\t\t * var multiPlayer = new MultiPlayer([\"path/to/kick.mp3\", \"path/to/snare.mp3\"], \n\t\t * function(){\n\t\t * \t//if an array is passed in, the samples are referenced to by index\n\t\t * \tmultiPlayer.start(1);\n\t\t * });\n\t\t */\n\t    Tone.MultiPlayer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'urls',\n\t            'onload'\n\t        ], Tone.MultiPlayer.defaults);\n\t        if (options.urls instanceof Tone.Buffers) {\n\t            /**\n\t\t\t\t *  All the buffers belonging to the player.\n\t\t\t\t *  @type  {Tone.Buffers}\n\t\t\t\t */\n\t            this.buffers = options.urls;\n\t        } else {\n\t            this.buffers = new Tone.Buffers(options.urls, options.onload);\n\t        }\n\t        /**\n\t\t\t *  Keeps track of the currently playing sources.\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._activeSources = [];\n\t        /**\n\t\t\t *  The fade in envelope which is applied\n\t\t\t *  to the beginning of the BufferSource\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fade out envelope which is applied\n\t\t\t *  to the end of the BufferSource\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.MultiPlayer, Tone.Source);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.MultiPlayer.defaults = {\n\t        'onload': Tone.noOp,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  Get the given buffer.\n\t\t *  @param  {String|Number|AudioBuffer|Tone.Buffer}  buffer\n\t\t *  @return  {AudioBuffer}  The requested buffer.\n\t\t *  @private\n\t\t */\n\t    Tone.MultiPlayer.prototype._getBuffer = function (buffer) {\n\t        if (this.isNumber(buffer) || this.isString(buffer)) {\n\t            return this.buffers.get(buffer).get();\n\t        } else if (buffer instanceof Tone.Buffer) {\n\t            return buffer.get();\n\t        } else {\n\t            return buffer;\n\t        }\n\t    };\n\t    /**\n\t\t *  Start a buffer by name. The `start` method allows a number of options\n\t\t *  to be passed in such as offset, interval, and gain. This is good for multi-sampled \n\t\t *  instruments and sound sprites where samples are repitched played back at different velocities.\n\t\t *  @param  {String|AudioBuffer}  buffer    The name of the buffer to start.\n\t\t *                                          Or pass in a buffer which will be started.\n\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t *  @param  {Time=}  duration   How long to play the buffer for.\n\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.start = function (buffer, time, offset, duration, pitch, gain) {\n\t        buffer = this._getBuffer(buffer);\n\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t        this._activeSources.push(source);\n\t        time = this.toSeconds(time);\n\t        source.start(time, offset, duration, this.defaultArg(gain, 1), this.fadeIn);\n\t        if (duration) {\n\t            source.stop(time + this.toSeconds(duration), this.fadeOut);\n\t        }\n\t        source.onended = this._onended.bind(this);\n\t        pitch = this.defaultArg(pitch, 0);\n\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start a looping buffer by name. Similar to `start`, but the buffer\n\t\t *  is looped instead of played straight through. Can still be stopped with `stop`. \n\t\t *  @param  {String|AudioBuffer}  buffer    The name of the buffer to start.\n\t\t *                                          Or pass in a buffer which will be started.\n\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t *  @param  {Time=}  loopStart   The start of the loop.\n\t\t *  @param  {Time=}  loopEnd\tThe end of the loop.\n\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.startLoop = function (buffer, time, offset, loopStart, loopEnd, pitch, gain) {\n\t        buffer = this._getBuffer(buffer);\n\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t        this._activeSources.push(source);\n\t        time = this.toSeconds(time);\n\t        source.loop = true;\n\t        source.loopStart = this.toSeconds(this.defaultArg(loopStart, 0));\n\t        source.loopEnd = this.toSeconds(this.defaultArg(loopEnd, 0));\n\t        source.start(time, offset, undefined, this.defaultArg(gain, 1), this.fadeIn);\n\t        source.onended = this._onended.bind(this);\n\t        pitch = this.defaultArg(pitch, 0);\n\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal callback when a buffer is done playing.\n\t\t *  @param  {Tone.BufferSource}  source  The stopped source\n\t\t *  @private\n\t\t */\n\t    Tone.MultiPlayer.prototype._onended = function (source) {\n\t        var index = this._activeSources.indexOf(source);\n\t        this._activeSources.splice(index, 1);\n\t    };\n\t    /**\n\t\t *  Stop all instances of the currently playing buffer at the given time.\n\t\t *  @param  {String|AudioBuffer}  buffer  The buffer to stop.\n\t\t *  @param  {Time=}  time    When to stop the buffer\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.stop = function (buffer, time) {\n\t        buffer = this._getBuffer(buffer);\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t            if (this._activeSources[i].buffer === buffer) {\n\t                this._activeSources[i].stop(time, this.fadeOut);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop all currently playing buffers at the given time.\n\t\t *  @param  {Time=}  time  When to stop the buffers.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.stopAll = function (time) {\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t            this._activeSources[i].stop(time, this.fadeOut);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add another buffer to the available buffers.\n\t\t *  @param {String} name The name to that the buffer is refered\n\t\t *                       to in start/stop methods. \n\t\t *  @param {String|Tone.Buffer} url The url of the buffer to load\n\t\t *                                  or the buffer.\n\t\t *  @param {Function} callback The function to invoke after the buffer is loaded.\n\t\t */\n\t    Tone.MultiPlayer.prototype.add = function (name, url, callback) {\n\t        this.buffers.add(name, url, callback);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source. \"started\"\n\t\t *  if there are any buffers playing. \"stopped\" otherwise.\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.MultiPlayer#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'state', {\n\t        get: function () {\n\t            return this._activeSources.length > 0 ? Tone.State.Started : Tone.State.Stopped;\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.MultiPlayer#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable('volume');\n\t        this.volume = null;\n\t        this.buffers.dispose();\n\t        this.buffers = null;\n\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t            this._activeSources[i].dispose();\n\t        }\n\t        this._activeSources = null;\n\t        return this;\n\t    };\n\t    return Tone.MultiPlayer;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n\t\t *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the \n\t\t *        amount of time each small chunk of audio is played for and the overlap is the \n\t\t *        amount of crossfading transition time between successive grains.\n\t\t * @extends {Tone}\n\t\t * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n\t\t * @param {Function=} callback The callback to invoke after the url is loaded.\n\t\t */\n\t    Tone.GrainPlayer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.GrainPlayer.defaults);\n\t        Tone.Source.call(this);\n\t        /**\n\t\t\t *  The audio buffer belonging to the player.\n\t\t\t *  @type  {Tone.Buffer}\n\t\t\t */\n\t        this.buffer = new Tone.Buffer(options.url, options.onload);\n\t        /**\n\t\t\t *  Plays the buffer with a small envelope\n\t\t\t *  @type  {Tone.MultiPlayer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._player = this.output = new Tone.MultiPlayer();\n\t        /**\n\t\t\t *  Create a repeating tick to schedule\n\t\t\t *  the grains.\n\t\t\t *  @type  {Tone.Clock}\n\t\t\t *  @private\n\t\t\t */\n\t        this._clock = new Tone.Clock(this._tick.bind(this), 1);\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = 0;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = 0;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._grainSize = options.grainSize;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Number}\n\t\t\t */\n\t        this._overlap = options.overlap;\n\t        /**\n\t\t\t *  Adjust the pitch independently of the playbackRate.\n\t\t\t *  @type  {Cents}\n\t\t\t */\n\t        this.detune = options.detune;\n\t        /**\n\t\t\t *  The amount of time randomly added\n\t\t\t *  or subtracted from the grain's offset\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.drift = options.drift;\n\t        //setup\n\t        this.overlap = options.overlap;\n\t        this.loop = options.loop;\n\t        this.playbackRate = options.playbackRate;\n\t        this.grainSize = options.grainSize;\n\t        this.loopStart = options.loopStart;\n\t        this.loopEnd = options.loopEnd;\n\t        this.reverse = options.reverse;\n\t    };\n\t    Tone.extend(Tone.GrainPlayer, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.GrainPlayer.defaults = {\n\t        'onload': Tone.noOp,\n\t        'overlap': 0.1,\n\t        'grainSize': 0.2,\n\t        'drift': 0,\n\t        'playbackRate': 1,\n\t        'detune': 0,\n\t        'loop': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  from the start of the buffer to play from.\n\t\t *  \n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t * @return {Tone.GrainPlayer} this\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @param {Time} offset\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._start = function (time, offset) {\n\t        offset = this.defaultArg(offset, 0);\n\t        offset = this.toSeconds(offset);\n\t        time = this.toSeconds(time);\n\t        this._offset = offset;\n\t        this._clock.start(time);\n\t    };\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._stop = function (time) {\n\t        this._clock.stop(time);\n\t        this._player.stop(this.buffer, time);\n\t        this._offset = 0;\n\t    };\n\t    /**\n\t\t *  Invoked on each clock tick. scheduled a new\n\t\t *  grain at this time.\n\t\t *  @param  {Time}  time \n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._tick = function (time) {\n\t        var bufferDuration = this.buffer.duration;\n\t        if (this.loop && this._loopEnd > 0) {\n\t            bufferDuration = this._loopEnd;\n\t        }\n\t        var drift = (Math.random() * 2 - 1) * this.drift;\n\t        var offset = this._offset - this._overlap + drift;\n\t        var detune = this.detune / 100;\n\t        var originalFadeIn = this._player.fadeIn;\n\t        if (this.loop && this._offset > bufferDuration) {\n\t            //play the end\n\t            var endSegmentDuration = this._offset - bufferDuration;\n\t            this._player.start(this.buffer, time, offset, endSegmentDuration + this._overlap, detune);\n\t            //and play the beginning \n\t            offset = this._offset % bufferDuration;\n\t            this._offset = this._loopStart;\n\t            this._player.fadeIn = 0;\n\t            this._player.start(this.buffer, time + endSegmentDuration, this._offset, offset + this._overlap, detune);\n\t        } else if (this._offset > bufferDuration) {\n\t            //set the state to stopped. \n\t            this.stop(time);\n\t        } else {\n\t            if (offset < 0) {\n\t                this._player.fadeIn = Math.max(this._player.fadeIn + offset, 0);\n\t                offset = 0;\n\t            }\n\t            this._player.start(this.buffer, time, offset, this.grainSize + this._overlap, detune);\n\t        }\n\t        this._player.fadeIn = originalFadeIn;\n\t        //increment the offset\n\t        var duration = this._clock._nextTick - time;\n\t        this._offset += duration * this._playbackRate;\n\t    };\n\t    /**\n\t\t *  Jump to a specific time and play it.\n\t\t *  @param  {Time}  offset  The offset to jump to.\n\t\t *  @param {Time=} time When to make the jump.\n\t\t *  @return  {[type]}  [description]\n\t\t */\n\t    Tone.GrainPlayer.prototype.scrub = function (offset, time) {\n\t        this._offset = this.toSeconds(offset);\n\t        this._tick(this.toSeconds(time));\n\t        return this;\n\t    };\n\t    /**\n\t\t * The playback rate of the sample\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Positive}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this.grainSize = this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * The loop start time. \n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (time) {\n\t            this._loopStart = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The loop end time. \n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (time) {\n\t            this._loopEnd = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this.buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this.buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * The size of each chunk of audio that the \n\t\t * buffer is chopped into and played back at.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name grainSize\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {\n\t        get: function () {\n\t            return this._grainSize;\n\t        },\n\t        set: function (size) {\n\t            this._grainSize = this.toSeconds(size);\n\t            this._clock.frequency.value = this._playbackRate / this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * This is the duration of the cross-fade between \n\t\t * sucessive grains.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name overlap\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {\n\t        get: function () {\n\t            return this._overlap;\n\t        },\n\t        set: function (time) {\n\t            time = this.toSeconds(time);\n\t            this._overlap = time;\n\t            if (this._overlap < 0) {\n\t                this._player.fadeIn = 0.01;\n\t                this._player.fadeOut = 0.01;\n\t            } else {\n\t                this._player.fadeIn = time;\n\t                this._player.fadeOut = time;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.GrainPlayer} this\n\t\t */\n\t    Tone.GrainPlayer.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this.buffer.dispose();\n\t        this.buffer = null;\n\t        this._player.dispose();\n\t        this._player = null;\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        return this;\n\t    };\n\t    return Tone.GrainPlayer;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Opens up the default source (typically the microphone).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.ExternalInput}\n\t\t *  @example\n\t\t *  //mic will feedback if played through master\n\t\t *  var mic = new Tone.Microphone();\n\t\t *  mic.open(function(){\n\t\t *  \t//start the mic at ten seconds\n\t\t *  \tmic.start(10);\n\t\t *  });\n\t\t *  //stop the mic\n\t\t *  mic.stop(20);\n\t\t */\n\t    Tone.Microphone = function () {\n\t        Tone.ExternalInput.call(this, 0);\n\t    };\n\t    Tone.extend(Tone.Microphone, Tone.ExternalInput);\n\t    /**\n\t\t *  If getUserMedia is supported by the browser.\n\t\t *  @type  {Boolean}\n\t\t *  @memberOf Tone.Microphone#\n\t\t *  @name supported\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Microphone, 'supported', {\n\t        get: function () {\n\t            return Tone.ExternalInput.supported;\n\t        }\n\t    });\n\t    return Tone.Microphone;\n\t});\n\t\n\treturn Tone;\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tone/build/Tone.js\n ** module id = 82\n ** module chunks = 1\n **/","/*!\n * vue-resource v1.0.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$1.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$1(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/**\n * Promise adapter.\n */\n\nif (typeof Promise === 'undefined') {\n    window.Promise = Promise$1;\n}\n\nfunction PromiseObj(executor, context) {\n\n    if (executor instanceof Promise) {\n        this.promise = executor;\n    } else {\n        this.promise = new Promise(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromiseObj.all = function (iterable, context) {\n    return new PromiseObj(Promise.all(iterable), context);\n};\n\nPromiseObj.resolve = function (value, context) {\n    return new PromiseObj(Promise.resolve(value), context);\n};\n\nPromiseObj.reject = function (reason, context) {\n    return new PromiseObj(Promise.reject(reason), context);\n};\n\nPromiseObj.race = function (iterable, context) {\n    return new PromiseObj(Promise.race(iterable), context);\n};\n\nvar p = PromiseObj.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return Promise.reject(reason);\n    });\n};\n\n/**\n * Utility functions.\n */\n\nvar debug = false;var util = {};var slice = [].slice;\n\n\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction toUpper(str) {\n    return str ? str.toUpperCase() : '';\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isBlob(obj) {\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = PromiseObj.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (obj && typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * Root Prefix Transform.\n */\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\n/**\n * Query Parameter Transform.\n */\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * XDomain client (Internet Explorer).\n */\n\nfunction xdrClient (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (_ref) {\n            var type = _ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load') {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(xdr.responseText, { status: status }));\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl());\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = handler;\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\n/**\n * CORS Interceptor.\n */\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\n/**\n * Body Interceptor.\n */\n\nfunction body (request, next) {\n\n    if (isFormData(request.body)) {\n\n        request.headers.delete('Content-Type');\n    } else if (isObject(request.body) || isArray(request.body)) {\n\n        if (request.emulateJSON) {\n            request.body = Url.params(request.body);\n            request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n        } else {\n            request.body = JSON.stringify(request.body);\n        }\n    }\n\n    next(function (response) {\n\n        Object.defineProperty(response, 'data', {\n            get: function () {\n                return this.body;\n            },\n            set: function (body) {\n                this.body = body;\n            }\n        });\n\n        return response.bodyText ? when(response.text(), function (text) {\n\n            var type = response.headers.get('Content-Type');\n\n            if (isString(type) && type.indexOf('application/json') === 0) {\n\n                try {\n                    response.body = JSON.parse(text);\n                } catch (e) {\n                    response.body = null;\n                }\n            } else {\n                response.body = text;\n            }\n\n            return response;\n        }) : response;\n    });\n}\n\n/**\n * JSONP client.\n */\n\nfunction jsonpClient (request) {\n    return new PromiseObj(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (_ref) {\n            var type = _ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load' && body !== null) {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\n/**\n * JSONP Interceptor.\n */\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n\n            return when(response.json(), function (json) {\n\n                response.body = json;\n\n                return response;\n            });\n        }\n    });\n}\n\n/**\n * Before Interceptor.\n */\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers.set('X-HTTP-Method-Override', request.method);\n        request.method = 'POST';\n    }\n\n    next();\n}\n\n/**\n * Header Interceptor.\n */\n\nfunction header (request, next) {\n\n    var headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[toLower(request.method)]);\n\n    each(headers, function (value, name) {\n        if (!request.headers.has(name)) {\n            request.headers.set(name, value);\n        }\n    });\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\n/**\n * XMLHttp client.\n */\n\nfunction xhrClient (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n            });\n\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        xhr.open(request.method, request.getUrl(), true);\n\n        if ('responseType' in xhr) {\n            xhr.responseType = 'blob';\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n        xhr.send(request.getBody());\n    });\n}\n\n/**\n * Base client.\n */\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new PromiseObj(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Headers.\n */\n\nvar Headers = function () {\n    function Headers(headers) {\n        var _this = this;\n\n        classCallCheck(this, Headers);\n\n\n        this.map = {};\n\n        each(headers, function (value, name) {\n            return _this.append(name, value);\n        });\n    }\n\n    Headers.prototype.has = function has(name) {\n        return getName(this.map, name) !== null;\n    };\n\n    Headers.prototype.get = function get(name) {\n\n        var list = this.map[getName(this.map, name)];\n\n        return list ? list[0] : null;\n    };\n\n    Headers.prototype.getAll = function getAll(name) {\n        return this.map[getName(this.map, name)] || [];\n    };\n\n    Headers.prototype.set = function set(name, value) {\n        this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n    };\n\n    Headers.prototype.append = function append(name, value) {\n\n        var list = this.getAll(name);\n\n        if (list.length) {\n            list.push(trim(value));\n        } else {\n            this.set(name, value);\n        }\n    };\n\n    Headers.prototype.delete = function _delete(name) {\n        delete this.map[getName(this.map, name)];\n    };\n\n    Headers.prototype.forEach = function forEach(callback, thisArg) {\n        var _this2 = this;\n\n        each(this.map, function (list, name) {\n            each(list, function (value) {\n                return callback.call(thisArg, value, name, _this2);\n            });\n        });\n    };\n\n    return Headers;\n}();\n\nfunction getName(map, name) {\n    return Object.keys(map).reduce(function (prev, curr) {\n        return toLower(name) === toLower(curr) ? curr : prev;\n    }, null);\n}\n\nfunction normalizeName(name) {\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return trim(name);\n}\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.ok = status >= 200 && status < 300;\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.headers = new Headers(headers);\n        this.body = body;\n\n        if (isString(body)) {\n\n            this.bodyText = body;\n        } else if (isBlob(body)) {\n\n            this.bodyBlob = body;\n\n            if (isBlobText(body)) {\n                this.bodyText = blobText(body);\n            }\n        }\n    }\n\n    Response.prototype.blob = function blob() {\n        return when(this.bodyBlob);\n    };\n\n    Response.prototype.text = function text() {\n        return when(this.bodyText);\n    };\n\n    Response.prototype.json = function json() {\n        return when(this.text(), function (text) {\n            return JSON.parse(text);\n        });\n    };\n\n    return Response;\n}();\n\nfunction blobText(body) {\n    return new PromiseObj(function (resolve) {\n\n        var reader = new FileReader();\n\n        reader.readAsText(body);\n        reader.onload = function () {\n            resolve(reader.result);\n        };\n    });\n}\n\nfunction isBlobText(body) {\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n}\n\n/**\n * HTTP Request.\n */\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.body = null;\n        this.params = {};\n\n        assign(this, options, {\n            method: toUpper(options.method || 'GET')\n        });\n\n        if (!(this.headers instanceof Headers)) {\n            this.headers = new Headers(this.headers);\n        }\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : PromiseObj.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return PromiseObj.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\n/**\n * Service for interacting with RESTful services.\n */\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: assign({}, params) }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\n/**\n * Install plugin.\n */\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = PromiseObj;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 87\n ** module chunks = 1\n **/","/*!\n * Vue.js v2.0.3\n * (c) 2014-2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val, 10);\n  return (n || n === 0) ? n : val\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove$1 (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  }\n}\n\n/**\n * Camelize a hyphen-delmited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind$1 (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (\n    isObject(a) && isObject(b)\n      ? JSON.stringify(a) === JSON.stringify(b)\n      : false\n  )\n  /* eslint-enable eqeqeq */\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: null,\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100,\n\n  /**\n   * Server rendering?\n   */\n  _isServer: process.env.VUE_ENV === 'server'\n};\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w\\.\\$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser =\n  typeof window !== 'undefined' &&\n  Object.prototype.toString.call(window) !== '[object Object]';\n\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    timerFunc = function () {\n      p.then(nextTickHandler);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var func = ctx\n      ? function () { cb.call(ctx); }\n      : cb;\n    callbacks.push(func);\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] !== undefined\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = 1;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar hasProxy;\nvar proxyHandlers;\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  proxyHandlers = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warn(\n          \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n          \"referenced during render. Make sure to declare reactive data \" +\n          \"properties in the data option.\",\n          target\n        );\n      }\n      return has || !isAllowed\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      vm._renderProxy = new Proxy(vm, proxyHandlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\n\nvar uid$2 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$2++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove$1(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\n\nvar queue = [];\nvar has$1 = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has$1 = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    var watcher = queue[index];\n    var id = watcher.id;\n    has$1[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has$1[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has$1[id] == null) {\n    has$1[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  if ( options === void 0 ) options = {};\n\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  this.deep = !!options.deep;\n  this.user = !!options.user;\n  this.lazy = !!options.lazy;\n  this.sync = !!options.sync;\n  this.expression = expOrFn.toString();\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n      if (\n        value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          process.env.NODE_ENV !== 'production' && warn(\n            (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n            this.vm\n          );\n          /* istanbul ignore else */\n          if (config.errorHandler) {\n            config.errorHandler.call(null, e, this.vm);\n          } else {\n            throw e\n          }\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      remove$1(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val, seen) {\n  var i, keys;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = Array.isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) { traverse(val[i], seen); }\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) { traverse(val[keys[i]], seen); }\n    }\n  }\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * istanbul ignore next\n */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !config._isServer &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = void 0, i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\nfunction initState (vm) {\n  vm._watchers = [];\n  initProps(vm);\n  initData(vm);\n  initComputed(vm);\n  initMethods(vm);\n  initWatch(vm);\n}\n\nfunction initProps (vm) {\n  var props = vm.$options.props;\n  if (props) {\n    var propsData = vm.$options.propsData || {};\n    var keys = vm.$options._propKeys = Object.keys(props);\n    var isRoot = !vm.$parent;\n    // root instance props should be converted\n    observerState.shouldConvert = isRoot;\n    var loop = function ( i ) {\n      var key = keys[i];\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n          if (vm.$parent && !observerState.isSettingProps) {\n            warn(\n              \"Avoid mutating a prop directly since the value will be \" +\n              \"overwritten whenever the parent component re-renders. \" +\n              \"Instead, use a data or computed property based on the prop's \" +\n              \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n              vm\n            );\n          }\n        });\n      } else {\n        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n      }\n    };\n\n    for (var i = 0; i < keys.length; i++) loop( i );\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object.',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else {\n      proxy(vm, keys[i]);\n    }\n  }\n  // observe data\n  observe(data);\n  data.__ob__ && data.__ob__.vmCount++;\n}\n\nvar computedSharedDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction initComputed (vm) {\n  var computed = vm.$options.computed;\n  if (computed) {\n    for (var key in computed) {\n      var userDef = computed[key];\n      if (typeof userDef === 'function') {\n        computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n        computedSharedDefinition.set = noop;\n      } else {\n        computedSharedDefinition.get = userDef.get\n          ? userDef.cache !== false\n            ? makeComputedGetter(userDef.get, vm)\n            : bind$1(userDef.get, vm)\n          : noop;\n        computedSharedDefinition.set = userDef.set\n          ? bind$1(userDef.set, vm)\n          : noop;\n      }\n      Object.defineProperty(vm, key, computedSharedDefinition);\n    }\n  }\n}\n\nfunction makeComputedGetter (getter, owner) {\n  var watcher = new Watcher(owner, getter, noop, {\n    lazy: true\n  });\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate();\n    }\n    if (Dep.target) {\n      watcher.depend();\n    }\n    return watcher.value\n  }\n}\n\nfunction initMethods (vm) {\n  var methods = vm.$options.methods;\n  if (methods) {\n    for (var key in methods) {\n      vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n      if (process.env.NODE_ENV !== 'production' && methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm) {\n  var watch = vm.$options.watch;\n  if (watch) {\n    for (var key in watch) {\n      var handler = watch[key];\n      if (Array.isArray(handler)) {\n        for (var i = 0; i < handler.length; i++) {\n          createWatcher(vm, key, handler[i]);\n        }\n      } else {\n        createWatcher(vm, key, handler);\n      }\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () {\n    return this._data\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\nfunction proxy (vm, key) {\n  if (!isReserved(key)) {\n    Object.defineProperty(vm, key, {\n      configurable: true,\n      enumerable: true,\n      get: function proxyGetter () {\n        return vm._data[key]\n      },\n      set: function proxySetter (val) {\n        vm._data[key] = val;\n      }\n    });\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  ns,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = ns;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.child = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n};\n\nvar emptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.ns,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook, key) {\n  key = key + hookKey;\n  var injectedHash = def.__injected || (def.__injected = {});\n  if (!injectedHash[key]) {\n    injectedHash[key] = true;\n    var oldHook = def[hookKey];\n    if (oldHook) {\n      def[hookKey] = function () {\n        oldHook.apply(this, arguments);\n        hook.apply(this, arguments);\n      };\n    } else {\n      def[hookKey] = hook;\n    }\n  }\n}\n\n/*  */\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, fn, event, capture;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + name + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      capture = name.charAt(0) === '!';\n      event = capture ? name.slice(1) : name;\n      if (Array.isArray(cur)) {\n        add(event, (cur.invoker = arrInvoker(cur)), capture);\n      } else {\n        if (!cur.invoker) {\n          fn = cur;\n          cur = on[name] = {};\n          cur.fn = fn;\n          cur.invoker = fnInvoker(cur);\n        }\n        add(event, cur.invoker, capture);\n      }\n    } else if (cur !== old) {\n      if (Array.isArray(old)) {\n        old.length = cur.length;\n        for (var i = 0; i < old.length; i++) { old[i] = cur[i]; }\n        on[name] = old;\n      } else {\n        old.fn = cur;\n        on[name] = old;\n      }\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = name.charAt(0) === '!' ? name.slice(1) : name;\n      remove$$1(event, oldOn[name].invoker);\n    }\n  }\n}\n\nfunction arrInvoker (arr) {\n  return function (ev) {\n    var arguments$1 = arguments;\n\n    var single = arguments.length === 1;\n    for (var i = 0; i < arr.length; i++) {\n      single ? arr[i](ev) : arr[i].apply(null, arguments$1);\n    }\n  }\n}\n\nfunction fnInvoker (o) {\n  return function (ev) {\n    var single = arguments.length === 1;\n    single ? o.fn(ev) : o.fn.apply(null, arguments);\n  }\n}\n\n/*  */\n\nfunction normalizeChildren (\n  children,\n  ns,\n  nestedIndex\n) {\n  if (isPrimitive(children)) {\n    return [createTextVNode(children)]\n  }\n  if (Array.isArray(children)) {\n    var res = [];\n    for (var i = 0, l = children.length; i < l; i++) {\n      var c = children[i];\n      var last = res[res.length - 1];\n      //  nested\n      if (Array.isArray(c)) {\n        res.push.apply(res, normalizeChildren(c, ns, ((nestedIndex || '') + \"_\" + i)));\n      } else if (isPrimitive(c)) {\n        if (last && last.text) {\n          last.text += String(c);\n        } else if (c !== '') {\n          // convert primitive to vnode\n          res.push(createTextVNode(c));\n        }\n      } else if (c instanceof VNode) {\n        if (c.text && last && last.text) {\n          last.text += c.text;\n        } else {\n          // inherit parent namespace\n          if (ns) {\n            applyNS(c, ns);\n          }\n          // default key for nested array children (likely generated by v-for)\n          if (c.tag && c.key == null && nestedIndex != null) {\n            c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n          }\n          res.push(c);\n        }\n      }\n    }\n    return res\n  }\n}\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\nfunction applyNS (vnode, ns) {\n  if (vnode.tag && !vnode.ns) {\n    vnode.ns = ns;\n    if (vnode.children) {\n      for (var i = 0, l = vnode.children.length; i < l; i++) {\n        applyNS(vnode.children[i], ns);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._mount = function (\n    el,\n    hydrating\n  ) {\n    var vm = this;\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = emptyVNode;\n      if (process.env.NODE_ENV !== 'production') {\n        /* istanbul ignore if */\n        if (vm.$options.template) {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'option is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n    vm._watcher = new Watcher(vm, function () {\n      vm._update(vm._render(), hydrating);\n    }, noop);\n    hydrating = false;\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  };\n\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    var prevVnode = vm._vnode;\n    vm._vnode = vnode;\n    if (!prevVnode) {\n      // Vue.prototype.__patch__ is injected in entry points\n      // based on the rendering backend used.\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating);\n    } else {\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    if (vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  };\n\n  Vue.prototype._updateFromParent = function (\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    var vm = this;\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n    vm.$options._parentVnode = parentVnode;\n    vm.$options._renderChildren = renderChildren;\n    // update props\n    if (propsData && vm.$options.props) {\n      observerState.shouldConvert = false;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = true;\n      }\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n      }\n      observerState.shouldConvert = true;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = false;\n      }\n    }\n    // update listeners\n    if (listeners) {\n      var oldListeners = vm.$options._parentListeners;\n      vm.$options._parentListeners = listeners;\n      vm._updateListeners(listeners, oldListeners);\n    }\n    // resolve slots + force update if has children\n    if (hasChildren) {\n      vm.$slots = resolveSlots(renderChildren, vm._renderContext);\n      vm.$forceUpdate();\n    }\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove$1(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      handlers[i].call(vm);\n    }\n  }\n  vm.$emit('hook:' + hook);\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  if (isObject(Ctor)) {\n    Ctor = Vue$2.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  data = data || {};\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  var vnode = Ctor.options.render.call(\n    null,\n    // ensure the createElement function in functional components\n    // gets a unique context - this is necessary for correct named slot check\n    bind$1(createElement, { _self: Object.create(context) }),\n    {\n      props: props,\n      data: data,\n      parent: context,\n      children: normalizeChildren(children),\n      slots: function () { return resolveSlots(children, context); }\n    }\n  );\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (vnode, hydrating) {\n  if (!vnode.child || vnode.child._isDestroyed) {\n    var child = vnode.child = createComponentInstanceForVnode(vnode, activeInstance);\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.child = oldVnode.child;\n  child._updateFromParent(\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.child._isMounted) {\n    vnode.child._isMounted = true;\n    callHook(vnode.child, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    vnode.child._inactive = false;\n    callHook(vnode.child, 'activated');\n  }\n}\n\nfunction destroy$1 (vnode) {\n  if (!vnode.child._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.child.$destroy();\n    } else {\n      vnode.child._inactive = true;\n      callHook(vnode.child, 'deactivated');\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = Vue$2.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extrating raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (a, b) {\n  // since all hooks have at most two args, use fixed args\n  // to avoid having to use fn.apply().\n  return function (_, __) {\n    a(_, __);\n    b(_, __);\n  }\n}\n\n/*  */\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  tag,\n  data,\n  children\n) {\n  if (data && (Array.isArray(data) || typeof data !== 'object')) {\n    children = data;\n    data = undefined;\n  }\n  // make sure to use real instance instead of proxy as context\n  return _createElement(this._self, tag, data, children)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return emptyVNode()\n  }\n  if (typeof tag === 'string') {\n    var Ctor;\n    var ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      return new VNode(\n        tag, data, normalizeChildren(children, ns),\n        undefined, undefined, ns, context\n      )\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      return createComponent(Ctor, data, context, children, tag)\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      return new VNode(\n        tag, data, normalizeChildren(children, ns),\n        undefined, undefined, ns, context\n      )\n    }\n  } else {\n    // direct component options / constructor\n    return createComponent(tag, data, context, children)\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  vm._renderContext = vm.$options._parentVnode && vm.$options._parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, vm._renderContext);\n  // bind the public createElement fn to this instance\n  // so that we get proper render context inside it.\n  vm.$createElement = bind$1(createElement, vm);\n  if (vm.$options.el) {\n    vm.$mount(vm.$options.el);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n      }\n      /* istanbul ignore else */\n      if (config.errorHandler) {\n        config.errorHandler.call(null, e, vm);\n      } else {\n        if (config._isServer) {\n          throw e\n        } else {\n          setTimeout(function () { throw e }, 0);\n        }\n      }\n      // return previous vnode to prevent render error causing blank component\n      vnode = vm._vnode;\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = emptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // shorthands used in render functions\n  Vue.prototype._h = createElement;\n  // toString for mustaches\n  Vue.prototype._s = _toString;\n  // number conversion\n  Vue.prototype._n = toNumber;\n  // empty vnode\n  Vue.prototype._e = emptyVNode;\n  // loose equal\n  Vue.prototype._q = looseEqual;\n  // loose indexOf\n  Vue.prototype._i = looseIndexOf;\n\n  // render static tree by index\n  Vue.prototype._m = function renderStatic (\n    index,\n    isInFor\n  ) {\n    var tree = this._staticTrees[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree by doing a shallow clone.\n    if (tree && !isInFor) {\n      return Array.isArray(tree)\n        ? cloneVNodes(tree)\n        : cloneVNode(tree)\n    }\n    // otherwise, render a fresh tree.\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (typeof tree[i] !== 'string') {\n          tree[i].isStatic = true;\n          tree[i].key = \"__static__\" + index + \"_\" + i;\n        }\n      }\n    } else {\n      tree.isStatic = true;\n      tree.key = \"__static__\" + index;\n    }\n    return tree\n  };\n\n  // filter resolution helper\n  var identity = function (_) { return _; };\n  Vue.prototype._f = function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  };\n\n  // render v-for\n  Vue.prototype._l = function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val)) {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n    return ret\n  };\n\n  // renderSlot\n  Vue.prototype._t = function (\n    name,\n    fallback\n  ) {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  };\n\n  // apply v-bind object\n  Vue.prototype._b = function bindProps (\n    data,\n    value,\n    asProp\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        process.env.NODE_ENV !== 'production' && warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        for (var key in value) {\n          if (key === 'class' || key === 'style') {\n            data[key] = value[key];\n          } else {\n            var hash = asProp || config.mustUseProp(key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n            hash[key] = value[key];\n          }\n        }\n      }\n    }\n    return data\n  };\n\n  // expose v-on keyCodes\n  Vue.prototype._k = function getKeyCodes (key) {\n    return config.keyCodes[key]\n  };\n}\n\nfunction resolveSlots (\n  renderChildren,\n  context\n) {\n  var slots = {};\n  if (!renderChildren) {\n    return slots\n  }\n  var children = normalizeChildren(renderChildren) || [];\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  var on = bind$1(vm.$on, vm);\n  var off = bind$1(vm.$off, vm);\n  vm._updateListeners = function (listeners, oldListeners) {\n    updateListeners(listeners, oldListeners || {}, on, off, vm);\n  };\n  if (listeners) {\n    vm._updateListeners(listeners);\n  }\n}\n\nfunction eventsMixin (Vue) {\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n    initRender(vm);\n  };\n\n  function initInternalComponent (vm, options) {\n    var opts = vm.$options = Object.create(resolveConstructorOptions(vm));\n    // doing this because it's faster than dynamic enumeration.\n    opts.parent = options.parent;\n    opts.propsData = options.propsData;\n    opts._parentVnode = options._parentVnode;\n    opts._parentListeners = options._parentListeners;\n    opts._renderChildren = options._renderChildren;\n    opts._componentTag = options._componentTag;\n    if (options.render) {\n      opts.render = options.render;\n      opts.staticRenderFns = options.staticRenderFns;\n    }\n  }\n\n  function resolveConstructorOptions (vm) {\n    var Ctor = vm.constructor;\n    var options = Ctor.options;\n    if (Ctor.super) {\n      var superOptions = Ctor.super.options;\n      var cachedSuperOptions = Ctor.superOptions;\n      if (superOptions !== cachedSuperOptions) {\n        // super option changed\n        Ctor.superOptions = superOptions;\n        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n        if (options.name) {\n          options.components[options.name] = Ctor;\n        }\n      }\n    }\n    return options\n  }\n}\n\nfunction Vue$2 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$2)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$2);\nstateMixin(Vue$2);\neventsMixin(Vue$2);\nlifecycleMixin(Vue$2);\nrenderMixin(Vue$2);\n\nvar warn = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm) {\n    if (vm.$root === vm) {\n      return 'root instance'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n    return (\n      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === 'anonymous component') {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n */\nfunction normalizeComponents (options) {\n  if (options.components) {\n    var components = options.components;\n    var def;\n    for (var key in components) {\n      var lower = key.toLowerCase();\n      if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n        process.env.NODE_ENV !== 'production' && warn(\n          'Do not use built-in or reserved HTML elements as component ' +\n          'id: ' + key\n        );\n        continue\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue$2.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  normalizeComponents(child);\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$2) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  var res = assets[id] ||\n    // camelCase ID\n    assets[camelize(id)] ||\n    // Pascal Case ID\n    assets[capitalize(camelize(id))];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isBooleanType(prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, name) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Invalid default value for prop \"' + name + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && prop.type !== Function\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isBooleanType (fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === 'Boolean'\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === 'Boolean') {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive$$1,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\tmakeMap: makeMap,\n\tisBuiltInTag: isBuiltInTag,\n\tremove: remove$1,\n\thasOwn: hasOwn,\n\tisPrimitive: isPrimitive,\n\tcached: cached,\n\tcamelize: camelize,\n\tcapitalize: capitalize,\n\thyphenate: hyphenate,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\ttoObject: toObject,\n\tnoop: noop,\n\tno: no,\n\tgenStaticKeys: genStaticKeys,\n\tlooseEqual: looseEqual,\n\tlooseIndexOf: looseIndexOf,\n\tisReserved: isReserved,\n\tdef: def,\n\tparsePath: parsePath,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisEdge: isEdge,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tdevtools: devtools,\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tget warn () { return warn; },\n\tget formatComponentName () { return formatComponentName; },\n\tvalidateProp: validateProp\n});\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characaters and the hyphen.'\n        );\n        name = null;\n      }\n    }\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub\n  };\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = Vue.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    if (vnode && vnode.componentOptions) {\n      var opts = vnode.componentOptions;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? opts.Ctor.cid + '::' + opts.tag\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.child = this.cache[key].child;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  },\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this.cache) {\n      var vnode = this$1.cache[key];\n      callHook(vnode.child, 'deactivated');\n      vnode.child.$destroy();\n    }\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n  Vue.util = util;\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$2);\n\nObject.defineProperty(Vue$2.prototype, '$isServer', {\n  get: function () { return config._isServer; }\n});\n\nVue$2.version = '2.0.3';\n\n/*  */\n\n// attributes that should be using props for binding\nvar mustUseProp = makeMap('value,selected,checked,muted');\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar isAttr = makeMap(\n  'accept,accept-charset,accesskey,action,align,alt,async,autocomplete,' +\n  'autofocus,autoplay,autosave,bgcolor,border,buffered,challenge,charset,' +\n  'checked,cite,class,code,codebase,color,cols,colspan,content,http-equiv,' +\n  'name,contenteditable,contextmenu,controls,coords,data,datetime,default,' +\n  'defer,dir,dirname,disabled,download,draggable,dropzone,enctype,method,for,' +\n  'form,formaction,headers,<th>,height,hidden,high,href,hreflang,http-equiv,' +\n  'icon,id,ismap,itemprop,keytype,kind,label,lang,language,list,loop,low,' +\n  'manifest,max,maxlength,media,method,GET,POST,min,multiple,email,file,' +\n  'muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,' +\n  'preload,radiogroup,readonly,rel,required,reversed,rows,rowspan,sandbox,' +\n  'scope,scoped,seamless,selected,shape,size,type,text,password,sizes,span,' +\n  'spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,' +\n  'target,title,type,usemap,value,width,wrap'\n);\n\n\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.child) {\n    childNode = childNode.child._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr',\n  true\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source',\n  true\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track',\n  true\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font,' +\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + selector\n      );\n      return document.createElement('div')\n    }\n  }\n  return el\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction childNodes (node) {\n  return node.childNodes\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tchildNodes: childNodes,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.child || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove$1(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key])) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeElement(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeElement (el) {\n    var parent = nodeOps.parentNode(el);\n    nodeOps.removeChild(parent, el);\n  }\n\n  function createElm (vnode, insertedVnodeQueue, nested) {\n    var i;\n    var data = vnode.data;\n    vnode.isRootInsert = !nested;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode); }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(i = vnode.child)) {\n        initComponent(vnode, insertedVnodeQueue);\n        return vnode.elm\n      }\n    }\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          !vnode.ns &&\n          !(config.ignoredElements && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n      createChildren(vnode, children, insertedVnodeQueue);\n      if (isDef(data)) {\n        invokeCreateHooks(vnode, insertedVnodeQueue);\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n    }\n    return vnode.elm\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        nodeOps.appendChild(vnode.elm, createElm(children[i], insertedVnodeQueue, true));\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.child) {\n      vnode = vnode.child._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.child.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      nodeOps.insertBefore(parentElm, createElm(vnodes[startIdx], insertedVnodeQueue), before);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          nodeOps.removeChild(parentElm, ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeElement(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, before;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          nodeOps.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (elmToMove.tag !== newStartVnode.tag) {\n            // same key but different element. treat as new element\n            nodeOps.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      before = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        vnode.isCloned) {\n      vnode.elm = oldVnode.elm;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.child)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        var childNodes = nodeOps.childNodes(elm);\n        // empty element, allow client to pick up and populate children\n        if (!childNodes.length) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          if (childNodes.length !== children.length) {\n            childrenMatch = false;\n          } else {\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!hydrate(childNodes[i$1], children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n            }\n          }\n          if (!childrenMatch) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        invokeCreateHooks(vnode, insertedVnodeQueue);\n      }\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag === nodeOps.tagName(node).toLowerCase()\n      )\n    } else {\n      return _toString(vnode.text) === node.data\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var elm, parent;\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount, create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        elm = oldVnode.elm;\n        parent = nodeOps.parentNode(elm);\n\n        createElm(vnode, insertedVnodeQueue);\n\n        // component root element replaced.\n        // update parent placeholder node element.\n        if (vnode.parent) {\n          vnode.parent.elm = vnode.elm;\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parent !== null) {\n          nodeOps.insertBefore(parent, vnode.elm, nodeOps.nextSibling(elm));\n          removeVnodes(parent, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (\n  oldVnode,\n  vnode\n) {\n  if (!oldVnode.data.directives && !vnode.data.directives) {\n    return\n  }\n  var isCreate = oldVnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      dirsWithInsert.forEach(function (dir) {\n        callHook$1(dir, 'inserted', vnode, oldVnode);\n      });\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      dirsWithPostpatch.forEach(function (dir) {\n        callHook$1(dir, 'componentUpdated', vnode, oldVnode);\n      });\n    }, 'dir-postpatch');\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n// skip type checking this file because we need to attach private properties\n// to elements\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  var add = vnode.elm._v_add || (vnode.elm._v_add = function (event, handler, capture) {\n    vnode.elm.addEventListener(event, handler, capture);\n  });\n  var remove = vnode.elm._v_remove || (vnode.elm._v_remove = function (event, handler) {\n    vnode.elm.removeEventListener(event, handler);\n  });\n  updateListeners(on, oldOn, add, remove, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = undefined;\n    }\n  }\n  for (key in props) {\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if ((key === 'textContent' || key === 'innerHTML') && vnode.children) {\n      vnode.children.length = 0;\n    }\n    cur = props[key];\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (elm.value !== strCur && !elm.composing) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  if ((!oldVnode.data || !oldVnode.data.style) && !vnode.data.style) {\n    return\n  }\n  var cur, name;\n  var el = vnode.elm;\n  var oldStyle = oldVnode.data.style || {};\n  var style = vnode.data.style || {};\n\n  // handle string\n  if (typeof style === 'string') {\n    el.style.cssText = style;\n    return\n  }\n\n  var needClone = style.__ob__;\n\n  // handle array syntax\n  if (Array.isArray(style)) {\n    style = vnode.data.style = toObject(style);\n  }\n\n  // clone the style for future updates,\n  // in case the user mutates the style object in-place.\n  if (needClone) {\n    style = vnode.data.style = extend({}, style);\n  }\n\n  for (name in oldStyle) {\n    if (style[name] == null) {\n      el.style[normalize(name)] = '';\n    }\n  }\n  for (name in style) {\n    cur = style[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      el.style[normalize(name)] = cur == null ? '' : cur;\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\nvar raf = (inBrowser && window.requestAnimationFrame) || setTimeout;\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove$1(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var transitionNode = activeInstance.$vnode;\n  var context = transitionNode && transitionNode.parent\n    ? transitionNode.parent.context\n    : activeInstance;\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear ? appearClass : enterClass;\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    enterHook &&\n    // enterHook may be a bound method which exposes\n    // the length of original fn as _length\n    (enterHook._length || enterHook.length) > 1;\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    }, 'transition-insert');\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        whenTransitionEnds(el, type, cb);\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    leave &&\n    // leave hook may be a bound method which exposes\n    // the length of original fn as _length\n    (leave._length || leave.length) > 1;\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          whenTransitionEnds(el, type, cb);\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    leaveClass: (name + \"-leave\"),\n    appearClass: (name + \"-enter\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveActiveClass: (name + \"-leave-active\"),\n    appearActiveClass: (name + \"-enter-active\")\n  }\n});\n\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\nvar transition = inBrowser ? {\n  create: function create (_, vnode) {\n    if (!vnode.data.show) {\n      enter(vnode);\n    }\n  },\n  remove: function remove (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_\\-]*)?$/;\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model = {\n  inserted: function inserted (el, binding, vnode) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!modelableTagRE.test(vnode.tag)) {\n        warn(\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n          'If you are working with contenteditable, it\\'s recommended to ' +\n          'wrap a library dedicated for that purpose inside a custom component.',\n          vnode.context\n        );\n      }\n    }\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (\n      (vnode.tag === 'textarea' || el.type === 'text') &&\n      !binding.modifiers.lazy\n    ) {\n      if (!isAndroid) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n      }\n      /* istanbul ignore if */\n      if (isIE9) {\n        el.vmodel = true;\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matchig\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.child && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.child._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (value && transition && !isIE9) {\n      enter(vnode);\n    }\n    var originalDisplay = el.style.display === 'none' ? '' : el.style.display;\n    el.style.display = value ? originalDisplay : 'none';\n    el.__vOriginalDisplay = originalDisplay;\n  },\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      if (value) {\n        enter(vnode);\n        el.style.display = el.__vOriginalDisplay;\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recrusively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1].fn;\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    var key = child.key = child.key == null || child.isStatic\n      ? (\"__v\" + (child.tag + this._uid) + \"__\")\n      : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && oldChild.key !== key) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        }, key);\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        }, key);\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || (this.name + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var f = document.body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      addTransitionClass(el, moveClass);\n      var info = getTransitionInfo(el);\n      removeTransitionClass(el, moveClass);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$2.config.isUnknownElement = isUnknownElement;\nVue$2.config.isReservedTag = isReservedTag;\nVue$2.config.getTagNamespace = getTagNamespace;\nVue$2.config.mustUseProp = mustUseProp;\n\n// install platform runtime directives & components\nextend(Vue$2.options.directives, platformDirectives);\nextend(Vue$2.options.components, platformComponents);\n\n// install platform patch function\nVue$2.prototype.__patch__ = config._isServer ? noop : patch$1;\n\n// wrap mount\nVue$2.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && !config._isServer ? query(el) : undefined;\n  return this._mount(el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$2);\n    } else if (\n      process.env.NODE_ENV !== 'production' &&\n      inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)\n    ) {\n      console.log(\n        'Download the Vue Devtools for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n}, 0);\n\nmodule.exports = Vue$2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 88\n ** module chunks = 1\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 89\n ** module chunks = 1\n **/"],"sourceRoot":""}